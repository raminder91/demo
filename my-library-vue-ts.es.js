import Hi, { openBlock as KE, createElementBlock as UE, resolveComponent as qB, createVNode as XB, createElementVNode as YB } from "vue";
const jE = (e, t) => {
  const i = e.__vccOpts || e;
  for (const [n, r] of t)
    i[n] = r;
  return i;
}, ZB = {};
function QB(e, t) {
  return KE(), UE("div");
}
const JB = /* @__PURE__ */ jE(ZB, [["render", QB]]);
var Se = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function ek(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function pc(e) {
  if (e.__esModule)
    return e;
  var t = e.default;
  if (typeof t == "function") {
    var i = function n() {
      if (this instanceof n) {
        var r = [null];
        r.push.apply(r, arguments);
        var a = Function.bind.apply(t, r);
        return new a();
      }
      return t.apply(this, arguments);
    };
    i.prototype = t.prototype;
  } else
    i = {};
  return Object.defineProperty(i, "__esModule", { value: !0 }), Object.keys(e).forEach(function(n) {
    var r = Object.getOwnPropertyDescriptor(e, n);
    Object.defineProperty(i, n, r.get ? r : {
      enumerable: !0,
      get: function() {
        return e[n];
      }
    });
  }), i;
}
var Z = {}, tk = {
  "[object Array]": "array",
  "[object Date]": "date",
  "[object Object]": "object",
  "[object String]": "string"
}, Ei = function(e) {
  if (e === null)
    return "null";
  var t = Object.prototype.toString.call(e);
  return typeof e == "object" ? tk[t] || "object" : typeof e;
}, _a = function(e) {
  return typeof e == "boolean";
}, Lm = function(e) {
  return rt(e) && e.toString().indexOf("e") !== -1;
}, Qt = function(e) {
  return Ei(e) === "date";
}, x = function(e) {
  return e != null;
}, ce = function(e) {
  return typeof e == "function";
}, Te = function(e) {
  return typeof e == "string";
}, rt = function(e) {
  return typeof e == "number" && isFinite(e) || !isNaN(e - parseFloat(e));
}, De = function(e) {
  return Ei(e) === "object";
}, $i = function(e) {
  var t;
  for (t in e)
    return !1;
  return !0;
}, Me = function(e) {
  if (!e || Ei(e) !== "object")
    return !1;
  var t = Object.getPrototypeOf(e), i = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
  return typeof i == "function" && Object.toString.call(i) === Object.toString.call(Object);
}, Ps = function(e) {
  return ["object", "array", "function"].indexOf(Ei(e)) === -1;
}, Ct = function(e) {
  return e != null && e === e.window;
}, wi = function(e) {
  return !!e && !!(e.jquery || e.dxRenderer);
}, Ho = function(e) {
  return !!e && ce(e.then);
}, u_ = function(e) {
  return !!e && ce(e.done) && ce(e.fail);
}, ik = function(e) {
  return !!(e && e.preventDefault);
}, nk = function(e, t, i) {
  e = e || {};
  for (var n in t)
    if (Object.prototype.hasOwnProperty.call(t, n)) {
      var r = t[n];
      (!(n in e) || i) && (e[n] = r);
    }
  return e;
}, T = function e(t) {
  t = t || {};
  var i = 1, n = !1;
  for (typeof t == "boolean" && (n = t, t = arguments[1] || {}, i++); i < arguments.length; i++) {
    var r = arguments[i];
    if (r != null)
      for (var a in r) {
        var o = t[a], s = r[a], l = !1, u = void 0;
        a === "__proto__" || a === "constructor" || t === s || (n && s && (Me(s) || (l = Array.isArray(s))) ? (l ? u = o && Array.isArray(o) ? o : [] : u = o && Me(o) ? o : {}, t[a] = e(n, u, s)) : s !== void 0 && (t[a] = s));
      }
  }
  return t;
}, wt = (e, t) => {
  if (Array.isArray(e))
    return e.map(t);
  var i = [];
  for (var n in e)
    i.push(t(e[n], n));
  return i;
}, B = (e, t) => {
  if (e) {
    if ("length" in e)
      for (var i = 0; i < e.length && t.call(e[i], i, e[i]) !== !1; i++)
        ;
    else
      for (var n in e)
        if (t.call(e[n], n, e[n]) === !1)
          break;
    return e;
  }
}, rk = function() {
}, mh = function(e) {
  return typeof console > "u" || !ce(console[e]) ? rk : console[e].bind(console);
}, gl = {
  info: mh("info"),
  warn: mh("warn"),
  error: mh("error")
}, d_ = function() {
  var e = [new RegExp("&", "g"), new RegExp('"', "g"), new RegExp("'", "g"), new RegExp("<", "g"), new RegExp(">", "g")];
  return function(t) {
    return String(t).replace(e[0], "&amp;").replace(e[1], "&quot;").replace(e[2], "&#39;").replace(e[3], "&lt;").replace(e[4], "&gt;");
  };
}(), ak = function(e) {
  switch (typeof e) {
    case "string":
      return e.split(/\s+/, 4);
    case "object":
      return [e.x || e.h || e.left, e.y || e.v || e.top, e.x || e.h || e.right, e.y || e.v || e.bottom];
    case "number":
      return [e];
    default:
      return e;
  }
}, ok = function(e) {
  var t = ak(e), i = parseInt(t && t[0], 10), n = parseInt(t && t[1], 10), r = parseInt(t && t[2], 10), a = parseInt(t && t[3], 10);
  return isFinite(i) || (i = 0), isFinite(n) || (n = i), isFinite(r) || (r = i), isFinite(a) || (a = n), {
    top: n,
    right: r,
    bottom: a,
    left: i
  };
};
function Ji(e) {
  for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
    i[n - 1] = arguments[n];
  return ce(e) ? e(...i) : (i.forEach((r, a) => {
    Te(r) && (r = r.replace(/\$/g, "$$$$"));
    var o = new RegExp("\\{" + a + "\\}", "gm");
    e = e.replace(o, r);
  }), e);
}
var ed = function() {
  var e = /\s/g;
  return function(t) {
    return !t || !t.replace(e, "");
  };
}(), sk = "22.2.6", lk = "http://js.devexpress.com/error/" + sk.split(".").slice(0, 2).join("_") + "/";
function c_(e, t) {
  var i = {
    ERROR_MESSAGES: T(t, e),
    Error: function() {
      return o([].slice.call(arguments));
    },
    log: function(l) {
      var u = "log";
      /^E\d+$/.test(l) ? u = "error" : /^W\d+$/.test(l) && (u = "warn"), gl[u](u === "log" ? l : n([].slice.call(arguments)));
    }
  };
  function n(l) {
    var u = l[0];
    return l = l.slice(1), a(u, r(u, l));
  }
  function r(l, u) {
    return u = [i.ERROR_MESSAGES[l]].concat(u), Ji.apply(this, u).replace(/\.*\s*?$/, "");
  }
  function a(l, u) {
    return Ji.apply(this, [`{0} - {1}. See:
{2}`, l, u, s(l)]);
  }
  function o(l) {
    var u = l[0];
    l = l.slice(1);
    var d = r(u, l), c = s(u), h = a(u, d);
    return T(new Error(h), {
      __id: u,
      __details: d,
      url: c
    });
  }
  function s(l) {
    return lk + l;
  }
  return i;
}
const Je = c_({
  E0001: "Method is not implemented",
  E0002: "Member name collision: {0}",
  E0003: "A class must be instantiated using the 'new' keyword",
  E0004: "The NAME property of the component is not specified",
  E0005: "Unknown device",
  E0006: "Unknown endpoint key is requested",
  E0007: "'Invalidate' method is called outside the update transaction",
  E0008: "Type of the option name is not appropriate to create an action",
  E0009: "Component '{0}' has not been initialized for an element",
  E0010: "Animation configuration with the '{0}' type requires '{1}' configuration as {2}",
  E0011: "Unknown animation type '{0}'",
  E0012: "jQuery version is too old. Please upgrade jQuery to 1.10.0 or later",
  E0013: "KnockoutJS version is too old. Please upgrade KnockoutJS to 2.3.0 or later",
  E0014: "The 'release' method shouldn't be called for an unlocked Lock object",
  E0015: "Queued task returned an unexpected result",
  E0017: "Event namespace is not defined",
  E0018: "DevExpress.ui.DevExpressPopup widget is required",
  E0020: "Template engine '{0}' is not supported",
  E0021: "Unknown theme is set: {0}",
  E0022: "LINK[rel=DevExpress-theme] tags must go before DevExpress included scripts",
  E0023: "Template name is not specified",
  E0024: "DevExtreme bundle already included",
  E0025: "Unexpected argument type",
  E0100: "Unknown validation type is detected",
  E0101: "Misconfigured range validation rule is detected",
  E0102: "Misconfigured comparison validation rule is detected",
  E0103: "validationCallback of an asynchronous rule should return a jQuery or a native promise",
  E0110: "Unknown validation group is detected",
  E0120: "Adapter for a DevExpressValidator component cannot be configured",
  E0121: "The 'customItem' parameter of the 'onCustomItemCreating' function is empty or contains invalid data. Assign a custom object or a Promise that is resolved after the item is created.",
  W0000: "'{0}' is deprecated in {1}. {2}",
  W0001: "{0} - '{1}' option is deprecated in {2}. {3}",
  W0002: "{0} - '{1}' method is deprecated in {2}. {3}",
  W0003: "{0} - '{1}' property is deprecated in {2}. {3}",
  W0004: "Timeout for theme loading is over: {0}",
  W0005: "'{0}' event is deprecated in {1}. {2}",
  W0006: "Invalid recurrence rule: '{0}'",
  W0007: "'{0}' Globalize culture is not defined",
  W0008: "Invalid view name: '{0}'",
  W0009: "Invalid time zone name: '{0}'",
  W0010: "{0} is deprecated in {1}. {2}",
  W0011: "Number parsing is invoked while the parser is not defined",
  W0012: "Date parsing is invoked while the parser is not defined",
  W0013: "'{0}' file is deprecated in {1}. {2}",
  W0014: "{0} - '{1}' type is deprecated in {2}. {3}",
  W0015: "Instead of returning a value from the '{0}' function, write it into the '{1}' field of the function's parameter.",
  W0016: 'The "{0}" option does not accept the "{1}" value since v{2}. {3}.',
  W0017: 'Setting the "{0}" property with a function is deprecated since v21.2',
  W0018: 'Setting the "position" property with a function is deprecated since v21.2'
});
var uk = function(e, t, i) {
  return function() {
    var n = this.callBase;
    this.callBase = e[t];
    try {
      return i.apply(this, arguments);
    } finally {
      this.callBase = n;
    }
  };
}, dk = function(e) {
  var t = function() {
  };
  return t.prototype = e.prototype, new t();
}, ck = function(e) {
  var t, i, n;
  if (!e)
    return this;
  for (i in e)
    n = e[i], t = typeof this.prototype[i] == "function" && typeof n == "function", this.prototype[i] = t ? uk(this.parent.prototype, i, n) : n;
  return this;
}, hk = function() {
  var e = this, t, i, n, r = Object.prototype.hasOwnProperty.bind(e), a = !r("_includedCtors") && !r("_includedPostCtors");
  for (a && (e._includedCtors = e._includedCtors.slice(0), e._includedPostCtors = e._includedPostCtors.slice(0)), n = 0; n < arguments.length; n++) {
    t = arguments[n], t.ctor && e._includedCtors.push(t.ctor), t.postCtor && e._includedPostCtors.push(t.postCtor);
    for (i in t)
      i === "ctor" || i === "postCtor" || i === "default" || (e.prototype[i] = t[i]);
  }
  return e;
}, pk = function(e) {
  var t = Object.prototype.hasOwnProperty.bind(this)("parent"), i = !t && this.parent;
  if (i) {
    var n = Object.getPrototypeOf(this);
    return n === e || n.subclassOf(e);
  } else
    return this.parent === e ? !0 : !this.parent || !this.parent.subclassOf ? !1 : this.parent.subclassOf(e);
}, qE = function() {
  throw Je.Error("E0001");
}, fk = function() {
  var e = Object.prototype.hasOwnProperty;
  return function(t, i) {
    for (var n in t) {
      if (!e.call(t, n))
        return;
      i[n] = t[n];
    }
  };
}(), ze = function() {
};
ze.inherit = function(e) {
  var t = function() {
    if (!this || Ct(this) || typeof this.constructor != "function")
      throw Je.Error("E0003");
    var i = this, n = i.ctor, r = i.constructor._includedCtors, a = i.constructor._includedPostCtors, o;
    for (o = 0; o < r.length; o++)
      r[o].call(i);
    for (n && n.apply(i, arguments), o = 0; o < a.length; o++)
      a[o].call(i);
  };
  return t.prototype = dk(this), fk(this, t), t.inherit = this.inherit, t.abstract = qE, t.redefine = ck, t.include = hk, t.subclassOf = pk, t.parent = this, t._includedCtors = this._includedCtors ? this._includedCtors.slice(0) : [], t._includedPostCtors = this._includedPostCtors ? this._includedPostCtors.slice(0) : [], t.prototype.constructor = t, t.redefine(e), t;
};
ze.abstract = qE;
function zi(e) {
  var t = ze.inherit(e), i = t, n = new i(e), r = {}, a = function(o, s) {
    B(o, function(l) {
      ce(n[l]) ? (s || !e[l]) && (e[l] = function() {
        return n[l].apply(e, arguments);
      }) : (s && (r[l] = e[l]), e[l] = n[l]);
    });
  };
  return a(e, !0), e.inject = function(o) {
    i = i.inherit(o), n = new i(), a(o);
  }, e.resetInjection = function() {
    T(e, r), i = t, n = new t();
  }, e;
}
var Vm = {
  rtlEnabled: !1,
  defaultCurrency: "USD",
  defaultUseCurrencyAccountingStyle: !0,
  oDataFilterToLower: !0,
  serverDecimalSeparator: ".",
  decimalSeparator: ".",
  thousandsSeparator: ",",
  forceIsoDateParsing: !0,
  wrapActionsBeforeExecute: !0,
  useLegacyStoreResult: !1,
  useJQuery: void 0,
  editorStylingMode: void 0,
  useLegacyVisibleIndex: !1,
  floatingActionButtonConfig: {
    icon: "add",
    closeIcon: "close",
    label: "",
    position: {
      at: "right bottom",
      my: "right bottom",
      offset: {
        x: -16,
        y: -16
      }
    },
    maxSpeedDialActionCount: 5,
    shading: !1,
    direction: "auto"
  },
  optionsParser: (e) => {
    e.trim().charAt(0) !== "{" && (e = "{" + e + "}");
    try {
      return new Function("return " + e)();
    } catch (t) {
      throw Je.Error("E3018", t, e);
    }
  }
}, gk = ["decimalSeparator", "thousandsSeparator"], st = function() {
  if (!arguments.length)
    return Vm;
  var e = arguments.length <= 0 ? void 0 : arguments[0];
  gk.forEach((t) => {
    if (e[t]) {
      var i = "Now, the ".concat(t, " is selected based on the specified locale.");
      Je.log("W0003", "config", t, "19.2", i);
    }
  }), T(Vm, e);
};
typeof DevExpress < "u" && DevExpress.config && st(DevExpress.config);
var Ot = ze.inherit({
  ctor: function(e) {
    e && (e = String(e)), this._value = this._normalize(e || this._generate());
  },
  _normalize: function(e) {
    for (e = e.replace(/[^a-f0-9]/gi, "").toLowerCase(); e.length < 32; )
      e += "0";
    return [e.substr(0, 8), e.substr(8, 4), e.substr(12, 4), e.substr(16, 4), e.substr(20, 12)].join("-");
  },
  _generate: function() {
    for (var e = "", t = 0; t < 32; t++)
      e += Math.round(15 * Math.random()).toString(16);
    return e;
  },
  toString: function() {
    return this._value;
  },
  valueOf: function() {
    return this._value;
  },
  toJSON: function() {
    return this._value;
  }
}), tr = function(e) {
  this._options = e || {}, this._list = [], this._queue = [], this._firing = !1, this._fired = !1, this._firingIndexes = [];
};
tr.prototype._fireCore = function(e, t) {
  var i = this._firingIndexes, n = this._list, r = this._options.stopOnFalse, a = i.length;
  for (i[a] = 0; i[a] < n.length; i[a]++) {
    var o = n[i[a]].apply(e, t);
    if (o === !1 && r)
      break;
  }
  i.pop();
};
tr.prototype.add = function(e) {
  return typeof e == "function" && (!this._options.unique || !this.has(e)) && this._list.push(e), this;
};
tr.prototype.remove = function(e) {
  var t = this._list, i = this._firingIndexes, n = t.indexOf(e);
  if (n > -1 && (t.splice(n, 1), this._firing && i.length))
    for (var r = 0; r < i.length; r++)
      n <= i[r] && i[r]--;
  return this;
};
tr.prototype.has = function(e) {
  var t = this._list;
  return e ? t.indexOf(e) > -1 : !!t.length;
};
tr.prototype.empty = function(e) {
  return this._list = [], this;
};
tr.prototype.fireWith = function(e, t) {
  var i = this._queue;
  if (t = t || [], t = t.slice ? t.slice() : t, this._options.syncStrategy)
    this._firing = !0, this._fireCore(e, t);
  else {
    if (i.push([e, t]), this._firing)
      return;
    for (this._firing = !0; i.length; ) {
      var n = i.shift();
      this._fireCore(n[0], n[1]);
    }
  }
  return this._firing = !1, this._fired = !0, this;
};
tr.prototype.fire = function() {
  this.fireWith(this, arguments);
};
tr.prototype.fired = function() {
  return this._fired;
};
var qe = function(e) {
  return new tr(e);
};
const _k = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qe
}, Symbol.toStringTag, { value: "Module" }));
var XE = [{
  method: "resolve",
  handler: "done",
  state: "resolved"
}, {
  method: "reject",
  handler: "fail",
  state: "rejected"
}, {
  method: "notify",
  handler: "progress"
}], Ao = function() {
  var e = this;
  this._state = "pending", this._promise = {}, XE.forEach(function(t) {
    var i = t.method;
    this[i + "Callbacks"] = qe(), this[i] = function() {
      return this[i + "With"](this._promise, arguments);
    }.bind(this), this._promise[t.handler] = function(n) {
      if (!n)
        return this;
      var r = e[i + "Callbacks"];
      return r.fired() ? n.apply(e[i + "Context"], e[i + "Args"]) : r.add(function(a, o) {
        n.apply(a, o);
      }.bind(this)), this;
    };
  }.bind(this)), this._promise.always = function(t) {
    return this.done(t).fail(t);
  }, this._promise.catch = function(t) {
    return this.then(null, t);
  }, this._promise.then = function(t, i) {
    var n = new Ao();
    return ["done", "fail"].forEach(function(r) {
      var a = r === "done" ? t : i;
      this[r](function() {
        if (!a) {
          n[r === "done" ? "resolve" : "reject"].apply(this, arguments);
          return;
        }
        var o = a && a.apply(this, arguments);
        u_(o) ? o.done(n.resolve).fail(n.reject) : Ho(o) ? o.then(n.resolve, n.reject) : n.resolve.apply(this, x(o) ? [o] : arguments);
      });
    }.bind(this)), n.promise();
  }, this._promise.state = function() {
    return e._state;
  }, this._promise.promise = function(t) {
    return t ? T(t, e._promise) : e._promise;
  }, this._promise.promise(this);
};
XE.forEach(function(e) {
  var t = e.method, i = e.state;
  Ao.prototype[t + "With"] = function(n, r) {
    var a = this[t + "Callbacks"];
    return this.state() === "pending" && (this[t + "Args"] = r, this[t + "Context"] = n, i && (this._state = i), a.fire(n, r)), this;
  };
});
function Nt(e, t) {
  if (u_(e))
    return e;
  if (Ho(e)) {
    var i = new Ao();
    return e.then(function() {
      i.resolveWith.apply(i, [t].concat([
        [].slice.call(arguments)
      ]));
    }, function() {
      i.rejectWith.apply(i, [t].concat([
        [].slice.call(arguments)
      ]));
    }), i;
  }
  return new Ao().resolveWith(t, [e]);
}
var vk = function() {
  if (arguments.length === 1)
    return Nt(arguments[0]);
  for (var e = [].slice.call(arguments), t = [], i = 0, n = new Ao(), r = function(o) {
    return function(s) {
      t[o] = this, e[o] = arguments.length > 1 ? [].slice.call(arguments) : s, i++, i === e.length && n.resolveWith(t, e);
    };
  }, a = 0; a < e.length; a++)
    u_(e[a]) ? e[a].promise().done(r(a)).fail(n.reject) : i++;
  return i === e.length && n.resolveWith(t, e), n.promise();
};
function U() {
  return new Ao();
}
function ge() {
  return vk.apply(this, arguments);
}
const ii = zi({
  isWrapped: function() {
    return !1;
  },
  isWritableWrapped: function() {
    return !1;
  },
  wrap: function(e) {
    return e;
  },
  unwrap: function(e) {
    return e;
  },
  assign: function() {
    gl.error("Method 'assign' should not be used for not wrapped variables. Use 'isWrapped' method for ensuring.");
  }
});
var Nf = function(e, t) {
  var i = [], n, r;
  for (n in e)
    Object.prototype.hasOwnProperty.call(e, n) && i.push(n);
  for (i.sort(function(a, o) {
    var s = rt(a), l = rt(o);
    return s && l ? a - o : s && !l ? -1 : !s && l ? 1 : a < o ? -1 : a > o ? 1 : 0;
  }), r = 0; r < i.length; r++)
    n = i[r], t(n, e[n]);
}, mk = function(e, t, i, n) {
  !n && ii.isWrapped(e[t]) ? ii.assign(e[t], i) : e[t] = i;
}, Pi = function e(t, i, n, r) {
  var a, o;
  for (var s in i)
    if (a = t[s], o = i[s], !(s === "__proto__" || s === "constructor" || t === o)) {
      if (Me(o)) {
        var l = n ? De(a) : Me(a);
        o = e(l ? a : {}, o, n, r);
      }
      o !== void 0 && a !== o && mk(t, s, o, r);
    }
  return t;
}, Ck = ii.unwrap, YE = ii.isWrapped, xk = ii.assign, yk = function(e) {
  return e.replace(/\[/g, ".").replace(/\]/g, "");
}, ka = function(e) {
  return yk(e).split(".");
}, bk = function(e, t, i) {
  return i = i || {}, Zs(t === "this" ? e : e[t], i);
}, ZE = function(e, t, i, n) {
  if (t === "this")
    throw new Je.Error("E4016");
  var r = e[t];
  n.unwrapObservables && YE(r) ? xk(r, i) : e[t] = i;
}, QE = function(e) {
  return e = e || {}, e.unwrapObservables = e.unwrapObservables !== void 0 ? e.unwrapObservables : !0, e;
};
function Zs(e, t) {
  return t.unwrapObservables ? Ck(e) : e;
}
var tt = function(e) {
  if (arguments.length > 1 && (e = [].slice.call(arguments)), !e || e === "this")
    return function(i) {
      return i;
    };
  if (typeof e == "string") {
    var t = ka(e);
    return function(i, n) {
      n = QE(n);
      for (var r = n.functionsAsIs, a = ("defaultValue" in n), o = Zs(i, n), s = 0; s < t.length; s++) {
        if (!o) {
          if (o == null && a)
            return n.defaultValue;
          break;
        }
        var l = t[s];
        if (a && De(o) && !(l in o))
          return n.defaultValue;
        var u = Zs(o[l], n);
        !r && ce(u) && (u = u.call(o)), o = u;
      }
      return o;
    };
  }
  if (Array.isArray(e))
    return Sk(e);
  if (ce(e))
    return e;
};
function Sk(e) {
  for (var t = {}, i = 0, n = e.length; i < n; i++) {
    var r = e[i];
    t[r] = tt(r);
  }
  return function(a, o) {
    var s;
    return B(t, function(l) {
      var u = this(a, o);
      if (u !== void 0) {
        for (var d = s || (s = {}), c = l.split("."), h = c.length - 1, p = 0; p < h; p++) {
          var f = c[p];
          f in d || (d[f] = {}), d = d[f];
        }
        d[c[h]] = u;
      }
    }), s;
  };
}
var Nm = function(e, t, i, n) {
  if (x(i))
    return i;
  var r = {};
  return ZE(e, t, r, n), r;
}, h_ = function(e) {
  e = ka(e || "this");
  var t = e.length - 1;
  return function(i, n, r) {
    r = QE(r);
    var a = Zs(i, r);
    e.forEach(function(o, s) {
      var l = bk(a, o, r), u = !r.functionsAsIs && ce(l) && !YE(l);
      s === t ? r.merge && Me(n) && (!x(l) || Me(l)) ? (l = Nm(a, o, l, r), Pi(l, n, !1, !0)) : u ? a[o](n) : ZE(a, o, n, r) : (l = Nm(a, o, l, r), u && (l = l.call(a)), a = l);
    });
  };
}, bt = function(e, t) {
  return e instanceof Date ? e.getTime() : e && e instanceof ze && e.valueOf ? e.valueOf() : !t && typeof e == "string" ? e.toLowerCase() : e;
}, ct = function(e, t) {
  return x(e) ? e : t;
}, p_ = function(e, t) {
  var i = new U(), n = t || this, r = {
    promise: i.promise(),
    abort: function() {
      clearTimeout(o), i.rejectWith(n);
    }
  }, a = function() {
    var s = e.call(n);
    s && s.done && ce(s.done) ? s.done(function() {
      i.resolveWith(n);
    }) : i.resolveWith(n);
  }, o = (arguments[2] || setTimeout)(a, typeof t == "number" ? t : 0);
  return r;
}, Ch = [], $m = [], Zo = [], Xa, fc = function(e, t, i) {
  if (Xa && Xa !== e)
    return Ch.push(t), $m.push(e), i = i || new U(), Zo.push(i), i;
  var n = Xa, r = Zo.length;
  Xa = e;
  var a = t();
  return a || (Zo.length > r ? a = ge.apply(this, Zo.slice(r)) : i && i.resolve()), Xa = n, i && a && a.done && a.done(i.resolve).fail(i.reject), !Xa && Ch.length && ($m.shift() === "render" ? Bt : oi)(Ch.shift(), Zo.shift()), a || ge();
}, Bt = function(e, t) {
  return fc("render", e, t);
}, oi = function(e, t) {
  return fc("update", e, t);
}, bo = function(e) {
  return function() {
    var t = this;
    return fc("render", function() {
      return e.call(t);
    });
  };
}, Hm = function(e) {
  return function() {
    var t = this;
    return fc("update", function() {
      return e.call(t);
    });
  };
}, JE = function(e, t, i) {
  var n = [], r = 0;
  return B(t, (a, o) => {
    var s = 0, l = i ? i(o) : o;
    B(e, (u, d) => {
      var c = l[u];
      if (c !== void 0) {
        if (Ek(c, d)) {
          s++;
          return;
        }
        return s = -1, !1;
      }
    }), !(s < r) && (s > r && (n.length = 0, r = s), n.push(o));
  }), n;
}, Ek = function(e, t) {
  if (Array.isArray(e) && Array.isArray(t)) {
    var i = !1;
    return B(e, (n, r) => {
      if (r !== t[n])
        return i = !0, !1;
    }), !i;
  }
  return e === t;
}, zo = function(e) {
  var t, i;
  switch (Ei(e)) {
    case "string":
      return e.split(/\s+/, 2);
    case "object":
      return [(t = e.x) !== null && t !== void 0 ? t : e.h, (i = e.y) !== null && i !== void 0 ? i : e.v];
    case "number":
      return [e];
    case "array":
      return e;
    default:
      return null;
  }
}, ew = function(e, t) {
  var i = zo(e), n = t ? parseFloat(i && i[0]) : parseInt(i && i[0], 10), r = t ? parseFloat(i && i[1]) : parseInt(i && i[1], 10);
  return isFinite(n) || (n = 0), isFinite(r) || (r = n), {
    h: n,
    v: r
  };
}, xn = function(e) {
  if (e instanceof Ot)
    return e.toString();
  if (De(e) || Array.isArray(e))
    try {
      var t = JSON.stringify(e);
      return t === "{}" ? e : t;
    } catch {
      return e;
    }
  return e;
}, br = function(e) {
  return e.replace(/[[\]{}\-()*+?.\\^$|\s]/g, "\\$&");
}, wk = function(e) {
  var t = st().serverDecimalSeparator;
  return x(e) && (e = e.toString().replace(".", t)), e;
}, $ = function() {
}, tw = function() {
  return new U().resolve().promise();
}, li = function(e, t, i) {
  for (var n = [], r, a = !i, o = 0; o < e.length; o++)
    r = !!t(e[o], o), r === a && n.push(e[o]);
  return n;
}, Ik = function(e, t, i) {
  if (e.length !== t.length)
    return !1;
  for (var n = 0; n < e.length; n++)
    if (!et(e[n], t[n], i + 1))
      return !1;
  return !0;
}, Tk = function(e, t, i, n) {
  for (var r in e)
    if (Object.prototype.hasOwnProperty.call(e, r) && !et(e[r], t[r], i + 1, n))
      return !1;
  for (var a in t)
    if (!(a in e))
      return !1;
  return !0;
}, Dk = 3, et = function(e, t) {
  var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0;
  e = bt(e, !0), t = bt(t, !0);
  var r = n ? e === t : e == t;
  return r || i >= Dk ? !0 : De(e) && De(t) ? Tk(e, t, i, n) : Array.isArray(e) && Array.isArray(t) ? Ik(e, t, i) : !1;
}, xh = "dx-", Jl = null;
function zm(e) {
  try {
    return new CSSStyleSheet();
  } catch {
    var t = e.ownerDocument.createElement("style");
    return e.appendChild(t), t.sheet;
  }
}
function Wm(e, t, i) {
  for (var n = 0; n < t.length; n++) {
    var r = t[n];
    try {
      for (var a = 0; a < r.cssRules.length; a++)
        Ak(e, r.cssRules[a], i);
    } catch {
    }
  }
}
function Ak(e, t, i) {
  var n, r, a, o, s, l, u = i || ((n = t.selectorText) === null || n === void 0 ? void 0 : n.includes(xh)) || ((r = t.cssRules) === null || r === void 0 || (a = r[0]) === null || a === void 0 || (o = a.selectorText) === null || o === void 0 ? void 0 : o.includes(xh)) || ((s = t.name) === null || s === void 0 ? void 0 : s.startsWith(xh)) || ((l = t.style) === null || l === void 0 ? void 0 : l.fontFamily) === "DXIcons";
  u && e.insertRule(t.cssText, e.cssRules.length);
}
function Ok(e) {
  var t, i = e.get(0), n = (t = i.getRootNode) === null || t === void 0 ? void 0 : t.call(i);
  if (n != null && n.host) {
    Jl || (Jl = zm(n), Wm(Jl, i.ownerDocument.styleSheets, !1));
    var r = zm(n);
    Wm(r, n.styleSheets, !0), n.adoptedStyleSheets = [Jl, r];
  }
}
function Rk(e, t, i) {
  var n = e.getBoundingClientRect();
  return n && t >= n.left && t < n.right && i >= n.top && i < n.bottom;
}
function Bk() {
  var e = 0, t = [];
  return {
    push(i) {
      return t.push(i), this;
    },
    shift() {
      return e++, t[e - 1];
    },
    get length() {
      return t.length - e;
    },
    get items() {
      return t;
    }
  };
}
function kk(e, t, i) {
  for (var n = Bk().push(i); n.length; )
    for (var r = n.shift(), a = 0; a < r.childNodes.length; a++) {
      var o = r.childNodes[a];
      o.nodeType === Node.ELEMENT_NODE && Rk(o, e, t) && getComputedStyle(o).pointerEvents !== "none" && n.push(o);
    }
  var s = n.items.reverse();
  return s.pop(), s;
}
var Fk = 1, Pk = 3, Mk = 9, Lk = 11, Vk = {
  querySelectorAll: (e, t) => e.querySelectorAll(t),
  elementMatches(e, t) {
    var i = e.matches || e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector || ((n) => {
      var r = e.document || e.ownerDocument;
      if (!r)
        return !1;
      for (var a = this.querySelectorAll(r, n), o = 0; o < a.length; o++)
        if (a[o] === e)
          return !0;
    });
    return i.call(e, t);
  },
  createElement(e, t) {
    return t = t || this._document, t.createElement(e);
  },
  createElementNS(e, t, i) {
    return i = i || this._document, i.createElementNS(e, t);
  },
  createTextNode(e, t) {
    return t = t || this._document, t.createTextNode(e);
  },
  isNode: (e) => e && typeof e == "object" && "nodeType" in e && "nodeName" in e,
  isElementNode: (e) => e && e.nodeType === Fk,
  isTextNode: (e) => e && e.nodeType === Pk,
  isDocument: (e) => e && e.nodeType === Mk,
  isDocumentFragment: (e) => e && e.nodeType === Lk,
  removeElement(e) {
    var t = e && e.parentNode;
    t && t.removeChild(e);
  },
  insertElement(e, t, i) {
    e && t && e !== t && (i ? e.insertBefore(t, i) : e.appendChild(t));
  },
  getAttribute: (e, t) => e.getAttribute(t),
  setAttribute(e, t, i) {
    e.setAttribute(t, i);
  },
  removeAttribute(e, t) {
    e.removeAttribute(t);
  },
  setProperty(e, t, i) {
    e[t] = i;
  },
  setText(e, t) {
    e && (e.textContent = t);
  },
  setClass(e, t, i) {
    e.nodeType === 1 && t && (i ? e.classList.add(t) : e.classList.remove(t));
  },
  setStyle(e, t, i) {
    e.style[t] = i || "";
  },
  _document: typeof document > "u" ? void 0 : document,
  getDocument() {
    return this._document;
  },
  getActiveElement(e) {
    var t = this.getRootNode(e);
    return t.activeElement;
  },
  getRootNode(e) {
    var t, i;
    return (t = e == null || (i = e.getRootNode) === null || i === void 0 ? void 0 : i.call(e)) !== null && t !== void 0 ? t : this._document;
  },
  getBody() {
    return this._document.body;
  },
  createDocumentFragment() {
    return this._document.createDocumentFragment();
  },
  getDocumentElement() {
    return this._document.documentElement;
  },
  getLocation() {
    return this._document.location;
  },
  getSelection() {
    return this._document.selection;
  },
  getReadyState() {
    return this._document.readyState;
  },
  getHead() {
    return this._document.head;
  },
  hasDocumentProperty(e) {
    return e in this._document;
  },
  listen(e, t, i, n) {
    return !e || !("addEventListener" in e) ? $ : (e.addEventListener(t, i, n), () => {
      e.removeEventListener(t, i);
    });
  },
  elementsFromPoint(e, t, i) {
    var n = this.getRootNode(i);
    return n.host ? kk(e, t, n) : n.elementsFromPoint(e, t);
  }
};
const ee = zi(Vk), Nk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ee
}, Symbol.toStringTag, { value: "Module" }));
function ue() {
  return ue = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var i = arguments[t];
      for (var n in i)
        Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
    }
    return e;
  }, ue.apply(this, arguments);
}
class f_ {
  constructor() {
    this.memory = [], this.callbacks = qe();
  }
  add(t) {
    B(this.memory, (i, n) => t.apply(t, n)), this.callbacks.add(t);
  }
  remove(t) {
    this.callbacks.remove(t);
  }
  fire() {
    for (var t = arguments.length, i = new Array(t), n = 0; n < t; n++)
      i[n] = arguments[n];
    this.memory.push(i), this.callbacks.fire.apply(this.callbacks, i);
  }
}
const g_ = new f_();
var $k = typeof window < "u", Re = () => $k, ra = Re() ? window : void 0;
ra || (ra = {}, ra.window = ra);
var ke = () => ra, iw = (e) => Re() && e in ra, __ = (e) => e < 768 ? "xs" : e < 992 ? "sm" : e < 1200 ? "md" : "lg", nw = (e) => {
  var t = e || __, i = ee.getDocumentElement().clientWidth;
  return t(i);
}, _l = () => Re() ? ra.navigator : {
  userAgent: ""
}, Hk = ["pageX", "pageY", "screenX", "screenY", "clientX", "clientY"], zk = function(e, t) {
  if (t[e] && !t.touches || !t.touches)
    return t[e];
  var i = t.touches.length ? t.touches : t.changedTouches;
  if (i.length)
    return i[0][e];
};
function Wk(e) {
  Hk.forEach(function(t) {
    e(t, function(i) {
      return zk(t, i);
    });
  }, this);
}
var ir = function(e) {
  var t, i = function() {
    return t = e.apply(this, arguments), i = function() {
      return t;
    }, t;
  };
  return function() {
    return i.apply(this, arguments);
  };
}, v_ = ke(), eu = "dxEmptyEventType", Gm = {
  mouseenter: "mouseover",
  mouseleave: "mouseout",
  pointerenter: "pointerover",
  pointerleave: "pointerout"
}, Gk = {
  focusin: "focus",
  focusout: "blur"
}, Kk = ["blur", "focus", "load"], rw = ["touchmove", "wheel", "mousewheel", "touchstart"], Uk = ["target", "relatedTarget", "delegateTarget", "altKey", "bubbles", "cancelable", "changedTouches", "ctrlKey", "detail", "eventPhase", "metaKey", "shiftKey", "view", "char", "code", "charCode", "key", "keyCode", "button", "buttons", "offsetX", "offsetY", "pointerId", "pointerType", "targetTouches", "toElement", "touches"];
function jk(e, t) {
  return !Ct(e) && e.nodeName !== "#document" && ee.elementMatches(e, t);
}
var yh = /* @__PURE__ */ new WeakMap(), aw = 0, wd, _r = function() {
  var e = {};
  return g_.add(function(t, i) {
    e[t] = i;
  }), {
    getField: function(t, i) {
      return e[t] && e[t][i];
    },
    callMethod: function(t, i, n, r) {
      return e[t] && e[t][i] && e[t][i].apply(n, r);
    }
  };
}(), w = zi({
  on: Qo($f(jm(function(e, t, i, n, r) {
    var a = ho(e, t);
    a.addHandler(r, i, n);
  }))),
  one: Qo($f(function(e, t, i, n, r) {
    w.on(e, t, i, n, function a() {
      w.off(e, t, i, a), r.apply(this, arguments);
    });
  })),
  off: Qo(Yk(jm(function(e, t, i, n) {
    var r = ho(e, t);
    r.removeHandler(n, i);
  }))),
  trigger: Qo(Um(function(e, t, i) {
    var n = t.type, r = ho(e, t.type);
    _r.callMethod(n, "trigger", e, [t, i]), r.callHandlers(t, i);
    var a = _r.getField(n, "noBubble") || t.isPropagationStopped() || Kk.indexOf(n) !== -1;
    if (!a) {
      var o = [];
      (function u(d) {
        var c, h = (c = d.parentNode) !== null && c !== void 0 ? c : d.host;
        h && (o.push(h), u(h));
      })(e), o.push(v_);
      for (var s = 0; o[s] && !t.isPropagationStopped(); ) {
        var l = ho(o[s], t.type);
        l.callHandlers(T(t, {
          currentTarget: o[s]
        }), i), s++;
      }
    }
    (e.nodeType || Ct(e)) && (_r.callMethod(n, "_default", e, [t, i]), Qk(n, e));
  })),
  triggerHandler: Qo(Um(function(e, t, i) {
    var n = ho(e, t.type);
    n.callHandlers(t, i);
  }))
});
function m_(e, t) {
  var i = e[0];
  if (i)
    if (ee.isNode(i) || Ct(i))
      t.apply(w, e);
    else if (!Te(i) && "length" in i) {
      var n = Array.prototype.slice.call(e, 0);
      Array.prototype.forEach.call(i, function(r) {
        n[0] = r, m_(n, t);
      });
    } else
      throw Je.Error("E0025");
}
function Qo(e) {
  return function() {
    m_(arguments, e);
  };
}
function qk() {
  var e = !1;
  try {
    var t = Object.defineProperty({}, "passive", {
      get: function() {
        return e = !0, !0;
      }
    });
    v_.addEventListener("test", null, t);
  } catch {
  }
  return e;
}
var ow = ir(qk), sw = (e, t) => Ct(e) ? sw(e.document, t) : e.contains ? e.contains(t) : !!(t.compareDocumentPosition(e) & t.DOCUMENT_POSITION_CONTAINS);
function ho(e, t) {
  var i = yh.get(e);
  t = t || "";
  var n = t.split("."), r = n.slice(1), a = !!n[0];
  t = n[0] || eu, i || (i = {}, yh.set(e, i)), i[t] || (i[t] = {
    handleObjects: [],
    nativeHandler: null
  });
  var o = i[t];
  return {
    addHandler: function(s, l, u) {
      var d = function(v, m) {
        var C = [v], b = v.currentTarget, A = v.relatedTarget, R, k;
        t in Gm && (R = A && b && (A === b || sw(b, A))), m !== void 0 && C.push(m), _r.callMethod(t, "handle", e, [v, u]), R || (k = s.apply(b, C)), k === !1 && (v.preventDefault(), v.stopPropagation());
      }, c = {
        handler: s,
        wrappedHandler: function(v, m) {
          if (!(wd && v.type === wd))
            if (v.data = u, v.delegateTarget = e, l)
              for (var C = v.target; C && C !== e; )
                jk(C, l) && (v.currentTarget = C, d(v, m)), C = C.parentNode;
            else
              v.currentTarget = v.delegateTarget || v.target, d(v, m);
        },
        selector: l,
        type: t,
        data: u,
        namespace: r.join("."),
        namespaces: r,
        guid: ++aw
      };
      o.handleObjects.push(c);
      var h = o.handleObjects.length === 1, p = h && a, f;
      p && (p = !_r.callMethod(t, "setup", e, [u, r, s])), p && (o.nativeHandler = Xk(t), ow() && rw.indexOf(t) > -1 && (f = {
        passive: !1
      }), o.removeListener = ee.listen(e, Gm[t] || t, o.nativeHandler, f)), _r.callMethod(t, "add", e, [c]);
    },
    removeHandler: function(s, l) {
      var u = function(h) {
        var p = i[h];
        if (!p.handleObjects.length) {
          delete i[h];
          return;
        }
        var f;
        p.handleObjects = p.handleObjects.filter(function(C) {
          var b = r.length && !Km(C.namespaces, r) || s && C.handler !== s || l && C.selector !== l;
          return b || (f = C.handler, _r.callMethod(h, "remove", e, [C])), b;
        });
        var v = !p.handleObjects.length, m = v && h !== eu;
        m && (_r.callMethod(h, "teardown", e, [r, f]), p.nativeHandler && p.removeListener(), delete i[h]);
      };
      if (a)
        u(t);
      else
        for (var d in i)
          u(d);
      var c = Object.keys(i).length === 0;
      c && yh.delete(e);
    },
    callHandlers: function(s, l) {
      var u = !1, d = function(c) {
        u || (!r.length || Km(c.namespaces, r)) && (c.wrappedHandler(s, l), u = s.isImmediatePropagationStopped());
      };
      o.handleObjects.forEach(d), r.length && i[eu] && i[eu].handleObjects.forEach(d);
    }
  };
}
function Xk(e) {
  return function(t, i) {
    var n = ho(this, e);
    t = w.Event(t), n.callHandlers(t, i);
  };
}
function Km(e, t) {
  for (var i = 0; i < t.length; i++)
    if (e.indexOf(t[i]) < 0)
      return !1;
  return !0;
}
function $f(e) {
  return function(t, i, n, r, a) {
    a || (a = r, r = void 0), typeof n != "string" && (r = n, n = void 0), !a && typeof i == "string" && (a = r || n, n = void 0, r = void 0), e(t, i, n, r, a);
  };
}
function Yk(e) {
  return function(t, i, n, r) {
    typeof n == "function" && (r = n, n = void 0), e(t, i, n, r);
  };
}
function Um(e) {
  return function(t, i, n) {
    typeof i == "string" && (i = {
      type: i
    }), i.target || (i.target = t), i.currentTarget = t, i.delegateTarget || (i.delegateTarget = t), !i.type && i.originalEvent && (i.type = i.originalEvent.type), e(t, i instanceof w.Event ? i : w.Event(i), n);
  };
}
function Zk(e) {
  return w.Event = function(t, i) {
    if (!(this instanceof w.Event))
      return new w.Event(t, i);
    t || (t = {}), typeof t == "string" && (t = {
      type: t
    }), i || (i = {}), e.call(this, t, i);
  }, ue(w.Event.prototype, {
    _propagationStopped: !1,
    _immediatePropagationStopped: !1,
    _defaultPrevented: !1,
    isPropagationStopped: function() {
      return !!(this._propagationStopped || this.originalEvent && this.originalEvent.propagationStopped);
    },
    stopPropagation: function() {
      this._propagationStopped = !0, this.originalEvent && this.originalEvent.stopPropagation();
    },
    isImmediatePropagationStopped: function() {
      return this._immediatePropagationStopped;
    },
    stopImmediatePropagation: function() {
      this.stopPropagation(), this._immediatePropagationStopped = !0, this.originalEvent && this.originalEvent.stopImmediatePropagation();
    },
    isDefaultPrevented: function() {
      return !!(this._defaultPrevented || this.originalEvent && this.originalEvent.defaultPrevented);
    },
    preventDefault: function() {
      this._defaultPrevented = !0, this.originalEvent && this.originalEvent.preventDefault();
    }
  }), w.Event;
}
function jm(e) {
  var t = function(i, n) {
    if (n && n.indexOf(" ") > -1) {
      var r = Array.prototype.slice.call(arguments, 0);
      n.split(" ").forEach(function(a) {
        r[1] = a, e.apply(this, r);
      });
    } else
      e.apply(this, arguments);
  };
  return function(i, n) {
    if (typeof n == "object") {
      var r = Array.prototype.slice.call(arguments, 0);
      for (var a in n)
        r[1] = a, r[r.length - 1] = n[a], t.apply(this, r);
    } else
      t.apply(this, arguments);
  };
}
function Qk(e, t) {
  var i = Gk[e] || e;
  (function(n, r) {
    return n === "click" && r.localName === "a";
  })(e, t) || ce(t[i]) && (wd = e, t[i](), wd = void 0);
}
function Jk(e) {
  return function(t) {
    return t.which == null && t.type.indexOf("key") === 0;
  }(e) ? e.charCode != null ? e.charCode : e.keyCode : function(t) {
    return !t.which && t.button !== void 0 && /^(?:mouse|pointer|contextmenu|drag|drop)|click/.test(t.type);
  }(e) ? {
    1: 1,
    2: 3,
    3: 1,
    4: 2
  }[e.button] : e.which;
}
function lw(e) {
  e && (w.Event = e, w.Event.prototype = e.prototype);
}
lw(Zk(function(e, t) {
  var i, n = e instanceof w.Event || Re() && e instanceof v_.Event || ((i = e.view) === null || i === void 0 ? void 0 : i.Event) && e instanceof e.view.Event;
  n ? (this.originalEvent = e, this.type = e.type, this.currentTarget = void 0, Object.prototype.hasOwnProperty.call(e, "isTrusted") && (this.isTrusted = e.isTrusted), this.timeStamp = e.timeStamp || Date.now()) : ue(this, e), C_("which", Jk, this), e.type.indexOf("touch") === 0 && (delete t.pageX, delete t.pageY), ue(this, t), this.guid = ++aw;
}));
function C_(e, t, i) {
  Object.defineProperty(i || w.Event.prototype, e, {
    enumerable: !0,
    configurable: !0,
    get: function() {
      return this.originalEvent && t(this.originalEvent);
    },
    set: function(n) {
      Object.defineProperty(this, e, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: n
      });
    }
  });
}
Uk.forEach((e) => C_(e, (t) => t[e]));
Wk(C_);
var uw = qe(), dw = qe();
w.set = function(e) {
  uw.fire(), w.inject(e), lw(e.Event), dw.fire();
};
w.subscribeGlobal = function() {
  m_(arguments, $f(function() {
    var e = arguments;
    w.on.apply(this, e), uw.add(function() {
      var t = Array.prototype.slice.call(e, 0);
      t.splice(3, 1), w.off.apply(this, t);
    }), dw.add(function() {
      w.on.apply(this, e);
    });
  }));
};
w.forcePassiveFalseEventNames = rw;
w.passiveEventHandlersSupported = ow;
var Jo = /* @__PURE__ */ new WeakMap(), ua, eF = new f_(), cw = function() {
}, tF = function(e) {
  eF.fire(e), ua = e;
  var t = ua.cleanData;
  ua.cleanData = function(i) {
    cw(i);
    var n = t.call(this, i);
    return n;
  };
};
tF({
  data: function() {
    var e = arguments[0], t = arguments[1], i = arguments[2];
    if (e) {
      var n = Jo.get(e);
      return n || (n = {}, Jo.set(e, n)), t === void 0 ? n : arguments.length === 2 ? n[t] : (n[t] = i, i);
    }
  },
  removeData: function(e, t) {
    if (e)
      if (t === void 0)
        Jo.delete(e);
      else {
        var i = Jo.get(e);
        i && delete i[t];
      }
  },
  cleanData: function(e) {
    for (var t = 0; t < e.length; t++)
      w.off(e[t]), Jo.delete(e[t]);
  }
});
function dt() {
  return ua.data.apply(this, arguments);
}
function iF(e) {
  cw = e;
}
function gc(e, t) {
  return ua.removeData.call(this, e, t);
}
function vl(e, t) {
  if (ee.isElementNode(e)) {
    var i = e.getElementsByTagName("*");
    ua.cleanData(i), t && ua.cleanData([e]);
  }
}
var hw = function(e) {
  return e == null ? "" : String(e);
}, x_ = function(e) {
  return hw(e).charAt(0).toUpperCase() + e.substr(1);
}, y_ = function(e) {
  return hw(e).replace(/([a-z\d])([A-Z])/g, "$1 $2").split(/[\s_-]+/);
}, b_ = function(e) {
  return wt(y_(e), function(t) {
    return t.toLowerCase();
  }).join("-");
}, Qs = function(e, t) {
  return wt(y_(e), function(i, n) {
    return i = i.toLowerCase(), (t || n > 0) && (i = x_(i)), i;
  }).join("");
}, nF = function(e) {
  return x_(b_(e).replace(/-/g, " "));
}, Js = function(e) {
  return wt(y_(e), function(t) {
    return x_(t.toLowerCase());
  }).join(" ");
}, rF = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], va = function(e) {
  var t = [], i, n, r = !1, a = !1;
  for (i = 0; i < e.length; i++)
    n = e.charAt(i), a = n === n.toUpperCase() && n !== "-" && n !== ")" && n !== "/" || n in rF, n === "_" || n === "." ? (n = " ", a = !0) : i === 0 ? (n = n.toUpperCase(), a = !0) : !r && a && t.length > 0 && t.push(" "), t.push(n), r = a;
  return t.join("");
}, Id = ["", "Webkit", "Moz", "O", "Ms"], aF = {
  "": "",
  Webkit: "-webkit-",
  Moz: "-moz-",
  O: "-o-",
  ms: "-ms-"
}, Hf = ir(function() {
  return ee.createElement("dx").style;
}), oF = function(e, t) {
  e = Qs(e, !0);
  for (var i, n = 0, r = Id.length; n < r; n++) {
    var a = Id[n], o = a + e, s = Qs(o);
    if (i = t(s, a), i === void 0 && (i = t(o, a)), i !== void 0)
      break;
  }
  return i || "";
}, Fa = function(e) {
  if (e in Hf())
    return e;
  var t = e;
  e = e.charAt(0).toUpperCase() + e.substr(1);
  for (var i = 1; i < Id.length; i++) {
    var n = Id[i].toLowerCase() + e;
    if (n in Hf())
      return n;
  }
  return t;
}, td = function(e) {
  return oF(e, function(t, i) {
    if (t in Hf())
      return aF[i];
  });
}, sF = ["fillOpacity", "columnCount", "flexGrow", "flexShrink", "fontWeight", "lineHeight", "opacity", "zIndex", "zoom"], Oo = function(e, t) {
  return rt(t) && sF.indexOf(e) === -1 && (t += "px"), t;
}, pw = function(e, t, i) {
  if (e) {
    i = rt(i) ? i += "px" : i;
    for (var n = 0; n < e.length; ++n)
      e[n].style[t] = i;
  }
}, bh = function(e, t) {
  pw(e, "width", t);
}, Sh = function(e, t) {
  pw(e, "height", t);
}, Td = ke(), lF = ["auto", "none", "inherit", "initial"], Eh = function(e, t) {
  var i = 0;
  return t.forEach(function(n) {
    i += parseFloat(e[n]) || 0;
  }), i;
}, fw = function(e, t) {
  var i = e === "width" ? "Left" : "Top", n = e === "width" ? "Right" : "Bottom";
  return {
    padding: Eh(t, ["padding" + i, "padding" + n]),
    border: Eh(t, ["border" + i + "Width", "border" + n + "Width"]),
    margin: Eh(t, ["margin" + i, "margin" + n])
  };
}, gw = function(e) {
  var t, i = (e == null || (t = e.ownerDocument) === null || t === void 0 ? void 0 : t.defaultView) || Td;
  return i.getComputedStyle && i.getComputedStyle(e);
}, zf = function(e, t, i, n) {
  var r;
  return (t == null ? void 0 : t[i]) || ((r = e.style) === null || r === void 0 ? void 0 : r[i]) || n;
}, Ya = {
  content: 0,
  padding: 1,
  border: 2,
  margin: 3,
  "content-box": 0,
  "border-box": 2
}, qm = {
  width: ["left", "right"],
  height: ["top", "bottom"]
};
function es(e, t, i, n) {
  var r = (o, s, l) => parseFloat(zf(o, s, l, "0")) || 0, a = i === "border" ? "-width" : "";
  return r(e, n, "".concat(i, "-").concat(qm[t][0]).concat(a)) + r(e, n, "".concat(i, "-").concat(qm[t][1]).concat(a));
}
var uF = function(e, t, i) {
  var n = t === "width" ? "offsetWidth" : "offsetHeight", r = gw(e), a = zf(e, r, t);
  (a === "" || a === "auto") && (a = e[n]), a = parseFloat(a) || 0;
  var o = zf(e, r, "boxSizing", "content-box"), s = i || o, l = Ya[s], u = Ya[o];
  if (l === void 0 || u === void 0)
    throw new Error();
  if (u === l)
    return a;
  var d = Math.sign(l - u), c = !1, h = !1, p = !1, f = !1;
  d === 1 && (l += 1, u += 1);
  for (var v = u; v !== l; v += d)
    switch (v) {
      case Ya.content:
        break;
      case Ya.padding:
        c = d * es(e, t, "padding", r);
        break;
      case Ya.border:
        h = d * es(e, t, "border", r);
        break;
      case Ya.margin:
        p = d * es(e, t, "margin", r);
    }
  if (c || h) {
    var m = (c === !1 ? d * es(e, t, "padding", r) : c) + (h === !1 ? d * es(e, t, "border", r) : h);
    f = d * Math.max(0, Math.floor(e[n] - a - d * m)) || 0;
  }
  return a + p + c + h + f;
}, dF = function(e) {
  return Ct(e) ? e.innerHeight : e.offsetHeight;
}, cF = function(e, t, i) {
  return e.indexOf("px") > 0 ? e = parseInt(e.replace("px", "")) : e.indexOf("%") > 0 ? e = parseInt(e.replace("%", "")) * dF(t) / 100 : isNaN(e) ? e.indexOf("vh") > 0 ? e = Td.innerHeight / 100 * parseInt(e.replace("vh", "")) : i && e.indexOf("em") > 0 && (e = parseFloat(e.replace("em", "")) * parseFloat(Td.getComputedStyle(i).fontSize)) : e = parseInt(e), e;
}, _w = function(e, t, i) {
  if (!e)
    return null;
  if (lF.indexOf(e) > -1)
    return t ? null : e;
  if (Te(e) && (e = cF(e, i)), rt(e))
    return Math.max(0, e + t);
  var n = t < 0 ? " - " : " ";
  return "calc(" + e + n + Math.abs(t) + "px)";
}, hF = function(e, t, i) {
  var n = _w(e, t, i);
  return n !== null ? n : "none";
}, pF = function(e, t, i) {
  var n = _w(e, t, i);
  return n !== null ? n : 0;
}, wh = function(e, t) {
  if (!e)
    return 0;
  var i = fw("height", Td.getComputedStyle(e));
  return i.padding + i.border + (t ? i.margin : 0);
}, Xm = function(e) {
  if (e) {
    var t = e.getBoundingClientRect();
    if (t.height)
      return t.height;
  }
  return 0;
}, bn = {
  getWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("width", ...t);
  },
  setWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("width", ...t);
  },
  getHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("height", ...t);
  },
  setHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("height", ...t);
  },
  getOuterWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("outerWidth", ...t);
  },
  setOuterWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("outerWidth", ...t);
  },
  getOuterHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("outerHeight", ...t);
  },
  setOuterHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("outerHeight", ...t);
  },
  getInnerWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("innerWidth", ...t);
  },
  setInnerWidth: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("innerWidth", ...t);
  },
  getInnerHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("innerHeight", ...t);
  },
  setInnerHeight: function() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return Ai("innerHeight", ...t);
  }
};
function Ai(e, t, i) {
  return arguments.length === 2 ? Qm(t, e) : Qm(t, e, i);
}
var Ae = (e) => bn.getWidth(e), S_ = (e, t) => bn.setWidth(e, t), Fe = (e) => bn.getHeight(e), Dr = (e, t) => bn.setHeight(e, t), Ge = (e, t) => bn.getOuterWidth(e, t || !1), Ym = (e, t) => bn.setOuterWidth(e, t), Ne = (e, t) => bn.getOuterHeight(e, t || !1), Zm = (e, t) => bn.setOuterHeight(e, t), Wf = (e) => bn.getInnerWidth(e), Dd = (e) => bn.getInnerHeight(e), Qm = function e(t, i, n) {
  var r = i.toLowerCase().indexOf("width") >= 0 ? "Width" : "Height", a = r.toLowerCase(), o = i.indexOf("outer") === 0, s = i.indexOf("inner") === 0, l = arguments.length === 2 || typeof n == "boolean";
  if (wi(t)) {
    if (t.length > 1 && !l) {
      for (var u = 0; u < t.length; u++)
        e(t[u], i, n);
      return;
    }
    t = t[0];
  }
  if (t) {
    if (Ct(t))
      return o ? t["inner" + r] : ee.getDocumentElement()["client" + r];
    if (ee.isDocument(t)) {
      var d = ee.getDocumentElement(), c = ee.getBody();
      return Math.max(c["scroll" + r], c["offset" + r], d["scroll" + r], d["offset" + r], d["client" + r]);
    }
    if (l) {
      var h = "content";
      return o && (h = n ? "margin" : "border"), s && (h = "padding"), uF(t, a, h);
    }
    if (rt(n)) {
      var p = gw(t), f = fw(a, p), v = p.boxSizing === "border-box";
      n = Number(n), o ? n -= v ? 0 : f.border + f.padding : s ? n += v ? f.border : -f.padding : v && (n += f.border + f.padding);
    }
    return n += rt(n) ? "px" : "", ee.setStyle(t, a, n), null;
  }
}, vw = (e) => Ct(e) ? e : e.defaultView, Gf = (e) => {
  if (!e.getClientRects().length)
    return {
      top: 0,
      left: 0
    };
  var t = e.getBoundingClientRect(), i = vw(e.ownerDocument), n = e.ownerDocument.documentElement;
  return {
    top: t.top + i.pageYOffset - n.clientTop,
    left: t.left + i.pageXOffset - n.clientLeft
  };
}, mw = /<([a-z][^/\0>\x20\t\r\n\f]+)/i, gn = {
  default: {
    tagsCount: 0,
    startTags: "",
    endTags: ""
  },
  thead: {
    tagsCount: 1,
    startTags: "<table>",
    endTags: "</table>"
  },
  td: {
    tagsCount: 3,
    startTags: "<table><tbody><tr>",
    endTags: "</tr></tbody></table>"
  },
  col: {
    tagsCount: 2,
    startTags: "<table><colgroup>",
    endTags: "</colgroup></table>"
  },
  tr: {
    tagsCount: 2,
    startTags: "<table><tbody>",
    endTags: "</tbody></table>"
  }
};
gn.tbody = gn.colgroup = gn.caption = gn.tfoot = gn.thead;
gn.th = gn.td;
var E_ = function(e) {
  if (typeof e != "string")
    return null;
  var t = ee.createDocumentFragment(), i = t.appendChild(ee.createElement("div")), n = mw.exec(e), r = n && n[1].toLowerCase(), a = gn[r] || gn.default;
  i.innerHTML = a.startTags + e + a.endTags;
  for (var o = 0; o < a.tagsCount; o++)
    i = i.lastChild;
  return [...i.childNodes];
}, fF = function(e) {
  var t = mw.exec(e);
  return t && t[1] in gn;
}, gF = ke(), Ke, Be = function(e, t) {
  return e ? typeof e == "string" ? e === "body" ? (this[0] = t ? t.body : ee.getBody(), this.length = 1, this) : (t = t || ee.getDocument(), e[0] === "<" ? (this[0] = ee.createElement(e.slice(1, -1), t), this.length = 1, this) : ([].push.apply(this, ee.querySelectorAll(t, e)), this)) : ee.isNode(e) || Ct(e) ? (this[0] = e, this.length = 1, this) : Array.isArray(e) ? ([].push.apply(this, e), this) : Ke(e.toArray ? e.toArray() : [e]) : (this.length = 0, this);
};
Ke = function(e, t) {
  return new Be(e, t);
};
Ke.fn = {
  dxRenderer: !0
};
Be.prototype = Ke.fn;
var Wo = function(e, t) {
  for (var i = 0; i < this.length; i++) {
    var n = Ke(this[i]);
    n[e].apply(n, t);
  }
  return this;
}, Kf = function(e, t, i) {
  i != null && i !== !1 ? ee.setAttribute(e, t, i) : ee.removeAttribute(e, t);
};
Be.prototype.show = function() {
  return this.toggle(!0);
};
Be.prototype.hide = function() {
  return this.toggle(!1);
};
Be.prototype.toggle = function(e) {
  return this[0] && this.toggleClass("dx-state-invisible", !e), this;
};
Be.prototype.attr = function(e, t) {
  if (this.length > 1 && arguments.length > 1)
    return Wo.call(this, "attr", arguments);
  if (!this[0])
    return De(e) || t !== void 0 ? this : void 0;
  if (!this[0].getAttribute)
    return this.prop(e, t);
  if (typeof e == "string" && arguments.length === 1) {
    var i = this[0].getAttribute(e);
    return i ?? void 0;
  } else if (Me(e))
    for (var n in e)
      this.attr(n, e[n]);
  else
    Kf(this[0], e, t);
  return this;
};
Be.prototype.removeAttr = function(e) {
  return this[0] && ee.removeAttribute(this[0], e), this;
};
Be.prototype.prop = function(e, t) {
  if (!this[0])
    return this;
  if (typeof e == "string" && arguments.length === 1)
    return this[0][e];
  if (Me(e))
    for (var i in e)
      this.prop(i, e[i]);
  else
    ee.setProperty(this[0], e, t);
  return this;
};
Be.prototype.addClass = function(e) {
  return this.toggleClass(e, !0);
};
Be.prototype.removeClass = function(e) {
  return this.toggleClass(e, !1);
};
Be.prototype.hasClass = function(e) {
  if (!this[0] || this[0].className === void 0)
    return !1;
  for (var t = e.split(" "), i = 0; i < t.length; i++)
    if (this[0].classList) {
      if (this[0].classList.contains(t[i]))
        return !0;
    } else {
      var n = Te(this[0].className) ? this[0].className : ee.getAttribute(this[0], "class");
      if ((n || "").split(" ").indexOf(t[i]) >= 0)
        return !0;
    }
  return !1;
};
Be.prototype.toggleClass = function(e, t) {
  if (this.length > 1)
    return Wo.call(this, "toggleClass", arguments);
  if (!this[0] || !e)
    return this;
  t = t === void 0 ? !this.hasClass(e) : t;
  for (var i = e.split(" "), n = 0; n < i.length; n++)
    ee.setClass(this[0], i[n], t);
  return this;
};
Be.prototype.html = function(e) {
  return arguments.length ? (this.empty(), typeof e == "string" && !fF(e) || typeof e == "number" ? (this[0].innerHTML = e, this) : this.append(E_(e))) : this[0].innerHTML;
};
var Cw = function(e, t) {
  if (!(!this[0] || !e)) {
    typeof e == "string" ? e = E_(e) : e.nodeType ? e = [e] : rt(e) && (e = [ee.createTextNode(e)]);
    for (var i = 0; i < e.length; i++) {
      var n = e[i], r = this[0], a = r.tagName === "TABLE" && n.tagName === "TR";
      a && r.tBodies && r.tBodies.length && (r = r.tBodies[0]), ee.insertElement(r, n.nodeType ? n : n[0], t);
    }
  }
}, Jm = function(e, t) {
  if (!(!this[0] || !this[0].style) && !(t === null || typeof t == "number" && isNaN(t))) {
    e = Fa(e);
    for (var i = 0; i < this.length; i++)
      this[i].style[e] = Oo(e, t);
  }
};
Be.prototype.css = function(e, t) {
  if (Te(e))
    if (arguments.length === 2)
      Jm.call(this, e, t);
    else {
      if (!this[0])
        return;
      e = Fa(e);
      var i = gF.getComputedStyle(this[0])[e] || this[0].style[e];
      return rt(i) ? i.toString() : i;
    }
  else if (Me(e))
    for (var n in e)
      Jm.call(this, n, e[n]);
  return this;
};
Be.prototype.prepend = function(e) {
  if (arguments.length > 1) {
    for (var t = 0; t < arguments.length; t++)
      this.prepend(arguments[t]);
    return this;
  }
  return Cw.apply(this, [e, this[0].firstChild]), this;
};
Be.prototype.append = function(e) {
  if (arguments.length > 1) {
    for (var t = 0; t < arguments.length; t++)
      this.append(arguments[t]);
    return this;
  }
  return Cw.apply(this, [e]), this;
};
Be.prototype.prependTo = function(e) {
  if (this.length > 1) {
    for (var t = this.length - 1; t >= 0; t--)
      Ke(this[t]).prependTo(e);
    return this;
  }
  return e = Ke(e), e[0] && ee.insertElement(e[0], this[0], e[0].firstChild), this;
};
Be.prototype.appendTo = function(e) {
  return this.length > 1 ? Wo.call(this, "appendTo", arguments) : (ee.insertElement(Ke(e)[0], this[0]), this);
};
Be.prototype.insertBefore = function(e) {
  return e && e[0] && ee.insertElement(e[0].parentNode, this[0], e[0]), this;
};
Be.prototype.insertAfter = function(e) {
  return e && e[0] && ee.insertElement(e[0].parentNode, this[0], e[0].nextSibling), this;
};
Be.prototype.before = function(e) {
  return this[0] && ee.insertElement(this[0].parentNode, e[0], this[0]), this;
};
Be.prototype.after = function(e) {
  return this[0] && ee.insertElement(this[0].parentNode, e[0], this[0].nextSibling), this;
};
Be.prototype.wrap = function(e) {
  if (this[0]) {
    var t = Ke(e);
    t.insertBefore(this), t.append(this);
  }
  return this;
};
Be.prototype.wrapInner = function(e) {
  var t = this.contents();
  return t.length ? t.wrap(e) : this.append(e), this;
};
Be.prototype.replaceWith = function(e) {
  if (e && e[0])
    return e.is(this) ? this : (e.insertBefore(this), this.remove(), e);
};
Be.prototype.remove = function() {
  return this.length > 1 ? Wo.call(this, "remove", arguments) : (vl(this[0], !0), ee.removeElement(this[0]), this);
};
Be.prototype.detach = function() {
  return this.length > 1 ? Wo.call(this, "detach", arguments) : (ee.removeElement(this[0]), this);
};
Be.prototype.empty = function() {
  return this.length > 1 ? Wo.call(this, "empty", arguments) : (vl(this[0]), ee.setText(this[0], ""), this);
};
Be.prototype.clone = function() {
  for (var e = [], t = 0; t < this.length; t++)
    e.push(this[t].cloneNode(!0));
  return Ke(e);
};
Be.prototype.text = function(e) {
  if (!arguments.length) {
    for (var t = "", i = 0; i < this.length; i++)
      t += this[i] && this[i].textContent || "";
    return t;
  }
  var n = ce(e) ? e() : e;
  return vl(this[0], !1), ee.setText(this[0], x(n) ? n : ""), this;
};
Be.prototype.val = function(e) {
  return arguments.length === 1 ? this.prop("value", x(e) ? e : "") : this.prop("value");
};
Be.prototype.contents = function() {
  if (!this[0])
    return Ke();
  var e = [];
  return e.push.apply(e, this[0].childNodes), Ke(e);
};
Be.prototype.find = function(e) {
  var t = Ke();
  if (!e)
    return t;
  var i = [], n;
  if (typeof e == "string")
    for (e = e.trim(), n = 0; n < this.length; n++) {
      var r = this[n];
      if (ee.isElementNode(r)) {
        var a = r.getAttribute("id"), o = a || "dx-query-children";
        a || Kf(r, "id", o), o = "[id='" + o + "'] ";
        var s = o + e.replace(/([^\\])(,)/g, "$1, " + o);
        i.push.apply(i, ee.querySelectorAll(r, s)), Kf(r, "id", a);
      } else
        (ee.isDocument(r) || ee.isDocumentFragment(r)) && i.push.apply(i, ee.querySelectorAll(r, e));
    }
  else
    for (n = 0; n < this.length; n++)
      e = ee.isNode(e) ? e : e[0], this[n] !== e && this[n].contains(e) && i.push(e);
  return t.add(i);
};
var eC = function(e, t) {
  var i;
  return t = (i = t.host) !== null && i !== void 0 ? i : t, t.nodeType ? !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length) : !0;
};
Be.prototype.filter = function(e) {
  if (!e)
    return Ke();
  if (e === ":visible")
    return this.filter(eC);
  if (e === ":hidden")
    return this.filter(function(a, o) {
      return !eC(a, o);
    });
  for (var t = [], i = 0; i < this.length; i++) {
    var n = this[i];
    if (ee.isElementNode(n) && Ei(e) === "string")
      ee.elementMatches(n, e) && t.push(n);
    else if (ee.isNode(e) || Ct(e))
      e === n && t.push(n);
    else if (ce(e))
      e.call(n, i, n) && t.push(n);
    else
      for (var r = 0; r < e.length; r++)
        e[r] === n && t.push(n);
  }
  return Ke(t);
};
Be.prototype.not = function(e) {
  for (var t = [], i = this.filter(e).toArray(), n = 0; n < this.length; n++)
    i.indexOf(this[n]) === -1 && t.push(this[n]);
  return Ke(t);
};
Be.prototype.is = function(e) {
  return !!this.filter(e).length;
};
Be.prototype.children = function(e) {
  for (var t = [], i = 0; i < this.length; i++)
    for (var n = this[i] ? this[i].childNodes : [], r = 0; r < n.length; r++)
      ee.isElementNode(n[r]) && t.push(n[r]);
  return t = Ke(t), e ? t.filter(e) : t;
};
Be.prototype.siblings = function() {
  var e = this[0];
  if (!e || !e.parentNode)
    return Ke();
  for (var t = [], i = e.parentNode.childNodes || [], n = 0; n < i.length; n++) {
    var r = i[n];
    ee.isElementNode(r) && r !== e && t.push(r);
  }
  return Ke(t);
};
Be.prototype.each = function(e) {
  for (var t = 0; t < this.length && e.call(this[t], t, this[t]) !== !1; t++)
    ;
};
Be.prototype.index = function(e) {
  return e ? (e = Ke(e), this.toArray().indexOf(e[0])) : this.parent().children().index(this);
};
Be.prototype.get = function(e) {
  return this[e < 0 ? this.length + e : e];
};
Be.prototype.eq = function(e) {
  return e = e < 0 ? this.length + e : e, Ke(this[e]);
};
Be.prototype.first = function() {
  return this.eq(0);
};
Be.prototype.last = function() {
  return this.eq(-1);
};
Be.prototype.select = function() {
  for (var e = 0; e < this.length; e += 1)
    this[e].select && this[e].select();
  return this;
};
Be.prototype.parent = function(e) {
  if (!this[0])
    return Ke();
  var t = Ke(this[0].parentNode);
  return !e || t.is(e) ? t : Ke();
};
Be.prototype.parents = function(e) {
  for (var t = [], i = this.parent(); i && i[0] && !ee.isDocument(i[0]); )
    ee.isElementNode(i[0]) && (!e || i.is(e)) && t.push(i.get(0)), i = i.parent();
  return Ke(t);
};
Be.prototype.closest = function(e) {
  if (this.is(e))
    return this;
  for (var t = this.parent(); t && t.length; ) {
    if (t.is(e))
      return t;
    t = t.parent();
  }
  return Ke();
};
Be.prototype.next = function(e) {
  if (!this[0])
    return Ke();
  var t = Ke(this[0].nextSibling);
  if (!arguments.length)
    return t;
  for (; t && t.length; ) {
    if (t.is(e))
      return t;
    t = t.next();
  }
  return Ke();
};
Be.prototype.prev = function() {
  return this[0] ? Ke(this[0].previousSibling) : Ke();
};
Be.prototype.add = function(e) {
  for (var t = Ke(e), i = this.toArray(), n = 0; n < t.length; n++) {
    var r = t[n];
    i.indexOf(r) === -1 && i.push(r);
  }
  return Ke(i);
};
var w_ = [];
Be.prototype.splice = function() {
  return Ke(w_.splice.apply(this, arguments));
};
Be.prototype.slice = function() {
  return Ke(w_.slice.apply(this, arguments));
};
Be.prototype.toArray = function() {
  return w_.slice.call(this);
};
Be.prototype.offset = function() {
  if (this[0])
    return Gf(this[0]);
};
Be.prototype.offsetParent = function() {
  if (!this[0])
    return Ke();
  for (var e = Ke(this[0].offsetParent); e[0] && e.css("position") === "static"; )
    e = Ke(e[0].offsetParent);
  return e = e[0] ? e : Ke(ee.getDocumentElement()), e;
};
Be.prototype.position = function() {
  if (this[0]) {
    var e, t = parseFloat(this.css("marginTop")), i = parseFloat(this.css("marginLeft"));
    if (this.css("position") === "fixed")
      return e = this[0].getBoundingClientRect(), {
        top: e.top - t,
        left: e.left - i
      };
    e = this.offset();
    var n = this.offsetParent(), r = {
      top: 0,
      left: 0
    };
    return n[0].nodeName !== "HTML" && (r = n.offset()), r = {
      top: r.top + parseFloat(n.css("borderTopWidth")),
      left: r.left + parseFloat(n.css("borderLeftWidth"))
    }, {
      top: e.top - r.top - t,
      left: e.left - r.left - i
    };
  }
};
[{
  name: "scrollLeft",
  offsetProp: "pageXOffset",
  scrollWindow: function(e, t) {
    e.scrollTo(t, e.pageYOffset);
  }
}, {
  name: "scrollTop",
  offsetProp: "pageYOffset",
  scrollWindow: function(e, t) {
    e.scrollTo(e.pageXOffset, t);
  }
}].forEach(function(e) {
  var t = e.name;
  Be.prototype[t] = function(i) {
    if (this[0]) {
      var n = vw(this[0]);
      return i === void 0 ? n ? n[e.offsetProp] : this[0][t] : (n ? e.scrollWindow(n, i) : this[0][t] = i, this);
    }
  };
});
Be.prototype.data = function(e, t) {
  if (this[0])
    return arguments.length < 2 ? dt.call(Ke, this[0], e) : (dt.call(Ke, this[0], e, t), this);
};
Be.prototype.removeData = function(e) {
  return this[0] && gc(this[0], e), this;
};
var xw = function() {
  return Ke.apply(this, arguments);
};
Object.defineProperty(xw, "fn", {
  enumerable: !0,
  configurable: !0,
  get: function() {
    return Ke.fn;
  },
  set: function(e) {
    Ke.fn = e;
  }
});
const _F = {
  set: function(e) {
    Ke = e;
  },
  get: function() {
    return xw;
  }
}, g = _F.get(), yw = new f_();
var Wi = function(e, t) {
  var i = {};
  "noBubble" in t && (i.noBubble = t.noBubble), "bindType" in t && (i.bindType = t.bindType), "delegateType" in t && (i.delegateType = t.delegateType), B(["setup", "teardown", "add", "remove", "trigger", "handle", "_default", "dispose"], function(n, r) {
    t[r] && (i[r] = function() {
      var a = [].slice.call(arguments);
      return a.unshift(this), t[r].apply(t, a);
    });
  }), g_.fire(e, i);
};
Wi.callbacks = g_;
var Sn = "dxremove", Uf = "dxRemoveEvent";
iF(function(e) {
  e = [].slice.call(e);
  for (var t = 0; t < e.length; t++) {
    var i = g(e[t]);
    i.prop(Uf) && (i[0][Uf] = null, w.triggerHandler(i, Sn));
  }
});
Wi(Sn, {
  noBubble: !0,
  setup: function(e) {
    g(e).prop(Uf, !0);
  }
});
var Ih = "dxComponents", vF = "dxPrivateComponent", tu = /* @__PURE__ */ new WeakMap(), mF = 0, ml = function(e, t) {
  if (x(t)) {
    tu.set(e, t);
    return;
  }
  if (!tu.has(e)) {
    var i = vF + mF++;
    return tu.set(e, i), i;
  }
  return tu.get(e);
};
function bw(e, t, i) {
  var n = dt(e.get(0)), r = ml(t.constructor);
  n[r] = t, i && w.one(e, Sn, function() {
    i.call(t);
  }), n[Ih] || (n[Ih] = []), n[Ih].push(r);
}
function Sw(e, t) {
  var i = ml(t);
  return dt(e.get(0), i);
}
var We = function(e, t, i) {
  i ? t[e] = i : i = t, ml(i, e), yw.fire(e, i);
}, CF = function(e, t) {
  g.fn[e] = function(i) {
    var n = typeof i == "string", r;
    if (n) {
      var a = i, o = [].slice.call(arguments).slice(1);
      this.each(function() {
        var s = t.getInstance(this);
        if (!s)
          throw Je.Error("E0009", e);
        var l = s[a], u = l.apply(s, o);
        r === void 0 && (r = u);
      });
    } else
      this.each(function() {
        var s = t.getInstance(this);
        s ? s.option(i) : new t(this, i);
      }), r = this;
    return r;
  };
};
yw.add(CF);
var xF = _l(), yF = /(webkit)[ /]([\w.]+)/, bF = /(mozilla)(?:.*? rv:([\w.]+))/, tC = (e) => {
  e = e.toLowerCase();
  var t = {}, i = yF.exec(e) || e.indexOf("compatible") < 0 && bF.exec(e) || [], n = i[1], r = i[2];
  return n === "webkit" && (t.webkit = !0, e.indexOf("chrome") >= 0 || e.indexOf("crios") >= 0 ? (n = "chrome", r = /(?:chrome|crios)\/(\d+\.\d+)/.exec(e), r = r && r[1]) : e.indexOf("fxios") >= 0 ? (n = "mozilla", r = /fxios\/(\d+\.\d+)/.exec(e), r = r && r[1]) : e.indexOf("safari") >= 0 && /version|phantomjs/.test(e) ? (n = "safari", r = /(?:version|phantomjs)\/([0-9.]+)/.exec(e), r = r && r[1]) : (n = "unknown", r = /applewebkit\/([0-9.]+)/.exec(e), r = r && r[1])), n && (t[n] = !0, t.version = r), t;
};
const lt = T({
  _fromUA: tC
}, tC(xF.userAgent));
class _i {
  constructor(t, i) {
    i = i || {}, this._action = t, this._context = i.context || ke(), this._beforeExecute = i.beforeExecute, this._afterExecute = i.afterExecute, this._component = i.component, this._validatingTargetName = i.validatingTargetName;
    var n = this._excludeValidators = {};
    if (i.excludeValidators)
      for (var r = 0; r < i.excludeValidators.length; r++)
        n[i.excludeValidators[r]] = !0;
  }
  execute() {
    var t = {
      action: this._action,
      args: Array.prototype.slice.call(arguments),
      context: this._context,
      component: this._component,
      validatingTargetName: this._validatingTargetName,
      cancel: !1,
      handled: !1
    }, i = this._beforeExecute, n = this._afterExecute, r = t.args[0] || {};
    if (this._validateAction(t) && (i == null || i.call(this._context, t), !t.cancel)) {
      var a = this._executeAction(t);
      if (!r.cancel)
        return n == null || n.call(this._context, t), a;
    }
  }
  _validateAction(t) {
    var i = this._excludeValidators, {
      executors: n
    } = _i;
    for (var r in n)
      if (!i[r]) {
        var a, o = n[r];
        if ((a = o.validate) === null || a === void 0 || a.call(o, t), t.cancel)
          return !1;
      }
    return !0;
  }
  _executeAction(t) {
    var i, {
      executors: n
    } = _i;
    for (var r in n) {
      var a, o = n[r];
      if ((a = o.execute) === null || a === void 0 || a.call(o, t), t.handled) {
        i = t.result;
        break;
      }
    }
    return i;
  }
  static registerExecutor(t, i) {
    if (Me(t)) {
      B(t, _i.registerExecutor);
      return;
    }
    _i.executors[t] = i;
  }
  static unregisterExecutor() {
    for (var t = arguments.length, i = new Array(t), n = 0; n < t; n++)
      i[n] = arguments[n];
    B(i, function() {
      delete _i.executors[this];
    });
  }
}
_i.executors = {};
var iC = (e) => (t) => {
  if (t.args.length) {
    var i = t.args[0], n = i[t.validatingTargetName] || i.element;
    n && e(g(n)) && (t.cancel = !0);
  }
};
_i.registerExecutor({
  disabled: {
    validate: iC((e) => e.is(".dx-state-disabled, .dx-state-disabled *"))
  },
  readOnly: {
    validate: iC((e) => e.is(".dx-state-readonly, .dx-state-readonly *:not(.dx-state-independent)"))
  },
  undefined: {
    execute: (e) => {
      e.action || (e.result = void 0, e.handled = !0);
    }
  },
  func: {
    execute: (e) => {
      ce(e.action) && (e.result = e.action.call(e.context, e.args[0]), e.handled = !0);
    }
  }
});
var Th = [], SF = ir(() => {
  var e = ee.listen(ee.getDocument(), "DOMContentLoaded", () => {
    Ew.fire(), e();
  });
}), Ew = {
  add: (e) => {
    var t = Re();
    t && ee.getReadyState() !== "loading" ? e() : (Th.push(e), t && SF());
  },
  fire: () => {
    Th.forEach((e) => e()), Th = [];
  }
};
const En = zi(Ew);
var ma = function() {
  var e, t = qe(), i = t.add, n = t.remove;
  if (!Re())
    return t;
  var r = function() {
    var l = ke();
    return {
      width: l.innerWidth,
      height: l.innerHeight
    };
  }, a = function() {
    var l = r();
    if (!(l.width === e.width && l.height === e.height)) {
      var u;
      l.width === e.width && (u = "height"), l.height === e.height && (u = "width"), e = l, t.fire(u);
    }
  }, o = ir(function() {
    e = r();
  }), s;
  return t.add = function() {
    var l = i.apply(t, arguments);
    return o(), En.add(function() {
      !s && t.has() && (s = ee.listen(ke(), "resize", a));
    }), l;
  }, t.remove = function() {
    var l = n.apply(t, arguments);
    return !t.has() && s && (s(), s = void 0), l;
  }, t;
}(), EF = function(e, t) {
  return 1 / e === 1 / t;
}, wF = function(e, t) {
  if (e = bt(e, !0), t = bt(t, !0), e && t && wi(e) && wi(t))
    return t.is(e);
  var i = e !== e, n = t !== t;
  return i && n ? !0 : e === 0 && t === 0 ? EF(e, t) : e === null || typeof e != "object" || ee.isElementNode(e) ? e === t : !1;
};
class Pa {
  constructor(t) {
    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this._events = {}, this._owner = t, this._options = i;
  }
  static create(t, i) {
    return i ? ce(i) ? i(t) : i : new Pa(t);
  }
  hasEvent(t) {
    var i = this._events[t];
    return i ? i.has() : !1;
  }
  fireEvent(t, i) {
    var n = this._events[t];
    return n && n.fireWith(this._owner, i), this._owner;
  }
  on(t, i) {
    if (Me(t))
      B(t, (a, o) => {
        this.on(a, o);
      });
    else {
      var n = this._events[t];
      n || (n = qe({
        syncStrategy: this._options.syncStrategy
      }), this._events[t] = n);
      var r = n.originalAdd || n.add;
      r.call(n, i);
    }
  }
  off(t, i) {
    var n = this._events[t];
    n && (ce(i) ? n.remove(i) : n.empty());
  }
  dispose() {
    B(this._events, (t, i) => {
      i.empty();
    });
  }
}
var IF = ke(), ww = function() {
  var e;
  try {
    e = IF.sessionStorage;
  } catch {
  }
  return e;
}, TF = En.add, _c = qe(), Iw = g(), Ar = function() {
  var e;
  return function(t) {
    if (!arguments.length)
      return e;
    var i = g(t);
    Iw = i;
    var n = !!i.length, r = Ar();
    e = n ? i : g("body"), _c.fire(n ? Ar() : g(), r);
  };
}();
TF(function() {
  Ar(".dx-viewport");
});
function Tw() {
  return Iw;
}
var DF = _l(), Dw = ke(), AF = {
  iPhone: "iPhone",
  iPhone5: "iPhone",
  iPhone6: "iPhone",
  iPhone6plus: "iPhone",
  iPad: "iPad",
  iPadMini: "iPad Mini",
  androidPhone: "Android Mobile",
  androidTablet: "Android",
  msSurface: "Windows ARM Tablet PC",
  desktop: "desktop"
}, nC = {
  deviceType: "desktop",
  platform: "generic",
  version: [],
  phone: !1,
  tablet: !1,
  android: !1,
  ios: !1,
  generic: !0,
  grade: "A",
  mac: !1
}, OF = {
  generic(e) {
    var t = /windows phone/i.test(e) || e.match(/WPDesktop/), i = !t && /Windows(.*)arm(.*)Tablet PC/i.test(e), n = !t && !i && /msapphost/i.test(e), r = /((intel|ppc) mac os x)/.test(e.toLowerCase());
    if (t || i || n || r)
      return {
        deviceType: t ? "phone" : i ? "tablet" : "desktop",
        platform: "generic",
        version: [],
        grade: "A",
        mac: r
      };
  },
  ios(e) {
    if (/ip(hone|od|ad)/i.test(e)) {
      var t = /ip(hone|od)/i.test(e), i = e.match(/os (\d+)_(\d+)_?(\d+)?/i), n = i ? [parseInt(i[1], 10), parseInt(i[2], 10), parseInt(i[3] || 0, 10)] : [], r = Dw.screen.height === 480, a = r ? "B" : "A";
      return {
        deviceType: t ? "phone" : "tablet",
        platform: "ios",
        version: n,
        grade: a
      };
    }
  },
  android(e) {
    if (/android|htc_|silk/i.test(e)) {
      var t = /mobile/i.test(e), i = e.match(/android (\d+)\.?(\d+)?\.?(\d+)?/i), n = i ? [parseInt(i[1], 10), parseInt(i[2] || 0, 10), parseInt(i[3] || 0, 10)] : [], r = n.length > 1 && (n[0] < 4 || n[0] === 4 && n[1] < 4), a = r ? "B" : "A";
      return {
        deviceType: t ? "phone" : "tablet",
        platform: "android",
        version: n,
        grade: a
      };
    }
  }
};
class RF {
  constructor(t) {
    this._window = (t == null ? void 0 : t.window) || Dw, this._realDevice = this._getDevice(), this._currentDevice = void 0, this._currentOrientation = void 0, this._eventsStrategy = new Pa(this), this.changed = qe(), Re() && (En.add(this._recalculateOrientation.bind(this)), ma.add(this._recalculateOrientation.bind(this)));
  }
  current(t) {
    if (t) {
      this._currentDevice = this._getDevice(t), this._forced = !0, this.changed.fire();
      return;
    }
    if (!this._currentDevice) {
      t = void 0;
      try {
        t = this._getDeviceOrNameFromWindowScope();
      } catch {
        t = this._getDeviceNameFromSessionStorage();
      } finally {
        t || (t = this._getDeviceNameFromSessionStorage()), t && (this._forced = !0);
      }
      this._currentDevice = this._getDevice(t);
    }
    return this._currentDevice;
  }
  real(t) {
    return T({}, this._realDevice);
  }
  orientation() {
    return this._currentOrientation;
  }
  isForced() {
    return this._forced;
  }
  isRippleEmulator() {
    return !!this._window.tinyHippos;
  }
  _getCssClasses(t) {
    var i = [], n = this._realDevice;
    return t = t || this.current(), t.deviceType && (i.push("dx-device-".concat(t.deviceType)), t.deviceType !== "desktop" && i.push("dx-device-mobile")), i.push("dx-device-".concat(n.platform)), n.version && n.version.length && i.push("dx-device-".concat(n.platform, "-").concat(n.version[0])), this.isSimulator() && i.push("dx-simulator"), st().rtlEnabled && i.push("dx-rtl"), i;
  }
  attachCssClasses(t, i) {
    this._deviceClasses = this._getCssClasses(i).join(" "), g(t).addClass(this._deviceClasses);
  }
  detachCssClasses(t) {
    g(t).removeClass(this._deviceClasses);
  }
  isSimulator() {
    try {
      return this._isSimulator || Re() && this._window.top !== this._window.self && this._window.top["dx-force-device"] || this.isRippleEmulator();
    } catch {
      return !1;
    }
  }
  forceSimulator() {
    this._isSimulator = !0;
  }
  _getDevice(t) {
    if (t === "genericPhone" && (t = {
      deviceType: "phone",
      platform: "generic",
      generic: !0
    }), Me(t))
      return this._fromConfig(t);
    var i;
    if (t) {
      if (i = AF[t], !i)
        throw Je.Error("E0005");
    } else
      i = DF.userAgent;
    return this._fromUA(i);
  }
  _getDeviceOrNameFromWindowScope() {
    var t;
    return Re() && (this._window.top["dx-force-device-object"] || this._window.top["dx-force-device"]) && (t = this._window.top["dx-force-device-object"] || this._window.top["dx-force-device"]), t;
  }
  _getDeviceNameFromSessionStorage() {
    var t = ww();
    if (t) {
      var i = t.getItem("dx-force-device");
      try {
        return JSON.parse(i);
      } catch {
        return i;
      }
    }
  }
  _fromConfig(t) {
    var i = T({}, nC, this._currentDevice, t), n = {
      phone: i.deviceType === "phone",
      tablet: i.deviceType === "tablet",
      android: i.platform === "android",
      ios: i.platform === "ios",
      generic: i.platform === "generic"
    };
    return T(i, n);
  }
  _fromUA(t) {
    var i;
    return B(OF, (n, r) => (i = r(t), !i)), i ? this._fromConfig(i) : nC;
  }
  _changeOrientation() {
    var t = g(this._window), i = Fe(t) > Ae(t) ? "portrait" : "landscape";
    this._currentOrientation !== i && (this._currentOrientation = i, this._eventsStrategy.fireEvent("orientationChanged", [{
      orientation: i
    }]));
  }
  _recalculateOrientation() {
    var t = Ae(this._window);
    this._currentWidth !== t && (this._currentWidth = t, this._changeOrientation());
  }
  on(t, i) {
    return this._eventsStrategy.on(t, i), this;
  }
  off(t, i) {
    return this._eventsStrategy.off(t, i), this;
  }
}
var ve = new RF(), rC = Ar();
rC && ve.attachCssClasses(rC);
_c.add((e, t) => {
  ve.detachCssClasses(t), ve.attachCssClasses(e);
});
var Dh = {}, Ro = (e) => {
  var t = ve.current();
  return e.reduce((i, n) => {
    var {
      device: r,
      options: a
    } = n, o = r || {}, s = ce(o) ? o(t) : kF(t, o);
    return s && T(!0, i, a), i;
  }, {});
}, BF = (e, t) => typeof e != "string" ? e : {
  [e]: t
}, kF = (e, t) => $i(t) || JE(e, [t]).length > 0, aC = (e) => e.substr(e.lastIndexOf(".") + 1), oC = (e) => e.substr(0, e.lastIndexOf(".")), FF = function(e, t) {
  return Dh[t] = Dh[t] || tt(t), Dh[t](e, {
    functionsAsIs: !0
  });
}, PF = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return e;
}, Ah = {}, Oh = {};
class MF {
  constructor(t, i) {
    this._options = t, this._optionsByReference = i, this._changingCallback, this._changedCallback, this._namePreparedCallbacks;
  }
  _setByReference(t, i) {
    T(!0, t, i);
    for (var n in this._optionsByReference)
      Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);
  }
  _setPreparedValue(t, i, n, r) {
    var a = this.get(this._options, t, !1);
    if (!wF(a, i)) {
      var o = ka(t);
      !r && this._changingCallback(t, a, i), Oh[t] = Oh[t] || h_(t), Oh[t](this._options, i, {
        functionsAsIs: !0,
        merge: x(n) ? n : !this._optionsByReference[t],
        unwrapObservables: o.length > 1 && !!this._optionsByReference[o[0]]
      }), !r && this._changedCallback(t, i, a);
    }
  }
  _prepareRelevantNames(t, i, n, r) {
    if (Me(n))
      for (var a in n)
        this._prepareRelevantNames(t, "".concat(i, ".").concat(a), n[a]);
    this._namePreparedCallbacks(t, i, n, r);
  }
  get() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._options, i = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length > 2 ? arguments[2] : void 0;
    return Ah[i] = Ah[i] || tt(i), Ah[i](t, {
      functionsAsIs: !0,
      unwrapObservables: n
    });
  }
  set(t, i, n, r) {
    t = BF(t, i);
    for (var a in t)
      this._prepareRelevantNames(t, a, t[a], r);
    for (var o in t)
      this._setPreparedValue(o, t[o], n, r);
  }
  onRelevantNamesPrepared(t) {
    this._namePreparedCallbacks = t;
  }
  onChanging(t) {
    this._changingCallback = t;
  }
  onChanged(t) {
    this._changedCallback = t;
  }
  dispose() {
    this._changingCallback = $, this._changedCallback = $;
  }
}
class LF {
  constructor(t, i, n, r) {
    this._deprecatedCallback, this._startChangeCallback, this._endChangeCallback, this._default = i, this._deprecated = r, this._deprecatedNames = [], this._initDeprecatedNames(), this._optionManager = new MF(t, n), this._optionManager.onRelevantNamesPrepared((a, o, s, l) => this._setRelevantNames(a, o, s, l)), this._cachedOptions = {}, this._rules = [];
  }
  set _initial(t) {
    this._initialOptions = t;
  }
  get _initial() {
    if (!this._initialOptions) {
      var t = this._getByRules(this.silent("defaultOptionsRules"));
      this._initialOptions = this._default, this._optionManager._setByReference(this._initialOptions, t);
    }
    return this._initialOptions;
  }
  _initDeprecatedNames() {
    for (var t in this._deprecated)
      this._deprecatedNames.push(t);
  }
  _getByRules(t) {
    return t = Array.isArray(t) ? this._rules.concat(t) : this._rules, Ro(t);
  }
  _notifyDeprecated(t) {
    var i = this._deprecated[t];
    i && this._deprecatedCallback(t, i);
  }
  _setRelevantNames(t, i, n, r) {
    if (i) {
      var a = this._normalizeName(i, r);
      a && a !== i && (this._setField(t, a, n), this._clearField(t, i));
    }
  }
  _setField(t, i, n) {
    var r = "", a = null;
    do
      r = r ? ".".concat(r) : "", r = aC(i) + r, i = oC(i), a = i ? this._optionManager.get(t, i, !1) : t;
    while (!a);
    a[r] = n;
  }
  _clearField(t, i) {
    delete t[i];
    var n = oC(i), r = n ? this._optionManager.get(t, n, !1) : t;
    r && delete r[aC(i)];
  }
  _normalizeName(t, i) {
    if (this._deprecatedNames.length && t) {
      for (var n = 0; n < this._deprecatedNames.length; n++)
        if (this._deprecatedNames[n] === t) {
          var r = this._deprecated[t];
          if (r)
            return !i && this._notifyDeprecated(t), r.alias || t;
        }
    }
    return t;
  }
  addRules(t) {
    this._rules = t.concat(this._rules);
  }
  applyRules(t) {
    var i = this._getByRules(t);
    this.silent(i);
  }
  dispose() {
    this._deprecatedCallback = $, this._startChangeCallback = $, this._endChangeCallback = $, this._optionManager.dispose();
  }
  onChanging(t) {
    this._optionManager.onChanging(t);
  }
  onChanged(t) {
    this._optionManager.onChanged(t);
  }
  onDeprecated(t) {
    this._deprecatedCallback = t;
  }
  onStartChange(t) {
    this._startChangeCallback = t;
  }
  onEndChange(t) {
    this._endChangeCallback = t;
  }
  isInitial(t) {
    var i = this.silent(t), n = this.initial(t), r = ce(i) && ce(n);
    return r ? i.toString() === n.toString() : et(i, n);
  }
  initial(t) {
    return FF(this._initial, t);
  }
  option(t, i) {
    var n = arguments.length < 2 && Ei(t) !== "object";
    if (n)
      return this._optionManager.get(void 0, this._normalizeName(t));
    this._startChangeCallback();
    try {
      this._optionManager.set(t, i);
    } finally {
      this._endChangeCallback();
    }
  }
  silent(t, i) {
    var n = arguments.length < 2 && Ei(t) !== "object";
    if (n)
      return this._optionManager.get(void 0, t, void 0, !0);
    this._optionManager.set(t, i, void 0, !0);
  }
  reset(t) {
    if (t) {
      var i = ka(t), n = i.reduce((a, o) => a ? a[o] : this.initial(o), null), r = De(n) ? ue({}, n) : n;
      this._optionManager.set(t, r, !1);
    }
  }
  getAliasesByName(t) {
    return Object.keys(this._deprecated).filter((i) => t === this._deprecated[i].alias);
  }
  isDeprecated(t) {
    return Object.prototype.hasOwnProperty.call(this._deprecated, t);
  }
  cache(t, i) {
    var n = arguments.length < 2;
    if (n)
      return this._cachedOptions[t];
    this._cachedOptions[t] = T(this._cachedOptions[t], i);
  }
}
class VF {
  constructor() {
    this._postponedOperations = {};
  }
  add(t, i, n) {
    if (t in this._postponedOperations)
      n && this._postponedOperations[t].promises.push(n);
    else {
      var r = new U();
      this._postponedOperations[t] = {
        fn: i,
        completePromise: r,
        promises: n ? [n] : []
      };
    }
    return this._postponedOperations[t].completePromise.promise();
  }
  callPostponedOperations() {
    for (var t in this._postponedOperations) {
      var i = this._postponedOperations[t];
      x(i) && (i.promises && i.promises.length ? ge(...i.promises).done(i.fn).then(i.completePromise.resolve) : i.fn().done(i.completePromise.resolve));
    }
    this._postponedOperations = {};
  }
}
var sC = (e) => e.charAt(2).toLowerCase() + e.substr(3), NF = (e) => e.indexOf("_", 0) === 0, I_ = ze.inherit({
  _setDeprecatedOptions() {
    this._deprecatedOptions = {};
  },
  _getDeprecatedOptions() {
    return this._deprecatedOptions;
  },
  _getDefaultOptions: () => ({
    onInitialized: null,
    onOptionChanged: null,
    onDisposing: null,
    defaultOptionsRules: null
  }),
  _defaultOptionsRules: () => [],
  _setOptionsByDevice(e) {
    this._options.applyRules(e);
  },
  _convertRulesToOptions: (e) => Ro(e),
  _isInitialOptionValue(e) {
    return this._options.isInitial(e);
  },
  _setOptionsByReference() {
    this._optionsByReference = {};
  },
  _getOptionsByReference() {
    return this._optionsByReference;
  },
  ctor() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, {
      _optionChangedCallbacks: t,
      _disposingCallbacks: i
    } = e;
    this.NAME = ml(this.constructor), this._eventsStrategy = Pa.create(this, e.eventsStrategy), this._updateLockCount = 0, this._optionChangedCallbacks = t || qe(), this._disposingCallbacks = i || qe(), this.postponedOperations = new VF(), this._createOptions(e);
  },
  _createOptions(e) {
    this.beginUpdate();
    try {
      this._setOptionsByReference(), this._setDeprecatedOptions(), this._options = new LF(this._getDefaultOptions(), this._getDefaultOptions(), this._getOptionsByReference(), this._getDeprecatedOptions()), this._options.onChanging((t, i, n) => this._initialized && this._optionChanging(t, i, n)), this._options.onDeprecated((t, i) => this._logDeprecatedOptionWarning(t, i)), this._options.onChanged((t, i, n) => this._notifyOptionChanged(t, i, n)), this._options.onStartChange(() => this.beginUpdate()), this._options.onEndChange(() => this.endUpdate()), this._options.addRules(this._defaultOptionsRules()), e && e.onInitializing && e.onInitializing.apply(this, [e]), this._setOptionsByDevice(e.defaultOptionsRules), this._initOptions(e);
    } finally {
      this.endUpdate();
    }
  },
  _initOptions(e) {
    this.option(e);
  },
  _init() {
    this._createOptionChangedAction(), this.on("disposing", (e) => {
      this._disposingCallbacks.fireWith(this, [e]);
    });
  },
  _logDeprecatedOptionWarning(e, t) {
    var i = t.message || "Use the '".concat(t.alias, "' option instead");
    Je.log("W0001", this.NAME, e, t.since, i);
  },
  _logDeprecatedComponentWarning(e, t) {
    Je.log("W0000", this.NAME, e, "Use the '".concat(t, "' widget instead"));
  },
  _createOptionChangedAction() {
    this._optionChangedAction = this._createActionByOption("onOptionChanged", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _createDisposingAction() {
    this._disposingAction = this._createActionByOption("onDisposing", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _optionChanged(e) {
    switch (e.name) {
      case "onDisposing":
      case "onInitialized":
        break;
      case "onOptionChanged":
        this._createOptionChangedAction();
    }
  },
  _dispose() {
    this._optionChangedCallbacks.empty(), this._createDisposingAction(), this._disposingAction(), this._eventsStrategy.dispose(), this._options.dispose(), this._disposed = !0;
  },
  _lockUpdate() {
    this._updateLockCount++;
  },
  _unlockUpdate() {
    this._updateLockCount = Math.max(this._updateLockCount - 1, 0);
  },
  _isUpdateAllowed() {
    return this._updateLockCount === 0;
  },
  _isInitializingRequired() {
    return !this._initializing && !this._initialized;
  },
  isInitialized() {
    return this._initialized;
  },
  _commitUpdate() {
    this.postponedOperations.callPostponedOperations(), this._isInitializingRequired() && this._initializeComponent();
  },
  _initializeComponent() {
    this._initializing = !0;
    try {
      this._init();
    } finally {
      this._initializing = !1, this._lockUpdate(), this._createActionByOption("onInitialized", {
        excludeValidators: ["disabled", "readOnly"]
      })(), this._unlockUpdate(), this._initialized = !0;
    }
  },
  instance() {
    return this;
  },
  beginUpdate: function() {
    this._lockUpdate();
  },
  endUpdate: function() {
    this._unlockUpdate(), this._isUpdateAllowed() && this._commitUpdate();
  },
  _optionChanging: $,
  _notifyOptionChanged(e, t, i) {
    if (this._initialized)
      for (var n = [e].concat(this._options.getAliasesByName(e)), r = 0; r < n.length; r++) {
        var a = n[r], o = {
          name: ka(a)[0],
          fullName: a,
          value: t,
          previousValue: i
        };
        NF(a) || (this._optionChangedCallbacks.fireWith(this, [T(this._defaultActionArgs(), o)]), this._optionChangedAction(T({}, o))), !this._disposed && this._cancelOptionChange !== a && this._optionChanged(o);
      }
  },
  initialOption(e) {
    return this._options.initial(e);
  },
  _defaultActionConfig() {
    return {
      context: this,
      component: this
    };
  },
  _defaultActionArgs() {
    return {
      component: this
    };
  },
  _createAction(e, t) {
    var i;
    return (n) => (x(n) || (n = {}), Me(n) || (n = {
      actionValue: n
    }), i = i || new _i(e, T(t, this._defaultActionConfig())), i.execute.call(i, T(n, this._defaultActionArgs())));
  },
  _createActionByOption(e, t) {
    var i = this, n, r, a, o = function() {
      if (!r) {
        if (t = t || {}, typeof e != "string")
          throw Je.Error("E0008");
        e.indexOf("on") === 0 && (r = sC(e)), a = i.option(e);
      }
      if (!(!n && !a && !t.beforeExecute && !t.afterExecute && !i._eventsStrategy.hasEvent(r))) {
        if (!n) {
          var l = t.beforeExecute;
          t.beforeExecute = function() {
            for (var f = arguments.length, v = new Array(f), m = 0; m < f; m++)
              v[m] = arguments[m];
            l && l.apply(i, v), i._eventsStrategy.fireEvent(r, v[0].args);
          }, n = i._createAction(a, t);
        }
        for (var u = arguments.length, d = new Array(u), c = 0; c < u; c++)
          d[c] = arguments[c];
        if (st().wrapActionsBeforeExecute) {
          var h = i.option("beforeActionExecute") || $, p = h(i, n, t) || n;
          return p.apply(i, d);
        }
        return n.apply(i, d);
      }
    };
    if (st().wrapActionsBeforeExecute)
      return o;
    var s = this.option("onActionCreated") || $;
    return s(this, o, t) || o;
  },
  on(e, t) {
    return this._eventsStrategy.on(e, t), this;
  },
  off(e, t) {
    return this._eventsStrategy.off(e, t), this;
  },
  hasActionSubscription: function(e) {
    return !!this._options.silent(e) || this._eventsStrategy.hasEvent(sC(e));
  },
  isOptionDeprecated(e) {
    return this._options.isDeprecated(e);
  },
  _setOptionWithoutOptionChange(e, t) {
    this._cancelOptionChange = e, this.option(e, t), this._cancelOptionChange = !1;
  },
  _getOptionValue(e, t) {
    var i = this.option(e);
    return ce(i) ? i.bind(t)() : i;
  },
  option() {
    return this._options.option(...arguments);
  },
  resetOption(e) {
    this.beginUpdate(), this._options.reset(e), this.endUpdate();
  }
}), T_ = ke(), $F = (e) => {
  if (e.getRootNode) {
    var t = e.getRootNode().host;
    if (!Te(t))
      return t;
  }
}, Go = () => {
  var e = ee.getActiveElement();
  if (e && e !== ee.getBody()) {
    var t;
    (t = e.blur) === null || t === void 0 || t.call(e);
  }
}, HF = () => {
  var e = T_.getSelection();
  if (e && e.type !== "Caret") {
    if (e.empty)
      e.empty();
    else if (e.removeAllRanges)
      try {
        e.removeAllRanges();
      } catch {
      }
  }
}, zF = (e, t) => {
  var i = g(e), n = g(t);
  if (i[0] === n[0])
    return i[0];
  for (var r = i.parents(), a = n.parents(), o = Math.min(r.length, a.length), s = -o; s < 0; s++)
    if (r.get(s) === a.get(s))
      return r.get(s);
}, Ma = (e) => {
  e = g(e);
  var t = e.length && e.filter(function() {
    var i = g(this);
    return i.is("script[type]") && i.attr("type").indexOf("script") < 0;
  });
  return t.length ? t.eq(0).html() : (e = g("<div>").append(e), e.html());
}, vc = (e) => {
  var t = x(e) && (e.nodeType || wi(e)) ? g(e) : g("<div>").html(e).contents();
  return t.length === 1 && (t.is("script") ? t = vc(t.html().trim()) : t.is("table") && (t = t.children("tbody").contents())), t;
}, jf = (e, t) => {
  var i = e.originalEvent && e.originalEvent.clipboardData || T_.clipboardData;
  if (!t)
    return i && i.getData("Text");
  i && i.setData("Text", t);
}, Hn = (e, t) => t ? Ct(e) ? Hn(e.document, t) : e.contains(t) || Hn(e, $F(t)) : !1, WF = (e, t, i) => {
  var n = T_.getComputedStyle(g(e).get(0)), r = i && i.includePaddings;
  return g("<div>").text(t).css({
    fontStyle: n.fontStyle,
    fontVariant: n.fontVariant,
    fontWeight: n.fontWeight,
    fontSize: n.fontSize,
    fontFamily: n.fontFamily,
    letterSpacing: n.letterSpacing,
    border: n.border,
    paddingTop: r ? n.paddingTop : "",
    paddingRight: r ? n.paddingRight : "",
    paddingBottom: r ? n.paddingBottom : "",
    paddingLeft: r ? n.paddingLeft : "",
    visibility: "hidden",
    whiteSpace: "pre",
    position: "absolute",
    float: "left"
  });
}, GF = (e, t) => (t && ee.insertElement(e.parentNode, t, e), e), KF = (e, t) => {
  if (t && t[0])
    return t.is(e) ? e : (B(t, (i, n) => {
      GF(e[0], n);
    }), e.remove(), t);
}, mc = (e) => {
  var t = e == null ? void 0 : e.get(0), i = t == null ? void 0 : t.getRootNode().host;
  return !!g(i || t).closest(ke().document).length;
}, D_ = function(e) {
  return function(t) {
    for (var i = g(t || "body"), n = i.filter(".dx-visibility-change-handler").add(i.find(".dx-visibility-change-handler")), r = 0; r < n.length; r++)
      w.triggerHandler(n[r], e);
  };
}, A_ = D_("dxshown"), UF = D_("dxhiding"), _n = D_("dxresize"), jF = qe({
  syncStrategy: !0
});
class La {
  render(t) {
    t = t || {};
    var i = t.onRendered;
    delete t.onRendered;
    var n;
    return t.renovated && t.transclude && this._element ? n = g("<div>").append(this._element).contents() : n = this._renderCore(t), this._ensureResultInContainer(n, t.container), jF.fire(n, t.container), i && i(), n;
  }
  _ensureResultInContainer(t, i) {
    if (i) {
      var n = g(i), r = Hn(n.get(0), t.get(0));
      if (n.append(t), !r) {
        var a = ee.getBody().contains(n.get(0));
        a && A_(t);
      }
    }
  }
  _renderCore() {
    throw Je.Error("E0001");
  }
}
class Bo extends La {
  constructor(t) {
    super(), this._render = t;
  }
  _renderCore(t) {
    return vc(this._render(t));
  }
}
class da extends La {
  _renderCore() {
    return g();
  }
}
class O_ extends La {
  constructor(t) {
    super(), this.name = t;
  }
}
var Aw = {}, id;
function Lr(e, t) {
  Aw[e] = t;
}
function qF(e) {
  if (Te(e)) {
    if (id = Aw[e], !id)
      throw Je.Error("E0020", e);
  } else
    id = e;
}
function lC() {
  return id;
}
Lr("jquery-tmpl", {
  compile: (e) => Ma(e),
  render: (e, t) => jQuery.tmpl(e, t)
});
Lr("jsrender", {
  compile: (e) => (jQuery || jsrender).templates(Ma(e)),
  render: (e, t) => e.render(t)
});
Lr("mustache", {
  compile: (e) => Ma(e),
  render: (e, t) => Mustache.render(e, t)
});
Lr("hogan", {
  compile: (e) => Hogan.compile(Ma(e)),
  render: (e, t) => e.render(t)
});
Lr("underscore", {
  compile: (e) => _.template(Ma(e)),
  render: (e, t) => e(t)
});
Lr("handlebars", {
  compile: (e) => Handlebars.compile(Ma(e)),
  render: (e, t) => e(t)
});
Lr("doT", {
  compile: (e) => doT.template(Ma(e)),
  render: (e, t) => e(t)
});
Lr("default", {
  compile: (e) => vc(e),
  render: (e, t, i) => e.clone()
});
qF("default");
class XF extends La {
  constructor(t) {
    super(), this._element = t;
  }
  _renderCore(t) {
    var i = t.transclude;
    return !i && !this._compiledTemplate && (this._compiledTemplate = lC().compile(this._element)), g("<div>").append(i ? this._element : lC().render(this._compiledTemplate, t.model, t.index)).contents();
  }
  source() {
    return g(this._element).clone();
  }
}
function YF(e) {
  return e.reduce((t, i) => {
    var n, r = ((n = t.get(i)) !== null && n !== void 0 ? n : 0) + 1;
    return t.set(i, r), t;
  }, /* @__PURE__ */ new Map());
}
var ZF = function(e) {
  return Array.isArray(e) ? e : [e];
}, QF = function(e) {
  return [...new Set(e)];
}, uC = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], i = YF(t);
  return e.filter((n) => {
    var r = i.get(n);
    return r && i.set(n, r - 1), !r;
  });
}, Is = function(e, t, i, n) {
  var r = {}, {
    useLegacyVisibleIndex: a
  } = st(), o = 0, s = (l) => !x(l[t]) && (!n || n(l));
  e.forEach((l) => {
    var u = l[t];
    u >= 0 ? (r[u] = r[u] || [], l === i ? r[u].unshift(l) : r[u].push(l)) : l[t] = void 0;
  }), a || e.forEach((l) => {
    if (s(l)) {
      for (; r[o]; )
        o++;
      r[o] = [l], o++;
    }
  }), o = 0, Nf(r, function(l, u) {
    u.forEach((d) => {
      l >= 0 && (d[t] = o++);
    });
  }), a && e.forEach((l) => {
    s(l) && (l[t] = o++);
  });
}, JF = (e, t) => e.reduce((i, n) => {
  var r, a = t(n);
  return i[a] = (r = i[a]) !== null && r !== void 0 ? r : [], i[a].push(n), i;
}, {}), Ow = (e, t) => {
  var i = g(e).contents().filter("[".concat("data-options", '*="').concat(t, '"]'));
  return [].slice.call(i).map((n) => {
    var r = g(n).attr("data-options") || "";
    return {
      element: n,
      options: st().optionsParser(r)[t]
    };
  }).filter((n) => !!n.options);
}, eP = (e) => {
  var t = JF(e, (n) => n.options.name);
  if (t[void 0])
    throw Je.Error("E0023");
  var i = {};
  return Object.keys(t).forEach((n) => {
    var r, a = (r = JE(ve.current(), t[n], (o) => o.options)[0]) === null || r === void 0 ? void 0 : r.element;
    a && (i[n] = a);
  }), i;
}, Rw = (e) => {
  var t = e.render.bind(e);
  return T({}, e, {
    render(i) {
      var n = t(i);
      return i && i.onRendered && i.onRendered(), n;
    }
  });
}, tP = (e) => {
  var t = [];
  return "model" in e && t.push(e.model), "index" in e && t.push(e.index), t.push(e.container), t;
}, iP = (e) => typeof e == "string" ? vc(e) : e, dC = (e) => wi(e) && e[0] || e, nP = (e) => new XF(e), rP = (e, t, i, n) => {
  var r = null;
  return (!n || n.indexOf(e) === -1) && (r = t[e], r && !(r instanceof La) && !i && (r = Rw(r))), r;
}, cC = (e, t, i, n, r, a) => e == null ? new da() : e instanceof O_ ? a[e.name] : e instanceof La ? e : ce(e.render) && !wi(e) ? n ? e : Rw(e) : e.nodeType || wi(e) ? t(g(e)) : rP(e, i, n, r) || a[e] || t(e), aP = 3, oP = "template", sP = "dxTemplate", lP = "dx-template-wrapper", uP = new Bo((e) => {
  var {
    model: t,
    parent: i
  } = e, n = t.widget;
  if (!n)
    return g();
  var r = g("<div>"), a = t.options || {};
  return i ? i._createComponent(r, n, a) : r[n](a), r;
});
class hC {
  constructor(t, i) {
    this._tempTemplates = [], this._defaultTemplates = {}, this._anonymousTemplateName = i || oP, this._createElement = t || nP, this._createTemplateIfNeeded = this._createTemplateIfNeeded.bind(this);
  }
  static createDefaultOptions() {
    return {
      integrationOptions: {
        watchMethod: function(t, i) {
          var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return n.skipImmediate || i(t()), $;
        },
        templates: {
          "dx-polymorph-widget": uP
        },
        useDeferUpdateForTemplates: !0
      }
    };
  }
  get anonymousTemplateName() {
    return this._anonymousTemplateName;
  }
  addDefaultTemplates(t) {
    this._defaultTemplates = T({}, this._defaultTemplates, t);
  }
  dispose() {
    this._tempTemplates.forEach((t) => {
      t.template.dispose && t.template.dispose();
    }), this._tempTemplates = [];
  }
  extractTemplates(t) {
    var i = this._extractTemplates(t), n = this._extractAnonymousTemplate(t);
    return {
      templates: i,
      anonymousTemplateMeta: n
    };
  }
  _extractTemplates(t) {
    var i = Ow(t, sP), n = eP(i);
    return i.forEach((r) => {
      var {
        element: a,
        options: {
          name: o
        }
      } = r;
      a === n[o] ? g(a).addClass(lP).detach() : g(a).remove();
    }), Object.keys(n).map((r) => ({
      name: r,
      template: this._createTemplate(n[r])
    }));
  }
  _extractAnonymousTemplate(t) {
    var i = t.contents().detach(), n = i.filter((r, a) => {
      var o = a.nodeType === aP, s = g(a).text().trim().length < 1;
      return !(o && s);
    });
    return n.length > 0 ? {
      template: this._createTemplate(i),
      name: this._anonymousTemplateName
    } : {};
  }
  _createTemplateIfNeeded(t) {
    var i = this._tempTemplates.filter((r) => r.source === dC(t))[0];
    if (i)
      return i.template;
    var n = this._createTemplate(t);
    return this._tempTemplates.push({
      template: n,
      source: dC(t)
    }), n;
  }
  _createTemplate(t) {
    return this._createElement(iP(t));
  }
  getTemplate(t, i, n, r) {
    var {
      isAsyncTemplate: a,
      skipTemplates: o
    } = n;
    return ce(t) ? new Bo((s) => {
      var l = t.apply(r, tP(s));
      if (!x(l))
        return new da();
      var u = !1, d = cC(l, (h) => h.nodeType || wi(h) && !g(h).is("script") ? new Bo(() => h) : (u = !0, this._createTemplate(h)), i, a, o, this._defaultTemplates), c = d.render(s);
      return u && d.dispose && d.dispose(), c;
    }) : cC(t, this._createTemplateIfNeeded, i, a, o, this._defaultTemplates);
  }
}
var dP = function(e) {
  return e && e.get(0);
};
function Ie(e) {
  return dP(e);
}
var qf = (e, t) => {
  if (!t)
    throw Je.Error("E0017");
  return Array.isArray(e) ? e.map((i) => qf(i, t)).join(" ") : e.indexOf(" ") !== -1 ? qf(e.split(/\s+/g), t) : "".concat(e, ".").concat(t);
}, Bw = function(e, t) {
  if (!cP(e))
    return !1;
  var i = e.nodeName.toLowerCase(), n = !isNaN(t), r = e.disabled, a = /^(input|select|textarea|button|object|iframe)$/.test(i), o = i === "a", s, l = e.isContentEditable;
  return a || l ? s = !r : o ? s = e.href || n : s = n, s;
};
function cP(e) {
  var t = g(e);
  return t.is(":visible") && t.css("visibility") !== "hidden" && t.parents().css("visibility") !== "hidden";
}
var Xf = function(e, t) {
  return Bw(t, g(t).attr("tabIndex"));
}, pC = function(e, t) {
  var i = g(t).attr("tabIndex");
  return (isNaN(i) || i >= 0) && Bw(t, i);
}, Or = function(e) {
  var t = g(e).get(0);
  return ee.getActiveElement(t) === t;
}, hP = {
  backspace: "backspace",
  tab: "tab",
  enter: "enter",
  escape: "escape",
  pageup: "pageUp",
  pagedown: "pageDown",
  end: "end",
  home: "home",
  arrowleft: "leftArrow",
  arrowup: "upArrow",
  arrowright: "rightArrow",
  arrowdown: "downArrow",
  delete: "del",
  " ": "space",
  f: "F",
  a: "A",
  "*": "asterisk",
  "-": "minus",
  alt: "alt",
  control: "control",
  shift: "shift"
}, pP = {
  8: "backspace",
  9: "tab",
  13: "enter",
  27: "escape",
  33: "pageUp",
  34: "pageDown",
  35: "end",
  36: "home",
  37: "leftArrow",
  38: "upArrow",
  39: "rightArrow",
  40: "downArrow",
  46: "del",
  32: "space",
  70: "F",
  65: "A",
  106: "asterisk",
  109: "minus",
  189: "minus",
  173: "minus",
  16: "shift",
  17: "control",
  18: "alt"
}, fP = {
  dx: /^dx/i,
  mouse: /(mouse|wheel)/i,
  touch: /^touch/i,
  keyboard: /^key/i,
  pointer: /^(ms)?pointer/i
}, gP = (e) => e, _P = (e) => gP(w.Event(e, e)), R_ = (e) => Cl(e) === "dx", vP = (e) => Cl(e) === "mouse", kw = (e) => Cl(e) === "touch", Cl = (e) => {
  var {
    type: t
  } = e, i = "other";
  return B(fP, function(n) {
    if (this.test(t))
      return i = n, !1;
  }), i;
}, Fw = (e) => Cl(e) === "pointer", Ca = (e) => vP(e) || (Fw(e) || R_(e)) && e.pointerType === "mouse", si = (e) => e && e.type === "dxmousewheel", xl = (e) => kw(e) || (Fw(e) || R_(e)) && e.pointerType === "touch", _t = (e) => {
  var {
    pageX: t,
    pageY: i,
    timeStamp: n
  } = e;
  return {
    x: t,
    y: i,
    time: n
  };
}, aa = (e, t) => ({
  x: t.x - e.x,
  y: t.y - e.y,
  time: t.time - e.time || 1
}), mP = (e) => {
  var {
    originalEvent: t,
    pointers: i
  } = e;
  return kw(e) ? (t.touches || []).length : R_(e) ? (i || []).length : 0;
}, Pw = (e) => {
  var {
    target: t
  } = e, i = g(t), n = (t == null ? void 0 : t.isContentEditable) || (t == null ? void 0 : t.hasAttribute("contenteditable")), r = i.is("input, textarea, select") || n;
  if (si(e)) {
    var a = i.is("textarea") && i.hasClass("dx-texteditor-input");
    if (a || n)
      return !1;
    var o = i.is("input[type='number'], textarea, select") && i.is(":focus");
    return o;
  }
  if (Ca(e))
    return r || e.which > 1;
  if (xl(e))
    return r && Or(i);
}, xr = (e, t) => {
  var i = _P(e);
  return t && T(i, t), i;
}, Vr = (e) => {
  var {
    originalEvent: t,
    delegateTarget: i
  } = e, n = xr(t, e);
  return w.trigger(i || n.target, n), n;
}, ht = (e) => {
  var {
    key: t,
    which: i
  } = e, n = hP[t == null ? void 0 : t.toLowerCase()] || t, r = pP[i];
  return r && n === t ? r : !n && i ? String.fromCharCode(i) : n;
}, Ad = (e) => {
  var {
    key: t,
    which: i
  } = e;
  return t || String.fromCharCode(i);
}, oe = qf, Pt = (e) => {
  var {
    ctrlKey: t,
    metaKey: i
  } = e;
  return t || i;
}, fC = "compositionstart", CP = "compositionend", xP = "keydown", Rh = "KeyboardProcessor", Mw = (e) => ({
  keyName: ht(e),
  key: e.key,
  code: e.code,
  ctrl: e.ctrlKey,
  location: e.location,
  metaKey: e.metaKey,
  shift: e.shiftKey,
  alt: e.altKey,
  which: e.which,
  originalEvent: e
}), B_ = ze.inherit({
  _keydown: oe(xP, Rh),
  _compositionStart: oe(fC, Rh),
  _compositionEnd: oe(CP, Rh),
  ctor: function(e) {
    e = e || {}, e.element && (this._element = g(e.element)), e.focusTarget && (this._focusTarget = e.focusTarget), this._handler = e.handler, this._element && (this._processFunction = (t) => {
      var i = g(this._focusTarget).toArray(), n = this._focusTarget && this._focusTarget !== t.target && !i.includes(t.target), r = this._isComposingJustFinished && t.which === 229 || this._isComposing || n;
      this._isComposingJustFinished = !1, r || this.process(t);
    }, this._toggleProcessingWithContext = this.toggleProcessing.bind(this), w.on(this._element, this._keydown, this._processFunction), w.on(this._element, this._compositionStart, this._toggleProcessingWithContext), w.on(this._element, this._compositionEnd, this._toggleProcessingWithContext));
  },
  dispose: function() {
    this._element && (w.off(this._element, this._keydown, this._processFunction), w.off(this._element, this._compositionStart, this._toggleProcessingWithContext), w.off(this._element, this._compositionEnd, this._toggleProcessingWithContext)), this._element = void 0, this._handler = void 0;
  },
  process: function(e) {
    this._handler(Mw(e));
  },
  toggleProcessing: function(e) {
    var {
      type: t
    } = e;
    this._isComposing = t === fC, this._isComposingJustFinished = !this._isComposing;
  }
});
B_.createKeyDownOptions = Mw;
function Tt(e, t) {
  return t ? oe(e, t) : e;
}
function Yf(e, t) {
  return typeof e == "function" ? e(t) : e.execute(t);
}
var gC = {
  on: (e, t, i, n) => {
    var {
      selector: r,
      showTimeout: a,
      hideTimeout: o,
      namespace: s
    } = n;
    w.on(e, Tt("dxactive", s), r, {
      timeout: a
    }, (l) => Yf(t, {
      event: l,
      element: l.currentTarget
    })), w.on(e, Tt("dxinactive", s), r, {
      timeout: o
    }, (l) => Yf(i, {
      event: l,
      element: l.currentTarget
    }));
  },
  off: (e, t) => {
    var {
      namespace: i,
      selector: n
    } = t;
    w.off(e, Tt("dxactive", i), n), w.off(e, Tt("dxinactive", i), n);
  }
}, Od = {
  on: function(e, t) {
    var {
      namespace: i
    } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    w.on(e, Tt("dxresize", i), t);
  },
  off: function(e) {
    var {
      namespace: t
    } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    w.off(e, Tt("dxresize", t));
  }
}, _C = {
  on: (e, t, i, n) => {
    var {
      selector: r,
      namespace: a
    } = n;
    w.on(e, Tt("dxhoverend", a), r, (o) => i(o)), w.on(e, Tt("dxhoverstart", a), r, (o) => Yf(t, {
      element: o.target,
      event: o
    }));
  },
  off: (e, t) => {
    var {
      selector: i,
      namespace: n
    } = t;
    w.off(e, Tt("dxhoverstart", n), i), w.off(e, Tt("dxhoverend", n), i);
  }
}, Rd = {
  on: (e, t, i, n) => {
    var {
      namespace: r
    } = n;
    w.on(e, Tt("dxhiding", r), i), w.on(e, Tt("dxshown", r), t);
  },
  off: (e, t) => {
    var {
      namespace: i
    } = t;
    w.off(e, Tt("dxhiding", i)), w.off(e, Tt("dxshown", i));
  }
}, nd = {
  on: (e, t, i, n) => {
    var {
      namespace: r
    } = n;
    w.on(e, Tt("focusin", r), t), w.on(e, Tt("focusout", r), i);
  },
  off: (e, t) => {
    var {
      namespace: i
    } = t;
    w.off(e, Tt("focusin", i)), w.off(e, Tt("focusout", i));
  },
  trigger: (e) => w.trigger(e, "focus")
}, vC = {
  on: function(e, t) {
    var {
      namespace: i
    } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    w.on(e, Tt("dxclick", i), t);
  },
  off: function(e) {
    var {
      namespace: t
    } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    w.off(e, Tt("dxclick", t));
  }
}, mC = {
  on: function(e, t) {
    var {
      namespace: i
    } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    w.on(e, Tt("click", i), t);
  },
  off: function(e) {
    var {
      namespace: t
    } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    w.off(e, Tt("click", t));
  }
}, yP = 0, ts = {}, bP = () => "keyboardProcessorId".concat(yP++), Sr = {
  on: (e, t, i) => {
    var n = bP();
    return ts[n] = new B_({
      element: e,
      focusTarget: t,
      handler: i
    }), n;
  },
  off: (e) => {
    e && ts[e] && (ts[e].dispose(), delete ts[e]);
  },
  _getProcessor: (e) => ts[e]
}, {
  abstract: iu
} = I_, wn = I_.inherit({
  _getDefaultOptions() {
    return T(this.callBase(), {
      width: void 0,
      height: void 0,
      rtlEnabled: st().rtlEnabled,
      elementAttr: {},
      disabled: !1,
      integrationOptions: {}
    }, this._useTemplates() ? hC.createDefaultOptions() : {});
  },
  ctor(e, t) {
    this._customClass = null, this._createElement(e), bw(this._$element, this, this._dispose), this.callBase(t);
  },
  _createElement(e) {
    this._$element = g(e);
  },
  _getSynchronizableOptionsForCreateComponent: () => ["rtlEnabled", "disabled", "templatesRenderAsynchronously"],
  _checkFunctionValueDeprecation: function(e) {
    this.option("_ignoreFunctionValueDeprecation") || e.forEach((t) => {
      ce(this.option(t)) && Je.log("W0017", t);
    });
  },
  _visibilityChanged: iu,
  _dimensionChanged: iu,
  _init() {
    this.callBase(), this._checkFunctionValueDeprecation(["width", "height", "maxHeight", "maxWidth", "minHeight", "minWidth", "popupHeight", "popupWidth"]), this._attachWindowResizeCallback(), this._initTemplateManager();
  },
  _setOptionsByDevice(e) {
    this.callBase([].concat(this.constructor._classCustomRules || [], e || []));
  },
  _isInitialOptionValue(e) {
    var t = this.constructor._classCustomRules && Object.prototype.hasOwnProperty.call(this._convertRulesToOptions(this.constructor._classCustomRules), e);
    return !t && this.callBase(e);
  },
  _attachWindowResizeCallback() {
    if (this._isDimensionChangeSupported()) {
      var e = this._windowResizeCallBack = this._dimensionChanged.bind(this);
      ma.add(e);
    }
  },
  _isDimensionChangeSupported() {
    return this._dimensionChanged !== iu;
  },
  _renderComponent() {
    this._initMarkup(), Re() && this._render();
  },
  _initMarkup() {
    var {
      rtlEnabled: e
    } = this.option() || {};
    this._renderElementAttributes(), this._toggleRTLDirection(e), this._renderVisibilityChange(), this._renderDimensions();
  },
  _render() {
    this._attachVisibilityChangeHandlers(), Ok(this.$element());
  },
  _renderElementAttributes() {
    var {
      elementAttr: e
    } = this.option() || {}, t = T({}, e), i = t.class;
    delete t.class, this.$element().attr(t).removeClass(this._customClass).addClass(i), this._customClass = i;
  },
  _renderVisibilityChange() {
    if (this._isDimensionChangeSupported() && this._attachDimensionChangeHandlers(), this._isVisibilityChangeSupported()) {
      var e = this.$element();
      e.addClass("dx-visibility-change-handler");
    }
  },
  _renderDimensions() {
    var e = this.$element(), t = e.get(0), i = this._getOptionValue("width", t), n = this._getOptionValue("height", t);
    this._isCssUpdateRequired(t, n, i) && e.css({
      width: i === null ? "" : i,
      height: n === null ? "" : n
    });
  },
  _isCssUpdateRequired: (e, t, i) => !!(x(i) || x(t) || e.style.width || e.style.height),
  _attachDimensionChangeHandlers() {
    var e = this.$element(), t = "".concat(this.NAME, "VisibilityChange");
    Od.off(e, {
      namespace: t
    }), Od.on(e, () => this._dimensionChanged(), {
      namespace: t
    });
  },
  _attachVisibilityChangeHandlers() {
    if (this._isVisibilityChangeSupported()) {
      var e = this.$element(), t = "".concat(this.NAME, "VisibilityChange");
      this._isHidden = !this._isVisible(), Rd.off(e, {
        namespace: t
      }), Rd.on(e, () => this._checkVisibilityChanged("shown"), () => this._checkVisibilityChanged("hiding"), {
        namespace: t
      });
    }
  },
  _isVisible() {
    var e = this.$element();
    return e.is(":visible");
  },
  _checkVisibilityChanged(e) {
    var t = this._isVisible();
    t && (e === "hiding" && !this._isHidden ? (this._visibilityChanged(!1), this._isHidden = !0) : e === "shown" && this._isHidden && (this._isHidden = !1, this._visibilityChanged(!0)));
  },
  _isVisibilityChangeSupported() {
    return this._visibilityChanged !== iu && Re();
  },
  _clean: $,
  _modelByElement() {
    var {
      modelByElement: e
    } = this.option(), t = this.$element();
    return e ? e(t) : void 0;
  },
  _invalidate() {
    if (this._isUpdateAllowed())
      throw Je.Error("E0007");
    this._requireRefresh = !0;
  },
  _refresh() {
    this._clean(), this._renderComponent();
  },
  _dispose() {
    this._templateManager && this._templateManager.dispose(), this.callBase(), this._clean(), this._detachWindowResizeCallback();
  },
  _detachWindowResizeCallback() {
    this._isDimensionChangeSupported() && ma.remove(this._windowResizeCallBack);
  },
  _toggleRTLDirection(e) {
    var t = this.$element();
    t.toggleClass("dx-rtl", e);
  },
  _createComponent(e, t) {
    var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n = li(this._getSynchronizableOptionsForCreateComponent(), (d) => !(d in i)), {
      integrationOptions: r
    } = this.option(), {
      nestedComponentOptions: a
    } = this.option();
    a = a || $;
    var o = T({
      integrationOptions: r
    }, a(this));
    n.forEach((d) => o[d] = this.option(d)), this._extendConfig(i, o);
    var s = void 0;
    if (Te(t)) {
      var l = g(e)[t](i);
      s = l[t]("instance");
    } else
      e && (s = t.getInstance(e), s ? s.option(i) : s = new t(e, i));
    if (s) {
      var u = (d) => {
        var {
          name: c,
          value: h
        } = d;
        n.includes(c) && s.option(c, h);
      };
      this.on("optionChanged", u), s.on("disposing", () => this.off("optionChanged", u));
    }
    return s;
  },
  _extendConfig(e, t) {
    B(t, (i, n) => {
      !Object.prototype.hasOwnProperty.call(e, i) && (e[i] = n);
    });
  },
  _defaultActionConfig() {
    var e = this.$element(), t = this._modelByElement(e);
    return T(this.callBase(), {
      context: t
    });
  },
  _defaultActionArgs() {
    var e = this.$element(), t = this._modelByElement(e), i = this.element();
    return T(this.callBase(), {
      element: i,
      model: t
    });
  },
  _optionChanged(e) {
    switch (e.name) {
      case "width":
      case "height":
        this._renderDimensions();
        break;
      case "rtlEnabled":
        this._invalidate();
        break;
      case "elementAttr":
        this._renderElementAttributes();
        break;
      case "disabled":
      case "integrationOptions":
        break;
      default:
        this.callBase(e);
    }
  },
  _removeAttributes(e) {
    for (var t = e.attributes, i = t.length - 1; i >= 0; i--) {
      var n = t[i];
      if (n) {
        var {
          name: r
        } = n;
        (!r.indexOf("aria-") || r.indexOf("dx-") !== -1 || r === "role" || r === "style" || r === "tabindex") && e.removeAttribute(r);
      }
    }
  },
  _removeClasses(e) {
    e.className = e.className.split(" ").filter((t) => t.lastIndexOf("dx-", 0) !== 0).join(" ");
  },
  _updateDOMComponent(e) {
    e ? this._renderComponent() : this._requireRefresh && (this._requireRefresh = !1, this._refresh());
  },
  endUpdate() {
    var e = this._isInitializingRequired();
    this.callBase(), this._isUpdateAllowed() && this._updateDOMComponent(e);
  },
  $element() {
    return this._$element;
  },
  element() {
    var e = this.$element();
    return Ie(e);
  },
  dispose() {
    var e = this.$element().get(0);
    vl(e, !0), e.textContent = "", this._removeAttributes(e), this._removeClasses(e);
  },
  resetOption(e) {
    if (this.callBase(e), e === "width" || e === "height") {
      var t = this.initialOption(e);
      !x(t) && this.$element().css(e, "");
    }
  },
  _getAnonymousTemplateName() {
  },
  _initTemplateManager() {
    if (!(this._templateManager || !this._useTemplates())) {
      var {
        integrationOptions: e = {}
      } = this.option(), {
        createTemplate: t
      } = e;
      this._templateManager = new hC(t, this._getAnonymousTemplateName()), this._initTemplates();
    }
  },
  _initTemplates() {
    var {
      templates: e,
      anonymousTemplateMeta: t
    } = this._templateManager.extractTemplates(this.$element()), i = this.option("integrationOptions.templates.".concat(t.name));
    e.forEach((n) => {
      var {
        name: r,
        template: a
      } = n;
      this._options.silent("integrationOptions.templates.".concat(r), a);
    }), t.name && !i && (this._options.silent("integrationOptions.templates.".concat(t.name), t.template), this._options.silent("_hasAnonymousTemplateContent", !0));
  },
  _getTemplateByOption(e) {
    return this._getTemplate(this.option(e));
  },
  _getTemplate(e) {
    var t = this.option("integrationOptions.templates"), i = this.option("templatesRenderAsynchronously"), n = this.option("integrationOptions.skipTemplates");
    return this._templateManager.getTemplate(e, t, {
      isAsyncTemplate: i,
      skipTemplates: n
    }, this);
  },
  _saveTemplate(e, t) {
    this._setOptionWithoutOptionChange("integrationOptions.templates." + e, this._templateManager._createTemplate(t));
  },
  _useTemplates: () => !0
});
wn.getInstance = function(e) {
  return Sw(g(e), this);
};
wn.defaultOptions = function(e) {
  this._classCustomRules = this._classCustomRules || [], this._classCustomRules.push(e);
};
function Lw(e, t, i) {
  function n(l) {
    return typeof l == "string" ? l.split(".") : typeof l == "number" ? [l] : l;
  }
  e = n(e), t = n(t);
  var r = Math.max(e.length, t.length);
  isFinite(i) && (r = Math.min(r, i));
  for (var a = 0; a < r; a++) {
    var o = parseInt(e[a] || 0, 10), s = parseInt(t[a] || 0, 10);
    if (o < s)
      return -1;
    if (o > s)
      return 1;
  }
  return 0;
}
var ki = Re() ? ke() : {}, SP = 1e3 / 60, Vw = function(e) {
  return setTimeout(e, SP);
}, Nw = function(e) {
  clearTimeout(e);
}, $w = ir(function() {
  var e = ki.requestAnimationFrame || ki.webkitRequestAnimationFrame || ki.mozRequestAnimationFrame || ki.oRequestAnimationFrame || ki.msRequestAnimationFrame, t = ki.cancelAnimationFrame || ki.webkitCancelAnimationFrame || ki.mozCancelAnimationFrame || ki.oCancelAnimationFrame || ki.msCancelAnimationFrame;
  e && t && (Vw = e, Nw = t);
});
function Bd() {
  return $w(), Vw.apply(ki, arguments);
}
function Vn() {
  $w(), Nw.apply(ki, arguments);
}
function Hw(e) {
  return e && [e.target, e.delegateTarget, e.relatedTarget, e.currentTarget].filter((t) => !!t);
}
var EP = (e, t) => {
  w.one(Hw(e), Sn, t);
}, wP = (e, t) => {
  w.off(Hw(e), Sn, t);
}, {
  maxTouchPoints: zw
} = _l(), IP = {
  webkitTransition: "webkitTransitionEnd",
  MozTransition: "transitionend",
  OTransition: "oTransitionEnd",
  transition: "transitionend"
}, k_ = function(e) {
  return !!Fa(e);
}, TP = function() {
  var {
    platform: e,
    mac: t
  } = ve.real(), i = e === "ios" || e === "android" || t;
  return i;
}, Cc = function(e) {
  if (e === "text")
    return !0;
  var t = ee.createElement("input");
  try {
    return t.setAttribute("type", e), t.value = "wrongValue", !t.value;
  } catch {
    return !1;
  }
}, DP = function(e, t) {
  return (e("ontouchstart") || !!t) && !e("callPhantom");
}, AP = function(e) {
  return e("PointerEvent");
}, Ww = DP(iw, zw), Gw = AP(iw), OP = !!zw, xa = Ww || Gw && OP, Zf = ir(function() {
  return k_("transition");
}), Kw = ir(function() {
  return IP[Fa("transition")];
}), Uw = ir(function() {
  return k_("animation");
}), ya = TP();
const RP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  animation: Uw,
  inputType: Cc,
  nativeScrolling: ya,
  pointerEvents: Gw,
  styleProp: Fa,
  stylePropPrefix: td,
  supportProp: k_,
  touch: xa,
  touchEvents: Ww,
  transition: Zf,
  transitionEndEventName: Kw
}, Symbol.toStringTag, { value: "Module" }));
var CC = "dxPointerEvents", F_ = ze.inherit({
  ctor: function(e, t) {
    this._eventName = e, this._originalEvents = oe(t, CC), this._handlerCount = 0, this.noBubble = this._isNoBubble();
  },
  _isNoBubble: function() {
    var e = this._eventName;
    return e === "dxpointerenter" || e === "dxpointerleave";
  },
  _handler: function(e) {
    var t, i = this._getDelegateTarget(e), n = {
      type: this._eventName,
      pointerType: e.pointerType || Cl(e),
      originalEvent: e,
      delegateTarget: i,
      timeStamp: lt.mozilla ? (/* @__PURE__ */ new Date()).getTime() : e.timeStamp
    }, r = e.originalEvent;
    if (r != null && (t = r.target) !== null && t !== void 0 && t.shadowRoot) {
      var a, o, s = (a = r.path) !== null && a !== void 0 ? a : (o = r.composedPath) === null || o === void 0 ? void 0 : o.call(r);
      n.target = s[0];
    }
    return this._fireEvent(n);
  },
  _getDelegateTarget: function(e) {
    var t;
    return this.noBubble && (t = e.delegateTarget), t;
  },
  _fireEvent: function(e) {
    return Vr(e);
  },
  _setSelector: function(e) {
    this._selector = this.noBubble && e ? e.selector : null;
  },
  _getSelector: function() {
    return this._selector;
  },
  setup: function() {
    return !0;
  },
  add: function(e, t) {
    if (this._handlerCount <= 0 || this.noBubble) {
      e = this.noBubble ? e : ee.getDocument(), this._setSelector(t);
      var i = this;
      w.on(e, this._originalEvents, this._getSelector(), function(n) {
        i._handler(n);
      });
    }
    this.noBubble || this._handlerCount++;
  },
  remove: function(e) {
    this._setSelector(e), this.noBubble || this._handlerCount--;
  },
  teardown: function(e) {
    this._handlerCount && !this.noBubble || (e = this.noBubble ? e : ee.getDocument(), this._originalEvents !== "." + CC && w.off(e, this._originalEvents, this._getSelector()));
  },
  dispose: function(e) {
    e = this.noBubble ? e : ee.getDocument(), w.off(e, this._originalEvents);
  }
}), BP = {
  dxpointerdown: "touchstart",
  dxpointermove: "touchmove",
  dxpointerup: "touchend",
  dxpointercancel: "touchcancel",
  dxpointerover: "",
  dxpointerout: "",
  dxpointerenter: "",
  dxpointerleave: ""
}, jw = function(e) {
  var t = [];
  return B(e.touches, function(i, n) {
    t.push(T({
      pointerId: n.identifier
    }, n));
  }), {
    pointers: t,
    pointerId: e.changedTouches[0].identifier
  };
}, kP = function(e) {
  return ve.real().platform === "ios" && (e === "dxpointerdown" || e === "dxpointerup");
}, xc = F_.inherit({
  ctor: function() {
    this.callBase.apply(this, arguments), this._pointerId = 0;
  },
  _handler: function(e) {
    if (kP(this._eventName)) {
      var t = e.changedTouches[0];
      if (this._pointerId === t.identifier && this._pointerId !== 0)
        return;
      this._pointerId = t.identifier;
    }
    return this.callBase.apply(this, arguments);
  },
  _fireEvent: function(e) {
    return this.callBase(T(jw(e.originalEvent), e));
  }
});
xc.map = BP;
xc.normalize = jw;
var nu = function(e, t) {
  En.add(function() {
    e.split(" ").forEach(function(i) {
      ee.listen(ee.getDocument(), i, t, !0);
    });
  });
}, FP = function(e, t, i) {
  i = i || function() {
  };
  var n = [], r = function(o) {
    var s = -1;
    return B(n, function(l, u) {
      return t(o, u) ? (s = l, !1) : !0;
    }), s;
  }, a = function(o) {
    var s = r(o);
    s > -1 && n.splice(s, 1);
  };
  nu(e.dxpointerdown, function(o) {
    r(o) === -1 && (i(o), n.push(o));
  }), nu(e.dxpointermove, function(o) {
    n[r(o)] = o;
  }), nu(e.dxpointerup, a), nu(e.dxpointercancel, a), this.pointers = function() {
    return n;
  }, this.reset = function() {
    n = [];
  };
}, qw = {
  dxpointerdown: "mousedown",
  dxpointermove: "mousemove",
  dxpointerup: "mouseup",
  dxpointercancel: "",
  dxpointerover: "mouseover",
  dxpointerout: "mouseout",
  dxpointerenter: "mouseenter",
  dxpointerleave: "mouseleave"
}, Xw = function(e) {
  return e.pointerId = 1, {
    pointers: P_.pointers(),
    pointerId: 1
  };
}, P_, xC = !1, Yw = function() {
  xC || (P_ = new FP(qw, function() {
    return !0;
  }), xC = !0);
}, Nr = F_.inherit({
  ctor: function() {
    this.callBase.apply(this, arguments), Yw();
  },
  _fireEvent: function(e) {
    return this.callBase(T(Xw(e.originalEvent), e));
  }
});
Nr.map = qw;
Nr.normalize = Xw;
Nr.activate = Yw;
Nr.resetObserver = function() {
  P_.reset();
};
var PP = {
  dxpointerdown: "touchstart mousedown",
  dxpointermove: "touchmove mousemove",
  dxpointerup: "touchend mouseup",
  dxpointercancel: "touchcancel",
  dxpointerover: "mouseover",
  dxpointerout: "mouseout",
  dxpointerenter: "mouseenter",
  dxpointerleave: "mouseleave"
}, yC = !1, MP = function() {
  yC || (Nr.activate(), yC = !0);
}, M_ = F_.inherit({
  EVENT_LOCK_TIMEOUT: 100,
  ctor: function() {
    this.callBase.apply(this, arguments), MP();
  },
  _handler: function(e) {
    var t = Ca(e);
    if (t || (this._skipNextEvents = !0), !(t && this._mouseLocked)) {
      if (t && this._skipNextEvents) {
        this._skipNextEvents = !1, this._mouseLocked = !0, clearTimeout(this._unlockMouseTimer);
        var i = this;
        this._unlockMouseTimer = setTimeout(function() {
          i._mouseLocked = !1;
        }, this.EVENT_LOCK_TIMEOUT);
        return;
      }
      return this.callBase(e);
    }
  },
  _fireEvent: function(e) {
    var t = Ca(e.originalEvent) ? Nr.normalize : xc.normalize;
    return this.callBase(T(t(e.originalEvent), e));
  },
  dispose: function() {
    this.callBase(), this._skipNextEvents = !1, this._mouseLocked = !1, clearTimeout(this._unlockMouseTimer);
  }
});
M_.map = PP;
M_.resetObserver = Nr.resetObserver;
var LP = (e, t) => {
  var {
    tablet: i,
    phone: n
  } = t;
  return e.touch && !(i || n) ? M_ : e.touch ? xc : Nr;
}, bC = LP(RP, ve.real());
B(bC.map, (e, t) => {
  Wi(e, new bC(e, t));
});
var je = {
  down: "dxpointerdown",
  up: "dxpointerup",
  move: "dxpointermove",
  cancel: "dxpointercancel",
  enter: "dxpointerenter",
  leave: "dxpointerleave",
  over: "dxpointerover",
  out: "dxpointerout"
}, yc = ze.inherit({
  ctor: function(e) {
    this._$element = g(e), this._cancelCallback = qe(), this._acceptCallback = qe();
  },
  getElement: function() {
    return this._$element;
  },
  validate: function(e) {
    return !si(e);
  },
  validatePointers: function(e) {
    return mP(e) === 1;
  },
  allowInterruptionByMouseWheel: function() {
    return !0;
  },
  configure: function(e) {
    T(this, e);
  },
  addCancelCallback: function(e) {
    this._cancelCallback.add(e);
  },
  removeCancelCallback: function() {
    this._cancelCallback.empty();
  },
  _cancel: function(e) {
    this._cancelCallback.fire(this, e);
  },
  addAcceptCallback: function(e) {
    this._acceptCallback.add(e);
  },
  removeAcceptCallback: function() {
    this._acceptCallback.empty();
  },
  _accept: function(e) {
    this._acceptCallback.fire(this, e);
  },
  _requestAccept: function(e) {
    this._acceptRequestEvent = e;
  },
  _forgetAccept: function() {
    this._accept(this._acceptRequestEvent), this._acceptRequestEvent = null;
  },
  start: $,
  move: $,
  end: $,
  cancel: $,
  reset: function() {
    this._acceptRequestEvent && this._accept(this._acceptRequestEvent);
  },
  _fireEvent: function(e, t, i) {
    var n = T({
      type: e,
      originalEvent: t,
      target: this._getEmitterTarget(t),
      delegateTarget: this.getElement().get(0)
    }, i);
    return t = Vr(n), t.cancel && this._cancel(t), t;
  },
  _getEmitterTarget: function(e) {
    return (this.delegateSelector ? g(e.target).closest(this.delegateSelector) : this.getElement()).get(0);
  },
  dispose: $
}), yl = "dxmousewheel", SC = "dxWheel", VP = "wheel", EC = 0, NP = 30, Qf = {
  setup: function(e) {
    var t = g(e);
    w.on(t, oe(VP, SC), Qf._wheelHandler.bind(Qf));
  },
  teardown: function(e) {
    w.off(e, ".".concat(SC));
  },
  _wheelHandler: function(e) {
    var {
      deltaMode: t,
      deltaY: i,
      deltaX: n,
      deltaZ: r
    } = e.originalEvent;
    Vr({
      type: yl,
      originalEvent: e,
      delta: this._normalizeDelta(i, t),
      deltaX: n,
      deltaY: i,
      deltaZ: r,
      deltaMode: t,
      pointerType: "mouse"
    }), e.stopPropagation();
  },
  _normalizeDelta(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : EC;
    return t === EC ? -e : -NP * e;
  }
};
Wi(yl, Qf);
var ru = "dxEventManager", Ts = "dxEmitter", $P = ze.inherit({
  ctor: function() {
    this._attachHandlers(), this.reset(), this._proxiedCancelHandler = this._cancelHandler.bind(this), this._proxiedAcceptHandler = this._acceptHandler.bind(this);
  },
  _attachHandlers: function() {
    En.add(function() {
      var e = ee.getDocument();
      w.subscribeGlobal(e, oe(je.down, ru), this._pointerDownHandler.bind(this)), w.subscribeGlobal(e, oe(je.move, ru), this._pointerMoveHandler.bind(this)), w.subscribeGlobal(e, oe([je.up, je.cancel].join(" "), ru), this._pointerUpHandler.bind(this)), w.subscribeGlobal(e, oe(yl, ru), this._mouseWheelHandler.bind(this));
    }.bind(this));
  },
  _eachEmitter: function(e) {
    for (var t = this._activeEmitters || [], i = 0; t.length > i; ) {
      var n = t[i];
      if (e(n) === !1)
        break;
      t[i] === n && i++;
    }
  },
  _applyToEmitters: function(e, t) {
    this._eachEmitter(function(i) {
      i[e].call(i, t);
    });
  },
  reset: function() {
    this._eachEmitter(this._proxiedCancelHandler), this._activeEmitters = [];
  },
  resetEmitter: function(e) {
    this._proxiedCancelHandler(e);
  },
  _pointerDownHandler: function(e) {
    Ca(e) && e.which > 1 || this._updateEmitters(e);
  },
  _updateEmitters: function(e) {
    this._isSetChanged(e) && (this._cleanEmitters(e), this._fetchEmitters(e));
  },
  _isSetChanged: function(e) {
    var t = this._closestEmitter(e), i = this._emittersSet || [], n = t.length !== i.length;
    return B(t, function(r, a) {
      return n = n || i[r] !== a, !n;
    }), this._emittersSet = t, n;
  },
  _closestEmitter: function(e) {
    var t = this, i = [], n = g(e.target);
    function r(o, s) {
      s && s.validatePointers(e) && s.validate(e) && (s.addCancelCallback(t._proxiedCancelHandler), s.addAcceptCallback(t._proxiedAcceptHandler), i.push(s));
    }
    for (; n.length; ) {
      var a = dt(n.get(0), Ts) || [];
      B(a, r), n = n.parent();
    }
    return i;
  },
  _acceptHandler: function(e, t) {
    var i = this;
    this._eachEmitter(function(n) {
      n !== e && i._cancelEmitter(n, t);
    });
  },
  _cancelHandler: function(e, t) {
    this._cancelEmitter(e, t);
  },
  _cancelEmitter: function(e, t) {
    var i = this._activeEmitters;
    t ? e.cancel(t) : e.reset(), e.removeCancelCallback(), e.removeAcceptCallback();
    var n = i.indexOf(e);
    n > -1 && i.splice(n, 1);
  },
  _cleanEmitters: function(e) {
    this._applyToEmitters("end", e), this.reset(e);
  },
  _fetchEmitters: function(e) {
    this._activeEmitters = this._emittersSet.slice(), this._applyToEmitters("start", e);
  },
  _pointerMoveHandler: function(e) {
    this._applyToEmitters("move", e);
  },
  _pointerUpHandler: function(e) {
    this._updateEmitters(e);
  },
  _mouseWheelHandler: function(e) {
    this._allowInterruptionByMouseWheel() && (e.pointers = [null], this._pointerDownHandler(e), this._adjustWheelEvent(e), this._pointerMoveHandler(e), e.pointers = [], this._pointerUpHandler(e));
  },
  _allowInterruptionByMouseWheel: function() {
    var e = !0;
    return this._eachEmitter(function(t) {
      return e = t.allowInterruptionByMouseWheel() && e, e;
    }), e;
  },
  _adjustWheelEvent: function(e) {
    var t = null;
    if (this._eachEmitter(function(a) {
      if (a.gesture) {
        var o = a.getDirection(e);
        if (o !== "horizontal" && !e.shiftKey || o !== "vertical" && e.shiftKey)
          return t = a, !1;
      }
    }), !!t) {
      var i = t.getDirection(e), n = i === "both" && !e.shiftKey || i === "vertical", r = n ? "pageY" : "pageX";
      e[r] += e.delta;
    }
  },
  isActive: function(e) {
    var t = !1;
    return this._eachEmitter(function(i) {
      t = t || i.getElement().is(e);
    }), t;
  }
}), wC = new $P(), Bh = "dxEmitterSubscription", Ko = function(e) {
  var t = e.emitter, i = e.events[0], n = e.events;
  B(n, function(r, a) {
    Wi(a, {
      noBubble: !e.bubble,
      setup: function(o) {
        var s = dt(o, Bh) || {}, l = dt(o, Ts) || {}, u = l[i] || new t(o);
        s[a] = !0, l[i] = u, dt(o, Ts, l), dt(o, Bh, s);
      },
      add: function(o, s) {
        var l = dt(o, Ts), u = l[i];
        u.configure(T({
          delegateSelector: s.selector
        }, s.data), s.type);
      },
      teardown: function(o) {
        var s = dt(o, Bh), l = dt(o, Ts), u = l[i];
        delete s[a];
        var d = !0;
        B(n, function(c, h) {
          return d = d && !s[h], d;
        }), d && (wC.isActive(o) && wC.resetEmitter(u), u && u.dispose(), delete l[i]);
      }
    });
  });
}, Xe = "dxclick", Jf = null, Ds = null, IC = () => {
  Ds = null;
}, TC = function(e) {
  var t = e.originalEvent, i = Ds === t || t && t.DXCLICK_FIRED, n = !e.which || e.which === 1;
  n && !Jf && !i && (t && (t.DXCLICK_FIRED = !0), wP(Ds, IC), Ds = t, EP(Ds, IC), Vr({
    type: Xe,
    originalEvent: e
  }));
}, HP = yc.inherit({
  ctor: function(e) {
    this.callBase(e), w.on(this.getElement(), "click", TC);
  },
  start: function(e) {
    Jf = null;
  },
  cancel: function() {
    Jf = !0;
  },
  dispose: function() {
    w.off(this.getElement(), "click", TC);
  }
});
(function() {
  var e = ve.real().generic;
  if (!e) {
    var t = null, i = !1, n = ee.getDocument();
    w.subscribeGlobal(n, oe(je.down, "NATIVE_CLICK_FIXER"), function(r) {
      t = r.target, i = r.isDefaultPrevented();
    }), w.subscribeGlobal(n, oe("click", "NATIVE_CLICK_FIXER"), function(r) {
      var a = g(r.target);
      !i && t && !a.is(t) && !g(t).is("label") && (o = a, g(o).is("input, textarea, select, button ,:focus, :focus *")) && Go();
      var o;
      t = null, i = !1;
    });
  }
})();
Ko({
  emitter: HP,
  bubble: !0,
  events: [Xe]
});
var eg = "dxactive", tg = "dxinactive", zP = 30, WP = 400, au = ze.inherit({
  ctor: function(e, t) {
    this._timeout = e, this._fire = t;
  },
  start: function() {
    var e = this;
    this._schedule(function() {
      e.force();
    });
  },
  _schedule: function(e) {
    this.stop(), this._timer = setTimeout(e, this._timeout);
  },
  stop: function() {
    clearTimeout(this._timer);
  },
  force: function() {
    this._fired || (this.stop(), this._fire(), this._fired = !0);
  },
  fired: function() {
    return this._fired;
  }
}), ji, L_ = yc.inherit({
  ctor: function() {
    this.callBase.apply(this, arguments), this._active = new au(0, $), this._inactive = new au(0, $);
  },
  configure: function(e, t) {
    switch (t) {
      case eg:
        e.activeTimeout = e.timeout;
        break;
      case tg:
        e.inactiveTimeout = e.timeout;
    }
    this.callBase(e);
  },
  start: function(e) {
    if (ji) {
      var t = Hn(this.getElement().get(0), ji.getElement().get(0)), i = !ji._active.fired();
      if (t && i) {
        this._cancel();
        return;
      }
      ji._inactive.force();
    }
    ji = this, this._initEvents(e), this._active.start();
  },
  _initEvents: function(e) {
    var t = this, i = this._getEmitterTarget(e), n = Ca(e), r = ve.isSimulator(), a = r || !n, o = ct(this.activeTimeout, zP), s = ct(this.inactiveTimeout, WP);
    this._active = new au(a ? o : 0, function() {
      t._fireEvent(eg, e, {
        target: i
      });
    }), this._inactive = new au(a ? s : 0, function() {
      t._fireEvent(tg, e, {
        target: i
      }), ji = null;
    });
  },
  cancel: function(e) {
    this.end(e);
  },
  end: function(e) {
    var t = e.type !== je.up;
    t ? this._active.stop() : this._active.force(), this._inactive.start(), t && this._inactive.force();
  },
  dispose: function() {
    this._active.stop(), this._inactive.stop(), ji === this && (ji = null), this.callBase();
  },
  lockInactive: function() {
    return this._active.force(), this._inactive.stop(), ji = null, this._cancel(), this._inactive.force.bind(this._inactive);
  }
});
L_.lock = function(e) {
  var t = ji ? ji.lockInactive() : $;
  e.done(t);
};
Ko({
  emitter: L_,
  events: [eg, tg]
});
var GP = L_.lock, Zw = "dxHoverStart", V_ = "dxhoverstart", KP = oe(je.enter, Zw), Qw = "dxHoverEnd", bc = "dxhoverend", UP = oe(je.leave, Qw), Jw = ze.inherit({
  noBubble: !0,
  ctor: function() {
    this._handlerArrayKeyPath = this._eventNamespace + "_HandlerStore";
  },
  setup: function(e) {
    dt(e, this._handlerArrayKeyPath, {});
  },
  add: function(e, t) {
    var i = this, n = function(r) {
      i._handler(r);
    };
    w.on(e, this._originalEventName, t.selector, n), dt(e, this._handlerArrayKeyPath)[t.guid] = n;
  },
  _handler: function(e) {
    xl(e) || ve.isSimulator() || Vr({
      type: this._eventName,
      originalEvent: e,
      delegateTarget: e.delegateTarget
    });
  },
  remove: function(e, t) {
    var i = dt(e, this._handlerArrayKeyPath)[t.guid];
    w.off(e, this._originalEventName, t.selector, i);
  },
  teardown: function(e) {
    gc(e, this._handlerArrayKeyPath);
  }
}), jP = Jw.inherit({
  ctor: function() {
    this._eventNamespace = Zw, this._eventName = V_, this._originalEventName = KP, this.callBase();
  },
  _handler: function(e) {
    var t = e.pointers || [];
    t.length || this.callBase(e);
  }
}), qP = Jw.inherit({
  ctor: function() {
    this._eventNamespace = Qw, this._eventName = bc, this._originalEventName = UP, this.callBase();
  }
});
Wi(V_, new jP());
Wi(bc, new qP());
function DC(e, t, i) {
  e = e === "role" || e === "id" ? e : "aria-".concat(e), t = x(t) ? t.toString() : null, i.attr(e, t);
}
var Mt = wn.inherit({
  _feedbackHideTimeout: 400,
  _feedbackShowTimeout: 30,
  _supportedKeys: () => ({}),
  _getDefaultOptions() {
    return T(this.callBase(), {
      hoveredElement: null,
      isActive: !1,
      disabled: !1,
      visible: !0,
      hint: void 0,
      activeStateEnabled: !1,
      onContentReady: null,
      hoverStateEnabled: !1,
      focusStateEnabled: !1,
      tabIndex: 0,
      accessKey: void 0,
      onFocusIn: null,
      onFocusOut: null,
      onKeyboardHandled: null,
      ignoreParentReadOnly: !1,
      useResizeObserver: !0
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        var e = ve.real(), t = e.platform, i = e.version;
        return t === "ios" && Lw(i, "13.3") <= 0;
      },
      options: {
        useResizeObserver: !1
      }
    }]);
  },
  _init() {
    this.callBase(), this._initContentReadyAction();
  },
  _innerWidgetOptionChanged: function(e, t) {
    var i = Mt.getOptionsFromContainer(t);
    e && e.option(i), this._options.cache(t.name, i);
  },
  _bindInnerWidgetOptions(e, t) {
    var i = () => this._options.silent(t, T({}, e.option()));
    i(), e.on("optionChanged", i);
  },
  _getAriaTarget() {
    return this._focusTarget();
  },
  _initContentReadyAction() {
    this._contentReadyAction = this._createActionByOption("onContentReady", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _initMarkup() {
    var {
      disabled: e,
      visible: t
    } = this.option();
    this.$element().addClass("dx-widget"), this._toggleDisabledState(e), this._toggleVisibility(t), this._renderHint(), this._isFocusable() && this._renderFocusTarget(), this.callBase();
  },
  _render() {
    this.callBase(), this._renderContent(), this._renderFocusState(), this._attachFeedbackEvents(), this._attachHoverEvents(), this._toggleIndependentState();
  },
  _renderHint() {
    var {
      hint: e
    } = this.option();
    this.$element().attr("title", e || null);
  },
  _renderContent() {
    Bt(() => this._disposed ? void 0 : this._renderContentImpl()).done(() => this._disposed ? void 0 : this._fireContentReadyAction());
  },
  _renderContentImpl: $,
  _fireContentReadyAction: bo(function() {
    return this._contentReadyAction();
  }),
  _dispose() {
    this._contentReadyAction = null, this._detachKeyboardEvents(), this.callBase();
  },
  _resetActiveState() {
    this._toggleActiveState(this._eventBindingTarget(), !1);
  },
  _clean() {
    this._cleanFocusState(), this._resetActiveState(), this.callBase(), this.$element().empty();
  },
  _toggleVisibility(e) {
    this.$element().toggleClass("dx-state-invisible", !e), this.setAria("hidden", !e || void 0);
  },
  _renderFocusState() {
    this._attachKeyboardEvents(), this._isFocusable() && (this._renderFocusTarget(), this._attachFocusEvents(), this._renderAccessKey());
  },
  _renderAccessKey() {
    var e = this._focusTarget(), {
      accessKey: t
    } = this.option();
    e.attr("accesskey", t);
  },
  _isFocusable() {
    var {
      focusStateEnabled: e,
      disabled: t
    } = this.option();
    return e && !t;
  },
  _eventBindingTarget() {
    return this.$element();
  },
  _focusTarget() {
    return this._getActiveElement();
  },
  _isFocusTarget: function(e) {
    var t = g(this._focusTarget()).toArray();
    return t.includes(e);
  },
  _getActiveElement() {
    var e = this._eventBindingTarget();
    return this._activeStateUnit ? e.find(this._activeStateUnit).not(".dx-state-disabled") : e;
  },
  _renderFocusTarget() {
    var {
      tabIndex: e
    } = this.option();
    this._focusTarget().attr("tabIndex", e);
  },
  _keyboardEventBindingTarget() {
    return this._eventBindingTarget();
  },
  _refreshFocusEvent() {
    this._detachFocusEvents(), this._attachFocusEvents();
  },
  _focusEventTarget() {
    return this._focusTarget();
  },
  _focusInHandler(e) {
    e.isDefaultPrevented() || this._createActionByOption("onFocusIn", {
      beforeExecute: () => this._updateFocusState(e, !0),
      excludeValidators: ["readOnly"]
    })({
      event: e
    });
  },
  _focusOutHandler(e) {
    e.isDefaultPrevented() || this._createActionByOption("onFocusOut", {
      beforeExecute: () => this._updateFocusState(e, !1),
      excludeValidators: ["readOnly", "disabled"]
    })({
      event: e
    });
  },
  _updateFocusState(e, t) {
    var {
      target: i
    } = e;
    this._isFocusTarget(i) && this._toggleFocusClass(t, g(i));
  },
  _toggleFocusClass(e, t) {
    var i = t && t.length ? t : this._focusTarget();
    i.toggleClass("dx-state-focused", e);
  },
  _hasFocusClass(e) {
    var t = g(e || this._focusTarget());
    return t.hasClass("dx-state-focused");
  },
  _isFocused() {
    return this._hasFocusClass();
  },
  _getKeyboardListeners: () => [],
  _attachKeyboardEvents() {
    this._detachKeyboardEvents();
    var {
      focusStateEnabled: e,
      onKeyboardHandled: t
    } = this.option(), i = this._getKeyboardListeners().length, n = !!t, r = e || i || n;
    r && (this._keyboardListenerId = Sr.on(this._keyboardEventBindingTarget(), this._focusTarget(), (a) => this._keyboardHandler(a)));
  },
  _keyboardHandler(e, t) {
    if (!t) {
      var {
        originalEvent: i,
        keyName: n,
        which: r
      } = e, a = this._supportedKeys(i), o = a[n] || a[r];
      if (o !== void 0) {
        var s = o.bind(this), l = s(i, e);
        if (!l)
          return !1;
      }
    }
    var u = this._getKeyboardListeners(), {
      onKeyboardHandled: d
    } = this.option();
    return u.forEach((c) => c && c._keyboardHandler(e)), d && d(e), !0;
  },
  _refreshFocusState() {
    this._cleanFocusState(), this._renderFocusState();
  },
  _cleanFocusState() {
    var e = this._focusTarget();
    e.removeAttr("tabIndex"), this._toggleFocusClass(!1), this._detachFocusEvents(), this._detachKeyboardEvents();
  },
  _detachKeyboardEvents() {
    Sr.off(this._keyboardListenerId), this._keyboardListenerId = null;
  },
  _attachHoverEvents() {
    var {
      hoverStateEnabled: e
    } = this.option(), t = this._activeStateUnit, i = this._eventBindingTarget();
    _C.off(i, {
      selector: t,
      namespace: "UIFeedback"
    }), e && _C.on(i, new _i((n) => {
      var {
        event: r,
        element: a
      } = n;
      this._hoverStartHandler(r), this.option("hoveredElement", g(a));
    }, {
      excludeValidators: ["readOnly"]
    }), (n) => {
      this.option("hoveredElement", null), this._hoverEndHandler(n);
    }, {
      selector: t,
      namespace: "UIFeedback"
    });
  },
  _attachFeedbackEvents() {
    var {
      activeStateEnabled: e
    } = this.option(), t = this._activeStateUnit, i = this._eventBindingTarget();
    gC.off(i, {
      namespace: "UIFeedback",
      selector: t
    }), e && gC.on(i, new _i((n) => {
      var {
        event: r,
        element: a
      } = n;
      return this._toggleActiveState(g(a), !0, r);
    }), new _i((n) => {
      var {
        event: r,
        element: a
      } = n;
      return this._toggleActiveState(g(a), !1, r);
    }, {
      excludeValidators: ["disabled", "readOnly"]
    }), {
      showTimeout: this._feedbackShowTimeout,
      hideTimeout: this._feedbackHideTimeout,
      selector: t,
      namespace: "UIFeedback"
    });
  },
  _detachFocusEvents() {
    var e = this._focusEventTarget();
    nd.off(e, {
      namespace: "".concat(this.NAME, "Focus")
    });
  },
  _attachFocusEvents() {
    var e = this._focusEventTarget();
    nd.on(e, (t) => this._focusInHandler(t), (t) => this._focusOutHandler(t), {
      namespace: "".concat(this.NAME, "Focus"),
      isFocusable: (t, i) => g(i).is(Xf)
    });
  },
  _hoverStartHandler: $,
  _hoverEndHandler: $,
  _toggleActiveState(e, t) {
    this.option("isActive", t), e.toggleClass("dx-state-active", t);
  },
  _updatedHover() {
    var e = this._options.silent("hoveredElement");
    this._hover(e, e);
  },
  _findHoverTarget(e) {
    return e && e.closest(this._activeStateUnit || this._eventBindingTarget());
  },
  _hover(e, t) {
    var {
      hoverStateEnabled: i,
      disabled: n,
      isActive: r
    } = this.option();
    if (t = this._findHoverTarget(t), t && t.toggleClass("dx-state-hover", !1), e && i && !n && !r) {
      var a = this._findHoverTarget(e);
      a && a.toggleClass("dx-state-hover", !0);
    }
  },
  _toggleDisabledState(e) {
    this.$element().toggleClass("dx-state-disabled", !!e), this.setAria("disabled", e || void 0);
  },
  _toggleIndependentState() {
    this.$element().toggleClass("dx-state-independent", this.option("ignoreParentReadOnly"));
  },
  _setWidgetOption(e, t) {
    if (this[e]) {
      if (Me(t[0])) {
        B(t[0], (a, o) => this._setWidgetOption(e, [a, o]));
        return;
      }
      var i = t[0], n = t[1];
      t.length === 1 && (n = this.option(i));
      var r = this["".concat(e, "OptionMap")];
      this[e].option(r ? r(i) : i, n);
    }
  },
  _optionChanged(e) {
    var {
      name: t,
      value: i,
      previousValue: n
    } = e;
    switch (t) {
      case "disabled":
        this._toggleDisabledState(i), this._updatedHover(), this._refreshFocusState();
        break;
      case "hint":
        this._renderHint();
        break;
      case "ignoreParentReadOnly":
        this._toggleIndependentState();
        break;
      case "activeStateEnabled":
        this._attachFeedbackEvents();
        break;
      case "hoverStateEnabled":
        this._attachHoverEvents(), this._updatedHover();
        break;
      case "tabIndex":
      case "focusStateEnabled":
        this._refreshFocusState();
        break;
      case "onFocusIn":
      case "onFocusOut":
      case "useResizeObserver":
        break;
      case "accessKey":
        this._renderAccessKey();
        break;
      case "hoveredElement":
        this._hover(i, n);
        break;
      case "isActive":
        this._updatedHover();
        break;
      case "visible":
        this._toggleVisibility(i), this._isVisibilityChangeSupported() && this._checkVisibilityChanged(i ? "shown" : "hiding");
        break;
      case "onKeyboardHandled":
        this._attachKeyboardEvents();
        break;
      case "onContentReady":
        this._initContentReadyAction();
        break;
      default:
        this.callBase(e);
    }
  },
  _isVisible() {
    var {
      visible: e
    } = this.option();
    return this.callBase() && e;
  },
  beginUpdate() {
    this._ready(!1), this.callBase();
  },
  endUpdate() {
    this.callBase(), this._initialized && this._ready(!0);
  },
  _ready(e) {
    if (arguments.length === 0)
      return this._isReady;
    this._isReady = e;
  },
  setAria() {
    if (!Me(arguments.length <= 0 ? void 0 : arguments[0]))
      DC(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], (arguments.length <= 2 ? void 0 : arguments[2]) || this._getAriaTarget());
    else {
      var e = (arguments.length <= 1 ? void 0 : arguments[1]) || this._getAriaTarget();
      B(arguments.length <= 0 ? void 0 : arguments[0], (t, i) => DC(t, i, e));
    }
  },
  isReady() {
    return this._ready();
  },
  repaint() {
    this._refresh();
  },
  focus() {
    nd.trigger(this._focusTarget());
  },
  registerKeyHandler(e, t) {
    var i = this._supportedKeys();
    this._supportedKeys = () => T(i, {
      [e]: t
    });
  }
});
Mt.getOptionsFromContainer = (e) => {
  var {
    name: t,
    fullName: i,
    value: n
  } = e, r = {};
  if (t === i)
    r = n;
  else {
    var a = i.split(".").pop();
    r[a] = n;
  }
  return r;
};
var go = qe();
const $e = c_(Je.ERROR_MESSAGES, {
  E1001: "Module '{0}'. Controller '{1}' is already registered",
  E1002: "Module '{0}'. Controller '{1}' does not inherit from DevExpress.ui.dxDataGrid.Controller",
  E1003: "Module '{0}'. View '{1}' is already registered",
  E1004: "Module '{0}'. View '{1}' does not inherit from DevExpress.ui.dxDataGrid.View",
  E1005: "Public method '{0}' is already registered",
  E1006: "Public method '{0}.{1}' does not exist",
  E1007: "State storing cannot be provided due to the restrictions of the browser",
  E1010: "The template does not contain the TextBox widget",
  E1011: 'Items cannot be deleted from the List. Implement the "remove" function in the data store',
  E1012: "Editing type '{0}' with the name '{1}' is unsupported",
  E1016: "Unexpected type of data source is provided for a lookup column",
  E1018: "The 'collapseAll' method cannot be called if you use a remote data source",
  E1019: "Search mode '{0}' is unavailable",
  E1020: "The type cannot be changed after initialization",
  E1021: "{0} '{1}' you are trying to remove does not exist",
  E1022: 'The "markers" option is given an invalid value. Assign an array instead',
  E1023: 'The "routes" option is given an invalid value. Assign an array instead',
  E1025: "This layout is too complex to render",
  E1026: 'The "calculateCustomSummary" function is missing from a field whose "summaryType" option is set to "custom"',
  E1031: "Unknown subscription in the Scheduler widget: '{0}'",
  E1032: "Unknown start date in an appointment: '{0}'",
  E1033: "Unknown step in the date navigator: '{0}'",
  E1034: "The browser does not implement an API for saving files",
  E1035: "The editor cannot be created: {0}",
  E1037: "Invalid structure of grouped data",
  E1038: "The browser does not support local storages for local web pages",
  E1039: "A cell's position cannot be calculated",
  E1040: "The '{0}' key value is not unique within the data array",
  E1041: "The '{0}' script is referenced after the DevExtreme scripts or not referenced at all",
  E1042: "{0} requires the key field to be specified",
  E1043: "Changes cannot be processed due to the incorrectly set key",
  E1044: "The key field specified by the keyExpr option does not match the key field specified in the data store",
  E1045: "Editing requires the key field to be specified in the data store",
  E1046: "The '{0}' key field is not found in data objects",
  E1047: 'The "{0}" field is not found in the fields array',
  E1048: 'The "{0}" operation is not found in the filterOperations array',
  E1049: "Column '{0}': filtering is allowed but the 'dataField' or 'name' option is not specified",
  E1050: "The validationRules option does not apply to third-party editors defined in the editCellTemplate",
  E1051: `HtmlEditor's valueType is "{0}", but the {0} converter was not imported.`,
  E1052: '{0} should have the "dataSource" option specified',
  E1053: 'The "buttons" option accepts an array that contains only objects or string values',
  E1054: "All text editor buttons must have names",
  E1055: 'One or several text editor buttons have invalid or non-unique "name" values',
  E1056: 'The {0} widget does not support buttons of the "{1}" type',
  E1058: 'The "startDayHour" must be earlier than the "endDayHour"',
  E1059: "The following column names are not unique: {0}",
  E1060: "All editable columns must have names",
  W1001: 'The "key" option cannot be modified after initialization',
  W1002: "An item with the key '{0}' does not exist",
  W1003: "A group with the key '{0}' in which you are trying to select items does not exist",
  W1004: "The item '{0}' you are trying to select in the group '{1}' does not exist",
  W1005: "Due to column data types being unspecified, data has been loaded twice in order to apply initial filter settings. To resolve this issue, specify data types for all grid columns.",
  W1006: "The map service returned the following error: '{0}'",
  W1007: "No item with key {0} was found in the data source, but this key was used as the parent key for item {1}",
  W1008: "Cannot scroll to the '{0}' date because it does not exist on the current view",
  W1009: "Searching works only if data is specified using the dataSource option",
  W1010: "The capability to select all items works with source data of plain structure only",
  W1011: 'The "keyExpr" option is not applied when dataSource is not an array',
  W1012: "The '{0}' key field is not found in data objects",
  W1013: 'The "message" field in the dialog component was renamed to "messageHtml". Change your code correspondingly. In addition, if you used HTML code in the message, make sure that it is secure',
  W1014: "The Floating Action Button exceeds the recommended speed dial action count. If you need to display more speed dial actions, increase the maxSpeedDialActionCount option value in the global config.",
  W1015: 'The "cellDuration" should divide the range from the "startDayHour" to the "endDayHour" into even intervals',
  W1016: "The '{0}' field in the HTML Editor toolbar item configuration was renamed to '{1}'. Please make a corresponding change in your code.",
  W1017: "The 'key' property is not specified for a lookup data source. Please specify it to prevent requests for the entire dataset when users filter data.",
  W1018: "Infinite scrolling may not work properly with multiple selection. To use these features together, set 'selection.deferred' to true or set 'selection.selectAllMode' to 'page'.",
  W1019: "Filter query string exceeds maximum length limit of {0} characters.",
  W1020: "hideEvent is ignored when the shading property is true",
  W1021: `The '{0}' is not rendered because none of the DOM elements match the value of the "container" property.`
});
var eI = ke(), XP = En.add, YP = Ar, ZP = _c, el = new U(), tI = "link[rel=dx-theme]", QP = "data-theme", JP = "data-active", AC = "dx-hairlines", iI = "any", zn, ig, Wn, xi, vr, OC = 15e3, kh = "dx.";
function N_() {
  if (!Re())
    return null;
  var e = g("<div>", zn).addClass("dx-theme-marker").appendTo(zn.documentElement), t;
  try {
    return t = eI.getComputedStyle(e.get(0)).fontFamily, !t || (t = t.replace(/["']/g, ""), t.substr(0, kh.length) !== kh) ? null : t.substr(kh.length);
  } finally {
    e.remove();
  }
}
function RC(e) {
  var t, i, n = !0;
  vr = e;
  function r() {
    vr = null, clearInterval(i), n = !0, go.fire(), go.empty(), el.resolve();
  }
  if (BC() || !OC)
    r();
  else {
    if (!n) {
      vr && (vr = e);
      return;
    }
    t = Date.now(), n = !1, i = setInterval(function() {
      var a = BC(), o = !a && Date.now() - t > OC;
      o && $e.log("W0004", vr), (a || o) && r();
    }, 10);
  }
}
function BC() {
  if (!vr)
    return !0;
  var e = vr === iI;
  if (el.state() === "resolved" && e)
    return !0;
  var t = N_();
  return t && e ? !0 : t === vr;
}
function eM() {
  var e = g(tI, zn);
  e.length && (Wn = {}, ig = g(E_("<link rel=stylesheet>"), zn), e.each(function() {
    var t = g(this, zn), i = t.attr(QP), n = t.attr("href"), r = t.attr(JP) === "true";
    Wn[i] = {
      url: n,
      isActive: r
    };
  }), e.last().after(ig), e.remove());
}
function tM(e) {
  var t = e ? e.split(".") : [], i = null;
  if (Wn) {
    if (e in Wn)
      return e;
    B(Wn, function(n, r) {
      var a = n.split(".");
      if (!(t[0] && a[0] !== t[0]) && !(t[1] && t[1] !== a[1]) && !(t[2] && t[2] !== a[2]) && ((!i || r.isActive) && (i = n), r.isActive))
        return !1;
    });
  }
  return i;
}
function iM(e) {
  try {
    e !== zn && (Wn = null);
  } catch {
    Wn = null;
  }
  zn = e;
}
function nI(e) {
  e = e || {}, iM(e.context || ee.getDocument()), zn && (eM(), xi = void 0, rn(e));
}
function rn(e) {
  if (!arguments.length)
    return xi = xi || N_(), xi;
  aI(YP()), e = e || {}, typeof e == "string" && (e = {
    theme: e
  });
  var t = e._autoInit, i = e.loadCallback, n;
  if (xi = tM(e.theme || xi), xi && (n = Wn[xi]), i && go.add(i), n)
    ig.attr("href", Wn[xi].url), (go.has() || el.state() !== "resolved" || e._forceTimeout) && RC(xi);
  else if (t)
    Re() && RC(iI), go.fire(), go.empty();
  else
    throw $e.Error("E0021", xi);
  el.done(() => rI(Tw(), xi));
}
function nM(e) {
  e = e || rn();
  var t = [], i = e && e.split(".");
  return i && (t.push("dx-theme-" + i[0], "dx-theme-" + i[0] + "-typography"), i.length > 1 && t.push("dx-color-scheme-" + i[1] + (St(e) ? "-" + i[2] : ""))), t;
}
var rd;
function rI(e, t) {
  rd = nM(t).join(" "), g(e).addClass(rd), function() {
    var i = Re() && eI.devicePixelRatio;
    if (!(!i || i < 2)) {
      var n = g("<div>");
      n.css("border", ".5px solid transparent"), g("body").append(n), Ne(n) === 1 && (g(e).addClass(AC), rd += " " + AC), n.remove();
    }
  }();
}
function aI(e) {
  g(e).removeClass(rd);
}
function $_(e, t) {
  return t || (t = xi || N_()), new RegExp(e).test(t);
}
function St(e) {
  return $_("material", e);
}
function oI(e) {
  return $_("generic", e);
}
function rM(e) {
  return $_("compact", e);
}
function aM(e, t) {
  var i = ee.getDocument(), n = i.createElement("span");
  n.style.position = "absolute", n.style.top = "-9999px", n.style.left = "-9999px", n.style.visibility = "hidden", n.style.fontFamily = "Arial", n.style.fontSize = "250px", n.style.fontWeight = t, n.innerHTML = e, i.body.appendChild(n);
  var r = n.offsetWidth;
  n.style.fontFamily = "Roboto, RobotoFallback, Arial";
  var a = n.offsetWidth;
  return n.parentNode.removeChild(n), r !== a;
}
function oM(e, t) {
  return new Promise((i) => {
    var n = () => {
      clearInterval(r), clearTimeout(a), i();
    }, r = setInterval(() => {
      aM(e, t) && n();
    }, 15), a = setTimeout(n, 2e3);
  });
}
function kC() {
  if (nI({
    _autoInit: !0,
    _forceTimeout: !0
  }), g(tI, zn).length)
    throw $e.Error("E0022");
}
Re() ? kC() : XP(kC);
ZP.add(function(e, t) {
  el.done(function() {
    aI(t), rI(e);
  });
});
ve.changed.add(function() {
  nI({
    _autoInit: !0
  });
});
var $r = (e) => {
  var t = e ?? st().rtlEnabled;
  return t ? "right" : "left";
}, Et = (e) => Ct(e) ? {
  width: e.outerWidth,
  height: e.outerHeight
} : e.getBoundingClientRect(), sM = En.add, sI = "DEVEXTREME_XHR_ERROR_UNLOAD", lM = function(e) {
  return [e[0], e.length < 3 ? "=" : String(e[1]).toLowerCase(), e.length < 2 ? !0 : e[e.length - 1]];
}, Zn = function(e) {
  return Array.isArray(e) || (e = [e]), wt(e, function(t) {
    var i = {
      selector: ce(t) || typeof t == "string" ? t : t.getter || t.field || t.selector,
      desc: !!(t.desc || String(t.dir).charAt(0).toLowerCase() === "d")
    };
    return t.compare && (i.compare = t.compare), i;
  });
}, uM = function() {
  var e = {
    timeout: "Network connection timeout",
    error: "Unspecified network error",
    parsererror: "Unexpected server response"
  }, t;
  return sM(function() {
    var i = ke();
    ee.listen(i, "beforeunload", function() {
      t = !0;
    });
  }), function(i, n) {
    return t ? sI : i.status < 400 ? function(r) {
      var a = e[r];
      return a || r;
    }(n) : i.statusText;
  };
}(), H_ = {
  count: {
    seed: 0,
    step: function(e) {
      return 1 + e;
    }
  },
  sum: {
    seed: 0,
    step: function(e, t) {
      return e + t;
    }
  },
  min: {
    step: function(e, t) {
      return t < e ? t : e;
    }
  },
  max: {
    step: function(e, t) {
      return t > e ? t : e;
    }
  },
  avg: {
    seed: [0, 0],
    step: function(e, t) {
      return [e[0] + t, e[1] + 1];
    },
    finalize: function(e) {
      return e[1] ? e[0] / e[1] : NaN;
    }
  }
}, dM = function() {
  var e = 0, t;
  return {
    obtain: function() {
      e === 0 && (t = new U()), e++;
    },
    release: function() {
      e--, e < 1 && t.resolve();
    },
    promise: function() {
      var i = e === 0 ? new U().resolve() : t;
      return i.promise();
    },
    reset: function() {
      e = 0, t && t.resolve();
    }
  };
}();
function cM(e) {
  return /^(and|&&|&)$/i.test(e);
}
var bl = function(e, t, i) {
  if (Array.isArray(e)) {
    for (var n = wt(t, function(o, s) {
      return s;
    }), r, a = 0; a < n.length; a++)
      if (r = n[a], !et(t[r], i[r], 0, !1))
        return !1;
    return !0;
  }
  return et(t, i, 0, !1);
}, hM = function(e) {
  return e[0] === "!" && Array.isArray(e[1]);
}, pM = function(e) {
  return e === "and" || e === "or";
}, fM = function(e) {
  var t = e[0], i = e[1];
  return !!(Array.isArray(t) || ce(t) && (Array.isArray(i) || ce(i) || pM(i)));
}, So = function() {
  var e = new U();
  return e.resolve.apply(e, arguments).promise();
}, lI = function() {
  var e = new U();
  return e.reject.apply(e, arguments).promise();
};
function gM(e, t) {
  var i;
  return function() {
    return i || (i = setTimeout(() => {
      i = void 0, e.call(this);
    }, ce(t) ? t() : t)), i;
  };
}
function _M(e, t) {
  var i = [], n = gM(function() {
    e.call(this, i), i = [];
  }, t);
  return function(r) {
    return Array.isArray(r) && i.push(...r), n.call(this, i);
  };
}
var ko = function(e) {
  return e === 0 ? 0 : e / Math.abs(e);
}, Zt = function(e, t, i) {
  var n = !t && t !== 0, r = !i && i !== 0;
  return n && (t = r ? e : Math.min(e, i)), r && (i = n ? e : Math.max(e, t)), Math.min(Math.max(e, t), i);
}, Gn = function(e, t, i) {
  return e >= t && e <= i;
};
function FC(e) {
  return Math.abs(parseInt(e.toExponential().split("e")[1]));
}
function vM(e) {
  var t = e.toExponential().split("e"), i = parseFloat(t[0]), n = parseInt(t[1]);
  return {
    exponent: n,
    mantissa: i
  };
}
function uI(e, t) {
  var i = vM(e);
  return parseFloat("".concat(i.mantissa, "e").concat(i.exponent + t));
}
function mM() {
  return 3e-4.toPrecision(3) !== "0.000300";
}
function dI(e, t) {
  var i = CM(t || 0) + 2, n = e.toString().split("."), r = e, a = Math.abs(e), o, s = Lm(e), l = a > 1 ? 10 : 0;
  return n.length === 1 ? e : (s || (Lm(t) && (i = n[0].length + FC(t)), e = a, e = e - Math.floor(e) + l), i = mM() && FC(e) > 6 || i > 7 ? 15 : 7, !s && (o = parseFloat(e.toPrecision(i)).toString().split("."), o[0] === l.toString()) ? parseFloat(n[0] + "." + o[1]) : parseFloat(r.toPrecision(i)));
}
function CM(e) {
  var t = e.toString();
  if (t.indexOf(".") < 0)
    return 0;
  var i = t.split("."), n = i[1].indexOf("e");
  return n >= 0 ? n : i[1].length;
}
var xM = {
  millisecond: 1,
  second: 1e3,
  minute: 6e4,
  hour: 36e5,
  day: 864e5,
  week: 6048e5,
  month: 2592e6,
  quarter: 7776e6,
  year: 31536e6
};
function Sc(e) {
  return xM[e];
}
var tl = 7, PC = 4, MC = 7, LC = 52, As = ["millisecond", "second", "minute", "hour", "day", "week", "month", "quarter", "year"], yM = function(e, t, i) {
  var n = t.getTime() - e.getTime(), r = Sc(i) || 1;
  return Math.floor(n / r);
}, bM = function(e, t) {
  var i = Ec(e);
  switch (i) {
    case "millisecond":
      return "second";
    case "second":
      return "minute";
    case "minute":
      return "hour";
    case "hour":
      return "day";
    case "day":
      return t ? "week" : "month";
    case "week":
      return "month";
    case "month":
      return "quarter";
    case "quarter":
    case "year":
      return "year";
    default:
      return 0;
  }
}, cI = function(e) {
  var t, i, n, r = ["millisecond", "second", "minute", "hour", "day", "month", "year"], a = {};
  for (t = r.length - 1; t >= 0; t--)
    n = r[t], i = Math.floor(e / Sc(n)), i > 0 && (a[n + "s"] = i, e -= kd(n, i));
  return a;
}, SM = function(e) {
  var t = 0;
  return De(e) && B(e, function(i, n) {
    t += kd(i.substr(0, i.length - 1), n);
  }), Te(e) && (t = kd(e, 1)), t;
};
function kd(e, t) {
  return Sc(e) * t;
}
function Ec(e) {
  var t = -1, i;
  return Te(e) ? e : De(e) ? (B(e, function(n, r) {
    for (i = 0; i < As.length; i++)
      r && (n === As[i] + "s" || n === As[i]) && t < i && (t = i);
  }), As[t]) : "";
}
var EM = {
  millisecond: "millisecond",
  second: "longtime",
  minute: "shorttime",
  hour: "shorttime",
  day: "day",
  week: "day",
  month: "month",
  quarter: "quarter",
  year: "year"
};
function wM(e) {
  return EM[Ec(e)] || "";
}
var hI = function(e) {
  return Math.floor(e / 3);
}, pI = function(e) {
  return 3 * hI(e);
};
function fI(e, t, i, n) {
  e = new Date(e.getTime());
  var r = new Date(e.getTime()), a, o, s = Ec(t);
  switch (s) {
    case "second":
      e = new Date(1e3 * Math.floor(r.getTime() / 1e3));
      break;
    case "minute":
      e = new Date(6e4 * Math.floor(r.getTime() / 6e4));
      break;
    case "hour":
      e = new Date(36e5 * Math.floor(r.getTime() / 36e5));
      break;
    case "year":
      e.setMonth(0);
    case "month":
      e.setDate(1);
    case "day":
      e.setHours(0, 0, 0, 0);
      break;
    case "week":
      e = xI(e, n || 0), e.setHours(0, 0, 0, 0);
      break;
    case "quarter":
      a = pI(e.getMonth()), o = e.getMonth(), e.setDate(1), e.setHours(0, 0, 0, 0), o !== a && e.setMonth(a);
  }
  return i && s !== "hour" && s !== "minute" && s !== "second" && SI(r, e), e;
}
function gI(e) {
  return fI(e, "day");
}
var IM = function(e) {
  var t = gI(e);
  return t.setDate(t.getDate() + 1), new Date(t.getTime() - 1);
}, TM = function(e, t) {
  var i = 0, n = {
    year: e.getFullYear() !== t.getFullYear(),
    month: e.getMonth() !== t.getMonth(),
    day: e.getDate() !== t.getDate(),
    hour: e.getHours() !== t.getHours(),
    minute: e.getMinutes() !== t.getMinutes(),
    second: e.getSeconds() !== t.getSeconds(),
    millisecond: e.getMilliseconds() !== t.getMilliseconds()
  };
  return B(n, function(r, a) {
    a && i++;
  }), i === 0 && EI(e, t) !== 0 && (n.hour = !0, i++), n.count = i, n;
};
function _I(e, t, i) {
  var n = new Date(e.getTime()), r = Te(t) ? mI(t.toLowerCase()) : rt(t) ? cI(t) : t;
  return r.years && n.setFullYear(n.getFullYear() + r.years * i), r.quarters && n.setMonth(n.getMonth() + 3 * r.quarters * i), r.months && n.setMonth(n.getMonth() + r.months * i), r.weeks && n.setDate(n.getDate() + 7 * r.weeks * i), r.days && n.setDate(n.getDate() + r.days * i), r.hours && n.setTime(n.getTime() + 36e5 * r.hours * i), r.minutes && n.setTime(n.getTime() + 6e4 * r.minutes * i), r.seconds && n.setTime(n.getTime() + 1e3 * r.seconds * i), r.milliseconds && n.setTime(n.getTime() + r.milliseconds * i), n;
}
var vI = function(e, t, i) {
  var n = i ? -1 : 1;
  return Qt(e) ? _I(e, t, n) : dI(e + t * n, t);
}, DM = function(e, t, i) {
  var n = [], r;
  for (n.push(Qt(e) ? new Date(e.getTime()) : e), r = e; r < t; )
    r = vI(r, i), n.push(r);
  return n;
}, AM = function(e, t) {
  if (e === "month")
    return yi(t.getFullYear(), t.getMonth(), 1);
  if (e === "year")
    return yi(t.getFullYear(), 0, t.getDate());
  if (e === "decade")
    return yi(El(t), t.getMonth(), t.getDate());
  if (e === "century")
    return yi(Sl(t), t.getMonth(), t.getDate());
}, OM = function(e, t) {
  if (e === "month")
    return yi(t.getFullYear(), t.getMonth(), Fd(t));
  if (e === "year")
    return yi(t.getFullYear(), 11, t.getDate());
  if (e === "decade")
    return yi(El(t) + 9, t.getMonth(), t.getDate());
  if (e === "century")
    return yi(Sl(t) + 90, t.getMonth(), t.getDate());
}, RM = function(e, t) {
  var i = yi(t.getFullYear(), t.getMonth(), 1);
  return e === "month" || (i.setMonth(0), e === "year") || (e === "decade" && i.setFullYear(El(t)), e === "century" && i.setFullYear(Sl(t))), i;
}, BM = function(e, t) {
  var i = new Date(t);
  return i.setDate(Fd(t)), e === "month" || (i.setMonth(11), i.setDate(Fd(i)), e === "year") || (e === "decade" && i.setFullYear(El(t) + 9), e === "century" && i.setFullYear(Sl(t) + 99)), i;
};
function Fd(e) {
  var t = yi(e.getFullYear(), e.getMonth() + 1, 0);
  return t.getDate();
}
var kM = function(e) {
  switch (e) {
    case "month":
      return "year";
    case "year":
      return "decade";
    case "decade":
      return "century";
  }
}, FM = function(e) {
  switch (e) {
    case "century":
      return "decade";
    case "decade":
      return "year";
    case "year":
      return "month";
  }
}, PM = function(e) {
  var t = 1;
  return e === "year" && (t = 12), e === "decade" && (t = 120), e === "century" && (t = 1200), t;
}, MM = function(e) {
  var t = 1;
  return e === "decade" && (t = 12), e === "century" && (t = 120), t;
};
function mI(e) {
  var t = {};
  switch (e) {
    case "year":
      t.years = 1;
      break;
    case "month":
      t.months = 1;
      break;
    case "quarter":
      t.months = 3;
      break;
    case "week":
      t.weeks = 1;
      break;
    case "day":
      t.days = 1;
      break;
    case "hour":
      t.hours = 1;
      break;
    case "minute":
      t.minutes = 1;
      break;
    case "second":
      t.seconds = 1;
      break;
    case "millisecond":
      t.milliseconds = 1;
  }
  return t;
}
function LM(e, t) {
  return ng(e, t) && e.getDate() === t.getDate();
}
function ng(e, t) {
  return CI(e, t) && e.getMonth() === t.getMonth();
}
function CI(e, t) {
  return e && t && e.getFullYear() === t.getFullYear();
}
function VM(e, t) {
  return e && t && e.getHours() === t.getHours() && e.getMinutes() === t.getMinutes();
}
var NM = function(e, t) {
  if (!(!x(e) || !x(t))) {
    var i = e.getFullYear() - e.getFullYear() % 10, n = t.getFullYear() - t.getFullYear() % 10;
    return e && t && i === n;
  }
}, $M = function(e, t) {
  if (!(!x(e) || !x(t))) {
    var i = e.getFullYear() - e.getFullYear() % 100, n = t.getFullYear() - t.getFullYear() % 100;
    return e && t && i === n;
  }
};
function Sl(e) {
  return e && e.getFullYear() - e.getFullYear() % 100;
}
function El(e) {
  return e && e.getFullYear() - e.getFullYear() % 10;
}
var HM = function() {
  return "yyyy/MM/dd";
}, zM = function(e) {
  if (x(e))
    return yi(e.getFullYear(), e.getMonth(), 1);
}, WM = function(e) {
  if (x(e))
    return yi(e.getFullYear(), e.getMonth() + 1, 0);
};
function xI(e, t) {
  var i = (e.getDay() - t + tl) % tl, n = new Date(e);
  return n.setDate(e.getDate() - i), n;
}
function VC(e) {
  return Date.UTC(e.getFullYear(), e.getMonth(), e.getDate());
}
function GM(e) {
  var t = VC(e) - VC(yI(e.getFullYear()));
  return 1 + Math.floor(t / Sc("day"));
}
function yI(e) {
  return new Date(e, 0, 1);
}
function Fh(e) {
  return new Date(e, 11, 31);
}
function NC(e, t) {
  var i = e.getDay() - t + 1;
  return i <= 0 && (i += tl), i;
}
function rg(e, t, i) {
  var n = NC(yI(e.getFullYear()), t), r = NC(Fh(e.getFullYear()), t), a = tl - n + 1, o = Math.ceil((GM(e) - a) / 7);
  switch (i) {
    case "fullWeek":
      if (a === tl && o++, o === 0) {
        var s = Fh(e.getFullYear() - 1);
        return rg(s, t, i);
      }
      return o;
    case "firstDay":
      a > 0 && o++;
      var l = n === MC || r === MC;
      return (o > LC && !l || o === 54) && (o = 1), o;
    case "firstFourDays":
      a > 3 && o++;
      var u = n === PC || r === PC;
      if (o > LC && !u && (o = 1), o === 0) {
        var d = Fh(e.getFullYear() - 1);
        return rg(d, t, i);
      }
      return o;
  }
}
var KM = function(e, t) {
  var i = be.getDatesInterval(e, t, "day"), n = new Date(e);
  return i >= 6 && (n = new Date(n.setDate(n.getDate() + 7))), n;
}, UM = function(e, t, i, n) {
  return n === "date" && (t = t && be.correctDateWithUnitBeginning(t, "day"), i = i && be.correctDateWithUnitBeginning(i, "day"), e = e && be.correctDateWithUnitBeginning(e, "day")), bI(e, t, i) === e;
}, jM = function(e) {
  var {
    firstMin: t,
    firstMax: i,
    secondMin: n,
    secondMax: r
  } = e;
  return t <= n && n <= i || t > n && t < r || t < r && i > r;
}, qM = function(e) {
  var t = Math.floor(e), i = e % 1 * 60;
  return {
    hours: t,
    minutes: i
  };
}, XM = function(e, t) {
  var i = this.dateTimeFromDecimal(t), n = new Date(e);
  return (e.getHours() === i.hours && e.getMinutes() < i.minutes || e.getHours() < i.hours) && n.setHours(i.hours, i.minutes, 0, 0), n;
};
function bI(e, t, i) {
  var n = e;
  return x(e) ? (x(t) && e < t && (n = t), x(i) && e > i && (n = i), n) : e;
}
function SI(e, t) {
  if (x(e)) {
    var i = t.getHours() - e.getHours();
    if (i !== 0) {
      var n = i === 1 || i === -23 ? -1 : 1, r = new Date(t.getTime() + 36e5 * n);
      (n > 0 || r.getDate() === t.getDate()) && t.setTime(r.getTime());
    }
  }
}
var YM = function(e) {
  var t = new Date(e.getTime());
  return t.setHours(t.getHours() + 1), t.setMinutes(0), t;
};
function EI(e, t) {
  return 60 * (t.getTimezoneOffset() - e.getTimezoneOffset()) * 1e3;
}
var ZM = function(e) {
  return new Date(e);
}, QM = function(e, t, i) {
  for (var n = [], r = new Date(e.getTime()); r < t; )
    n.push(new Date(r.getTime())), r = this.addInterval(r, i);
  return n;
}, yi = function(e) {
  var t = new Date(...arguments);
  return t.setFullYear(e), t;
}, be = {
  dateUnitIntervals: As,
  convertMillisecondsToDateUnits: cI,
  dateToMilliseconds: SM,
  getNextDateUnit: bM,
  convertDateUnitToMilliseconds: kd,
  getDateUnitInterval: Ec,
  getDateFormatByTickInterval: wM,
  getDatesDifferences: TM,
  correctDateWithUnitBeginning: fI,
  trimTime: gI,
  setToDayEnd: IM,
  roundDateByStartDayHour: XM,
  dateTimeFromDecimal: qM,
  addDateInterval: _I,
  addInterval: vI,
  getSequenceByInterval: DM,
  getDateIntervalByString: mI,
  sameHoursAndMinutes: VM,
  sameDate: LM,
  sameMonthAndYear: ng,
  sameMonth: ng,
  sameYear: CI,
  sameDecade: NM,
  sameCentury: $M,
  getDifferenceInMonth: PM,
  getDifferenceInMonthForCells: MM,
  getFirstYearInDecade: El,
  getFirstDecadeInCentury: Sl,
  getShortDateFormat: HM,
  getViewFirstCellDate: AM,
  getViewLastCellDate: OM,
  getViewDown: FM,
  getViewUp: kM,
  getLastMonthDay: Fd,
  getLastMonthDate: WM,
  getFirstMonthDate: zM,
  getFirstWeekDate: xI,
  getWeekNumber: rg,
  normalizeDateByWeek: KM,
  getQuarter: hI,
  getFirstQuarterMonth: pI,
  dateInRange: UM,
  intervalsOverlap: jM,
  roundToHour: YM,
  normalizeDate: bI,
  getViewMinBoundaryDate: RM,
  getViewMaxBoundaryDate: BM,
  fixTimezoneGap: SI,
  getTimezonesDifference: EI,
  makeDate: ZM,
  getDatesInterval: yM,
  getDatesOfInterval: QM,
  createDateWithFullYear: yi
};
be.sameView = function(e, t, i) {
  return be[Qs("same " + e)](t, i);
};
var JM = 10;
function eL(e) {
  var t = ko(e);
  return t * Math.round(Math.abs(e));
}
function tL(e, t) {
  var i = Math.pow(JM, t), n = uI(e, t);
  return eL(n) / i;
}
function wI(e, t) {
  var i = t || 0, n = i > 0 ? tL(...arguments) : e;
  return n.toFixed(i);
}
var iL = {
  thousandsSeparator: ",",
  decimalSeparator: "."
}, $C = "'", nL = 15, rL = 2;
function aL(e) {
  return e.split(",").slice(1).map(function(t) {
    var i = 0;
    return t.split("").filter(function(n, r) {
      i += n === "'";
      var a = n === "#" || n === "0", o = i % 2;
      return a && !o;
    }).length;
  });
}
function oL(e) {
  var t = e.split(";");
  return t.length === 1 && t.push("-" + t[0]), t;
}
function Ph(e) {
  return e.toString().split("").reverse().join("");
}
function sL(e) {
  return e.indexOf("%") !== -1 && !e.match(/'[^']*%[^']*'/g);
}
function II(e) {
  return e.replace(/'.+'/g, "");
}
function HC(e) {
  if (!e)
    return 0;
  var t = II(e);
  return t.length - t.replace(/[#]/g, "").length;
}
function zC(e) {
  if (!e)
    return 0;
  var t = II(e);
  return t.length - t.replace(/[0]/g, "").length;
}
function WC(e, t, i) {
  if (!e)
    return "";
  for (e.length > i && (e = e.substr(0, i)); e.length > t && e.slice(-1) === "0"; )
    e = e.substr(0, e.length - 1);
  for (; e.length < t; )
    e += "0";
  return e;
}
function lL(e, t, i) {
  if (!t.length)
    return e;
  for (var n = [], r = 0; e; ) {
    var a = t[r];
    if (!a)
      break;
    n.push(e.slice(0, a)), e = e.slice(a), r < t.length - 1 && r++;
  }
  return n.join(i);
}
function GC(e, t) {
  return e.split($C).map(function(i, n) {
    var r = n % 2;
    return !i && r ? $C : r ? i : i.replace(/[,#0]+/, t);
  }).join("");
}
function uL(e) {
  for (var t = !1, i = 0; i < e.length; i++)
    if (e[i] === "'" && (t = !t), e[i] === "." && !t)
      return i;
  return e.length;
}
function dL(e, t) {
  return t = t || iL, function(i) {
    if (typeof i != "number" || isNaN(i))
      return "";
    var n = oL(e), r = 1 / i === 1 / 0, a = i > 0 || r, o = n[a ? 0 : 1], s = uL(o), l = [o.substr(0, s), o.substr(s + 1)], u = zC(l[1]), d = u + HC(l[1]);
    sL(o) && (i = uI(i, rL)), a || (i = -i);
    var c = zC(l[0]), h = HC(l[0]) || t.unlimitedIntegerDigits ? void 0 : c, p = Math.floor(i).toString().length, f = Zt(d, 0, nL - p), v = aL(l[0]).reverse(), m = wI(i, f < 0 ? 0 : f).split("."), C = WC(Ph(m[0]), c, h), b = WC(m[1], u, d);
    C = lL(C, v, t.thousandsSeparator);
    var A = Ph(GC(Ph(l[0]), C)), R = d ? GC(l[1], b) : "", k = A + (R.match(/\d/) ? t.decimalSeparator : "") + R;
    return k;
  };
}
function Ms(e, t, i) {
  var n = (t ? 0.01 : 1) * parseFloat(e) || 0;
  return i ? -n : n;
}
function KC(e, t, i, n) {
  var r = e, a, o, s;
  do
    s && (a = o.length === s.length ? "0" : "1", e = n ? a + e : e + a), o = s || t(Ms(r, i)), r = n ? "1" + r : r + "1", s = t(Ms(r, i));
  while (o !== s && (n ? o.length === s.length : o.length <= s.length));
  if (n && s.length > o.length) {
    var l = t(12345).indexOf("12345") === -1;
    do
      e = "1" + e;
    while (l && Ms(e, i) < 1e5);
  }
  return e;
}
function UC(e, t, i, n) {
  var r = t(Ms(e, i, n)), a = e.split("."), o = a[0] + ".3" + a[1].slice(1), s = Ms(o, i, n), l = t(s).indexOf("3") - 1;
  return r = r.replace(/(\d)\D(\d)/g, "$1,$2"), l >= 0 && (r = r.slice(0, l) + "." + r.slice(l + 1)), r = r.replace(/1+/, "1").replace(/1/g, "#"), i || (r = r.replace("%", "'%'")), r;
}
function cL(e) {
  var t = ".", i = e(1).indexOf("100") >= 0;
  t = KC(t, e, i, !0), t = KC(t, e, i, !1);
  var n = UC(t, e, i, !1), r = UC(t, e, i, !0);
  return r === "-" + n ? n : n + ";" + r;
}
const hL = {
  _formatNumberCore: function(e, t, i) {
    if (t === "currency") {
      i.precision = i.precision || 0;
      var n = this.format(e, T({}, i, {
        type: "fixedpoint"
      })), r = this.getCurrencySymbol().symbol.replace(/\$/g, "$$$$");
      return n = n.replace(/^(\D*)(\d.*)/, "$1" + r + "$2"), n;
    }
    return this.callBase.apply(this, arguments);
  },
  getCurrencySymbol: function() {
    return {
      symbol: "$"
    };
  },
  getOpenXmlCurrencyFormat: function() {
    return "$#,##0{0}_);\\($#,##0{0}\\)";
  }
}, pL = {
  "en-150": "en-001",
  "en-AG": "en-001",
  "en-AI": "en-001",
  "en-AU": "en-001",
  "en-BB": "en-001",
  "en-BM": "en-001",
  "en-BS": "en-001",
  "en-BW": "en-001",
  "en-BZ": "en-001",
  "en-CC": "en-001",
  "en-CK": "en-001",
  "en-CM": "en-001",
  "en-CX": "en-001",
  "en-CY": "en-001",
  "en-DG": "en-001",
  "en-DM": "en-001",
  "en-ER": "en-001",
  "en-FJ": "en-001",
  "en-FK": "en-001",
  "en-FM": "en-001",
  "en-GB": "en-001",
  "en-GD": "en-001",
  "en-GG": "en-001",
  "en-GH": "en-001",
  "en-GI": "en-001",
  "en-GM": "en-001",
  "en-GY": "en-001",
  "en-HK": "en-001",
  "en-IE": "en-001",
  "en-IL": "en-001",
  "en-IM": "en-001",
  "en-IN": "en-001",
  "en-IO": "en-001",
  "en-JE": "en-001",
  "en-JM": "en-001",
  "en-KE": "en-001",
  "en-KI": "en-001",
  "en-KN": "en-001",
  "en-KY": "en-001",
  "en-LC": "en-001",
  "en-LR": "en-001",
  "en-LS": "en-001",
  "en-MG": "en-001",
  "en-MO": "en-001",
  "en-MS": "en-001",
  "en-MT": "en-001",
  "en-MU": "en-001",
  "en-MV": "en-001",
  "en-MW": "en-001",
  "en-MY": "en-001",
  "en-NA": "en-001",
  "en-NF": "en-001",
  "en-NG": "en-001",
  "en-NR": "en-001",
  "en-NU": "en-001",
  "en-NZ": "en-001",
  "en-PG": "en-001",
  "en-PK": "en-001",
  "en-PN": "en-001",
  "en-PW": "en-001",
  "en-RW": "en-001",
  "en-SB": "en-001",
  "en-SC": "en-001",
  "en-SD": "en-001",
  "en-SG": "en-001",
  "en-SH": "en-001",
  "en-SL": "en-001",
  "en-SS": "en-001",
  "en-SX": "en-001",
  "en-SZ": "en-001",
  "en-TC": "en-001",
  "en-TK": "en-001",
  "en-TO": "en-001",
  "en-TT": "en-001",
  "en-TV": "en-001",
  "en-TZ": "en-001",
  "en-UG": "en-001",
  "en-VC": "en-001",
  "en-VG": "en-001",
  "en-VU": "en-001",
  "en-WS": "en-001",
  "en-ZA": "en-001",
  "en-ZM": "en-001",
  "en-ZW": "en-001",
  "en-AT": "en-150",
  "en-BE": "en-150",
  "en-CH": "en-150",
  "en-DE": "en-150",
  "en-DK": "en-150",
  "en-FI": "en-150",
  "en-NL": "en-150",
  "en-SE": "en-150",
  "en-SI": "en-150",
  "hi-Latn": "en-IN",
  "es-AR": "es-419",
  "es-BO": "es-419",
  "es-BR": "es-419",
  "es-BZ": "es-419",
  "es-CL": "es-419",
  "es-CO": "es-419",
  "es-CR": "es-419",
  "es-CU": "es-419",
  "es-DO": "es-419",
  "es-EC": "es-419",
  "es-GT": "es-419",
  "es-HN": "es-419",
  "es-MX": "es-419",
  "es-NI": "es-419",
  "es-PA": "es-419",
  "es-PE": "es-419",
  "es-PR": "es-419",
  "es-PY": "es-419",
  "es-SV": "es-419",
  "es-US": "es-419",
  "es-UY": "es-419",
  "es-VE": "es-419",
  nb: "no",
  nn: "no",
  "pt-AO": "pt-PT",
  "pt-CH": "pt-PT",
  "pt-CV": "pt-PT",
  "pt-FR": "pt-PT",
  "pt-GQ": "pt-PT",
  "pt-GW": "pt-PT",
  "pt-LU": "pt-PT",
  "pt-MO": "pt-PT",
  "pt-MZ": "pt-PT",
  "pt-ST": "pt-PT",
  "pt-TL": "pt-PT",
  "az-Arab": "und",
  "az-Cyrl": "und",
  "bal-Latn": "und",
  "blt-Latn": "und",
  "bm-Nkoo": "und",
  "bs-Cyrl": "und",
  "byn-Latn": "und",
  "cu-Glag": "und",
  "dje-Arab": "und",
  "dyo-Arab": "und",
  "en-Dsrt": "und",
  "en-Shaw": "und",
  "ff-Adlm": "und",
  "ff-Arab": "und",
  "ha-Arab": "und",
  "iu-Latn": "und",
  "kk-Arab": "und",
  "ks-Deva": "und",
  "ku-Arab": "und",
  "ky-Arab": "und",
  "ky-Latn": "und",
  "ml-Arab": "und",
  "mn-Mong": "und",
  "mni-Mtei": "und",
  "ms-Arab": "und",
  "pa-Arab": "und",
  "sat-Deva": "und",
  "sd-Deva": "und",
  "sd-Khoj": "und",
  "sd-Sind": "und",
  "shi-Latn": "und",
  "so-Arab": "und",
  "sr-Latn": "und",
  "sw-Arab": "und",
  "tg-Arab": "und",
  "ug-Cyrl": "und",
  "uz-Arab": "und",
  "uz-Cyrl": "und",
  "vai-Latn": "und",
  "wo-Arab": "und",
  "yo-Arab": "und",
  "yue-Hans": "und",
  "zh-Hant": "und",
  "zh-Hant-MO": "zh-Hant-HK"
};
var fL = "-";
const gL = (e, t) => {
  var i = e[t];
  return i ? i !== "root" && i : t.substr(0, t.lastIndexOf(fL));
};
var Mh = "en";
const Ii = zi({
  locale: (() => {
    var e = Mh;
    return (t) => {
      if (!t)
        return e;
      e = t;
    };
  })(),
  getValueByClosestLocale: function(e) {
    for (var t = this.locale(), i = e(t), n; !i && !n; )
      t = gL(pL, t), t ? i = e(t) : n = !0;
    return i === void 0 && t !== Mh ? e(Mh) : i;
  }
}), _L = (e, t) => {
  if (t) {
    var i = e;
    if (typeof e == "string") {
      i = "";
      for (var n = 0; n < e.length; n++)
        e[n] !== "$" && (i += "\\"), i += e[n];
    }
    for (var r = {
      ".00": "{0}",
      "'": "\\'",
      "\\(": "\\(",
      "\\)": "\\)",
      " ": "\\ ",
      '"': "&quot;",
      "\\¤": i
    }, a = t.split(";"), o = 0; o < a.length; o++)
      for (var s in r)
        Object.prototype.hasOwnProperty.call(r, s) && (a[o] = a[o].replace(new RegExp(s, "g"), r[s]));
    return a.length === 2 ? a[0] + "_);" + a[1] : a[0];
  }
}, vL = {
  af: "¤#,##0.00;(¤#,##0.00)",
  "af-NA": "¤#,##0.00;(¤#,##0.00)",
  agq: "#,##0.00¤",
  ak: "¤#,##0.00",
  am: "¤#,##0.00;(¤#,##0.00)",
  ar: "¤#,##0.00;(¤#,##0.00)",
  "ar-AE": "¤#,##0.00;(¤#,##0.00)",
  "ar-BH": "¤#,##0.00;(¤#,##0.00)",
  "ar-DJ": "¤#,##0.00;(¤#,##0.00)",
  "ar-DZ": "¤#,##0.00;(¤#,##0.00)",
  "ar-EG": "¤#,##0.00;(¤#,##0.00)",
  "ar-EH": "¤#,##0.00;(¤#,##0.00)",
  "ar-ER": "¤#,##0.00;(¤#,##0.00)",
  "ar-IL": "¤#,##0.00;(¤#,##0.00)",
  "ar-IQ": "¤#,##0.00;(¤#,##0.00)",
  "ar-JO": "¤#,##0.00;(¤#,##0.00)",
  "ar-KM": "¤#,##0.00;(¤#,##0.00)",
  "ar-KW": "¤#,##0.00;(¤#,##0.00)",
  "ar-LB": "¤#,##0.00;(¤#,##0.00)",
  "ar-LY": "¤#,##0.00;(¤#,##0.00)",
  "ar-MA": "¤#,##0.00;(¤#,##0.00)",
  "ar-MR": "¤#,##0.00;(¤#,##0.00)",
  "ar-OM": "¤#,##0.00;(¤#,##0.00)",
  "ar-PS": "¤#,##0.00;(¤#,##0.00)",
  "ar-QA": "¤#,##0.00;(¤#,##0.00)",
  "ar-SA": "¤#,##0.00;(¤#,##0.00)",
  "ar-SD": "¤#,##0.00;(¤#,##0.00)",
  "ar-SO": "¤#,##0.00;(¤#,##0.00)",
  "ar-SS": "¤#,##0.00;(¤#,##0.00)",
  "ar-SY": "¤#,##0.00;(¤#,##0.00)",
  "ar-TD": "¤#,##0.00;(¤#,##0.00)",
  "ar-TN": "¤#,##0.00;(¤#,##0.00)",
  "ar-YE": "¤#,##0.00;(¤#,##0.00)",
  as: "¤ #,##,##0.00",
  asa: "#,##0.00 ¤",
  ast: "#,##0.00 ¤",
  az: "#,##0.00 ¤",
  "az-Cyrl": "#,##0.00 ¤",
  "az-Latn": "#,##0.00 ¤",
  bas: "#,##0.00 ¤",
  be: "#,##0.00 ¤",
  "be-tarask": "#,##0.00 ¤",
  bem: "¤#,##0.00;(¤#,##0.00)",
  bez: "#,##0.00¤",
  bg: "0.00 ¤;(0.00 ¤)",
  bm: "¤#,##0.00;(¤#,##0.00)",
  bn: "#,##,##0.00¤;(#,##,##0.00¤)",
  "bn-IN": "#,##,##0.00¤;(#,##,##0.00¤)",
  bo: "¤ #,##0.00",
  "bo-IN": "¤ #,##0.00",
  br: "#,##0.00 ¤",
  brx: "¤ #,##,##0.00",
  bs: "#,##0.00 ¤",
  "bs-Cyrl": "#,##0.00 ¤",
  "bs-Latn": "#,##0.00 ¤",
  ca: "#,##0.00 ¤;(#,##0.00 ¤)",
  "ca-AD": "#,##0.00 ¤;(#,##0.00 ¤)",
  "ca-ES-valencia": "#,##0.00 ¤;(#,##0.00 ¤)",
  "ca-FR": "#,##0.00 ¤;(#,##0.00 ¤)",
  "ca-IT": "#,##0.00 ¤;(#,##0.00 ¤)",
  ccp: "#,##,##0.00¤;(#,##,##0.00¤)",
  "ccp-IN": "#,##,##0.00¤;(#,##,##0.00¤)",
  ce: "#,##0.00 ¤",
  ceb: "¤#,##0.00;(¤#,##0.00)",
  cgg: "¤#,##0.00",
  chr: "¤#,##0.00;(¤#,##0.00)",
  ckb: "¤ #,##0.00",
  "ckb-IR": "¤ #,##0.00",
  cs: "#,##0.00 ¤",
  cy: "¤#,##0.00;(¤#,##0.00)",
  da: "#,##0.00 ¤",
  "da-GL": "#,##0.00 ¤",
  dav: "¤#,##0.00;(¤#,##0.00)",
  de: "#,##0.00 ¤",
  "de-AT": "#,##0.00 ¤",
  "de-BE": "#,##0.00 ¤",
  "de-CH": "#,##0.00 ¤",
  "de-IT": "#,##0.00 ¤",
  "de-LI": "#,##0.00 ¤",
  "de-LU": "#,##0.00 ¤",
  dje: "#,##0.00¤",
  doi: "¤#,##0.00",
  dsb: "#,##0.00 ¤",
  dua: "#,##0.00 ¤",
  dyo: "#,##0.00 ¤",
  dz: "¤#,##,##0.00",
  ebu: "¤#,##0.00;(¤#,##0.00)",
  ee: "¤#,##0.00;(¤#,##0.00)",
  "ee-TG": "¤#,##0.00;(¤#,##0.00)",
  el: "#,##0.00 ¤",
  "el-CY": "#,##0.00 ¤",
  en: "¤#,##0.00;(¤#,##0.00)",
  "en-001": "¤#,##0.00;(¤#,##0.00)",
  "en-150": "#,##0.00 ¤",
  "en-AE": "¤#,##0.00;(¤#,##0.00)",
  "en-AG": "¤#,##0.00;(¤#,##0.00)",
  "en-AI": "¤#,##0.00;(¤#,##0.00)",
  "en-AS": "¤#,##0.00;(¤#,##0.00)",
  "en-AT": "¤ #,##0.00",
  "en-AU": "¤#,##0.00;(¤#,##0.00)",
  "en-BB": "¤#,##0.00;(¤#,##0.00)",
  "en-BE": "#,##0.00 ¤",
  "en-BI": "¤#,##0.00;(¤#,##0.00)",
  "en-BM": "¤#,##0.00;(¤#,##0.00)",
  "en-BS": "¤#,##0.00;(¤#,##0.00)",
  "en-BW": "¤#,##0.00;(¤#,##0.00)",
  "en-BZ": "¤#,##0.00;(¤#,##0.00)",
  "en-CA": "¤#,##0.00;(¤#,##0.00)",
  "en-CC": "¤#,##0.00;(¤#,##0.00)",
  "en-CH": "¤ #,##0.00;¤-#,##0.00",
  "en-CK": "¤#,##0.00;(¤#,##0.00)",
  "en-CM": "¤#,##0.00;(¤#,##0.00)",
  "en-CX": "¤#,##0.00;(¤#,##0.00)",
  "en-CY": "¤#,##0.00;(¤#,##0.00)",
  "en-DE": "#,##0.00 ¤",
  "en-DG": "¤#,##0.00;(¤#,##0.00)",
  "en-DK": "#,##0.00 ¤",
  "en-DM": "¤#,##0.00;(¤#,##0.00)",
  "en-ER": "¤#,##0.00;(¤#,##0.00)",
  "en-FI": "#,##0.00 ¤",
  "en-FJ": "¤#,##0.00;(¤#,##0.00)",
  "en-FK": "¤#,##0.00;(¤#,##0.00)",
  "en-FM": "¤#,##0.00;(¤#,##0.00)",
  "en-GB": "¤#,##0.00;(¤#,##0.00)",
  "en-GD": "¤#,##0.00;(¤#,##0.00)",
  "en-GG": "¤#,##0.00;(¤#,##0.00)",
  "en-GH": "¤#,##0.00;(¤#,##0.00)",
  "en-GI": "¤#,##0.00;(¤#,##0.00)",
  "en-GM": "¤#,##0.00;(¤#,##0.00)",
  "en-GU": "¤#,##0.00;(¤#,##0.00)",
  "en-GY": "¤#,##0.00;(¤#,##0.00)",
  "en-HK": "¤#,##0.00;(¤#,##0.00)",
  "en-IE": "¤#,##0.00;(¤#,##0.00)",
  "en-IL": "¤#,##0.00;(¤#,##0.00)",
  "en-IM": "¤#,##0.00;(¤#,##0.00)",
  "en-IN": "¤#,##0.00;(¤#,##0.00)",
  "en-IO": "¤#,##0.00;(¤#,##0.00)",
  "en-JE": "¤#,##0.00;(¤#,##0.00)",
  "en-JM": "¤#,##0.00;(¤#,##0.00)",
  "en-KE": "¤#,##0.00;(¤#,##0.00)",
  "en-KI": "¤#,##0.00;(¤#,##0.00)",
  "en-KN": "¤#,##0.00;(¤#,##0.00)",
  "en-KY": "¤#,##0.00;(¤#,##0.00)",
  "en-LC": "¤#,##0.00;(¤#,##0.00)",
  "en-LR": "¤#,##0.00;(¤#,##0.00)",
  "en-LS": "¤#,##0.00;(¤#,##0.00)",
  "en-MG": "¤#,##0.00;(¤#,##0.00)",
  "en-MH": "¤#,##0.00;(¤#,##0.00)",
  "en-MO": "¤#,##0.00;(¤#,##0.00)",
  "en-MP": "¤#,##0.00;(¤#,##0.00)",
  "en-MS": "¤#,##0.00;(¤#,##0.00)",
  "en-MT": "¤#,##0.00;(¤#,##0.00)",
  "en-MU": "¤#,##0.00;(¤#,##0.00)",
  "en-MV": "¤ #,##0.00",
  "en-MW": "¤#,##0.00;(¤#,##0.00)",
  "en-MY": "¤#,##0.00;(¤#,##0.00)",
  "en-NA": "¤#,##0.00;(¤#,##0.00)",
  "en-NF": "¤#,##0.00;(¤#,##0.00)",
  "en-NG": "¤#,##0.00;(¤#,##0.00)",
  "en-NL": "¤ #,##0.00;(¤ #,##0.00)",
  "en-NR": "¤#,##0.00;(¤#,##0.00)",
  "en-NU": "¤#,##0.00;(¤#,##0.00)",
  "en-NZ": "¤#,##0.00;(¤#,##0.00)",
  "en-PG": "¤#,##0.00;(¤#,##0.00)",
  "en-PH": "¤#,##0.00;(¤#,##0.00)",
  "en-PK": "¤#,##0.00;(¤#,##0.00)",
  "en-PN": "¤#,##0.00;(¤#,##0.00)",
  "en-PR": "¤#,##0.00;(¤#,##0.00)",
  "en-PW": "¤#,##0.00;(¤#,##0.00)",
  "en-RW": "¤#,##0.00;(¤#,##0.00)",
  "en-SB": "¤#,##0.00;(¤#,##0.00)",
  "en-SC": "¤#,##0.00;(¤#,##0.00)",
  "en-SD": "¤#,##0.00;(¤#,##0.00)",
  "en-SE": "#,##0.00 ¤",
  "en-SG": "¤#,##0.00;(¤#,##0.00)",
  "en-SH": "¤#,##0.00;(¤#,##0.00)",
  "en-SI": "#,##0.00 ¤;(#,##0.00 ¤)",
  "en-SL": "¤#,##0.00;(¤#,##0.00)",
  "en-SS": "¤#,##0.00;(¤#,##0.00)",
  "en-SX": "¤#,##0.00;(¤#,##0.00)",
  "en-SZ": "¤#,##0.00;(¤#,##0.00)",
  "en-TC": "¤#,##0.00;(¤#,##0.00)",
  "en-TK": "¤#,##0.00;(¤#,##0.00)",
  "en-TO": "¤#,##0.00;(¤#,##0.00)",
  "en-TT": "¤#,##0.00;(¤#,##0.00)",
  "en-TV": "¤#,##0.00;(¤#,##0.00)",
  "en-TZ": "¤#,##0.00;(¤#,##0.00)",
  "en-UG": "¤#,##0.00;(¤#,##0.00)",
  "en-UM": "¤#,##0.00;(¤#,##0.00)",
  "en-VC": "¤#,##0.00;(¤#,##0.00)",
  "en-VG": "¤#,##0.00;(¤#,##0.00)",
  "en-VI": "¤#,##0.00;(¤#,##0.00)",
  "en-VU": "¤#,##0.00;(¤#,##0.00)",
  "en-WS": "¤#,##0.00;(¤#,##0.00)",
  "en-ZA": "¤#,##0.00;(¤#,##0.00)",
  "en-ZM": "¤#,##0.00;(¤#,##0.00)",
  "en-ZW": "¤#,##0.00;(¤#,##0.00)",
  eo: "¤ #,##0.00",
  es: "#,##0.00 ¤",
  "es-419": "¤#,##0.00",
  "es-AR": "¤ #,##0.00;(¤ #,##0.00)",
  "es-BO": "¤#,##0.00",
  "es-BR": "¤#,##0.00",
  "es-BZ": "¤#,##0.00",
  "es-CL": "¤#,##0.00",
  "es-CO": "¤#,##0.00",
  "es-CR": "¤#,##0.00",
  "es-CU": "¤#,##0.00",
  "es-DO": "¤#,##0.00;(¤#,##0.00)",
  "es-EA": "#,##0.00 ¤",
  "es-EC": "¤#,##0.00",
  "es-GQ": "#,##0.00 ¤",
  "es-GT": "¤#,##0.00",
  "es-HN": "¤#,##0.00",
  "es-IC": "#,##0.00 ¤",
  "es-MX": "¤#,##0.00",
  "es-NI": "¤#,##0.00",
  "es-PA": "¤#,##0.00",
  "es-PE": "¤#,##0.00",
  "es-PH": "#,##0.00 ¤",
  "es-PR": "¤#,##0.00",
  "es-PY": "¤#,##0.00",
  "es-SV": "¤#,##0.00",
  "es-US": "¤#,##0.00",
  "es-UY": "¤ #,##0.00;(¤ #,##0.00)",
  "es-VE": "¤#,##0.00",
  et: "#,##0.00 ¤;(#,##0.00 ¤)",
  eu: "#,##0.00 ¤;(#,##0.00 ¤)",
  ewo: "#,##0.00 ¤",
  fa: "‎¤ #,##0.00;‎(¤ #,##0.00)",
  "fa-AF": "¤ #,##0.00;‎(¤ #,##0.00)",
  ff: "#,##0.00 ¤",
  "ff-Adlm": "¤ #,##0.00",
  "ff-Adlm-BF": "¤ #,##0.00",
  "ff-Adlm-CM": "¤ #,##0.00",
  "ff-Adlm-GH": "¤ #,##0.00",
  "ff-Adlm-GM": "¤ #,##0.00",
  "ff-Adlm-GW": "¤ #,##0.00",
  "ff-Adlm-LR": "¤ #,##0.00",
  "ff-Adlm-MR": "¤ #,##0.00",
  "ff-Adlm-NE": "¤ #,##0.00",
  "ff-Adlm-NG": "¤ #,##0.00",
  "ff-Adlm-SL": "¤ #,##0.00",
  "ff-Adlm-SN": "¤ #,##0.00",
  "ff-Latn": "#,##0.00 ¤",
  "ff-Latn-BF": "#,##0.00 ¤",
  "ff-Latn-CM": "#,##0.00 ¤",
  "ff-Latn-GH": "#,##0.00 ¤",
  "ff-Latn-GM": "#,##0.00 ¤",
  "ff-Latn-GN": "#,##0.00 ¤",
  "ff-Latn-GW": "#,##0.00 ¤",
  "ff-Latn-LR": "#,##0.00 ¤",
  "ff-Latn-MR": "#,##0.00 ¤",
  "ff-Latn-NE": "#,##0.00 ¤",
  "ff-Latn-NG": "#,##0.00 ¤",
  "ff-Latn-SL": "#,##0.00 ¤",
  fi: "#,##0.00 ¤",
  fil: "¤#,##0.00;(¤#,##0.00)",
  fo: "#,##0.00 ¤;(#,##0.00 ¤)",
  "fo-DK": "#,##0.00 ¤;(#,##0.00 ¤)",
  fr: "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-BE": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-BF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-BI": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-BJ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-BL": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CA": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CD": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CG": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CH": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CI": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-CM": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-DJ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-DZ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-GA": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-GF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-GN": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-GP": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-GQ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-HT": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-KM": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-LU": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MA": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MC": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MG": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-ML": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MQ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MR": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-MU": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-NC": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-NE": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-PF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-PM": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-RE": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-RW": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-SC": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-SN": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-SY": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-TD": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-TG": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-TN": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-VU": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-WF": "#,##0.00 ¤;(#,##0.00 ¤)",
  "fr-YT": "#,##0.00 ¤;(#,##0.00 ¤)",
  fur: "¤ #,##0.00",
  fy: "¤ #,##0.00;(¤ #,##0.00)",
  ga: "¤#,##0.00;(¤#,##0.00)",
  "ga-GB": "¤#,##0.00;(¤#,##0.00)",
  gd: "¤#,##0.00;(¤#,##0.00)",
  gl: "#,##0.00 ¤",
  gsw: "#,##0.00 ¤",
  "gsw-FR": "#,##0.00 ¤",
  "gsw-LI": "#,##0.00 ¤",
  gu: "¤#,##,##0.00;(¤#,##,##0.00)",
  guz: "¤#,##0.00;(¤#,##0.00)",
  gv: "¤#,##0.00",
  ha: "¤ #,##0.00",
  "ha-GH": "¤ #,##0.00",
  "ha-NE": "¤ #,##0.00",
  haw: "¤#,##0.00;(¤#,##0.00)",
  he: "#,##0.00 ¤",
  hi: "¤#,##,##0.00",
  "hi-Latn": "¤#,##,##0.00",
  hr: "#,##0.00 ¤",
  "hr-BA": "#,##0.00 ¤",
  hsb: "#,##0.00 ¤",
  hu: "#,##0.00 ¤",
  hy: "#,##0.00 ¤",
  ia: "¤ #,##0.00;(¤ #,##0.00)",
  id: "¤#,##0.00",
  ig: "¤#,##0.00;(¤#,##0.00)",
  ii: "¤ #,##0.00",
  is: "#,##0.00 ¤",
  it: "#,##0.00 ¤",
  "it-CH": "#,##0.00 ¤",
  "it-SM": "#,##0.00 ¤",
  "it-VA": "#,##0.00 ¤",
  ja: "¤#,##0.00;(¤#,##0.00)",
  jgo: "¤ #,##0.00",
  jmc: "¤#,##0.00",
  jv: "¤ #,##0.00",
  ka: "#,##0.00 ¤",
  kab: "#,##0.00¤",
  kam: "¤#,##0.00;(¤#,##0.00)",
  kde: "¤#,##0.00;(¤#,##0.00)",
  kea: "#,##0.00 ¤;(#,##0.00 ¤)",
  kgp: "¤ #,##0.00",
  khq: "#,##0.00¤",
  ki: "¤#,##0.00;(¤#,##0.00)",
  kk: "#,##0.00 ¤",
  kkj: "¤ #,##0.00",
  kl: "¤#,##0.00;¤-#,##0.00",
  kln: "¤#,##0.00;(¤#,##0.00)",
  km: "#,##0.00¤;(#,##0.00¤)",
  kn: "¤#,##0.00;(¤#,##0.00)",
  ko: "¤#,##0.00;(¤#,##0.00)",
  "ko-KP": "¤#,##0.00;(¤#,##0.00)",
  kok: "¤#,##0.00;(¤#,##0.00)",
  ks: "¤#,##0.00",
  "ks-Arab": "¤#,##0.00",
  "ks-Deva": "¤ #,##0.00",
  ksb: "#,##0.00¤",
  ksf: "#,##0.00 ¤",
  ksh: "#,##0.00 ¤",
  ku: "#,##0.00 ¤;(#,##0.00 ¤)",
  kw: "¤#,##0.00",
  ky: "#,##0.00 ¤",
  lag: "¤ #,##0.00",
  lb: "#,##0.00 ¤",
  lg: "#,##0.00¤",
  lkt: "¤ #,##0.00",
  ln: "#,##0.00 ¤",
  "ln-AO": "#,##0.00 ¤",
  "ln-CF": "#,##0.00 ¤",
  "ln-CG": "#,##0.00 ¤",
  lo: "¤#,##0.00;¤-#,##0.00",
  lrc: "¤ #,##0.00",
  "lrc-IQ": "¤ #,##0.00",
  lt: "#,##0.00 ¤",
  lu: "#,##0.00¤",
  luo: "#,##0.00¤",
  luy: "¤#,##0.00;¤- #,##0.00",
  lv: "#,##0.00 ¤",
  mai: "¤ #,##0.00",
  mas: "¤#,##0.00;(¤#,##0.00)",
  "mas-TZ": "¤#,##0.00;(¤#,##0.00)",
  mer: "¤#,##0.00;(¤#,##0.00)",
  mfe: "¤ #,##0.00",
  mg: "¤#,##0.00",
  mgh: "¤ #,##0.00",
  mgo: "¤ #,##0.00",
  mi: "¤ #,##0.00",
  mk: "#,##0.00 ¤",
  ml: "¤#,##0.00;(¤#,##0.00)",
  mn: "¤ #,##0.00",
  mni: "¤ #,##0.00",
  "mni-Beng": "¤ #,##0.00",
  mr: "¤#,##0.00;(¤#,##0.00)",
  ms: "¤#,##0.00;(¤#,##0.00)",
  "ms-BN": "¤#,##0.00;(¤#,##0.00)",
  "ms-ID": "¤#,##0.00",
  "ms-SG": "¤#,##0.00;(¤#,##0.00)",
  mt: "¤#,##0.00",
  mua: "¤#,##0.00;(¤#,##0.00)",
  my: "¤ #,##0.00",
  mzn: "¤ #,##0.00",
  naq: "¤#,##0.00",
  nb: "¤ #,##0.00;(¤ #,##0.00)",
  "nb-SJ": "¤ #,##0.00;(¤ #,##0.00)",
  nd: "¤#,##0.00;(¤#,##0.00)",
  nds: "¤ #,##0.00",
  "nds-NL": "¤ #,##0.00",
  ne: "¤ #,##,##0.00",
  "ne-IN": "¤ #,##,##0.00",
  nl: "¤ #,##0.00;(¤ #,##0.00)",
  "nl-AW": "¤ #,##0.00;(¤ #,##0.00)",
  "nl-BE": "¤ #,##0.00;(¤ #,##0.00)",
  "nl-BQ": "¤ #,##0.00;(¤ #,##0.00)",
  "nl-CW": "¤ #,##0.00;(¤ #,##0.00)",
  "nl-SR": "¤ #,##0.00;(¤ #,##0.00)",
  "nl-SX": "¤ #,##0.00;(¤ #,##0.00)",
  nmg: "#,##0.00 ¤",
  nn: "#,##0.00 ¤",
  nnh: "¤ #,##0.00",
  no: "¤ #,##0.00;(¤ #,##0.00)",
  nus: "¤#,##0.00;(¤#,##0.00)",
  nyn: "¤#,##0.00",
  om: "¤#,##0.00",
  "om-KE": "¤#,##0.00",
  or: "¤#,##0.00;(¤#,##0.00)",
  os: "¤ #,##0.00",
  "os-RU": "¤ #,##0.00",
  pa: "¤ #,##0.00",
  "pa-Arab": "¤ #,##0.00",
  "pa-Guru": "¤ #,##0.00",
  pcm: "¤#,##0.00",
  pl: "#,##0.00 ¤;(#,##0.00 ¤)",
  ps: "¤#,##0.00;(¤#,##0.00)",
  "ps-PK": "¤#,##0.00;(¤#,##0.00)",
  pt: "¤ #,##0.00",
  "pt-AO": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-CH": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-CV": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-GQ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-GW": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-LU": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-MO": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-MZ": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-PT": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-ST": "#,##0.00 ¤;(#,##0.00 ¤)",
  "pt-TL": "#,##0.00 ¤;(#,##0.00 ¤)",
  qu: "¤ #,##0.00",
  "qu-BO": "¤ #,##0.00",
  "qu-EC": "¤ #,##0.00",
  rm: "#,##0.00 ¤",
  rn: "#,##0.00¤",
  ro: "#,##0.00 ¤;(#,##0.00 ¤)",
  "ro-MD": "#,##0.00 ¤;(#,##0.00 ¤)",
  rof: "¤#,##0.00",
  ru: "#,##0.00 ¤",
  "ru-BY": "#,##0.00 ¤",
  "ru-KG": "#,##0.00 ¤",
  "ru-KZ": "#,##0.00 ¤",
  "ru-MD": "#,##0.00 ¤",
  "ru-UA": "#,##0.00 ¤",
  rw: "¤ #,##0.00",
  rwk: "#,##0.00¤",
  sa: "¤ #,##0.00",
  sah: "#,##0.00 ¤",
  saq: "¤#,##0.00;(¤#,##0.00)",
  sat: "¤ #,##0.00",
  "sat-Olck": "¤ #,##0.00",
  sbp: "#,##0.00¤",
  sc: "#,##0.00 ¤",
  sd: "¤ #,##0.00",
  "sd-Arab": "¤ #,##0.00",
  "sd-Deva": "¤ #,##0.00",
  se: "#,##0.00 ¤",
  "se-FI": "#,##0.00 ¤",
  "se-SE": "#,##0.00 ¤",
  seh: "#,##0.00¤",
  ses: "#,##0.00¤",
  sg: "¤#,##0.00;¤-#,##0.00",
  shi: "#,##0.00¤",
  "shi-Latn": "#,##0.00¤",
  "shi-Tfng": "#,##0.00¤",
  si: "¤#,##0.00;(¤#,##0.00)",
  sk: "#,##0.00 ¤;(#,##0.00 ¤)",
  sl: "#,##0.00 ¤;(#,##0.00 ¤)",
  smn: "#,##0.00 ¤",
  sn: "¤#,##0.00;(¤#,##0.00)",
  so: "¤#,##0.00;(¤#,##0.00)",
  "so-DJ": "¤#,##0.00;(¤#,##0.00)",
  "so-ET": "¤#,##0.00;(¤#,##0.00)",
  "so-KE": "¤#,##0.00;(¤#,##0.00)",
  sq: "#,##0.00 ¤;(#,##0.00 ¤)",
  "sq-MK": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sq-XK": "#,##0.00 ¤;(#,##0.00 ¤)",
  sr: "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Cyrl": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Cyrl-BA": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Cyrl-ME": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Cyrl-XK": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Latn": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Latn-BA": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Latn-ME": "#,##0.00 ¤;(#,##0.00 ¤)",
  "sr-Latn-XK": "#,##0.00 ¤;(#,##0.00 ¤)",
  su: "¤#,##0.00",
  "su-Latn": "¤#,##0.00",
  sv: "#,##0.00 ¤",
  "sv-AX": "#,##0.00 ¤",
  "sv-FI": "#,##0.00 ¤",
  sw: "¤ #,##0.00",
  "sw-CD": "¤ #,##0.00",
  "sw-KE": "¤ #,##0.00",
  "sw-UG": "¤ #,##0.00",
  ta: "¤#,##0.00;(¤#,##0.00)",
  "ta-LK": "¤#,##0.00;(¤#,##0.00)",
  "ta-MY": "¤#,##0.00;(¤#,##0.00)",
  "ta-SG": "¤#,##0.00;(¤#,##0.00)",
  te: "¤#,##0.00;(¤#,##0.00)",
  teo: "¤#,##0.00;(¤#,##0.00)",
  "teo-KE": "¤#,##0.00;(¤#,##0.00)",
  tg: "#,##0.00 ¤",
  th: "¤#,##0.00;(¤#,##0.00)",
  ti: "¤#,##0.00",
  "ti-ER": "¤#,##0.00",
  tk: "#,##0.00 ¤",
  to: "¤ #,##0.00",
  tr: "¤#,##0.00;(¤#,##0.00)",
  "tr-CY": "¤#,##0.00;(¤#,##0.00)",
  tt: "#,##0.00 ¤",
  twq: "#,##0.00¤",
  tzm: "#,##0.00 ¤",
  ug: "¤#,##0.00;(¤#,##0.00)",
  uk: "#,##0.00 ¤",
  und: "¤ #,##0.00",
  ur: "¤#,##0.00;(¤#,##0.00)",
  "ur-IN": "¤#,##0.00;(¤#,##0.00)",
  uz: "#,##0.00 ¤",
  "uz-Arab": "¤ #,##0.00",
  "uz-Cyrl": "#,##0.00 ¤",
  "uz-Latn": "#,##0.00 ¤",
  vai: "¤#,##0.00;(¤#,##0.00)",
  "vai-Latn": "¤#,##0.00;(¤#,##0.00)",
  "vai-Vaii": "¤#,##0.00;(¤#,##0.00)",
  vi: "#,##0.00 ¤",
  vun: "¤#,##0.00",
  wae: "¤ #,##0.00",
  wo: "¤ #,##0.00",
  xh: "¤#,##0.00",
  xog: "#,##0.00 ¤",
  yav: "#,##0.00 ¤;(#,##0.00 ¤)",
  yi: "¤ #,##0.00",
  yo: "¤#,##0.00;(¤#,##0.00)",
  "yo-BJ": "¤#,##0.00;(¤#,##0.00)",
  yrl: "¤ #,##0.00",
  "yrl-CO": "¤ #,##0.00",
  "yrl-VE": "¤ #,##0.00",
  yue: "¤#,##0.00;(¤#,##0.00)",
  "yue-Hans": "¤#,##0.00;(¤#,##0.00)",
  "yue-Hant": "¤#,##0.00;(¤#,##0.00)",
  zgh: "#,##0.00¤",
  zh: "¤#,##0.00;(¤#,##0.00)",
  "zh-Hans": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hans-HK": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hans-MO": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hans-SG": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hant": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hant-HK": "¤#,##0.00;(¤#,##0.00)",
  "zh-Hant-MO": "¤#,##0.00;(¤#,##0.00)",
  zu: "¤#,##0.00;(¤#,##0.00)"
};
var mL = ["standard", "accounting"], CL = 20, xL = /([^\s0]+)?(\s*)0*[.,]*0*(\s*)([^\s0]+)?/, Lh = {}, jC = (e) => {
  var t = Ii.locale() + "/" + JSON.stringify(e);
  return Lh[t] || (Lh[t] = new Intl.NumberFormat(Ii.locale(), e).format), Lh[t];
}, yL = (e) => new Intl.NumberFormat(Ii.locale(), {
  style: "currency",
  currency: e
});
const bL = {
  engine: function() {
    return "intl";
  },
  _formatNumberCore: function(e, t, i) {
    return t === "exponential" ? this.callBase.apply(this, arguments) : jC(this._normalizeFormatConfig(t, i, e))(e);
  },
  _normalizeFormatConfig: function(e, t, i) {
    var n;
    if (e === "decimal") {
      var r = String(i).split(".")[1];
      n = {
        minimumIntegerDigits: t.precision || void 0,
        useGrouping: !1,
        maximumFractionDigits: r && r.length,
        round: i < 0 ? "ceil" : "floor"
      };
    } else
      n = this._getPrecisionConfig(t.precision);
    if (e === "percent")
      n.style = "percent";
    else if (e === "currency") {
      var a, o = (a = t.useCurrencyAccountingStyle) !== null && a !== void 0 ? a : st().defaultUseCurrencyAccountingStyle;
      n.style = "currency", n.currency = t.currency || st().defaultCurrency, n.currencySign = mL[+o];
    }
    return n;
  },
  _getPrecisionConfig: function(e) {
    var t;
    return e === null ? t = {
      minimumFractionDigits: 0,
      maximumFractionDigits: CL
    } : t = {
      minimumFractionDigits: e || 0,
      maximumFractionDigits: e || 0
    }, t;
  },
  format: function(e, t) {
    return typeof e != "number" ? e : (t = this._normalizeFormat(t), t.currency === "default" && (t.currency = st().defaultCurrency), !t || typeof t != "function" && !t.type && !t.formatter ? jC(t)(e) : this.callBase.apply(this, arguments));
  },
  _getCurrencySymbolInfo: function(e) {
    var t = yL(e);
    return this._extractCurrencySymbolInfo(t.format(0));
  },
  _extractCurrencySymbolInfo: function(e) {
    var t = xL.exec(e) || [], i = t[1] ? "before" : "after", n = t[1] || t[4] || "", r = t[2] || t[3] || "";
    return {
      position: i,
      symbol: n,
      delimiter: r
    };
  },
  getCurrencySymbol: function(e) {
    e || (e = st().defaultCurrency);
    var t = this._getCurrencySymbolInfo(e);
    return {
      symbol: t.symbol
    };
  },
  getOpenXmlCurrencyFormat: function(e) {
    var t = e || st().defaultCurrency, i = this._getCurrencySymbolInfo(t).symbol, n = Ii.getValueByClosestLocale((r) => vL[r]);
    return _L(i, n);
  }
};
var SL = typeof Intl < "u", EL = 4, ou = 10, qC = ["currency", "fixedpoint", "exponential", "percent", "decimal"], Vh = {
  1: "K",
  2: "M",
  3: "B",
  4: "T"
}, XC = {
  largenumber: "auto",
  thousands: 1,
  millions: 2,
  billions: 3,
  trillions: 4
}, nt = zi({
  engine: function() {
    return "base";
  },
  numericFormats: qC,
  defaultLargeNumberFormatPostfixes: Vh,
  _parseNumberFormatString: function(e) {
    var t = {};
    if (!(!e || typeof e != "string")) {
      var i = e.toLowerCase().split(" ");
      if (B(i, (n, r) => {
        qC.includes(r) ? t.formatType = r : r in XC && (t.power = XC[r]);
      }), t.power && !t.formatType && (t.formatType = "fixedpoint"), t.formatType)
        return t;
    }
  },
  _calculateNumberPower: function(e, t, i, n) {
    var r = Math.abs(e), a = 0;
    if (r > 1)
      for (; r && r >= t && (n === void 0 || a < n); )
        a++, r /= t;
    else if (r > 0 && r < 1)
      for (; r < 1 && (i === void 0 || a > i); )
        a--, r *= t;
    return a;
  },
  _getNumberByPower: function(e, t, i) {
    for (var n = e; t > 0; )
      n /= i, t--;
    for (; t < 0; )
      n *= i, t++;
    return n;
  },
  _formatNumber: function(e, t, i) {
    t.power === "auto" && (t.power = this._calculateNumberPower(e, 1e3, 0, EL)), t.power && (e = this._getNumberByPower(e, t.power, 1e3));
    var n = this.defaultLargeNumberFormatPostfixes[t.power] || "", r = this._formatNumberCore(e, t.formatType, i);
    return r = r.replace(/(\d|.$)(\D*)$/, "$1" + n + "$2"), r;
  },
  _formatNumberExponential: function(e, t) {
    var i = this._calculateNumberPower(e, ou), n = this._getNumberByPower(e, i, ou);
    t.precision === void 0 && (t.precision = 1), n.toFixed(t.precision || 0) >= ou && (i++, n /= ou);
    var r = (i >= 0 ? "+" : "") + i.toString();
    return this._formatNumberCore(n, "fixedpoint", t) + "E" + r;
  },
  _addZeroes: function(e, t) {
    var i = Math.pow(10, t), n = e < 0 ? "-" : "";
    e = (Math.abs(e) * i >>> 0) / i;
    for (var r = e.toString(); r.length < t; )
      r = "0" + r;
    return n + r;
  },
  _addGroupSeparators: function(e) {
    var t = e.toString().split(".");
    return t[0].replace(/\B(?=(\d{3})+(?!\d))/g, st().thousandsSeparator) + (t[1] ? st().decimalSeparator + t[1] : "");
  },
  _formatNumberCore: function(e, t, i) {
    return t === "exponential" ? this._formatNumberExponential(e, i) : (t !== "decimal" && i.precision !== null && (i.precision = i.precision || 0), t === "percent" && (e *= 100), i.precision !== void 0 && (t === "decimal" ? e = this._addZeroes(e, i.precision) : e = i.precision === null ? e.toPrecision() : wI(e, i.precision)), t !== "decimal" ? e = this._addGroupSeparators(e) : e = e.toString().replace(".", st().decimalSeparator), t === "percent" && (e += "%"), e);
  },
  _normalizeFormat: function(e) {
    return e ? (typeof e == "function" || Me(e) || (e = {
      type: e
    }), e) : {};
  },
  _getSeparators: function() {
    return {
      decimalSeparator: this.getDecimalSeparator(),
      thousandsSeparator: this.getThousandsSeparator()
    };
  },
  getThousandsSeparator: function() {
    return this.format(1e4, "fixedPoint")[2];
  },
  getDecimalSeparator: function() {
    return this.format(1.2, {
      type: "fixedPoint",
      precision: 1
    })[1];
  },
  convertDigits: function(e, t) {
    var i = this.format(90, "decimal");
    if (typeof e != "string" || i[1] === "0")
      return e;
    var n = t ? i[1] : "0", r = t ? "0" : i[1], a = t ? i[0] : "9", o = new RegExp("[" + n + "-" + a + "]", "g");
    return e.replace(o, (s) => String.fromCharCode(s.charCodeAt(0) + (r.charCodeAt(0) - n.charCodeAt(0))));
  },
  getNegativeEtalonRegExp: function(e) {
    var t = this._getSeparators(), i = new RegExp("[0-9" + br(t.decimalSeparator + t.thousandsSeparator) + "]+", "g"), n = this.format(-1, e).replace(i, "1");
    return ["\\", "(", ")", "[", "]", "*", "+", "$", "^", "?", "|", "{", "}"].forEach((r) => {
      n = n.replace(new RegExp("\\".concat(r), "g"), "\\".concat(r));
    }), n = n.replace(/ /g, "\\s"), n = n.replace(/1/g, ".*"), new RegExp(n, "g");
  },
  getSign: function(e, t) {
    if (!t)
      return e.replace(/[^0-9-]/g, "").charAt(0) === "-" ? -1 : 1;
    var i = this.getNegativeEtalonRegExp(t);
    return e.match(i) ? -1 : 1;
  },
  format: function(e, t) {
    if (typeof e != "number" || typeof t == "number")
      return e;
    if (t = t && t.formatter || t, typeof t == "function")
      return t(e);
    t = this._normalizeFormat(t), t.type || (t.type = "decimal");
    var i = this._parseNumberFormatString(t.type);
    if (!i) {
      var n = this._getSeparators();
      return n.unlimitedIntegerDigits = t.unlimitedIntegerDigits, this.convertDigits(dL(t.type, n)(e));
    }
    return this._formatNumber(e, i, t);
  },
  parse: function(e, t) {
    if (e) {
      if (t && t.parser)
        return t.parser(e);
      e = this.convertDigits(e, !0), t && typeof t != "string" && Je.log("W0011");
      var i = this.getDecimalSeparator(), n = new RegExp("[^0-9" + br(i) + "]", "g"), r = e.replace(n, "").replace(i, ".").replace(/\.$/g, "");
      if (r === "." || r === "")
        return null;
      if (this._calcSignificantDigits(r) > 15)
        return NaN;
      var a = +r * this.getSign(e, t);
      t = this._normalizeFormat(t);
      var o = this._parseNumberFormatString(t.type), s = o == null ? void 0 : o.power;
      if (s) {
        if (s === "auto") {
          var l = e.match(/\d(K|M|B|T)/);
          l && (s = Object.keys(Vh).find((u) => Vh[u] === l[1]));
        }
        a *= Math.pow(10, 3 * s);
      }
      return (o == null ? void 0 : o.formatType) === "percent" && (a /= 100), a;
    }
  },
  _calcSignificantDigits: function(e) {
    var [t, i] = e.split("."), n = (a) => {
      for (var o = -1, s = 0; s < a.length; s++)
        if (a[s] !== "0") {
          o = s;
          break;
        }
      return o > -1 ? a.length - o : 0;
    }, r = 0;
    return t && (r += n(t.split(""))), i && (r += n(i.split("").reverse())), r;
  }
});
nt.inject(hL);
SL && nt.inject(bL);
function Oi(e, t) {
  for (; e.length < t; )
    e = "0" + e;
  return e;
}
var is = {
  3: "abbreviated",
  4: "wide",
  5: "narrow"
}, ag = {
  y: function(e, t, i) {
    var n = e[i ? "getUTCFullYear" : "getFullYear"]();
    return t === 2 && (n %= 100), Oi(n.toString(), t);
  },
  M: function(e, t, i, n) {
    var r = e[i ? "getUTCMonth" : "getMonth"](), a = is[t];
    return a ? n.getMonthNames(a, "format")[r] : Oi((r + 1).toString(), Math.min(t, 2));
  },
  L: function(e, t, i, n) {
    var r = e[i ? "getUTCMonth" : "getMonth"](), a = is[t];
    return a ? n.getMonthNames(a, "standalone")[r] : Oi((r + 1).toString(), Math.min(t, 2));
  },
  Q: function(e, t, i, n) {
    var r = e[i ? "getUTCMonth" : "getMonth"](), a = Math.floor(r / 3), o = is[t];
    return o ? n.getQuarterNames(o)[a] : Oi((a + 1).toString(), Math.min(t, 2));
  },
  E: function(e, t, i, n) {
    var r = e[i ? "getUTCDay" : "getDay"](), a = is[t < 3 ? 3 : t];
    return n.getDayNames(a)[r];
  },
  a: function(e, t, i, n) {
    var r = e[i ? "getUTCHours" : "getHours"](), a = r < 12 ? 0 : 1, o = is[t];
    return n.getPeriodNames(o)[a];
  },
  d: function(e, t, i) {
    return Oi(e[i ? "getUTCDate" : "getDate"]().toString(), Math.min(t, 2));
  },
  H: function(e, t, i) {
    return Oi(e[i ? "getUTCHours" : "getHours"]().toString(), Math.min(t, 2));
  },
  h: function(e, t, i) {
    var n = e[i ? "getUTCHours" : "getHours"]();
    return Oi((n % 12 || 12).toString(), Math.min(t, 2));
  },
  m: function(e, t, i) {
    return Oi(e[i ? "getUTCMinutes" : "getMinutes"]().toString(), Math.min(t, 2));
  },
  s: function(e, t, i) {
    return Oi(e[i ? "getUTCSeconds" : "getSeconds"]().toString(), Math.min(t, 2));
  },
  S: function(e, t, i) {
    return Oi(e[i ? "getUTCMilliseconds" : "getMilliseconds"]().toString(), 3).substr(0, t);
  },
  x: function(e, t, i) {
    var n = i ? 0 : e.getTimezoneOffset(), r = n > 0 ? "-" : "+", a = Math.abs(n), o = Math.floor(a / 60), s = a % 60, l = Oi(o.toString(), 2), u = Oi(s.toString(), 2);
    return r + l + (t >= 3 ? ":" : "") + (t > 1 || s ? u : "");
  },
  X: function(e, t, i) {
    return i || !e.getTimezoneOffset() ? "Z" : ag.x(e, t, i);
  },
  Z: function(e, t, i) {
    return ag.X(e, t >= 5 ? 3 : 2, i);
  }
}, TI = function(e, t) {
  return function(i) {
    var n, r, a, o = 0, s = !1, l, u = "";
    if (!i)
      return null;
    if (!e)
      return i;
    var d = e[e.length - 1] === "Z" || e.slice(-3) === "'Z'";
    for (n = 0; n < e.length; n++)
      a = e[n], r = ag[a], l = a === e[n + 1], o++, l || (r && !s && (u += r(i, o, d, t)), o = 0), a === "'" && !l ? s = !s : (s || !r) && (u += a), a === "'" && l && n++;
    return u;
  };
}, wL = "،", DI = " .,:;/\\<>()-[]" + wL, IL = ". m.", Er = function(e) {
  var t = e && nt.convertDigits(e, !1).charCodeAt(0), i = nt.convertDigits("0", !1).charCodeAt(0);
  return i <= t && t < i + 10;
}, TL = function(e, t, i, n) {
  var r = e[i], a = e[i + 1];
  if (!n && (r === "." || r === " " && e.slice(i - 1, i + 3) === IL || r === "-" && !Er(a)))
    return !0;
  var o = n && t.some((s) => e[i] !== s[i]);
  return DI.indexOf(r) < 0 && n === Er(r) && (!n || o);
}, DL = function(e, t) {
  if (!Er(e[t]))
    for (; t > 0 && !Er(e[t - 1]) && (e[t - 1] === "." || DI.indexOf(e[t - 1]) < 0); )
      t--;
  return t;
}, AL = function(e, t, i, n) {
  var r = 0, a = [], o = function(s) {
    return e[r] !== s[r] && (n === void 0 || Er(e[r]) === n);
  };
  for (Array.isArray(t) || (t = [t]), r = 0; r < e.length; r++)
    if (i.indexOf(r) < 0 && t.filter(o).length) {
      r = DL(e, r);
      do {
        if (n = Er(e[r]), !a.length && !n && Er(t[0][r]))
          break;
        a.push(r), i.unshift(r), r++;
      } while (e[r] && TL(e, t, r, n));
      break;
    }
  return a.length === 1 && (e[i[0] - 1] === "0" || e[i[0] - 1] === "٠") && i.unshift(i[0] - 1), a;
}, OL = function(e, t, i, n) {
  var r = t[0], a = r < n.length ? n[r] : r;
  return t.forEach(function(o, s) {
    e = e.substr(0, a + s) + (i.length > 1 ? i[s] : i) + e.substr(a + s + 1);
  }), t.length === 1 && (e = e.replace("0" + i, i + i), e = e.replace("٠" + i, i + i)), e;
}, RL = function(e, t, i, n) {
  var r, a, o;
  if (!Er(e[t[0]] || "0")) {
    for (var s = Math.max(t.length <= 3 ? 3 : 4, i.length); t.length > s; ) {
      for (a = t.pop(), o = n[a], n[a] = -1, r = a + 1; r < n.length; r++)
        n[r]--;
      e = e.substr(0, o) + e.substr(o + 1);
    }
    for (a = t[t.length - 1] + 1, o = a < n.length ? n[a] : a; t.length < s; ) {
      for (t.push(t[t.length - 1] + 1), r = a; r < n.length; r++)
        n[r]++;
      e = e.substr(0, o) + " " + e.substr(o);
    }
  }
  return e = OL(e, t, i, n), e;
}, YC = function(e, t) {
  return Array.isArray(e) ? e.map(function(i) {
    return (t(i) || "").toString();
  }) : (t(e) || "").toString();
}, BL = /[a-zA-Z]/g, kL = function(e, t, i, n) {
  var r = t.split("").map(function(a, o) {
    return i.indexOf(o) < 0 && (a.match(BL) || a === "'") ? n[o] : -1;
  });
  return e = e.split("").map(function(a, o) {
    var s = a, l = r.indexOf(o) >= 0, u = o > 0 && r.indexOf(o - 1) >= 0, d = r.indexOf(o + 1) >= 0;
    return l && (u || (s = "'" + s), d || (s += "'")), s;
  }).join(""), e;
}, z_ = function(e) {
  var t = [], i = YC(new Date(2009, 8, 8, 6, 5, 4), e), n = i.split("").map(function(s, l) {
    return l;
  }), r = i, a = {}, o = [{
    date: new Date(2009, 8, 8, 6, 5, 4, 111),
    pattern: "S"
  }, {
    date: new Date(2009, 8, 8, 6, 5, 2),
    pattern: "s"
  }, {
    date: new Date(2009, 8, 8, 6, 2, 4),
    pattern: "m"
  }, {
    date: new Date(2009, 8, 8, 18, 5, 4),
    pattern: "H",
    isDigit: !0
  }, {
    date: new Date(2009, 8, 8, 2, 5, 4),
    pattern: "h",
    isDigit: !0
  }, {
    date: new Date(2009, 8, 8, 18, 5, 4),
    pattern: "a",
    isDigit: !1
  }, {
    date: new Date(2009, 8, 1, 6, 5, 4),
    pattern: "d"
  }, {
    date: [new Date(2009, 8, 2, 6, 5, 4), new Date(2009, 8, 3, 6, 5, 4), new Date(2009, 8, 4, 6, 5, 4)],
    pattern: "E"
  }, {
    date: new Date(2009, 9, 6, 6, 5, 4),
    pattern: "M"
  }, {
    date: new Date(1998, 8, 8, 6, 5, 4),
    pattern: "y"
  }];
  if (r && (o.forEach(function(s) {
    var l = AL(i, YC(s.date, e), t, s.isDigit), u = s.pattern === "M" && !a.d ? "L" : s.pattern;
    r = RL(r, l, u, n), a[u] = l.length;
  }), r = kL(r, i, t, n), t.length))
    return r;
}, Kn = {
  3: "abbreviated",
  4: "wide",
  5: "narrow"
}, ZC = function(e, t) {
  return e > 2 ? Object.keys(Kn).map(function(i) {
    return ["format", "standalone"].map(function(n) {
      return t.getMonthNames(Kn[i], n).join("|");
    }).join("|");
  }).join("|") : e === 2 ? "1[012]|0?[1-9]" : "0??[1-9]|1[012]";
}, FL = {
  ":": function(e, t) {
    var i = e > 1 ? "{".concat(e, "}") : "", n = br(t.getTimeSeparator());
    return n !== ":" && (n = "".concat(n, "|:")), "".concat(n).concat(i);
  },
  y: function(e) {
    return e === 2 ? "[0-9]{".concat(e, "}") : "[0-9]+?";
  },
  M: ZC,
  L: ZC,
  Q: function(e, t) {
    return e > 2 ? t.getQuarterNames(Kn[e], "format").join("|") : "0?[1-4]";
  },
  E: function(e, t) {
    return "\\D*";
  },
  a: function(e, t) {
    return t.getPeriodNames(Kn[e < 3 ? 3 : e], "format").join("|");
  },
  d: function(e) {
    return e === 2 ? "3[01]|[12][0-9]|0?[1-9]" : "0??[1-9]|[12][0-9]|3[01]";
  },
  H: function(e) {
    return e === 2 ? "2[0-3]|1[0-9]|0?[0-9]" : "0??[0-9]|1[0-9]|2[0-3]";
  },
  h: function(e) {
    return e === 2 ? "1[012]|0?[1-9]" : "0??[1-9]|1[012]";
  },
  m: function(e) {
    return e === 2 ? "[1-5][0-9]|0?[0-9]" : "0??[0-9]|[1-5][0-9]";
  },
  s: function(e) {
    return e === 2 ? "[1-5][0-9]|0?[0-9]" : "0??[0-9]|[1-5][0-9]";
  },
  S: function(e) {
    return "[0-9]{1,".concat(e, "}");
  },
  w: function(e) {
    return e === 2 ? "[1-5][0-9]|0?[0-9]" : "0??[0-9]|[1-5][0-9]";
  }
}, Fn = Number, og = function(e, t) {
  return e.map((i) => i.toLowerCase()).indexOf(t.toLowerCase());
}, QC = function(e, t, i) {
  return t > 2 ? ["format", "standalone"].map(function(n) {
    return Object.keys(Kn).map(function(r) {
      var a = i.getMonthNames(Kn[r], n);
      return og(a, e);
    });
  }).reduce(function(n, r) {
    return n.concat(r);
  }).filter(function(n) {
    return n >= 0;
  })[0] : Fn(e) - 1;
}, PL = {
  y: function(e, t) {
    var i = Fn(e);
    return t === 2 ? i < 30 ? 2e3 + i : 1900 + i : i;
  },
  M: QC,
  L: QC,
  Q: function(e, t, i) {
    return t > 2 ? i.getQuarterNames(Kn[t], "format").indexOf(e) : Fn(e) - 1;
  },
  E: function(e, t, i) {
    var n = i.getDayNames(Kn[t < 3 ? 3 : t], "format");
    return og(n, e);
  },
  a: function(e, t, i) {
    var n = i.getPeriodNames(Kn[t < 3 ? 3 : t], "format");
    return og(n, e);
  },
  d: Fn,
  H: Fn,
  h: Fn,
  m: Fn,
  s: Fn,
  S: function(e, t) {
    for (t = Math.max(t, 3), e = e.slice(0, 3); t < 3; )
      e += "0", t++;
    return Fn(e);
  }
}, Pd = ["y", "M", "d", "h", "m", "s", "S"], W_ = {
  y: "setFullYear",
  M: "setMonth",
  L: "setMonth",
  a: function(e, t, i) {
    var n = e.getHours(), r = i.h;
    r !== void 0 && r !== n && n--, !t && n === 12 ? n = 0 : t && n !== 12 && (n += 12), e.setHours(n);
  },
  d: "setDate",
  H: "setHours",
  h: "setHours",
  m: "setMinutes",
  s: "setSeconds",
  S: "setMilliseconds"
}, ML = function(e, t) {
  var i = e[t];
  if (!i)
    return 0;
  var n = 0;
  do
    t++, n++;
  while (e[t] === i);
  return n;
}, LL = function(e, t) {
  for (var i = "", n = 0; n < t; n++)
    i += e;
  return i;
}, AI = function(e, t) {
  for (var i = "", n = "", r, a = [], o = function() {
    n && (a.push("'".concat(n, "'")), i += "".concat(br(n), ")"), n = "");
  }, s = 0; s < e.length; s++) {
    var l = e[s], u = l === "'", d = FL[l];
    if (!(u && (r = !r, e[s - 1] !== "'")))
      if (d && !r) {
        var c = ML(e, s), h = LL(l, c);
        o(), a.push(h), i += "(".concat(d(c, t), ")"), s += c - 1;
      } else
        n || (i += "("), n += l;
  }
  return o(), NL(a) || gl.warn("The following format may be parsed incorrectly: ".concat(e, ".")), {
    patterns: a,
    regexp: new RegExp("^".concat(i, "$"), "i")
  };
}, VL = ["d", "H", "h", "m", "s", "w", "M", "L", "Q"], NL = function(e) {
  var t = (r) => {
    if (!r)
      return !1;
    var a = r[0];
    return ["y", "S"].includes(a) || VL.includes(a) && r.length < 3;
  }, i = !0, n = 0;
  return e.every((r, a, o) => (t(r) && (((s) => s[0] !== "S" && s.length !== 2)(r) && (i = ++n < 2), t(o[a + 1]) || (n = 0)), i));
}, $L = function() {
  return W_;
}, HL = function(e, t, i, n, r) {
  var a = t[0], o = W_[a], s = PL[a];
  if (o && s) {
    var l = s(i, t.length, n);
    r[t] = l, e[o] ? e[o](l) : o(e, l, r);
  }
}, zL = function(e, t, i) {
  var n = W_[t], r = "g" + n.substr(1), a = i[r]();
  e[n](a);
}, WL = function(e) {
  return e.map(function(t) {
    return t[0] === "'" ? "" : t[0] === "H" ? "h" : t[0];
  });
}, GL = function(e) {
  var t = e.map(function(i) {
    return Pd.indexOf(i);
  });
  return Math.max.apply(Math, t);
}, KL = function(e) {
  var t = e.filter(function(i) {
    return Pd.indexOf(i) < 0;
  });
  return Pd.concat(t);
}, UL = function(e, t) {
  var i = AI(e, t);
  return function(n) {
    var r = i.regexp.exec(n);
    if (r) {
      var a = /* @__PURE__ */ new Date(), o = new Date(a.getFullYear(), 0, 1), s = WL(i.patterns), l = GL(s), u = KL(s), d = {};
      return u.forEach(function(c, h) {
        if (!(!c || h < Pd.length && h > l)) {
          var p = s.indexOf(c);
          if (p >= 0) {
            var f = i.patterns[p], v = r[p + 1];
            HL(o, f, v, t, d);
          } else
            zL(o, c, a);
        }
      }), o;
    }
    return null;
  };
}, jL = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], qL = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], XL = ["AM", "PM"], YL = ["Q1", "Q2", "Q3", "Q4"], JC = (e, t) => {
  var i = {
    abbreviated: 3,
    short: 2,
    narrow: 1
  };
  return wt(e, (n) => n.substr(0, i[t]));
};
const Os = {
  getMonthNames: function(e) {
    return JC(jL, e);
  },
  getDayNames: function(e) {
    return JC(qL, e);
  },
  getQuarterNames: function(e) {
    return YL;
  },
  getPeriodNames: function(e) {
    return XL;
  }
}, ZL = {
  "af-NA": 1,
  agq: 1,
  ak: 1,
  ar: 6,
  "ar-EH": 1,
  "ar-ER": 1,
  "ar-KM": 1,
  "ar-LB": 1,
  "ar-MA": 1,
  "ar-MR": 1,
  "ar-PS": 1,
  "ar-SO": 1,
  "ar-SS": 1,
  "ar-TD": 1,
  "ar-TN": 1,
  asa: 1,
  ast: 1,
  az: 1,
  "az-Cyrl": 1,
  bas: 1,
  be: 1,
  bem: 1,
  bez: 1,
  bg: 1,
  bm: 1,
  br: 1,
  bs: 1,
  "bs-Cyrl": 1,
  ca: 1,
  ce: 1,
  cgg: 1,
  ckb: 6,
  cs: 1,
  cy: 1,
  da: 1,
  de: 1,
  dje: 1,
  dsb: 1,
  dua: 1,
  dyo: 1,
  ee: 1,
  el: 1,
  "en-001": 1,
  "en-AE": 6,
  "en-BI": 1,
  "en-MP": 1,
  "en-MV": 5,
  "en-SD": 6,
  eo: 1,
  es: 1,
  et: 1,
  eu: 1,
  ewo: 1,
  fa: 6,
  ff: 1,
  "ff-Adlm": 1,
  fi: 1,
  fo: 1,
  fr: 1,
  "fr-DJ": 6,
  "fr-DZ": 6,
  "fr-SY": 6,
  fur: 1,
  fy: 1,
  ga: 1,
  gd: 1,
  gl: 1,
  gsw: 1,
  gv: 1,
  ha: 1,
  hr: 1,
  hsb: 1,
  hu: 1,
  hy: 1,
  ia: 1,
  ig: 1,
  is: 1,
  it: 1,
  jgo: 1,
  jmc: 1,
  ka: 1,
  kab: 6,
  kde: 1,
  kea: 1,
  khq: 1,
  kk: 1,
  kkj: 1,
  kl: 1,
  "ko-KP": 1,
  ksb: 1,
  ksf: 1,
  ksh: 1,
  ku: 1,
  kw: 1,
  ky: 1,
  lag: 1,
  lb: 1,
  lg: 1,
  ln: 1,
  lrc: 6,
  lt: 1,
  lu: 1,
  lv: 1,
  "mas-TZ": 1,
  mfe: 1,
  mg: 1,
  mgo: 1,
  mi: 1,
  mk: 1,
  mn: 1,
  ms: 1,
  mua: 1,
  mzn: 6,
  naq: 1,
  nds: 1,
  nl: 1,
  nmg: 1,
  nnh: 1,
  no: 1,
  nus: 1,
  nyn: 1,
  os: 1,
  pcm: 1,
  pl: 1,
  ps: 6,
  "pt-AO": 1,
  "pt-CH": 1,
  "pt-CV": 1,
  "pt-GQ": 1,
  "pt-GW": 1,
  "pt-LU": 1,
  "pt-ST": 1,
  "pt-TL": 1,
  "qu-BO": 1,
  "qu-EC": 1,
  rm: 1,
  rn: 1,
  ro: 1,
  rof: 1,
  ru: 1,
  rw: 1,
  rwk: 1,
  sah: 1,
  sbp: 1,
  sc: 1,
  se: 1,
  ses: 1,
  sg: 1,
  shi: 1,
  "shi-Latn": 1,
  si: 1,
  sk: 1,
  sl: 1,
  smn: 1,
  so: 1,
  "so-DJ": 6,
  sq: 1,
  sr: 1,
  "sr-Latn": 1,
  sv: 1,
  sw: 1,
  "ta-LK": 1,
  "ta-MY": 1,
  teo: 1,
  tg: 1,
  "ti-ER": 1,
  tk: 1,
  to: 1,
  tr: 1,
  tt: 1,
  twq: 1,
  tzm: 1,
  uk: 1,
  uz: 1,
  "uz-Arab": 6,
  "uz-Cyrl": 1,
  vai: 1,
  "vai-Latn": 1,
  vi: 1,
  vun: 1,
  wae: 1,
  wo: 1,
  xog: 1,
  yav: 1,
  yi: 1,
  yo: 1,
  zgh: 1
};
var QL = /[\u200E\u200F]/g, JL = /[\u202F]/g, ia = (e) => (t) => {
  if (!e.timeZoneName) {
    var i = t.getFullYear(), n = String(i).length < 3, r = n ? i + 400 : i, a = new Date(Date.UTC(r, t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    n && a.setFullYear(i);
    var o = T({
      timeZone: "UTC"
    }, e);
    return sg(a, o);
  }
  return sg(t, e);
}, Nh = {}, e1 = (e) => {
  var t = Ii.locale() + "/" + JSON.stringify(e);
  return Nh[t] || (Nh[t] = new Intl.DateTimeFormat(Ii.locale(), e).format), Nh[t];
};
function sg(e, t) {
  return e1(t)(e).replace(QL, "").replace(JL, " ");
}
var lg = (e) => new Intl.NumberFormat(Ii.locale()).format(e), t1 = (() => {
  var e = {};
  return (t) => {
    if (!(t in e)) {
      if (lg(0) === "0")
        return e[t] = !1, !1;
      e[t] = {};
      for (var i = 0; i < 10; ++i)
        e[t][lg(i)] = i;
    }
    return e[t];
  };
})(), su = (e) => {
  var t = t1(Ii.locale());
  return t ? e.split("").map((i) => i in t ? String(t[i]) : i).join("") : e;
}, ex = (e) => e.replace(/(\D)0+(\d)/g, "$1$2"), i1 = (e, t) => ex(e) === ex(t), ug = (e) => e.replace("d’", "de "), G_ = {
  day: {
    day: "numeric"
  },
  dayofweek: {
    weekday: "long"
  },
  longdate: {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric"
  },
  longdatelongtime: {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  },
  longtime: {
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  },
  month: {
    month: "long"
  },
  monthandday: {
    month: "long",
    day: "numeric"
  },
  monthandyear: {
    year: "numeric",
    month: "long"
  },
  shortdate: {},
  shorttime: {
    hour: "numeric",
    minute: "numeric"
  },
  shortyear: {
    year: "2-digit"
  },
  year: {
    year: "numeric"
  }
};
Object.defineProperty(G_, "shortdateshorttime", {
  get: function() {
    var e = Intl.DateTimeFormat(Ii.locale()).resolvedOptions();
    return {
      year: e.year,
      month: e.month,
      day: e.day,
      hour: "numeric",
      minute: "numeric"
    };
  }
});
var n1 = (e) => typeof e == "string" && G_[e.toLowerCase()], OI = {
  standalone: function(e, t) {
    var i = new Date(1999, e, 13, 1), n = ia({
      month: t
    })(i);
    return n;
  },
  format: function(e, t) {
    var i = new Date(0, e, 13, 1), n = ug(ia({
      day: "numeric",
      month: t
    })(i)), r = n.split(" ").filter((a) => a.indexOf("13") < 0);
    return r.length === 1 ? r[0] : r.length === 2 ? r[0].length > r[1].length ? r[0] : r[1] : OI.standalone(e, t);
  }
};
const r1 = {
  engine: function() {
    return "intl";
  },
  getMonthNames: function(e, t) {
    var i = {
      wide: "long",
      abbreviated: "short",
      narrow: "narrow"
    }[e || "wide"];
    return t = t === "format" ? t : "standalone", Array.apply(null, new Array(12)).map((n, r) => OI[t](r, i));
  },
  getDayNames: function(e) {
    var t = ((i) => Array.apply(null, new Array(7)).map((n, r) => ia({
      weekday: i
    })(new Date(0, 0, r))))({
      wide: "long",
      abbreviated: "short",
      short: "narrow",
      narrow: "narrow"
    }[e || "wide"]);
    return t;
  },
  getPeriodNames: function() {
    var e = ia({
      hour: "numeric",
      hour12: !0
    });
    return [1, 13].map((t) => {
      var i = lg(1), n = e(new Date(0, 0, 1, t)).split(i);
      if (n.length !== 2)
        return "";
      var r = n[0].length > n[1].length ? n[0] : n[1];
      return r.trim();
    });
  },
  format: function(e, t) {
    if (e) {
      if (!t)
        return e;
      typeof t != "function" && !t.formatter && (t = t.type || t);
      var i = n1(t);
      if (i)
        return ia(i)(e);
      var n = typeof t;
      return t.formatter || n === "function" || n === "string" ? this.callBase.apply(this, arguments) : ia(t)(e);
    }
  },
  parse: function(e, t) {
    var i;
    return t && !t.parser && typeof e == "string" && (e = ug(e), i = (n) => ug(this.format(n, t))), this.callBase(e, i || t);
  },
  _parseDateBySimpleFormat: function(e, t) {
    e = su(e);
    var i = this.getFormatParts(t), n = e.split(/\D+/).filter((o) => o.length > 0);
    if (i.length === n.length) {
      var r = this._generateDateArgs(i, n), a = (o) => {
        var s = ((l, u) => {
          var d = u ? 12 : 0;
          return new Date(l.year, l.month, l.day, (l.hours + d) % 24, l.minutes, l.seconds);
        })(r, o);
        if (i1(su(this.format(s, t)), e))
          return s;
      };
      return a(!1) || a(!0);
    }
  },
  _generateDateArgs: function(e, t) {
    var i = /* @__PURE__ */ new Date(), n = {
      year: i.getFullYear(),
      month: i.getMonth(),
      day: i.getDate(),
      hours: 0,
      minutes: 0,
      seconds: 0
    };
    return e.forEach((r, a) => {
      var o = t[a], s = parseInt(o, 10);
      r === "month" && (s -= 1), n[r] = s;
    }), n;
  },
  formatUsesMonthName: function(e) {
    return typeof e == "object" && !(e.type || e.format) ? e.month === "long" : this.callBase.apply(this, arguments);
  },
  formatUsesDayName: function(e) {
    return typeof e == "object" && !(e.type || e.format) ? e.weekday === "long" : this.callBase.apply(this, arguments);
  },
  getTimeSeparator: function() {
    return su(sg(new Date(2001, 1, 1, 11, 11), {
      hour: "numeric",
      minute: "numeric",
      hour12: !1
    })).replace(/\d/g, "");
  },
  getFormatParts: function(e) {
    if (typeof e == "string")
      return this.callBase(e);
    var t = T({}, G_[e.toLowerCase()]), i = new Date(2001, 2, 4, 5, 6, 7), n = ia(t)(i);
    return n = su(n), [{
      name: "year",
      value: 1
    }, {
      name: "month",
      value: 3
    }, {
      name: "day",
      value: 4
    }, {
      name: "hours",
      value: 5
    }, {
      name: "minutes",
      value: 6
    }, {
      name: "seconds",
      value: 7
    }].map((r) => ({
      name: r.name,
      index: n.indexOf(r.value)
    })).filter((r) => r.index > -1).sort((r, a) => r.index - a.index).map((r) => r.name);
  }
};
var a1 = 0, o1 = typeof Intl < "u", $h = {
  shortdate: "M/d/y",
  shorttime: "h:mm a",
  longdate: "EEEE, MMMM d, y",
  longtime: "h:mm:ss a",
  monthandday: "MMMM d",
  monthandyear: "MMMM y",
  quarterandyear: "QQQ y",
  day: "d",
  year: "y",
  shortdateshorttime: "M/d/y, h:mm a",
  longdatelongtime: "EEEE, MMMM d, y, h:mm:ss a",
  month: "LLLL",
  shortyear: "yy",
  dayofweek: "EEEE",
  quarter: "QQQ",
  hour: "HH",
  minute: "mm",
  second: "ss",
  millisecond: "SSS",
  "datetime-local": "yyyy-MM-ddTHH':'mm':'ss"
}, s1 = {
  year: ["y", "yy", "yyyy"],
  day: ["d", "dd"],
  month: ["M", "MM", "MMM", "MMMM"],
  hours: ["H", "HH", "h", "hh", "ah"],
  minutes: ["m", "mm"],
  seconds: ["s", "ss"],
  milliseconds: ["S", "SS", "SSS"]
}, Pe = zi({
  engine: function() {
    return "base";
  },
  _getPatternByFormat: function(e) {
    return $h[e.toLowerCase()];
  },
  _expandPattern: function(e) {
    return this._getPatternByFormat(e) || e;
  },
  formatUsesMonthName: function(e) {
    return this._expandPattern(e).indexOf("MMMM") !== -1;
  },
  formatUsesDayName: function(e) {
    return this._expandPattern(e).indexOf("EEEE") !== -1;
  },
  getFormatParts: function(e) {
    var t = this._getPatternByFormat(e) || e, i = [];
    return B(t.split(/\W+/), (n, r) => {
      B(s1, (a, o) => {
        o.includes(r) && i.push(a);
      });
    }), i;
  },
  getMonthNames: function(e) {
    return Os.getMonthNames(e);
  },
  getDayNames: function(e) {
    return Os.getDayNames(e);
  },
  getQuarterNames: function(e) {
    return Os.getQuarterNames(e);
  },
  getPeriodNames: function(e) {
    return Os.getPeriodNames(e);
  },
  getTimeSeparator: function() {
    return ":";
  },
  is24HourFormat: function(e) {
    for (var t = new Date(2017, 0, 20, 11, 0, 0, 0), i = new Date(2017, 0, 20, 23, 0, 0, 0), n = this.format(t, e), r = this.format(i, e), a = 0; a < n.length; a++)
      if (n[a] !== r[a])
        return !isNaN(parseInt(n[a]));
  },
  format: function(e, t) {
    if (e) {
      if (!t)
        return e;
      var i;
      if (typeof t == "function")
        i = t;
      else if (t.formatter)
        i = t.formatter;
      else if (t = t.type || t, Te(t))
        return t = $h[t.toLowerCase()] || t, nt.convertDigits(TI(t, this)(e));
      if (i)
        return i(e);
    }
  },
  parse: function(e, t) {
    var i = this, n, r;
    if (e) {
      if (!t)
        return this.parse(e, "shortdate");
      if (t.parser)
        return t.parser(e);
      if (typeof t == "string" && !$h[t.toLowerCase()])
        n = t;
      else {
        r = (o) => {
          var s = i.format(o, t);
          return nt.convertDigits(s, !0);
        };
        try {
          n = z_(r);
        } catch {
        }
      }
      if (n)
        return e = nt.convertDigits(e, !0), UL(n, this)(e);
      Je.log("W0012");
      var a = new Date(e);
      if (!(!a || isNaN(a.getTime())))
        return a;
    }
  },
  firstDayOfWeekIndex: function() {
    var e = Ii.getValueByClosestLocale((t) => ZL[t]);
    return e === void 0 ? a1 : e;
  }
});
o1 && Pe.inject(r1);
const RI = zi({
  format: function(e, t) {
    var i = Te(t) && t !== "" || Me(t) || ce(t), n = rt(e) || Qt(e);
    if (!i || !n)
      return x(e) ? e.toString() : "";
    if (ce(t))
      return t(e);
    if (Te(t) && (t = {
      type: t
    }), rt(e))
      return nt.format(e, t);
    if (Qt(e))
      return Pe.format(e, t);
  },
  getTimeFormat: function(e) {
    return e ? "longtime" : "shorttime";
  },
  _normalizeFormat: function(e) {
    return Array.isArray(e) ? e.length === 1 ? e[0] : function(t) {
      return e.map(function(i) {
        return Pe.format(t, i);
      }).join(" ");
    } : e;
  },
  getDateFormatByDifferences: function(e, t) {
    var i = [], n = t && e.millisecond && !(e.year || e.month || e.day);
    return n ? i.push(function(r) {
      return r.getSeconds() + r.getMilliseconds() / 1e3 + "s";
    }) : e.millisecond && i.push("millisecond"), (e.hour || e.minute || !n && e.second) && i.unshift(this.getTimeFormat(e.second)), e.year && e.month && e.day ? t && t === "month" ? "monthandyear" : (i.unshift("shortdate"), this._normalizeFormat(i)) : e.year && e.month ? "monthandyear" : e.year && e.quarter ? "quarterandyear" : e.year ? "year" : e.quarter ? "quarter" : e.month && e.day ? (t ? i.unshift(function(r) {
      return Pe.getMonthNames("abbreviated")[r.getMonth()] + " " + Pe.format(r, "day");
    }) : i.unshift("monthandday"), this._normalizeFormat(i)) : e.month ? "month" : e.day ? (t ? i.unshift("day") : i.unshift(function(r) {
      return Pe.format(r, "dayofweek") + ", " + Pe.format(r, "day");
    }), this._normalizeFormat(i)) : this._normalizeFormat(i);
  },
  getDateFormatByTicks: function(e) {
    var t, i, n;
    if (e.length > 1)
      for (t = be.getDatesDifferences(e[0], e[1]), n = 1; n < e.length - 1; n++)
        i = be.getDatesDifferences(e[n], e[n + 1]), t.count < i.count && (t = i);
    else
      t = {
        year: !0,
        month: !0,
        day: !0,
        hour: e[0].getHours() > 0,
        minute: e[0].getMinutes() > 0,
        second: e[0].getSeconds() > 0,
        millisecond: e[0].getMilliseconds() > 0
      };
    var r = this.getDateFormatByDifferences(t);
    return r;
  },
  getDateFormatByTickInterval: function(e, t, i) {
    var n, r = function(s, l, u) {
      switch (l) {
        case "year":
        case "quarter":
          s.month = u;
        case "month":
          s.day = u;
        case "week":
        case "day":
          s.hour = u;
        case "hour":
          s.minute = u;
        case "minute":
          s.second = u;
        case "second":
          s.millisecond = u;
      }
    };
    i = Te(i) ? i.toLowerCase() : i;
    var a = be.getDatesDifferences(e, t);
    e !== t && function(s, l, u) {
      !u.getMilliseconds() && u.getSeconds() ? u.getSeconds() - l.getSeconds() === 1 && (s.millisecond = !0, s.second = !1) : !u.getSeconds() && u.getMinutes() ? u.getMinutes() - l.getMinutes() === 1 && (s.second = !0, s.minute = !1) : !u.getMinutes() && u.getHours() ? u.getHours() - l.getHours() === 1 && (s.minute = !0, s.hour = !1) : !u.getHours() && u.getDate() > 1 ? u.getDate() - l.getDate() === 1 && (s.hour = !0, s.day = !1) : u.getDate() === 1 && u.getMonth() ? u.getMonth() - l.getMonth() === 1 && (s.day = !0, s.month = !1) : !u.getMonth() && u.getFullYear() && u.getFullYear() - l.getFullYear() === 1 && (s.month = !0, s.year = !1);
    }(a, e > t ? t : e, e > t ? e : t), n = be.getDateUnitInterval(a), r(a, n, !0), n = be.getDateUnitInterval(i || "second"), r(a, n, !1), a[{
      week: "day"
    }[n] || n] = !0;
    var o = this.getDateFormatByDifferences(a);
    return o;
  }
});
var At = c_(Je.ERROR_MESSAGES, {
  E4000: "[DevExpress.data]: {0}",
  E4001: "Unknown aggregating function is detected: '{0}'",
  E4002: "Unsupported OData protocol version is used",
  E4003: "Unknown filter operation is used: {0}",
  E4004: "The thenby() method is called before the sortby() method",
  E4005: "Store requires a key expression for this operation",
  E4006: "ArrayStore 'data' option must be an array",
  E4007: "Compound keys cannot be auto-generated",
  E4008: "Attempt to insert an item with a duplicated key",
  E4009: "Data item cannot be found",
  E4010: "CustomStore does not support creating queries",
  E4011: "Custom Store method is not implemented or is not a function: {0}",
  E4012: "Custom Store method returns an invalid value: {0}",
  E4013: "Local Store requires the 'name' configuration option is specified",
  E4014: "Unknown data type is specified for ODataStore: {0}",
  E4015: "Unknown entity name or alias is used: {0}",
  E4016: "The compileSetter(expr) method is called with 'self' passed as a parameter",
  E4017: "Keys cannot be modified",
  E4018: "The server has returned a non-numeric value in a response to an item count request",
  E4019: "Mixing of group operators inside a single group of filter expression is not allowed",
  E4020: "Unknown store type is detected: {0}",
  E4021: "The server response does not provide the totalCount value",
  E4022: "The server response does not provide the groupCount value",
  E4023: "Could not parse the following XML: {0}",
  E4024: "String function {0} cannot be used with the data field {1} of type {2}.",
  W4000: "Data returned from the server has an incorrect structure",
  W4001: 'The {0} field is listed in both "keyType" and "fieldTypes". The value of "fieldTypes" is used.',
  W4002: "Data loading has failed for some cells due to the following error: {0}"
}), l1 = null, K_ = function(e) {
  var t;
  (t = l1) === null || t === void 0 || t(e);
};
function u1(e, t) {
  for (var i, n = typeof t == "string" ? t.split() : t.slice(); n.length; )
    if (i = n.shift(), i in e)
      return !0;
  return !1;
}
function BI(e, t, i, n) {
  var r, a;
  if (n) {
    for (var o = 0; o < t.length; o++)
      if (r = t[o].items || t[o].collapsedItems || [], a = BI(e, r || [], i, n - 1), a)
        return a;
  } else if (ba(e, t, i) >= 0)
    return t;
}
function d1(e, t, i, n) {
  return n ? BI(e, t, i, n) || [] : t;
}
function c1(e, t) {
  if (e.key() && (!t._dataByKeyMap || t._dataByKeyMapLength !== t.length)) {
    for (var i = {}, n = t.length, r = 0; r < n; r++)
      i[JSON.stringify(e.keyOf(t[r]))] = t[r];
    t._dataByKeyMap = i, t._dataByKeyMapLength = n;
  }
}
function h1(e, t) {
  if (e._dataByKeyMap)
    return e._dataByKeyMap[JSON.stringify(t)];
}
function p1(e, t) {
  return e._dataByKeyMap ? e._dataByKeyMap[JSON.stringify(t)] : !0;
}
function kI(e, t, i) {
  e._dataByKeyMap && (e._dataByKeyMap[JSON.stringify(t)] = i, e._dataByKeyMapLength += i ? 1 : -1);
}
function FI(e, t, i) {
  i = i || /* @__PURE__ */ new WeakMap();
  var n = e ? Object.create(Object.getPrototypeOf(e)) : {};
  e && i.set(e, n);
  var r = ue({}, e);
  Pi(n, r, !0, !0);
  for (var a in r) {
    var o = r[a], s = t == null ? void 0 : t[a];
    De(o) && !Me(o) && De(s) && !i.has(o) && (n[a] = FI(o, s, i));
  }
  for (var l in n) {
    var u = n[l];
    De(u) && i.has(u) && (n[l] = i.get(u));
  }
  return n;
}
function yr(e, t) {
  var i = FI(e, t);
  return Pi(i, t, !0, !0);
}
function Eo(e) {
  var {
    keyInfo: t,
    data: i,
    changes: n,
    groupCount: r,
    useInsertIndex: a,
    immutable: o,
    disableCache: s,
    logError: l,
    skipCopying: u
  } = e, d = o === !0 ? [...i] : i;
  return n.forEach((c) => {
    var h = c.type === "insert" ? d : d1(t, d, c.key, r);
    switch (!s && c1(t, h), c.type) {
      case "update":
        U_(t, h, c.key, c.data, !0, o, l);
        break;
      case "insert":
        j_(t, h, c.data, a && x(c.index) ? c.index : -1, !0, l, u);
        break;
      case "remove":
        PI(t, h, c.key, !0, l);
    }
  }), d;
}
function Md(e, t, i) {
  return e ? t && At.log(i) : lI(At.Error(i));
}
function U_(e, t, i, n, r, a, o) {
  var s, l = e.key();
  if (l) {
    if (u1(n, l) && !bl(l, i, e.keyOf(n)))
      return Md(r, o, "E4017");
    if (s = h1(t, i), !s) {
      var u = ba(e, t, i);
      if (u < 0)
        return Md(r, o, "E4009");
      if (s = t[u], a === !0 && x(s)) {
        var d = yr(s, n);
        return t[u] = d, !r && So(d, i);
      }
    }
  } else
    s = i;
  if (Pi(s, n, !0), !r)
    return st().useLegacyStoreResult ? So(i, n) : So(s, i);
}
function j_(e, t, i, n, r, a, o) {
  var s, l = e.key(), u = Me(i) && !o ? T({}, i) : i;
  if (l) {
    if (s = e.keyOf(u), s === void 0 || typeof s == "object" && $i(s)) {
      if (Array.isArray(l))
        throw At.Error("E4007");
      s = u[l] = String(new Ot());
    } else if (t[ba(e, t, s)] !== void 0)
      return Md(r, a, "E4008");
  } else
    s = u;
  if (n >= 0 ? t.splice(n, 0, u) : t.push(u), kI(t, s, u), !r)
    return So(st().useLegacyStoreResult ? i : u, s);
}
function PI(e, t, i, n, r) {
  var a = ba(e, t, i);
  if (a > -1 && (t.splice(a, 1), kI(t, i, null)), n) {
    if (a < 0)
      return Md(n, r, "E4009");
  } else
    return So(i);
}
function ba(e, t, i) {
  var n = e.key();
  if (!p1(t, i))
    return -1;
  for (var r = 0, a = t.length; r < a; r++)
    if (bl(n, e.keyOf(t[r]), i))
      return r;
  return -1;
}
var wl = ze.inherit({
  toArray: function() {
    var e = [];
    for (this.reset(); this.next(); )
      e.push(this.current());
    return e;
  },
  countable: function() {
    return !1;
  }
}), q_ = wl.inherit({
  ctor: function(e) {
    this.array = e, this.index = -1;
  },
  next: function() {
    return this.index + 1 < this.array.length ? (this.index++, !0) : !1;
  },
  current: function() {
    return this.array[this.index];
  },
  reset: function() {
    this.index = -1;
  },
  toArray: function() {
    return this.array.slice(0);
  },
  countable: function() {
    return !0;
  },
  count: function() {
    return this.array.length;
  }
}), wc = wl.inherit({
  ctor: function(e) {
    this.iter = e;
  },
  next: function() {
    return this.iter.next();
  },
  current: function() {
    return this.iter.current();
  },
  reset: function() {
    return this.iter.reset();
  }
}), Hh = wc.inherit({
  ctor: function(e, t) {
    this.callBase(e), this.index = -1, this.mapper = t;
  },
  current: function() {
    return this.mapper(this.callBase(), this.index);
  },
  next: function() {
    var e = this.callBase();
    return e && this.index++, e;
  }
}), f1 = function(e, t) {
  return e = bt(e), t = bt(t), e === null && t !== null ? -1 : e !== null && t === null || e === void 0 && t !== void 0 ? 1 : e !== void 0 && t === void 0 || e < t ? -1 : e > t ? 1 : 0;
}, dg = wl.inherit({
  ctor: function(e, t, i, n) {
    e instanceof Hh || (e = new Hh(e, this._wrap)), this.iter = e, this.rules = [{
      getter: t,
      desc: i,
      compare: n
    }];
  },
  thenBy: function(e, t, i) {
    var n = new dg(this.sortedIter || this.iter, e, t, i);
    return this.sortedIter || (n.rules = this.rules.concat(n.rules)), n;
  },
  next: function() {
    return this._ensureSorted(), this.sortedIter.next();
  },
  current: function() {
    return this._ensureSorted(), this.sortedIter.current();
  },
  reset: function() {
    delete this.sortedIter;
  },
  countable: function() {
    return this.sortedIter || this.iter.countable();
  },
  count: function() {
    return this.sortedIter ? this.sortedIter.count() : this.iter.count();
  },
  _ensureSorted: function() {
    var e = this;
    e.sortedIter || (B(e.rules, function() {
      this.getter = tt(this.getter);
    }), e.sortedIter = new Hh(new q_(this.iter.toArray().sort(function(t, i) {
      return e._compare(t, i);
    })), e._unwrap));
  },
  _wrap: function(e, t) {
    return {
      index: t,
      value: e
    };
  },
  _unwrap: function(e) {
    return e.value;
  },
  _compare: function(e, t) {
    var i = e.index, n = t.index;
    if (e = e.value, t = t.value, e === t)
      return i - n;
    for (var r = 0, a = this.rules.length; r < a; r++) {
      var o = this.rules[r], s = o.getter(e), l = o.getter(t), u = o.compare || f1, d = u(s, l);
      if (d)
        return o.desc ? -d : d;
    }
    return i - n;
  }
}), cg = function() {
  var e = function(i) {
    return x(i) ? i.toString() : "";
  };
  function t(i, n, r) {
    return function(a) {
      a = bt(i(a));
      var o = function(s) {
        return s === "" || s === 0 || s === !1;
      }(n) ? a === n : a == n;
      return r && (o = !o), o;
    };
  }
  return function(i) {
    return ce(i) ? i : fM(i) ? function(n) {
      var r = [], a = !1, o = !1;
      return B(n, function() {
        if (Array.isArray(this) || ce(this)) {
          if (r.length > 1 && a !== o)
            throw new At.Error("E4019");
          r.push(cg(this)), a = o, o = !0;
        } else
          o = cM(this);
      }), function(s) {
        for (var l = a, u = 0; u < r.length; u++)
          if (r[u](s) !== a) {
            l = !a;
            break;
          }
        return l;
      };
    }(i) : hM(i) ? function(n) {
      var r = n[0], a = cg(n[1]);
      if (r === "!")
        return function(o) {
          return !a(o);
        };
      throw At.Error("E4003", r);
    }(i) : function(n) {
      n = lM(n);
      var r = tt(n[0]), a = n[1], o = n[2];
      o = bt(o);
      var s = (l, u) => (l = bt(r(l)), (o == null || l == null) && o !== l ? !1 : u(l, o));
      switch (a.toLowerCase()) {
        case "=":
          return t(r, o);
        case "<>":
          return t(r, o, !0);
        case ">":
          return (l) => s(l, (u, d) => u > d);
        case "<":
          return (l) => s(l, (u, d) => u < d);
        case ">=":
          return (l) => s(l, (u, d) => u >= d);
        case "<=":
          return (l) => s(l, (u, d) => u <= d);
        case "startswith":
          return function(l) {
            return bt(e(r(l))).indexOf(o) === 0;
          };
        case "endswith":
          return function(l) {
            var u = bt(e(r(l))), d = e(o);
            if (u.length < d.length)
              return !1;
            var c = u.lastIndexOf(o);
            return c !== -1 && c === u.length - o.length;
          };
        case "contains":
          return function(l) {
            return bt(e(r(l))).indexOf(o) > -1;
          };
        case "notcontains":
          return function(l) {
            return bt(e(r(l))).indexOf(o) === -1;
          };
      }
      throw At.Error("E4003", a);
    }(i);
  };
}(), g1 = wc.inherit({
  ctor: function(e, t) {
    this.callBase(e), this.criteria = cg(t);
  },
  next: function() {
    for (; this.iter.next(); )
      if (this.criteria(this.current()))
        return !0;
    return !1;
  }
}), _1 = wl.inherit({
  ctor: function(e, t) {
    this.iter = e, this.getter = t;
  },
  next: function() {
    return this._ensureGrouped(), this.groupedIter.next();
  },
  current: function() {
    return this._ensureGrouped(), this.groupedIter.current();
  },
  reset: function() {
    delete this.groupedIter;
  },
  countable: function() {
    return !!this.groupedIter;
  },
  count: function() {
    return this.groupedIter.count();
  },
  _ensureGrouped: function() {
    if (!this.groupedIter) {
      var e = {}, t = [], i = this.iter, n = tt(this.getter);
      for (i.reset(); i.next(); ) {
        var r = i.current(), a = n(r);
        a in e ? e[a].push(r) : (e[a] = [r], t.push(a));
      }
      this.groupedIter = new q_(wt(t, function(o) {
        return {
          key: o,
          items: e[o]
        };
      }));
    }
  }
}), v1 = wc.inherit({
  ctor: function(e, t) {
    this.callBase(e), this.getter = tt(t);
  },
  current: function() {
    return this.getter(this.callBase());
  },
  countable: function() {
    return this.iter.countable();
  },
  count: function() {
    return this.iter.count();
  }
}), m1 = wc.inherit({
  ctor: function(e, t, i) {
    this.callBase(e), this.skip = Math.max(0, t), this.take = Math.max(0, i), this.pos = 0;
  },
  next: function() {
    if (this.pos >= this.skip + this.take)
      return !1;
    for (; this.pos < this.skip && this.iter.next(); )
      this.pos++;
    return this.pos++, this.iter.next();
  },
  reset: function() {
    this.callBase(), this.pos = 0;
  },
  countable: function() {
    return this.iter.countable();
  },
  count: function() {
    return Math.min(this.iter.count() - this.skip, this.take);
  }
}), Ic = function e(t, i) {
  i = i || {}, t instanceof wl || (t = new q_(t));
  var n = function(u) {
    var d = i.errorHandler;
    d && d(u), K_(u);
  }, r = function(u) {
    var d = new U().fail(n), c, h = u.step, p = u.finalize;
    try {
      t.reset(), "seed" in u ? c = u.seed : c = t.next() ? t.current() : NaN;
      for (var f = c; t.next(); )
        f = h(f, t.current());
      d.resolve(p ? p(f) : f);
    } catch (v) {
      d.reject(v);
    }
    return d.promise();
  }, a = function(u) {
    return r(H_[u]);
  }, o = function(u) {
    return !ce(u) && !Array.isArray(u) && (u = [].slice.call(arguments)), l(new v1(t, u));
  }, s = function(u) {
    return o(tt(u));
  };
  function l(u) {
    return e(u, i);
  }
  return {
    toArray: function() {
      return t.toArray();
    },
    enumerate: function() {
      var u = new U().fail(n);
      try {
        u.resolve(t.toArray());
      } catch (d) {
        u.reject(d);
      }
      return u.promise();
    },
    sortBy: function(u, d, c) {
      return l(new dg(t, u, d, c));
    },
    thenBy: function(u, d, c) {
      if (t instanceof dg)
        return l(t.thenBy(u, d, c));
      throw At.Error("E4004");
    },
    filter: function(u) {
      return Array.isArray(u) || (u = [].slice.call(arguments)), l(new g1(t, u));
    },
    slice: function(u, d) {
      return d === void 0 && (d = Number.MAX_VALUE), l(new m1(t, u, d));
    },
    select: o,
    groupBy: function(u) {
      return l(new _1(t, u));
    },
    aggregate: function(u, d, c) {
      return arguments.length < 2 ? r({
        step: arguments[0]
      }) : r({
        seed: u,
        step: d,
        finalize: c
      });
    },
    count: function() {
      if (t.countable()) {
        var u = new U().fail(n);
        try {
          u.resolve(t.count());
        } catch (d) {
          u.reject(d);
        }
        return u.promise();
      }
      return a("count");
    },
    sum: function(u) {
      return u ? s(u).sum() : a("sum");
    },
    min: function(u) {
      return u ? s(u).min() : a("min");
    },
    max: function(u) {
      return u ? s(u).max() : a("max");
    },
    avg: function(u) {
      return u ? s(u).avg() : a("avg");
    }
  };
};
function X_(e, t) {
  return e = e.groupBy(t[0].selector), t.length > 1 && (e = e.select(function(i) {
    return T({}, i, {
      items: X_(Ic(i.items), t.slice(1)).toArray()
    });
  })), e;
}
function MI(e, t) {
  var i = [];
  return B(e, function(n, r) {
    var a = li(t, function(o) {
      return r.selector === o.selector;
    });
    a.length < 1 && i.push(r);
  }), i.concat(t);
}
function C1(e, t, i) {
  t = t || {};
  var n = t.filter;
  if (n && (e = e.filter(n)), i)
    return e;
  var r = t.sort, a = t.select, o = t.group, s = t.skip, l = t.take;
  return o && (o = Zn(o), o.keepInitialKeyOrder = !!t.group.keepInitialKeyOrder), (r || o) && (r = Zn(r || []), o && !o.keepInitialKeyOrder && (r = MI(o, r)), B(r, function(u) {
    e = e[u ? "thenBy" : "sortBy"](this.selector, this.desc, this.compare);
  })), a && (e = e.select(a)), o && (e = X_(e, o)), (l || s) && (e = e.slice(s || 0, l)), e;
}
const Qn = {
  multiLevelGroup: X_,
  arrangeSortingInfo: MI,
  queryByOptions: C1
};
var ns = ze.abstract, tx = Qn.queryByOptions, hg = {}, mn = ze.inherit({
  ctor: function(e) {
    var t = this;
    e = e || {}, this._eventsStrategy = new Pa(this), B(["onLoaded", "onLoading", "onInserted", "onInserting", "onUpdated", "onUpdating", "onPush", "onRemoved", "onRemoving", "onModified", "onModifying"], function(i, n) {
      n in e && t.on(n.slice(2).toLowerCase(), e[n]);
    }), this._key = e.key, this._errorHandler = e.errorHandler, this._useDefaultSearch = !0;
  },
  _clearCache: $,
  _customLoadOptions: function() {
    return null;
  },
  key: function() {
    return this._key;
  },
  keyOf: function(e) {
    return this._keyGetter || (this._keyGetter = tt(this.key())), this._keyGetter(e);
  },
  _requireKey: function() {
    if (!this.key())
      throw At.Error("E4005");
  },
  load: function(e) {
    var t = this;
    return e = e || {}, this._eventsStrategy.fireEvent("loading", [e]), this._withLock(this._loadImpl(e)).done(function(i) {
      t._eventsStrategy.fireEvent("loaded", [i, e]);
    });
  },
  _loadImpl: function(e) {
    return tx(this.createQuery(e), e).enumerate();
  },
  _withLock: function(e) {
    var t = new U();
    return e.done(function() {
      var i = this, n = arguments;
      dM.promise().done(function() {
        t.resolveWith(i, n);
      });
    }).fail(function() {
      t.rejectWith(this, arguments);
    }), t;
  },
  createQuery: ns,
  totalCount: function(e) {
    return this._totalCountImpl(e);
  },
  _totalCountImpl: function(e) {
    return tx(this.createQuery(e), e, !0).count();
  },
  byKey: function(e, t) {
    return this._addFailHandlers(this._withLock(this._byKeyImpl(e, t)));
  },
  _byKeyImpl: ns,
  insert: function(e) {
    var t = this;
    return t._eventsStrategy.fireEvent("modifying"), t._eventsStrategy.fireEvent("inserting", [e]), t._addFailHandlers(t._insertImpl(e).done(function(i, n) {
      t._eventsStrategy.fireEvent("inserted", [i, n]), t._eventsStrategy.fireEvent("modified");
    }));
  },
  _insertImpl: ns,
  update: function(e, t) {
    var i = this;
    return i._eventsStrategy.fireEvent("modifying"), i._eventsStrategy.fireEvent("updating", [e, t]), i._addFailHandlers(i._updateImpl(e, t).done(function() {
      i._eventsStrategy.fireEvent("updated", [e, t]), i._eventsStrategy.fireEvent("modified");
    }));
  },
  _updateImpl: ns,
  push: function(e) {
    var t = {
      changes: e,
      waitFor: []
    };
    this._eventsStrategy.fireEvent("beforePush", [t]), ge(...t.waitFor).done(() => {
      this._pushImpl(e), this._eventsStrategy.fireEvent("push", [e]);
    });
  },
  _pushImpl: $,
  remove: function(e) {
    var t = this;
    return t._eventsStrategy.fireEvent("modifying"), t._eventsStrategy.fireEvent("removing", [e]), t._addFailHandlers(t._removeImpl(e).done(function(i) {
      t._eventsStrategy.fireEvent("removed", [i]), t._eventsStrategy.fireEvent("modified");
    }));
  },
  _removeImpl: ns,
  _addFailHandlers: function(e) {
    return e.fail(this._errorHandler).fail(K_);
  },
  on(e, t) {
    return this._eventsStrategy.on(e, t), this;
  },
  off(e, t) {
    return this._eventsStrategy.off(e, t), this;
  }
});
mn.create = function(e, t) {
  if (!(e in hg))
    throw At.Error("E4020", e);
  return new hg[e](t);
};
mn.registerClass = function(e, t) {
  return t && (hg[t] = e), e;
};
mn.inherit = function(e) {
  return function(t, i) {
    var n = e.apply(this, [t]);
    return mn.registerClass(n, i), n;
  };
}(mn.inherit);
var LI = "totalCount", pg = "load", VI = "byKey", ix = "insert", nx = "update", rx = "remove";
function wo(e) {
  return e && ce(e.then);
}
function ca(e) {
  return new U().resolve(e).promise();
}
function Ls(e, t) {
  if (!ce(t))
    throw At.Error("E4011", e);
}
function NI(e) {
  throw At.Error("E4012", e);
}
function Jr(e) {
  function t(i) {
    var n = i[0], r = i[1];
    return !n || !n.getResponseHeader ? null : uM(n, r);
  }
  return function(i) {
    var n;
    i instanceof Error ? n = i : n = new Error(t(arguments) || i && String(i) || "Unknown error"), n.message !== sI && e.reject(n);
  };
}
function $I(e, t) {
  var i = e._loadFunc, n;
  return Ls(pg, i), n = i.apply(e, [t]), Array.isArray(n) ? n = ca(n) : n == null ? n = ca([]) : wo(n) || NI(pg), Nt(n);
}
function x1(e, t) {
  var i = e._totalCountFunc, n;
  if (!ce(i))
    throw At.Error("E4021");
  return n = i.apply(e, [t]), wo(n) || (n = Number(n), isFinite(n) || NI(LI), n = ca(n)), Nt(n);
}
function y1(e, t, i) {
  var n = e._byKeyFunc, r;
  return Ls(VI, n), r = n.apply(e, [t, i]), wo(r) || (r = ca(r)), Nt(r);
}
function HI(e, t, i, n) {
  if (t.__rawData)
    n(t.__rawData);
  else {
    var r = t.__rawDataPromise || $I(t, i);
    t._cacheRawData && (t.__rawDataPromise = r), r.always(function() {
      delete t.__rawDataPromise;
    }).done(function(a) {
      t._cacheRawData && (t.__rawData = a), n(a);
    }).fail(Jr(e));
  }
}
function ax(e, t, i, n) {
  i = i || {};
  var r = {};
  "userData" in i && (r.userData = i.userData), HI(e, t, r, function(a) {
    var o = Ic(a, {
      errorHandler: t._errorHandler
    }), s, l, u = [], d, c;
    n || (s = Qn.queryByOptions(o, i), s === o ? d = a.slice(0) : u.push(s.enumerate().done(function(h) {
      d = h;
    }))), (i.requireTotalCount || n) && (l = Qn.queryByOptions(o, i, !0), l === o ? c = a.length : u.push(l.count().done(function(h) {
      c = h;
    }))), ge.apply(g, u).done(function() {
      n ? e.resolve(c) : i.requireTotalCount ? e.resolve(d, {
        totalCount: c
      }) : e.resolve(d);
    }).fail(function(h) {
      e.reject(h);
    });
  });
}
function b1(e, t, i) {
  HI(e, t, {}, function(n) {
    for (var r = t.key(), a, o = 0, s = n.length; o < s; o++)
      if (a = n[o], bl(r, t.keyOf(n[o]), i)) {
        e.resolve(a);
        return;
      }
    e.reject(At.Error("E4009"));
  });
}
var Tc = mn.inherit({
  ctor: function(e) {
    e = e || {}, this.callBase(e), this._useDefaultSearch = !!e.useDefaultSearch || e.loadMode === "raw", this._loadMode = e.loadMode, this._cacheRawData = e.cacheRawData !== !1, this._loadFunc = e[pg], this._totalCountFunc = e[LI], this._byKeyFunc = e[VI], this._insertFunc = e[ix], this._updateFunc = e[nx], this._removeFunc = e[rx];
  },
  _clearCache() {
    delete this.__rawData;
  },
  createQuery: function() {
    throw At.Error("E4010");
  },
  clearRawDataCache: function() {
    this._clearCache();
  },
  _totalCountImpl: function(e) {
    var t = new U();
    return this._loadMode === "raw" && !this._totalCountFunc ? ax(t, this, e, !0) : (x1(this, e).done(function(i) {
      t.resolve(Number(i));
    }).fail(Jr(t)), t = this._addFailHandlers(t)), t.promise();
  },
  _pushImpl: function(e) {
    this.__rawData && Eo({
      keyInfo: this,
      data: this.__rawData,
      changes: e
    });
  },
  _loadImpl: function(e) {
    var t = new U();
    return this._loadMode === "raw" ? ax(t, this, e, !1) : ($I(this, e).done(function(i, n) {
      t.resolve(i, n);
    }).fail(Jr(t)), t = this._addFailHandlers(t)), t.promise();
  },
  _byKeyImpl: function(e, t) {
    var i = new U();
    return this._byKeyViaLoad() ? (this._requireKey(), b1(i, this, e)) : y1(this, e, t).done(function(n) {
      i.resolve(n);
    }).fail(Jr(i)), i.promise();
  },
  _byKeyViaLoad: function() {
    return this._loadMode === "raw" && !this._byKeyFunc;
  },
  _insertImpl: function(e) {
    var t = this, i = t._insertFunc, n, r = new U();
    return Ls(ix, i), n = i.apply(t, [e]), wo(n) || (n = ca(n)), Nt(n).done(function(a) {
      st().useLegacyStoreResult ? r.resolve(e, a) : r.resolve(a || e, t.keyOf(a));
    }).fail(Jr(r)), r.promise();
  },
  _updateImpl: function(e, t) {
    var i = this._updateFunc, n, r = new U();
    return Ls(nx, i), n = i.apply(this, [e, t]), wo(n) || (n = ca(n)), Nt(n).done(function(a) {
      st().useLegacyStoreResult ? r.resolve(e, t) : r.resolve(a || t, e);
    }).fail(Jr(r)), r.promise();
  },
  _removeImpl: function(e) {
    var t = this._removeFunc, i, n = new U();
    return Ls(rx, t), i = t.apply(this, [e]), wo(i) || (i = ca()), Nt(i).done(function() {
      n.resolve(e);
    }).fail(Jr(n)), n.promise();
  }
});
function S1(e) {
  var t = [], i = !1;
  function n() {
    for (; t.length; ) {
      i = !0;
      var r = t.shift(), a = r();
      if (a !== void 0) {
        if (a.then) {
          ge(a).always(n);
          return;
        }
        throw Je.Error("E0015");
      }
    }
    i = !1;
  }
  return {
    add: function(r, a) {
      e ? (t[0] && a && a(t[0]), t = [r]) : t.push(r), i || n();
    },
    busy: function() {
      return i;
    }
  };
}
function pt(e, t) {
  if (e == null)
    return {};
  var i = {}, n = Object.keys(e), r, a;
  for (a = 0; a < n.length; a++)
    r = n[a], !(t.indexOf(r) >= 0) && (i[r] = e[r]);
  return i;
}
var E1 = ke(), w1 = {
  getXhr: function() {
    return new E1.XMLHttpRequest();
  }
};
const I1 = zi(w1);
var Y_ = ke(), Vs = "success", zh = "error", T1 = "timeout", D1 = "nocontent", A1 = "parsererror", O1 = function(e) {
  return 200 <= e && e < 300;
}, R1 = function(e) {
  return e !== 204;
}, B1 = function(e) {
  var t = [];
  for (var i in e) {
    var n = e[i];
    n !== void 0 && (n === null && (n = ""), typeof n == "function" && (n = n()), t.push(encodeURIComponent(i) + "=" + encodeURIComponent(n)));
  }
  return t.join("&");
}, zI = function(e) {
  var t = ee.createElement("script");
  for (var i in e)
    t[i] = e[i];
  return t;
}, WI = function(e) {
  e.parentNode.removeChild(e);
}, GI = function(e) {
  return ee.getHead().appendChild(e);
}, ox = function(e) {
  var t = zI({
    text: e
  });
  GI(t), WI(t);
}, k1 = function(e) {
  var t = zI({
    src: e
  });
  return new Promise(function(i, n) {
    var r = {
      load: i,
      error: n
    }, a = function(s) {
      r[s.type](), WI(t);
    };
    for (var o in r)
      ee.listen(t, o, a);
    GI(t);
  });
}, F1 = function(e) {
  var t = e.dataType || "*", i = "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript", n = {
    "*": "*/*",
    text: "text/plain",
    html: "text/html",
    xml: "application/xml, text/xml",
    json: "application/json, text/javascript",
    jsonp: i,
    script: i
  };
  return nk(n, e.accepts, !0), n[t] ? n[t] + (t !== "*" ? ", */*; q=0.01" : "") : n["*"];
}, P1 = function(e) {
  var t;
  return e.data && !e.upload && Z_(e) !== "GET" && (t = "application/x-www-form-urlencoded;charset=utf-8"), e.contentType || t;
}, M1 = function(e) {
  return e.responseType && e.responseType !== "text" || typeof e.responseText != "string" ? e.response : e.responseText;
}, L1 = function(e, t, i) {
  var n = M1(t);
  switch (i) {
    case "jsonp":
      ox(n);
      break;
    case "script":
      ox(n), e.resolve(n, Vs, t);
      break;
    case "json":
      try {
        e.resolve(JSON.parse(n), Vs, t);
      } catch (r) {
        e.reject(t, A1, r);
      }
      break;
    default:
      e.resolve(n, Vs, t);
  }
}, V1 = function(e) {
  if (!Re())
    return !0;
  var t = !1, i = ee.createElement("a"), n = ee.createElement("a");
  i.href = Y_.location.href;
  try {
    n.href = e, n.href = n.href, t = i.protocol + "//" + i.host != n.protocol + "//" + n.host;
  } catch {
    t = !0;
  }
  return t;
}, N1 = function(e, t) {
  return e && setTimeout(function() {
    t.customStatus = T1, t.abort();
  }, e);
}, $1 = function(e) {
  if (e.dataType === "jsonp") {
    var t = Math.random().toString().replace(/\D/g, ""), i = e.jsonpCallback || "dxCallback" + Date.now() + "_" + t, n = e.jsonp || "callback";
    return e.data = e.data || {}, e.data[n] = i, i;
  }
}, H1 = function(e, t) {
  var i = e.data, n = typeof i == "string", r = e.url || Y_.location.href;
  return !n && !e.cache && (i = i || {}, i._ = Date.now()), i && !e.upload && (n || (i = B1(i)), Z_(e) === "GET" ? (i !== "" && (r += (r.indexOf("?") > -1 ? "&" : "?") + i), i = null) : t["Content-Type"] && t["Content-Type"].indexOf("application/x-www-form-urlencoded") > -1 && (i = i.replace(/%20/g, "+"))), {
    url: r,
    parameters: i
  };
};
function Z_(e) {
  return (e.method || "GET").toUpperCase();
}
var z1 = function(e) {
  var t = e.headers || {};
  return t["Content-Type"] = t["Content-Type"] || P1(e), t.Accept = t.Accept || F1(e), !e.crossDomain && !t["X-Requested-With"] && (t["X-Requested-With"] = "XMLHttpRequest"), t;
}, W1 = function(e) {
  var t = I1.getXhr(), i = new U(), n = i.promise(), r = x(e.async) ? e.async : !0, a = e.dataType, o = e.timeout || 0, s;
  e.crossDomain = V1(e.url);
  var l = a === "jsonp" || a === "script";
  e.cache === void 0 && (e.cache = !l);
  var u = $1(e), d = z1(e), c = H1(e, d), h = c.url, p = c.parameters;
  if (u && (Y_[u] = function(m) {
    i.resolve(m, Vs, t);
  }), e.crossDomain && l)
    return k1(h).then(function() {
      a !== "jsonp" && i.resolve(null, Vs, t);
    }, function() {
      i.reject(t, zh);
    }), n;
  if (e.crossDomain && !("withCredentials" in t))
    return i.reject(t, zh), n;
  if (t.open(Z_(e), h, r, e.username, e.password), r && (t.timeout = o, s = N1(o, t)), t.onreadystatechange = function(m) {
    t.readyState === 4 && (clearTimeout(s), O1(t.status) ? R1(t.status) ? L1(i, t, a) : i.resolve(null, D1, t) : i.reject(t, t.customStatus || zh));
  }, e.upload && (t.upload.onprogress = e.upload.onprogress, t.upload.onloadstart = e.upload.onloadstart, t.upload.onabort = e.upload.onabort), e.xhrFields)
    for (var f in e.xhrFields)
      t[f] = e.xhrFields[f];
  e.responseType === "arraybuffer" && (t.responseType = e.responseType);
  for (var v in d)
    Object.prototype.hasOwnProperty.call(d, v) && x(d[v]) && t.setRequestHeader(v, d[v]);
  return e.beforeSend && e.beforeSend(t), t.send(p), n.abort = function() {
    t.abort();
  }, n;
};
const G1 = zi({
  sendRequest: W1
}), K1 = {};
var U1 = function e(t, i, n) {
  n = n || [], i = i || {};
  var r = function(s, l) {
    return {
      name: s,
      args: l
    };
  }, a = function(s) {
    var l = new U(), u, d, c, h, p, f = function(C) {
      var b = i.errorHandler;
      b && b(C), K_(C), l.reject(C);
    };
    function v(C) {
      switch (C.name) {
        case "sortBy":
          return p = [C.args], !0;
        case "thenBy":
          if (!p)
            throw At.Error("E4004");
          return p.push(C.args), !0;
      }
      return !1;
    }
    try {
      u = i.adapter, ce(u) || (u = K1[u]), d = u(i), c = [].concat(n).concat(s);
      var m = d.optimize;
      for (m && m(c); c.length; ) {
        if (h = c[0], !v(h)) {
          if (p) {
            c.unshift(r("multiSort", [p])), p = null;
            continue;
          }
          if (String(h.name) !== "enumerate" && (!d[h.name] || d[h.name].apply(d, h.args) === !1))
            break;
        }
        c.shift();
      }
      (function() {
        var C = c[0], b = [];
        C && C.name === "multiSort" && (c.shift(), B(C.args[0], function() {
          b.push(r(b.length ? "thenBy" : "sortBy", this));
        })), c = b.concat(c);
      })(), d.exec(t).done(function(C, b) {
        if (!c.length)
          l.resolve(C, b);
        else {
          var A = Ic(C, {
            errorHandler: i.errorHandler
          });
          B(c, function() {
            A = A[this.name].apply(A, this.args);
          }), A.done(l.resolve).fail(l.reject);
        }
      }).fail(f);
    } catch (C) {
      f(C);
    }
    return l.promise();
  }, o = {};
  return B(["sortBy", "thenBy", "filter", "slice", "select", "groupBy"], function() {
    var s = String(this);
    o[s] = function() {
      return e(t, i, n.concat(r(s, arguments)));
    };
  }), B(["count", "min", "max", "sum", "avg", "aggregate", "enumerate"], function() {
    var s = String(this);
    o[s] = function() {
      return a.call(this, r(s, arguments));
    };
  }), o;
}, j1 = {
  array: Ic,
  remote: U1
}, ui = function() {
  var e = Array.isArray(arguments[0]) ? "array" : "remote";
  return j1[e].apply(this, arguments);
}, Il = mn.inherit({
  ctor: function(e) {
    Array.isArray(e) ? e = {
      data: e
    } : e = e || {}, this.callBase(e);
    var t = e.data;
    if (t && !Array.isArray(t))
      throw At.Error("E4006");
    this._array = t || [];
  },
  createQuery: function() {
    return ui(this._array, {
      errorHandler: this._errorHandler
    });
  },
  _byKeyImpl: function(e) {
    var t = ba(this, this._array, e);
    return t === -1 ? lI(At.Error("E4009")) : So(this._array[t]);
  },
  _insertImpl: function(e) {
    return j_(this, this._array, e);
  },
  _pushImpl: function(e) {
    Eo({
      keyInfo: this,
      data: this._array,
      changes: e
    });
  },
  _updateImpl: function(e, t) {
    return U_(this, this._array, e, t);
  },
  _removeImpl: function(e) {
    return PI(this, this._array, e);
  },
  clear: function() {
    this._eventsStrategy.fireEvent("modifying"), this._array = [], this._eventsStrategy.fireEvent("modified");
  }
}, "array"), q1 = ["items"], KI = "canceled", sx = (e) => e.state() === "pending", lx = (e) => {
  switch (e.length) {
    case 0:
      return;
    case 1:
      return e[0];
  }
  return [].slice.call(e);
}, X1 = (e, t, i) => wt(e, (n) => {
  var r = pt(n, q1);
  return ue({}, r, {
    items: UI(n.items, t - 1, i)
  });
}), UI = (e, t, i) => Array.isArray(e) ? t ? X1(e, t, i) : wt(e, i) : e, Y1 = (e, t, i) => {
  var n = i ? Zn(i).length : 0;
  return UI(e, n, t);
}, jI = (e, t) => {
  var i;
  return (i = e) !== null && i !== void 0 && i.data && (t = e, e = e.data), Array.isArray(e) || (e = [e]), {
    data: e,
    extra: t
  };
}, Z1 = (e) => {
  var t = {};
  return B(["useDefaultSearch", "key", "load", "loadMode", "cacheRawData", "byKey", "lookup", "totalCount", "insert", "update", "remove"], function() {
    t[this] = e[this], delete e[this];
  }), new Tc(t);
}, Q1 = (e) => {
  var t = e.type;
  return delete e.type, mn.create(t, e);
}, J1 = (e, t) => new Tc({
  load: () => G1.sendRequest({
    url: e,
    dataType: "json"
  }),
  loadMode: t == null ? void 0 : t.fromUrlLoadMode
}), Uo = (e, t) => {
  var i;
  return typeof e == "string" && (e = {
    paginate: !1,
    store: J1(e, t)
  }), e === void 0 && (e = []), Array.isArray(e) || e instanceof mn ? e = {
    store: e
  } : e = T({}, e), e.store === void 0 && (e.store = []), i = e.store, "load" in e ? i = Z1(e) : Array.isArray(i) ? i = new Il(i) : Me(i) && (i = Q1(T({}, i))), e.store = i, e;
};
class eV {
  constructor() {
    this._counter = -1, this._deferreds = {};
  }
  add(t) {
    return this._counter++, this._deferreds[this._counter] = t, this._counter;
  }
  remove(t) {
    return delete this._deferreds[t];
  }
  cancel(t) {
    return t in this._deferreds ? (this._deferreds[t].reject(KI), !0) : !1;
  }
  cancelAll() {
    for (; this._counter > -1; )
      this.cancel(this._counter), this._counter--;
  }
}
var Jn = ze.inherit({
  ctor(e) {
    var t;
    e = Uo(e), this._eventsStrategy = new Pa(this, {
      syncStrategy: !0
    }), this._store = e.store, this._changedTime = 0;
    var i = e.pushAggregationTimeout !== 0;
    if (i) {
      var n = e.pushAggregationTimeout === void 0 ? () => 5 * this._changedTime : e.pushAggregationTimeout, r, a, o = _M((s) => {
        r.resolve();
        var l = ge(...a);
        l.done(() => this._onPush(s)), a = void 0, r = void 0;
      }, n);
      this._onPushHandler = (s) => {
        this._aggregationTimeoutId = o(s.changes), r || (r = new U()), a = s.waitFor, s.waitFor.push(r.promise());
      }, this._store.on("beforePush", this._onPushHandler);
    } else
      this._onPushHandler = (s) => this._onPush(s), this._store.on("push", this._onPushHandler);
    this._storeLoadOptions = this._extractLoadOptions(e), this._mapFunc = e.map, this._postProcessFunc = e.postProcess, this._pageIndex = e.pageIndex !== void 0 ? e.pageIndex : 0, this._pageSize = e.pageSize !== void 0 ? e.pageSize : 20, this._loadingCount = 0, this._loadQueue = this._createLoadQueue(), this._searchValue = "searchValue" in e ? e.searchValue : null, this._searchOperation = e.searchOperation || "contains", this._searchExpr = e.searchExpr, this._paginate = e.paginate, this._reshapeOnPush = (t = e.reshapeOnPush) !== null && t !== void 0 ? t : !1, B(["onChanged", "onLoadError", "onLoadingChanged", "onCustomizeLoadResult", "onCustomizeStoreLoadOptions"], (s, l) => {
      l in e && this.on(l.substr(2, 1).toLowerCase() + l.substr(3), e[l]);
    }), this._operationManager = new eV(), this._init();
  },
  _init() {
    this._items = [], this._userData = {}, this._totalCount = -1, this._isLoaded = !1, x(this._paginate) || (this._paginate = !this.group()), this._isLastPage = !this._paginate;
  },
  dispose() {
    var e;
    this._store.off("beforePush", this._onPushHandler), this._store.off("push", this._onPushHandler), this._eventsStrategy.dispose(), clearTimeout(this._aggregationTimeoutId), (e = this._delayedLoadTask) === null || e === void 0 || e.abort(), this._operationManager.cancelAll(), delete this._store, delete this._items, delete this._delayedLoadTask, this._disposed = !0;
  },
  _extractLoadOptions(e) {
    var t = {}, i = ["sort", "filter", "select", "group", "requireTotalCount"], n = this._store._customLoadOptions();
    return n && (i = i.concat(n)), B(i, function() {
      t[this] = e[this];
    }), t;
  },
  loadOptions() {
    return this._storeLoadOptions;
  },
  items() {
    return this._items;
  },
  pageIndex(e) {
    if (!rt(e))
      return this._pageIndex;
    this._pageIndex = e, this._isLastPage = !this._paginate;
  },
  paginate(e) {
    if (!_a(e))
      return this._paginate;
    this._paginate !== e && (this._paginate = e, this.pageIndex(0));
  },
  pageSize(e) {
    if (!rt(e))
      return this._pageSize;
    this._pageSize = e;
  },
  isLastPage() {
    return this._isLastPage;
  },
  generateStoreLoadOptionAccessor(e) {
    return (t) => {
      var i = lx(t);
      if (i === void 0)
        return this._storeLoadOptions[e];
      this._storeLoadOptions[e] = i;
    };
  },
  sort() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return this.generateStoreLoadOptionAccessor("sort")(t);
  },
  filter() {
    var e = lx(arguments);
    if (e === void 0)
      return this._storeLoadOptions.filter;
    this._storeLoadOptions.filter = e, this.pageIndex(0);
  },
  group() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return this.generateStoreLoadOptionAccessor("group")(t);
  },
  select() {
    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
      t[i] = arguments[i];
    return this.generateStoreLoadOptionAccessor("select")(t);
  },
  requireTotalCount(e) {
    if (!_a(e))
      return this._storeLoadOptions.requireTotalCount;
    this._storeLoadOptions.requireTotalCount = e;
  },
  searchValue(e) {
    if (arguments.length < 1)
      return this._searchValue;
    this._searchValue = e, this.pageIndex(0);
  },
  searchOperation(e) {
    if (!Te(e))
      return this._searchOperation;
    this._searchOperation = e, this.pageIndex(0);
  },
  searchExpr(e) {
    var t = arguments.length;
    if (t === 0)
      return this._searchExpr;
    t > 1 && (e = [].slice.call(arguments)), this._searchExpr = e, this.pageIndex(0);
  },
  store() {
    return this._store;
  },
  key() {
    var e;
    return (e = this._store) === null || e === void 0 ? void 0 : e.key();
  },
  totalCount() {
    return this._totalCount;
  },
  isLoaded() {
    return this._isLoaded;
  },
  isLoading() {
    return this._loadingCount > 0;
  },
  beginLoading() {
    this._changeLoadingCount(1);
  },
  endLoading() {
    this._changeLoadingCount(-1);
  },
  _createLoadQueue: () => S1(),
  _changeLoadingCount(e) {
    var t = this.isLoading();
    this._loadingCount += e;
    var i = this.isLoading();
    t ^ i && this._eventsStrategy.fireEvent("loadingChanged", [i]);
  },
  _scheduleLoadCallbacks(e) {
    this.beginLoading(), e.always(() => {
      this.endLoading();
    });
  },
  _scheduleFailCallbacks(e) {
    var t = this;
    e.fail(function() {
      for (var i = arguments.length, n = new Array(i), r = 0; r < i; r++)
        n[r] = arguments[r];
      n[0] !== KI && t._eventsStrategy.fireEvent("loadError", n);
    });
  },
  _fireChanged(e) {
    var t = /* @__PURE__ */ new Date();
    this._eventsStrategy.fireEvent("changed", e), this._changedTime = /* @__PURE__ */ new Date() - t;
  },
  _scheduleChangedCallbacks(e) {
    e.done(() => this._fireChanged());
  },
  loadSingle(e, t) {
    var i = new U(), n = this.key(), r = this._store, a = this._createStoreLoadOptions();
    return this._scheduleFailCallbacks(i), arguments.length < 2 && (t = e, e = n), delete a.skip, delete a.group, delete a.refresh, delete a.pageIndex, delete a.searchString, (() => e === n || r instanceof Tc && !r._byKeyViaLoad() ? r.byKey(t, a) : (a.take = 1, a.filter = a.filter ? [a.filter, [e, t]] : [e, t], r.load(a)))().fail(i.reject).done((o) => {
      var s = Array.isArray(o) && !o.length;
      !x(o) || s ? i.reject(new At.Error("E4009")) : (Array.isArray(o) || (o = [o]), i.resolve(this._applyMapFunction(o)[0]));
    }), i.promise();
  },
  load() {
    var e = new U(), t = () => {
      if (!this._disposed && sx(e))
        return this._loadFromStore(i, e);
    };
    this._scheduleLoadCallbacks(e), this._scheduleFailCallbacks(e), this._scheduleChangedCallbacks(e);
    var i = this._createLoadOperation(e);
    return this._eventsStrategy.fireEvent("customizeStoreLoadOptions", [i]), this._loadQueue.add(() => (typeof i.delay == "number" ? this._delayedLoadTask = p_(t, i.delay) : t(), e.promise())), e.promise({
      operationId: i.operationId
    });
  },
  _onPush(e) {
    if (this._reshapeOnPush)
      this.load();
    else {
      var t = {
        changes: e
      };
      this._eventsStrategy.fireEvent("changing", [t]);
      var i = this.group(), n = this.items(), r = 0, a = this.paginate() || i ? e.filter((o) => o.type === "update") : e;
      i && (r = Array.isArray(i) ? i.length : 1), this._mapFunc && a.forEach((o) => {
        o.type === "insert" && (o.data = this._mapFunc(o.data));
      }), t.postProcessChanges && (a = t.postProcessChanges(a)), Eo({
        keyInfo: this.store(),
        data: n,
        changes: a,
        groupCount: r,
        useInsertIndex: !0
      }), this._fireChanged([{
        changes: e
      }]);
    }
  },
  _createLoadOperation(e) {
    var t = this._operationManager.add(e), i = this._createStoreLoadOptions();
    return e.always(() => this._operationManager.remove(t)), {
      operationId: t,
      storeLoadOptions: i
    };
  },
  reload() {
    var e = this.store();
    return e._clearCache(), this._init(), this.load();
  },
  cancel(e) {
    return this._operationManager.cancel(e);
  },
  cancelAll() {
    return this._operationManager.cancelAll();
  },
  _addSearchOptions(e) {
    this._disposed || (this.store()._useDefaultSearch ? this._addSearchFilter(e) : (e.searchOperation = this._searchOperation, e.searchValue = this._searchValue, e.searchExpr = this._searchExpr));
  },
  _createStoreLoadOptions() {
    var e = T({}, this._storeLoadOptions);
    return this._addSearchOptions(e), this._paginate && this._pageSize && (e.skip = this._pageIndex * this._pageSize, e.take = this._pageSize), e.userData = this._userData, e;
  },
  _addSearchFilter(e) {
    var t = this._searchValue, i = this._searchOperation, n = this._searchExpr, r = [];
    t && (n || (n = "this"), Array.isArray(n) || (n = [n]), B(n, function(a, o) {
      r.length && r.push("or"), r.push([o, i, t]);
    }), e.filter ? e.filter = [r, e.filter] : e.filter = r);
  },
  _loadFromStore(e, t) {
    var i = (n, r) => {
      if (!this._disposed && sx(t)) {
        var a = T(jI(n, r), e);
        this._eventsStrategy.fireEvent("customizeLoadResult", [a]), ge(a.data).done((o) => {
          a.data = o, this._processStoreLoadResult(a, t);
        }).fail(t.reject);
      }
    };
    return e.data ? new U().resolve(e.data).done(i) : this.store().load(e.storeLoadOptions).done(i).fail(t.reject);
  },
  _processStoreLoadResult(e, t) {
    var i = e.data, n = e.extra, r = e.storeLoadOptions, a = () => (this._isLoaded = !0, this._totalCount = isFinite(n.totalCount) ? n.totalCount : -1, t.resolve(i, n));
    this._disposed || (i = this._applyPostProcessFunction(this._applyMapFunction(i)), De(n) || (n = {}), this._items = i, (!i.length || !this._paginate || this._pageSize && i.length < this._pageSize) && (this._isLastPage = !0), r.requireTotalCount && !isFinite(n.totalCount) ? this.store().totalCount(r).done(function(o) {
      n.totalCount = o, a();
    }).fail(t.reject) : a());
  },
  _applyMapFunction(e) {
    return this._mapFunc ? Y1(e, this._mapFunc, this.group()) : e;
  },
  _applyPostProcessFunction(e) {
    return this._postProcessFunc ? this._postProcessFunc(e) : e;
  },
  on(e, t) {
    return this._eventsStrategy.on(e, t), this;
  },
  off(e, t) {
    return this._eventsStrategy.off(e, t), this;
  }
}), tV = {
  en: {
    Yes: "Yes",
    No: "No",
    Cancel: "Cancel",
    Close: "Close",
    Clear: "Clear",
    Done: "Done",
    Loading: "Loading...",
    Select: "Select...",
    Search: "Search",
    Back: "Back",
    OK: "OK",
    "dxCollectionWidget-noDataText": "No data to display",
    "dxDropDownEditor-selectLabel": "Select",
    "validation-required": "Required",
    "validation-required-formatted": "{0} is required",
    "validation-numeric": "Value must be a number",
    "validation-numeric-formatted": "{0} must be a number",
    "validation-range": "Value is out of range",
    "validation-range-formatted": "{0} is out of range",
    "validation-stringLength": "The length of the value is not correct",
    "validation-stringLength-formatted": "The length of {0} is not correct",
    "validation-custom": "Value is invalid",
    "validation-custom-formatted": "{0} is invalid",
    "validation-async": "Value is invalid",
    "validation-async-formatted": "{0} is invalid",
    "validation-compare": "Values do not match",
    "validation-compare-formatted": "{0} does not match",
    "validation-pattern": "Value does not match pattern",
    "validation-pattern-formatted": "{0} does not match pattern",
    "validation-email": "Email is invalid",
    "validation-email-formatted": "{0} is invalid",
    "validation-mask": "Value is invalid",
    "dxLookup-searchPlaceholder": "Minimum character number: {0}",
    "dxList-pullingDownText": "Pull down to refresh...",
    "dxList-pulledDownText": "Release to refresh...",
    "dxList-refreshingText": "Refreshing...",
    "dxList-pageLoadingText": "Loading...",
    "dxList-nextButtonText": "More",
    "dxList-selectAll": "Select All",
    "dxListEditDecorator-delete": "Delete",
    "dxListEditDecorator-more": "More",
    "dxScrollView-pullingDownText": "Pull down to refresh...",
    "dxScrollView-pulledDownText": "Release to refresh...",
    "dxScrollView-refreshingText": "Refreshing...",
    "dxScrollView-reachBottomText": "Loading...",
    "dxDateBox-simulatedDataPickerTitleTime": "Select time",
    "dxDateBox-simulatedDataPickerTitleDate": "Select date",
    "dxDateBox-simulatedDataPickerTitleDateTime": "Select date and time",
    "dxDateBox-validation-datetime": "Value must be a date or time",
    "dxFileUploader-selectFile": "Select a file",
    "dxFileUploader-dropFile": "or Drop a file here",
    "dxFileUploader-bytes": "bytes",
    "dxFileUploader-kb": "kb",
    "dxFileUploader-Mb": "Mb",
    "dxFileUploader-Gb": "Gb",
    "dxFileUploader-upload": "Upload",
    "dxFileUploader-uploaded": "Uploaded",
    "dxFileUploader-readyToUpload": "Ready to upload",
    "dxFileUploader-uploadAbortedMessage": "Upload cancelled",
    "dxFileUploader-uploadFailedMessage": "Upload failed",
    "dxFileUploader-invalidFileExtension": "File type is not allowed",
    "dxFileUploader-invalidMaxFileSize": "File is too large",
    "dxFileUploader-invalidMinFileSize": "File is too small",
    "dxRangeSlider-ariaFrom": "From",
    "dxRangeSlider-ariaTill": "Till",
    "dxSwitch-switchedOnText": "ON",
    "dxSwitch-switchedOffText": "OFF",
    "dxForm-optionalMark": "optional",
    "dxForm-requiredMessage": "{0} is required",
    "dxNumberBox-invalidValueMessage": "Value must be a number",
    "dxNumberBox-noDataText": "No data",
    "dxDataGrid-columnChooserTitle": "Column Chooser",
    "dxDataGrid-columnChooserEmptyText": "Drag a column here to hide it",
    "dxDataGrid-groupContinuesMessage": "Continues on the next page",
    "dxDataGrid-groupContinuedMessage": "Continued from the previous page",
    "dxDataGrid-groupHeaderText": "Group by This Column",
    "dxDataGrid-ungroupHeaderText": "Ungroup",
    "dxDataGrid-ungroupAllText": "Ungroup All",
    "dxDataGrid-editingEditRow": "Edit",
    "dxDataGrid-editingSaveRowChanges": "Save",
    "dxDataGrid-editingCancelRowChanges": "Cancel",
    "dxDataGrid-editingDeleteRow": "Delete",
    "dxDataGrid-editingUndeleteRow": "Undelete",
    "dxDataGrid-editingConfirmDeleteMessage": "Are you sure you want to delete this record?",
    "dxDataGrid-validationCancelChanges": "Cancel changes",
    "dxDataGrid-groupPanelEmptyText": "Drag a column header here to group by that column",
    "dxDataGrid-noDataText": "No data",
    "dxDataGrid-searchPanelPlaceholder": "Search...",
    "dxDataGrid-filterRowShowAllText": "(All)",
    "dxDataGrid-filterRowResetOperationText": "Reset",
    "dxDataGrid-filterRowOperationEquals": "Equals",
    "dxDataGrid-filterRowOperationNotEquals": "Does not equal",
    "dxDataGrid-filterRowOperationLess": "Less than",
    "dxDataGrid-filterRowOperationLessOrEquals": "Less than or equal to",
    "dxDataGrid-filterRowOperationGreater": "Greater than",
    "dxDataGrid-filterRowOperationGreaterOrEquals": "Greater than or equal to",
    "dxDataGrid-filterRowOperationStartsWith": "Starts with",
    "dxDataGrid-filterRowOperationContains": "Contains",
    "dxDataGrid-filterRowOperationNotContains": "Does not contain",
    "dxDataGrid-filterRowOperationEndsWith": "Ends with",
    "dxDataGrid-filterRowOperationBetween": "Between",
    "dxDataGrid-filterRowOperationBetweenStartText": "Start",
    "dxDataGrid-filterRowOperationBetweenEndText": "End",
    "dxDataGrid-applyFilterText": "Apply filter",
    "dxDataGrid-trueText": "true",
    "dxDataGrid-falseText": "false",
    "dxDataGrid-sortingAscendingText": "Sort Ascending",
    "dxDataGrid-sortingDescendingText": "Sort Descending",
    "dxDataGrid-sortingClearText": "Clear Sorting",
    "dxDataGrid-editingSaveAllChanges": "Save changes",
    "dxDataGrid-editingCancelAllChanges": "Discard changes",
    "dxDataGrid-editingAddRow": "Add a row",
    "dxDataGrid-summaryMin": "Min: {0}",
    "dxDataGrid-summaryMinOtherColumn": "Min of {1} is {0}",
    "dxDataGrid-summaryMax": "Max: {0}",
    "dxDataGrid-summaryMaxOtherColumn": "Max of {1} is {0}",
    "dxDataGrid-summaryAvg": "Avg: {0}",
    "dxDataGrid-summaryAvgOtherColumn": "Avg of {1} is {0}",
    "dxDataGrid-summarySum": "Sum: {0}",
    "dxDataGrid-summarySumOtherColumn": "Sum of {1} is {0}",
    "dxDataGrid-summaryCount": "Count: {0}",
    "dxDataGrid-columnFixingFix": "Fix",
    "dxDataGrid-columnFixingUnfix": "Unfix",
    "dxDataGrid-columnFixingLeftPosition": "To the left",
    "dxDataGrid-columnFixingRightPosition": "To the right",
    "dxDataGrid-exportTo": "Export",
    "dxDataGrid-exportToExcel": "Export to Excel file",
    "dxDataGrid-exporting": "Exporting...",
    "dxDataGrid-excelFormat": "Excel file",
    "dxDataGrid-selectedRows": "Selected rows",
    "dxDataGrid-exportSelectedRows": "Export selected rows to {0}",
    "dxDataGrid-exportAll": "Export all data to {0}",
    "dxDataGrid-headerFilterLabel": "Filter options",
    "dxDataGrid-headerFilterIndicatorLabel": "Show filter options for column '{0}'",
    "dxDataGrid-headerFilterEmptyValue": "(Blanks)",
    "dxDataGrid-headerFilterOK": "OK",
    "dxDataGrid-headerFilterCancel": "Cancel",
    "dxDataGrid-ariaAdaptiveCollapse": "Hide additional data",
    "dxDataGrid-ariaAdaptiveExpand": "Display additional data",
    "dxDataGrid-ariaColumn": "Column",
    "dxDataGrid-ariaValue": "Value",
    "dxDataGrid-ariaFilterCell": "Filter cell",
    "dxDataGrid-ariaCollapse": "Collapse",
    "dxDataGrid-ariaExpand": "Expand",
    "dxDataGrid-ariaDataGrid": "Data grid",
    "dxDataGrid-ariaSearchInGrid": "Search in the data grid",
    "dxDataGrid-ariaSelectAll": "Select all",
    "dxDataGrid-ariaSelectRow": "Select row",
    "dxDataGrid-ariaToolbar": "Data grid toolbar",
    "dxDataGrid-filterBuilderPopupTitle": "Filter Builder",
    "dxDataGrid-filterPanelCreateFilter": "Create Filter",
    "dxDataGrid-filterPanelClearFilter": "Clear",
    "dxDataGrid-filterPanelFilterEnabledHint": "Enable the filter",
    "dxTreeList-ariaTreeList": "Tree list",
    "dxTreeList-ariaSearchInGrid": "Search in the tree list",
    "dxTreeList-ariaToolbar": "Tree list toolbar",
    "dxTreeList-editingAddRowToNode": "Add",
    "dxPager-infoText": "Page {0} of {1} ({2} items)",
    "dxPager-pagesCountText": "of",
    "dxPager-pageSize": "Items per page: {0}",
    "dxPager-pageSizesAllText": "All",
    "dxPager-page": "Page {0}",
    "dxPager-prevPage": "Previous Page",
    "dxPager-nextPage": "Next Page",
    "dxPager-ariaLabel": "Page Navigation",
    "dxPivotGrid-grandTotal": "Grand Total",
    "dxPivotGrid-total": "{0} Total",
    "dxPivotGrid-fieldChooserTitle": "Field Chooser",
    "dxPivotGrid-showFieldChooser": "Show Field Chooser",
    "dxPivotGrid-expandAll": "Expand All",
    "dxPivotGrid-collapseAll": "Collapse All",
    "dxPivotGrid-sortColumnBySummary": 'Sort "{0}" by This Column',
    "dxPivotGrid-sortRowBySummary": 'Sort "{0}" by This Row',
    "dxPivotGrid-removeAllSorting": "Remove All Sorting",
    "dxPivotGrid-dataNotAvailable": "N/A",
    "dxPivotGrid-rowFields": "Row Fields",
    "dxPivotGrid-columnFields": "Column Fields",
    "dxPivotGrid-dataFields": "Data Fields",
    "dxPivotGrid-filterFields": "Filter Fields",
    "dxPivotGrid-allFields": "All Fields",
    "dxPivotGrid-columnFieldArea": "Drop Column Fields Here",
    "dxPivotGrid-dataFieldArea": "Drop Data Fields Here",
    "dxPivotGrid-rowFieldArea": "Drop Row Fields Here",
    "dxPivotGrid-filterFieldArea": "Drop Filter Fields Here",
    "dxScheduler-editorLabelTitle": "Subject",
    "dxScheduler-editorLabelStartDate": "Start Date",
    "dxScheduler-editorLabelEndDate": "End Date",
    "dxScheduler-editorLabelDescription": "Description",
    "dxScheduler-editorLabelRecurrence": "Repeat",
    "dxScheduler-openAppointment": "Open appointment",
    "dxScheduler-recurrenceNever": "Never",
    "dxScheduler-recurrenceMinutely": "Every minute",
    "dxScheduler-recurrenceHourly": "Hourly",
    "dxScheduler-recurrenceDaily": "Daily",
    "dxScheduler-recurrenceWeekly": "Weekly",
    "dxScheduler-recurrenceMonthly": "Monthly",
    "dxScheduler-recurrenceYearly": "Yearly",
    "dxScheduler-recurrenceRepeatEvery": "Repeat Every",
    "dxScheduler-recurrenceRepeatOn": "Repeat On",
    "dxScheduler-recurrenceEnd": "End repeat",
    "dxScheduler-recurrenceAfter": "After",
    "dxScheduler-recurrenceOn": "On",
    "dxScheduler-recurrenceRepeatMinutely": "minute(s)",
    "dxScheduler-recurrenceRepeatHourly": "hour(s)",
    "dxScheduler-recurrenceRepeatDaily": "day(s)",
    "dxScheduler-recurrenceRepeatWeekly": "week(s)",
    "dxScheduler-recurrenceRepeatMonthly": "month(s)",
    "dxScheduler-recurrenceRepeatYearly": "year(s)",
    "dxScheduler-switcherDay": "Day",
    "dxScheduler-switcherWeek": "Week",
    "dxScheduler-switcherWorkWeek": "Work Week",
    "dxScheduler-switcherMonth": "Month",
    "dxScheduler-switcherAgenda": "Agenda",
    "dxScheduler-switcherTimelineDay": "Timeline Day",
    "dxScheduler-switcherTimelineWeek": "Timeline Week",
    "dxScheduler-switcherTimelineWorkWeek": "Timeline Work Week",
    "dxScheduler-switcherTimelineMonth": "Timeline Month",
    "dxScheduler-recurrenceRepeatOnDate": "on date",
    "dxScheduler-recurrenceRepeatCount": "occurrence(s)",
    "dxScheduler-allDay": "All day",
    "dxScheduler-confirmRecurrenceEditMessage": "Do you want to edit only this appointment or the whole series?",
    "dxScheduler-confirmRecurrenceDeleteMessage": "Do you want to delete only this appointment or the whole series?",
    "dxScheduler-confirmRecurrenceEditSeries": "Edit series",
    "dxScheduler-confirmRecurrenceDeleteSeries": "Delete series",
    "dxScheduler-confirmRecurrenceEditOccurrence": "Edit appointment",
    "dxScheduler-confirmRecurrenceDeleteOccurrence": "Delete appointment",
    "dxScheduler-noTimezoneTitle": "No timezone",
    "dxScheduler-moreAppointments": "{0} more",
    "dxCalendar-todayButtonText": "Today",
    "dxCalendar-ariaWidgetName": "Calendar",
    "dxColorView-ariaRed": "Red",
    "dxColorView-ariaGreen": "Green",
    "dxColorView-ariaBlue": "Blue",
    "dxColorView-ariaAlpha": "Transparency",
    "dxColorView-ariaHex": "Color code",
    "dxTagBox-selected": "{0} selected",
    "dxTagBox-allSelected": "All selected ({0})",
    "dxTagBox-moreSelected": "{0} more",
    "vizExport-printingButtonText": "Print",
    "vizExport-titleMenuText": "Exporting/Printing",
    "vizExport-exportButtonText": "{0} file",
    "dxFilterBuilder-and": "And",
    "dxFilterBuilder-or": "Or",
    "dxFilterBuilder-notAnd": "Not And",
    "dxFilterBuilder-notOr": "Not Or",
    "dxFilterBuilder-addCondition": "Add Condition",
    "dxFilterBuilder-addGroup": "Add Group",
    "dxFilterBuilder-enterValueText": "<enter a value>",
    "dxFilterBuilder-filterOperationEquals": "Equals",
    "dxFilterBuilder-filterOperationNotEquals": "Does not equal",
    "dxFilterBuilder-filterOperationLess": "Is less than",
    "dxFilterBuilder-filterOperationLessOrEquals": "Is less than or equal to",
    "dxFilterBuilder-filterOperationGreater": "Is greater than",
    "dxFilterBuilder-filterOperationGreaterOrEquals": "Is greater than or equal to",
    "dxFilterBuilder-filterOperationStartsWith": "Starts with",
    "dxFilterBuilder-filterOperationContains": "Contains",
    "dxFilterBuilder-filterOperationNotContains": "Does not contain",
    "dxFilterBuilder-filterOperationEndsWith": "Ends with",
    "dxFilterBuilder-filterOperationIsBlank": "Is blank",
    "dxFilterBuilder-filterOperationIsNotBlank": "Is not blank",
    "dxFilterBuilder-filterOperationBetween": "Is between",
    "dxFilterBuilder-filterOperationAnyOf": "Is any of",
    "dxFilterBuilder-filterOperationNoneOf": "Is none of",
    "dxHtmlEditor-dialogColorCaption": "Change Font Color",
    "dxHtmlEditor-dialogBackgroundCaption": "Change Background Color",
    "dxHtmlEditor-dialogLinkCaption": "Add Link",
    "dxHtmlEditor-dialogLinkUrlField": "URL",
    "dxHtmlEditor-dialogLinkTextField": "Text",
    "dxHtmlEditor-dialogLinkTargetField": "Open link in new window",
    "dxHtmlEditor-dialogImageCaption": "Add Image",
    "dxHtmlEditor-dialogImageUrlField": "URL",
    "dxHtmlEditor-dialogImageAltField": "Alternate text",
    "dxHtmlEditor-dialogImageWidthField": "Width (px)",
    "dxHtmlEditor-dialogImageHeightField": "Height (px)",
    "dxHtmlEditor-dialogInsertTableRowsField": "Rows",
    "dxHtmlEditor-dialogInsertTableColumnsField": "Columns",
    "dxHtmlEditor-dialogInsertTableCaption": "Insert Table",
    "dxHtmlEditor-dialogUpdateImageCaption": "Update Image",
    "dxHtmlEditor-dialogImageUpdateButton": "Update",
    "dxHtmlEditor-dialogImageAddButton": "Add",
    "dxHtmlEditor-dialogImageSpecifyUrl": "From the Web",
    "dxHtmlEditor-dialogImageSelectFile": "From This Device",
    "dxHtmlEditor-dialogImageKeepAspectRatio": "Keep Aspect Ratio",
    "dxHtmlEditor-dialogImageEncodeToBase64": "Encode to Base64",
    "dxHtmlEditor-heading": "Heading",
    "dxHtmlEditor-normalText": "Normal text",
    "dxHtmlEditor-background": "Background Color",
    "dxHtmlEditor-bold": "Bold",
    "dxHtmlEditor-color": "Font Color",
    "dxHtmlEditor-font": "Font",
    "dxHtmlEditor-italic": "Italic",
    "dxHtmlEditor-link": "Add Link",
    "dxHtmlEditor-image": "Add Image",
    "dxHtmlEditor-size": "Size",
    "dxHtmlEditor-strike": "Strikethrough",
    "dxHtmlEditor-subscript": "Subscript",
    "dxHtmlEditor-superscript": "Superscript",
    "dxHtmlEditor-underline": "Underline",
    "dxHtmlEditor-blockquote": "Blockquote",
    "dxHtmlEditor-header": "Header",
    "dxHtmlEditor-increaseIndent": "Increase Indent",
    "dxHtmlEditor-decreaseIndent": "Decrease Indent",
    "dxHtmlEditor-orderedList": "Ordered List",
    "dxHtmlEditor-bulletList": "Bullet List",
    "dxHtmlEditor-alignLeft": "Align Left",
    "dxHtmlEditor-alignCenter": "Align Center",
    "dxHtmlEditor-alignRight": "Align Right",
    "dxHtmlEditor-alignJustify": "Align Justify",
    "dxHtmlEditor-codeBlock": "Code Block",
    "dxHtmlEditor-variable": "Add Variable",
    "dxHtmlEditor-undo": "Undo",
    "dxHtmlEditor-redo": "Redo",
    "dxHtmlEditor-clear": "Clear Formatting",
    "dxHtmlEditor-insertTable": "Insert Table",
    "dxHtmlEditor-insertHeaderRow": "Insert Header Row",
    "dxHtmlEditor-insertRowAbove": "Insert Row Above",
    "dxHtmlEditor-insertRowBelow": "Insert Row Below",
    "dxHtmlEditor-insertColumnLeft": "Insert Column Left",
    "dxHtmlEditor-insertColumnRight": "Insert Column Right",
    "dxHtmlEditor-deleteColumn": "Delete Column",
    "dxHtmlEditor-deleteRow": "Delete Row",
    "dxHtmlEditor-deleteTable": "Delete Table",
    "dxHtmlEditor-cellProperties": "Cell Properties",
    "dxHtmlEditor-tableProperties": "Table Properties",
    "dxHtmlEditor-insert": "Insert",
    "dxHtmlEditor-delete": "Delete",
    "dxHtmlEditor-border": "Border",
    "dxHtmlEditor-style": "Style",
    "dxHtmlEditor-width": "Width",
    "dxHtmlEditor-height": "Height",
    "dxHtmlEditor-borderColor": "Color",
    "dxHtmlEditor-tableBackground": "Background",
    "dxHtmlEditor-dimensions": "Dimensions",
    "dxHtmlEditor-alignment": "Alignment",
    "dxHtmlEditor-horizontal": "Horizontal",
    "dxHtmlEditor-vertical": "Vertical",
    "dxHtmlEditor-paddingVertical": "Vertical Padding",
    "dxHtmlEditor-paddingHorizontal": "Horizontal Padding",
    "dxHtmlEditor-pixels": "Pixels",
    "dxHtmlEditor-list": "List",
    "dxHtmlEditor-ordered": "Ordered",
    "dxHtmlEditor-bullet": "Bullet",
    "dxHtmlEditor-align": "Align",
    "dxHtmlEditor-center": "Center",
    "dxHtmlEditor-left": "Left",
    "dxHtmlEditor-right": "Right",
    "dxHtmlEditor-indent": "Indent",
    "dxHtmlEditor-justify": "Justify",
    "dxFileManager-newDirectoryName": "Untitled directory",
    "dxFileManager-rootDirectoryName": "Files",
    "dxFileManager-errorNoAccess": "Access Denied. Operation could not be completed.",
    "dxFileManager-errorDirectoryExistsFormat": "Directory '{0}' already exists.",
    "dxFileManager-errorFileExistsFormat": "File '{0}' already exists.",
    "dxFileManager-errorFileNotFoundFormat": "File '{0}' not found.",
    "dxFileManager-errorDirectoryNotFoundFormat": "Directory '{0}' not found.",
    "dxFileManager-errorWrongFileExtension": "File extension is not allowed.",
    "dxFileManager-errorMaxFileSizeExceeded": "File size exceeds the maximum allowed size.",
    "dxFileManager-errorInvalidSymbols": "This name contains invalid characters.",
    "dxFileManager-errorDefault": "Unspecified error.",
    "dxFileManager-errorDirectoryOpenFailed": "The directory cannot be opened",
    "dxFileManager-commandCreate": "New directory",
    "dxFileManager-commandRename": "Rename",
    "dxFileManager-commandMove": "Move to",
    "dxFileManager-commandCopy": "Copy to",
    "dxFileManager-commandDelete": "Delete",
    "dxFileManager-commandDownload": "Download",
    "dxFileManager-commandUpload": "Upload files",
    "dxFileManager-commandRefresh": "Refresh",
    "dxFileManager-commandThumbnails": "Thumbnails View",
    "dxFileManager-commandDetails": "Details View",
    "dxFileManager-commandClearSelection": "Clear selection",
    "dxFileManager-commandShowNavPane": "Toggle navigation pane",
    "dxFileManager-dialogDirectoryChooserMoveTitle": "Move to",
    "dxFileManager-dialogDirectoryChooserMoveButtonText": "Move",
    "dxFileManager-dialogDirectoryChooserCopyTitle": "Copy to",
    "dxFileManager-dialogDirectoryChooserCopyButtonText": "Copy",
    "dxFileManager-dialogRenameItemTitle": "Rename",
    "dxFileManager-dialogRenameItemButtonText": "Save",
    "dxFileManager-dialogCreateDirectoryTitle": "New directory",
    "dxFileManager-dialogCreateDirectoryButtonText": "Create",
    "dxFileManager-dialogDeleteItemTitle": "Delete",
    "dxFileManager-dialogDeleteItemButtonText": "Delete",
    "dxFileManager-dialogDeleteItemSingleItemConfirmation": "Are you sure you want to delete {0}?",
    "dxFileManager-dialogDeleteItemMultipleItemsConfirmation": "Are you sure you want to delete {0} items?",
    "dxFileManager-dialogButtonCancel": "Cancel",
    "dxFileManager-editingCreateSingleItemProcessingMessage": "Creating a directory inside {0}",
    "dxFileManager-editingCreateSingleItemSuccessMessage": "Created a directory inside {0}",
    "dxFileManager-editingCreateSingleItemErrorMessage": "Directory was not created",
    "dxFileManager-editingCreateCommonErrorMessage": "Directory was not created",
    "dxFileManager-editingRenameSingleItemProcessingMessage": "Renaming an item inside {0}",
    "dxFileManager-editingRenameSingleItemSuccessMessage": "Renamed an item inside {0}",
    "dxFileManager-editingRenameSingleItemErrorMessage": "Item was not renamed",
    "dxFileManager-editingRenameCommonErrorMessage": "Item was not renamed",
    "dxFileManager-editingDeleteSingleItemProcessingMessage": "Deleting an item from {0}",
    "dxFileManager-editingDeleteMultipleItemsProcessingMessage": "Deleting {0} items from {1}",
    "dxFileManager-editingDeleteSingleItemSuccessMessage": "Deleted an item from {0}",
    "dxFileManager-editingDeleteMultipleItemsSuccessMessage": "Deleted {0} items from {1}",
    "dxFileManager-editingDeleteSingleItemErrorMessage": "Item was not deleted",
    "dxFileManager-editingDeleteMultipleItemsErrorMessage": "{0} items were not deleted",
    "dxFileManager-editingDeleteCommonErrorMessage": "Some items were not deleted",
    "dxFileManager-editingMoveSingleItemProcessingMessage": "Moving an item to {0}",
    "dxFileManager-editingMoveMultipleItemsProcessingMessage": "Moving {0} items to {1}",
    "dxFileManager-editingMoveSingleItemSuccessMessage": "Moved an item to {0}",
    "dxFileManager-editingMoveMultipleItemsSuccessMessage": "Moved {0} items to {1}",
    "dxFileManager-editingMoveSingleItemErrorMessage": "Item was not moved",
    "dxFileManager-editingMoveMultipleItemsErrorMessage": "{0} items were not moved",
    "dxFileManager-editingMoveCommonErrorMessage": "Some items were not moved",
    "dxFileManager-editingCopySingleItemProcessingMessage": "Copying an item to {0}",
    "dxFileManager-editingCopyMultipleItemsProcessingMessage": "Copying {0} items to {1}",
    "dxFileManager-editingCopySingleItemSuccessMessage": "Copied an item to {0}",
    "dxFileManager-editingCopyMultipleItemsSuccessMessage": "Copied {0} items to {1}",
    "dxFileManager-editingCopySingleItemErrorMessage": "Item was not copied",
    "dxFileManager-editingCopyMultipleItemsErrorMessage": "{0} items were not copied",
    "dxFileManager-editingCopyCommonErrorMessage": "Some items were not copied",
    "dxFileManager-editingUploadSingleItemProcessingMessage": "Uploading an item to {0}",
    "dxFileManager-editingUploadMultipleItemsProcessingMessage": "Uploading {0} items to {1}",
    "dxFileManager-editingUploadSingleItemSuccessMessage": "Uploaded an item to {0}",
    "dxFileManager-editingUploadMultipleItemsSuccessMessage": "Uploaded {0} items to {1}",
    "dxFileManager-editingUploadSingleItemErrorMessage": "Item was not uploaded",
    "dxFileManager-editingUploadMultipleItemsErrorMessage": "{0} items were not uploaded",
    "dxFileManager-editingUploadCanceledMessage": "Canceled",
    "dxFileManager-editingDownloadSingleItemErrorMessage": "Item was not downloaded",
    "dxFileManager-editingDownloadMultipleItemsErrorMessage": "{0} items were not downloaded",
    "dxFileManager-listDetailsColumnCaptionName": "Name",
    "dxFileManager-listDetailsColumnCaptionDateModified": "Date Modified",
    "dxFileManager-listDetailsColumnCaptionFileSize": "File Size",
    "dxFileManager-listThumbnailsTooltipTextSize": "Size",
    "dxFileManager-listThumbnailsTooltipTextDateModified": "Date Modified",
    "dxFileManager-notificationProgressPanelTitle": "Progress",
    "dxFileManager-notificationProgressPanelEmptyListText": "No operations",
    "dxFileManager-notificationProgressPanelOperationCanceled": "Canceled",
    "dxDiagram-categoryGeneral": "General",
    "dxDiagram-categoryFlowchart": "Flowchart",
    "dxDiagram-categoryOrgChart": "Org Chart",
    "dxDiagram-categoryContainers": "Containers",
    "dxDiagram-categoryCustom": "Custom",
    "dxDiagram-commandExportToSvg": "Export to SVG",
    "dxDiagram-commandExportToPng": "Export to PNG",
    "dxDiagram-commandExportToJpg": "Export to JPEG",
    "dxDiagram-commandUndo": "Undo",
    "dxDiagram-commandRedo": "Redo",
    "dxDiagram-commandFontName": "Font Name",
    "dxDiagram-commandFontSize": "Font Size",
    "dxDiagram-commandBold": "Bold",
    "dxDiagram-commandItalic": "Italic",
    "dxDiagram-commandUnderline": "Underline",
    "dxDiagram-commandTextColor": "Font Color",
    "dxDiagram-commandLineColor": "Line Color",
    "dxDiagram-commandLineWidth": "Line Width",
    "dxDiagram-commandLineStyle": "Line Style",
    "dxDiagram-commandLineStyleSolid": "Solid",
    "dxDiagram-commandLineStyleDotted": "Dotted",
    "dxDiagram-commandLineStyleDashed": "Dashed",
    "dxDiagram-commandFillColor": "Fill Color",
    "dxDiagram-commandAlignLeft": "Align Left",
    "dxDiagram-commandAlignCenter": "Align Center",
    "dxDiagram-commandAlignRight": "Align Right",
    "dxDiagram-commandConnectorLineType": "Connector Line Type",
    "dxDiagram-commandConnectorLineStraight": "Straight",
    "dxDiagram-commandConnectorLineOrthogonal": "Orthogonal",
    "dxDiagram-commandConnectorLineStart": "Connector Line Start",
    "dxDiagram-commandConnectorLineEnd": "Connector Line End",
    "dxDiagram-commandConnectorLineNone": "None",
    "dxDiagram-commandConnectorLineArrow": "Arrow",
    "dxDiagram-commandFullscreen": "Full Screen",
    "dxDiagram-commandUnits": "Units",
    "dxDiagram-commandPageSize": "Page Size",
    "dxDiagram-commandPageOrientation": "Page Orientation",
    "dxDiagram-commandPageOrientationLandscape": "Landscape",
    "dxDiagram-commandPageOrientationPortrait": "Portrait",
    "dxDiagram-commandPageColor": "Page Color",
    "dxDiagram-commandShowGrid": "Show Grid",
    "dxDiagram-commandSnapToGrid": "Snap to Grid",
    "dxDiagram-commandGridSize": "Grid Size",
    "dxDiagram-commandZoomLevel": "Zoom Level",
    "dxDiagram-commandAutoZoom": "Auto Zoom",
    "dxDiagram-commandFitToContent": "Fit to Content",
    "dxDiagram-commandFitToWidth": "Fit to Width",
    "dxDiagram-commandAutoZoomByContent": "Auto Zoom by Content",
    "dxDiagram-commandAutoZoomByWidth": "Auto Zoom by Width",
    "dxDiagram-commandSimpleView": "Simple View",
    "dxDiagram-commandCut": "Cut",
    "dxDiagram-commandCopy": "Copy",
    "dxDiagram-commandPaste": "Paste",
    "dxDiagram-commandSelectAll": "Select All",
    "dxDiagram-commandDelete": "Delete",
    "dxDiagram-commandBringToFront": "Bring to Front",
    "dxDiagram-commandSendToBack": "Send to Back",
    "dxDiagram-commandLock": "Lock",
    "dxDiagram-commandUnlock": "Unlock",
    "dxDiagram-commandInsertShapeImage": "Insert Image...",
    "dxDiagram-commandEditShapeImage": "Change Image...",
    "dxDiagram-commandDeleteShapeImage": "Delete Image",
    "dxDiagram-commandLayoutLeftToRight": "Left-to-right",
    "dxDiagram-commandLayoutRightToLeft": "Right-to-left",
    "dxDiagram-commandLayoutTopToBottom": "Top-to-bottom",
    "dxDiagram-commandLayoutBottomToTop": "Bottom-to-top",
    "dxDiagram-unitIn": "in",
    "dxDiagram-unitCm": "cm",
    "dxDiagram-unitPx": "px",
    "dxDiagram-dialogButtonOK": "OK",
    "dxDiagram-dialogButtonCancel": "Cancel",
    "dxDiagram-dialogInsertShapeImageTitle": "Insert Image",
    "dxDiagram-dialogEditShapeImageTitle": "Change Image",
    "dxDiagram-dialogEditShapeImageSelectButton": "Select image",
    "dxDiagram-dialogEditShapeImageLabelText": "or drop a file here",
    "dxDiagram-uiExport": "Export",
    "dxDiagram-uiProperties": "Properties",
    "dxDiagram-uiSettings": "Settings",
    "dxDiagram-uiShowToolbox": "Show Toolbox",
    "dxDiagram-uiSearch": "Search",
    "dxDiagram-uiStyle": "Style",
    "dxDiagram-uiLayout": "Layout",
    "dxDiagram-uiLayoutTree": "Tree",
    "dxDiagram-uiLayoutLayered": "Layered",
    "dxDiagram-uiDiagram": "Diagram",
    "dxDiagram-uiText": "Text",
    "dxDiagram-uiObject": "Object",
    "dxDiagram-uiConnector": "Connector",
    "dxDiagram-uiPage": "Page",
    "dxDiagram-shapeText": "Text",
    "dxDiagram-shapeRectangle": "Rectangle",
    "dxDiagram-shapeEllipse": "Ellipse",
    "dxDiagram-shapeCross": "Cross",
    "dxDiagram-shapeTriangle": "Triangle",
    "dxDiagram-shapeDiamond": "Diamond",
    "dxDiagram-shapeHeart": "Heart",
    "dxDiagram-shapePentagon": "Pentagon",
    "dxDiagram-shapeHexagon": "Hexagon",
    "dxDiagram-shapeOctagon": "Octagon",
    "dxDiagram-shapeStar": "Star",
    "dxDiagram-shapeArrowLeft": "Left Arrow",
    "dxDiagram-shapeArrowUp": "Up Arrow",
    "dxDiagram-shapeArrowRight": "Right Arrow",
    "dxDiagram-shapeArrowDown": "Down Arrow",
    "dxDiagram-shapeArrowUpDown": "Up Down Arrow",
    "dxDiagram-shapeArrowLeftRight": "Left Right Arrow",
    "dxDiagram-shapeProcess": "Process",
    "dxDiagram-shapeDecision": "Decision",
    "dxDiagram-shapeTerminator": "Terminator",
    "dxDiagram-shapePredefinedProcess": "Predefined Process",
    "dxDiagram-shapeDocument": "Document",
    "dxDiagram-shapeMultipleDocuments": "Multiple Documents",
    "dxDiagram-shapeManualInput": "Manual Input",
    "dxDiagram-shapePreparation": "Preparation",
    "dxDiagram-shapeData": "Data",
    "dxDiagram-shapeDatabase": "Database",
    "dxDiagram-shapeHardDisk": "Hard Disk",
    "dxDiagram-shapeInternalStorage": "Internal Storage",
    "dxDiagram-shapePaperTape": "Paper Tape",
    "dxDiagram-shapeManualOperation": "Manual Operation",
    "dxDiagram-shapeDelay": "Delay",
    "dxDiagram-shapeStoredData": "Stored Data",
    "dxDiagram-shapeDisplay": "Display",
    "dxDiagram-shapeMerge": "Merge",
    "dxDiagram-shapeConnector": "Connector",
    "dxDiagram-shapeOr": "Or",
    "dxDiagram-shapeSummingJunction": "Summing Junction",
    "dxDiagram-shapeContainerDefaultText": "Container",
    "dxDiagram-shapeVerticalContainer": "Vertical Container",
    "dxDiagram-shapeHorizontalContainer": "Horizontal Container",
    "dxDiagram-shapeCardDefaultText": "Person's Name",
    "dxDiagram-shapeCardWithImageOnLeft": "Card with Image on the Left",
    "dxDiagram-shapeCardWithImageOnTop": "Card with Image on the Top",
    "dxDiagram-shapeCardWithImageOnRight": "Card with Image on the Right",
    "dxGantt-dialogTitle": "Title",
    "dxGantt-dialogStartTitle": "Start",
    "dxGantt-dialogEndTitle": "End",
    "dxGantt-dialogProgressTitle": "Progress",
    "dxGantt-dialogResourcesTitle": "Resources",
    "dxGantt-dialogResourceManagerTitle": "Resource Manager",
    "dxGantt-dialogTaskDetailsTitle": "Task Details",
    "dxGantt-dialogEditResourceListHint": "Edit Resource List",
    "dxGantt-dialogEditNoResources": "No resources",
    "dxGantt-dialogButtonAdd": "Add",
    "dxGantt-contextMenuNewTask": "New Task",
    "dxGantt-contextMenuNewSubtask": "New Subtask",
    "dxGantt-contextMenuDeleteTask": "Delete Task",
    "dxGantt-contextMenuDeleteDependency": "Delete Dependency",
    "dxGantt-dialogTaskDeleteConfirmation": "Deleting a task also deletes all its dependencies and subtasks. Are you sure you want to delete this task?",
    "dxGantt-dialogDependencyDeleteConfirmation": "Are you sure you want to delete the dependency from the task?",
    "dxGantt-dialogResourcesDeleteConfirmation": "Deleting a resource also deletes it from tasks to which this resource is assigned. Are you sure you want to delete these resources? Resources: {0}",
    "dxGantt-dialogConstraintCriticalViolationMessage": "The task you are attempting to move is linked to a second task by a dependency relation. This change would conflict with dependency rules. How would you like to proceed?",
    "dxGantt-dialogConstraintViolationMessage": "The task you are attempting to move is linked to a second task by a dependency relation. How would you like to proceed?",
    "dxGantt-dialogCancelOperationMessage": "Cancel the operation",
    "dxGantt-dialogDeleteDependencyMessage": "Delete the dependency",
    "dxGantt-dialogMoveTaskAndKeepDependencyMessage": "Move the task and keep the dependency",
    "dxGantt-dialogConstraintCriticalViolationSeveralTasksMessage": "The task you are attempting to move is linked to another tasks by dependency relations. This change would conflict with dependency rules. How would you like to proceed?",
    "dxGantt-dialogConstraintViolationSeveralTasksMessage": "The task you are attempting to move is linked to another tasks by dependency relations. How would you like to proceed?",
    "dxGantt-dialogDeleteDependenciesMessage": "Delete the dependency relations",
    "dxGantt-dialogMoveTaskAndKeepDependenciesMessage": "Move the task and keep the dependencies",
    "dxGantt-undo": "Undo",
    "dxGantt-redo": "Redo",
    "dxGantt-expandAll": "Expand All",
    "dxGantt-collapseAll": "Collapse All",
    "dxGantt-addNewTask": "Add New Task",
    "dxGantt-deleteSelectedTask": "Delete Selected Task",
    "dxGantt-zoomIn": "Zoom In",
    "dxGantt-zoomOut": "Zoom Out",
    "dxGantt-fullScreen": "Full Screen",
    "dxGantt-quarter": "Q{0}",
    "dxGantt-sortingAscendingText": "Sort Ascending",
    "dxGantt-sortingDescendingText": "Sort Descending",
    "dxGantt-sortingClearText": "Clear Sorting",
    "dxGantt-showResources": "Show Resources",
    "dxGantt-showDependencies": "Show Dependencies",
    "dxGantt-dialogStartDateValidation": "Start date must be after {0}",
    "dxGantt-dialogEndDateValidation": "End date must be after {0}"
  }
}, iV = T(!0, {}, tV), nV = (e, t) => e[t] || {}, Wh = {}, q = zi({
  engine: function() {
    return "base";
  },
  _dictionary: iV,
  load: function(e) {
    T(!0, this._dictionary, e);
  },
  _localizablePrefix: "@",
  setup: function(e) {
    this._localizablePrefix = e;
  },
  localizeString: function(e) {
    var t = this, i = new RegExp("(^|[^a-zA-Z_0-9" + t._localizablePrefix + "-]+)(" + t._localizablePrefix + "{1,2})([a-zA-Z_0-9-]+)", "g"), n = t._localizablePrefix + t._localizablePrefix;
    return e.replace(i, (r, a, o, s) => {
      var l = t._localizablePrefix + s, u;
      return o !== n && (u = t.format(s)), u || (Wh[s] = nF(s)), a + (u || l);
    });
  },
  getMessagesByLocales: function() {
    return this._dictionary;
  },
  getDictionary: function(e) {
    return e ? Wh : T({}, Wh, this.getMessagesByLocales()[Ii.locale()]);
  },
  getFormatter: function(e) {
    return this._getFormatterBase(e) || this._getFormatterBase(e, "en");
  },
  _getFormatterBase: function(e, t) {
    var i = Ii.getValueByClosestLocale((n) => nV(this._dictionary, n)[e]);
    if (i)
      return function() {
        var n = arguments.length === 1 && Array.isArray(arguments[0]) ? arguments[0].slice(0) : Array.prototype.slice.call(arguments, 0);
        return n.unshift(i), Ji.apply(this, n);
      };
  },
  format: function(e) {
    var t = this.getFormatter(e), i = Array.prototype.slice.call(arguments, 1);
    return t && t.apply(this, i) || "";
  }
}), rV = _l(), aV = "dx-loadindicator", oV = "dx-loadindicator-wrapper", sV = "dx-loadindicator-content", lV = "dx-loadindicator-icon", ux = "dx-loadindicator-segment", uV = "dx-loadindicator-segment-inner", dV = "dx-loadindicator-image", bi = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      indicatorSrc: "",
      activeStateEnabled: !1,
      hoverStateEnabled: !1,
      _animatingSegmentCount: 1,
      _animatingSegmentInner: !1
    });
  },
  _defaultOptionsRules: function() {
    var e = rn();
    return this.callBase().concat([{
      device: function() {
        var t = ve.real(), i = t.platform === "android" && !/chrome/i.test(rV.userAgent);
        return i;
      },
      options: {
        viaImage: !0
      }
    }, {
      device: function() {
        return St(e);
      },
      options: {
        _animatingSegmentCount: 2,
        _animatingSegmentInner: !0
      }
    }, {
      device: function() {
        return oI(e);
      },
      options: {
        _animatingSegmentCount: 7
      }
    }]);
  },
  _useTemplates: function() {
    return !1;
  },
  _init: function() {
    this.callBase(), this.$element().addClass(aV);
  },
  _initMarkup: function() {
    this.callBase(), this._renderWrapper(), this._renderIndicatorContent(), this._renderMarkup();
  },
  _renderWrapper: function() {
    this._$wrapper = g("<div>").addClass(oV), this.$element().append(this._$wrapper);
  },
  _renderIndicatorContent: function() {
    this._$content = g("<div>").addClass(sV), this._$wrapper.append(this._$content);
  },
  _renderMarkup: function() {
    Uw() && !this.option("viaImage") && !this.option("indicatorSrc") ? this._renderMarkupForAnimation() : this._renderMarkupForImage();
  },
  _renderMarkupForAnimation: function() {
    var e = this.option("_animatingSegmentInner");
    this._$indicator = g("<div>").addClass(lV), this._$content.append(this._$indicator);
    for (var t = this.option("_animatingSegmentCount"); t >= 0; --t) {
      var i = g("<div>").addClass(ux).addClass(ux + t);
      e && i.append(g("<div>").addClass(uV)), this._$indicator.append(i);
    }
  },
  _renderMarkupForImage: function() {
    var e = this.option("indicatorSrc");
    this._$wrapper.addClass(dV), e && this._$wrapper.css("backgroundImage", "url(" + e + ")");
  },
  _renderDimensions: function() {
    this.callBase(), this._updateContentSizeForAnimation();
  },
  _updateContentSizeForAnimation: function() {
    if (this._$indicator) {
      var e = this.option("width"), t = this.option("height");
      if (e || t) {
        e = Ae(this.$element()), t = Fe(this.$element());
        var i = Math.min(t, e);
        this._$wrapper.css({
          height: i,
          width: i,
          fontSize: i
        });
      }
    }
  },
  _clean: function() {
    this.callBase(), this._removeMarkupForAnimation(), this._removeMarkupForImage();
  },
  _removeMarkupForAnimation: function() {
    this._$indicator && (this._$indicator.remove(), delete this._$indicator);
  },
  _removeMarkupForImage: function() {
    this._$wrapper.css("backgroundImage", "none");
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "_animatingSegmentCount":
      case "_animatingSegmentInner":
      case "indicatorSrc":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxLoadIndicator", bi);
var Q_ = "dxTranslator", cV = /matrix(3d)?\((.+?)\)/, hV = /translate(?:3d)?\((.+?)\)/, Mi = function(e) {
  e = g(e);
  var t = Vd(e);
  return {
    left: t.x,
    top: t.y
  };
};
function Ld(e) {
  return Ei(e) === "string" && e[e.length - 1] === "%";
}
function qI(e, t) {
  e.length && dt(e.get(0), Q_, t);
}
var J_ = function(e) {
  e.length && gc(e.get(0), Q_);
}, Tl = function(e) {
  e.x = e.x || 0, e.y = e.y || 0;
  var t = Ld(e.x) ? e.x : e.x + "px", i = Ld(e.y) ? e.y : e.y + "px";
  return "translate(" + t + ", " + i + ")";
}, Vd = function(e) {
  var t = e.length ? dt(e.get(0), Q_) : null;
  if (!t) {
    var i = e.css("transform") || Tl({
      x: 0,
      y: 0
    }), n = i.match(cV), r = n && n[1];
    n ? (n = n[2].split(","), r === "3d" ? n = n.slice(12, 15) : (n.push(0), n = n.slice(4, 7))) : n = [0, 0, 0], t = {
      x: parseFloat(n[0]),
      y: parseFloat(n[1]),
      z: parseFloat(n[2])
    }, qI(e, t);
  }
  return t;
}, kt = function(e, t) {
  e = g(e);
  var i = t.left, n = t.top, r;
  i === void 0 ? (r = Vd(e), r.y = n || 0) : n === void 0 ? (r = Vd(e), r.x = i || 0) : (r = {
    x: i || 0,
    y: n || 0,
    z: 0
  }, qI(e, r)), e.css({
    transform: Tl(r)
  }), (Ld(i) || Ld(n)) && J_(e);
}, Dl = function(e, t) {
  e = g(e);
  var i, n = {
    left: 0,
    top: 0,
    transform: "none"
  };
  t && (i = e.css("transition"), n.transition = "none"), e.css(n), J_(e), t && (e.get(0).offsetHeight, e.css("transition", i));
}, pV = function(e) {
  var t = e.match(hV);
  if (!(!t || !t[1]))
    return t = t[1].split(","), t = {
      x: parseFloat(t[0]),
      y: parseFloat(t[1]),
      z: parseFloat(t[2])
    }, t;
}, dx = /cubic-bezier\((\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\)/, cx = {
  linear: "cubic-bezier(0, 0, 1, 1)",
  swing: "cubic-bezier(0.445, 0.05, 0.55, 0.95)",
  ease: "cubic-bezier(0.25, 0.1, 0.25, 1)",
  "ease-in": "cubic-bezier(0.42, 0, 1, 1)",
  "ease-out": "cubic-bezier(0, 0, 0.58, 1)",
  "ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)"
}, fV = function(e, t, i, n) {
  var r = 3 * e, a = 3 * (i - e) - r, o = 1 - r - a, s = 3 * t, l = 3 * (n - t) - s, u = 1 - s - l, d = function(h) {
    return h * (r + h * (a + h * o));
  }, c = function(h) {
    return r + h * (2 * a + 3 * h * o);
  };
  return function(h) {
    return function(p) {
      return p * (s + p * (l + p * u));
    }(function(p) {
      for (var f = p, v = 0, m; v < 14 && (m = d(f) - p, !(Math.abs(m) < 1e-3)); )
        f -= m / c(f), v++;
      return f;
    }(h));
  };
}, fg = {}, gV = function(e) {
  e = cx[e] || e;
  var t = e.match(dx), i;
  t || (i = "linear", t = cx[i].match(dx)), t = t.slice(1, 5);
  for (var n = 0; n < t.length; n++)
    t[n] = parseFloat(t[n]);
  var r = i || "cubicbezier_" + t.join("_").replace(/\./g, "p");
  return ce(fg[r]) || (fg[r] = function(a, o, s, l, u) {
    return l * fV(t[0], t[1], t[2], t[3])(o / u) + s;
  }), r;
};
function _V(e) {
  return fg[e];
}
var hx = ke(), vV = /left|right/, mV = /top|bottom/, px = /fit|flip|none/, CV = /scale\(.+?\)/, xV = lt.safari, gg = function(e) {
  var t = {
    h: "center",
    v: "center"
  }, i = zo(e);
  return i && B(i, function() {
    var n = String(this).toLowerCase();
    vV.test(n) ? t.h = n : mV.test(n) && (t.v = n);
  }), t;
}, fx = function(e) {
  return ew(e);
}, yV = function(e) {
  var t = zo(e), i = String(t && t[0]).toLowerCase(), n = String(t && t[1]).toLowerCase();
  return px.test(i) || (i = "none"), px.test(n) || (n = i), {
    h: i,
    v: n
  };
}, gx = function(e) {
  switch (e) {
    case "center":
      return 0.5;
    case "right":
    case "bottom":
      return 1;
    default:
      return 0;
  }
}, _g = function(e) {
  switch (e) {
    case "left":
      return "right";
    case "right":
      return "left";
    case "top":
      return "bottom";
    case "bottom":
      return "top";
    default:
      return e;
  }
}, vg = function(e, t) {
  var i = 0;
  return e.myLocation < t.min && (i += t.min - e.myLocation), e.myLocation > t.max && (i += e.myLocation - t.max), i;
}, _x = function(e, t, i) {
  return t.myLocation < i.min ? e === "h" ? "left" : "top" : t.myLocation > i.max ? e === "h" ? "right" : "bottom" : "none";
}, mg = function(e) {
  e.myLocation = e.atLocation + gx(e.atAlign) * e.atSize - gx(e.myAlign) * e.mySize + e.offset;
}, lu = {
  fit: function(e, t) {
    var i = !1;
    e.myLocation > t.max && (e.myLocation = t.max, i = !0), e.myLocation < t.min && (e.myLocation = t.min, i = !0), e.fit = i;
  },
  flip: function(e, t) {
    if (e.flip = !1, !(e.myAlign === "center" && e.atAlign === "center") && (e.myLocation < t.min || e.myLocation > t.max)) {
      var i = T({}, e, {
        myAlign: _g(e.myAlign),
        atAlign: _g(e.atAlign),
        offset: -e.offset
      });
      mg(i), i.oversize = vg(i, t), (i.myLocation >= t.min && i.myLocation <= t.max || e.oversize > i.oversize) && (e.myLocation = i.myLocation, e.oversize = i.oversize, e.flip = !0);
    }
  },
  flipfit: function(e, t) {
    this.flip(e, t), this.fit(e, t);
  },
  none: function(e) {
    e.oversize = 0;
  }
}, XI, YI = function() {
  var e = g("<div>").css({
    width: 100,
    height: 100,
    overflow: "scroll",
    position: "absolute",
    top: -9999
  }).appendTo(g("body")), t = e.get(0).offsetWidth - e.get(0).clientWidth;
  e.remove(), XI = t;
}, bV = {
  h: {
    location: 0,
    flip: !1,
    fit: !1,
    oversize: 0
  },
  v: {
    location: 0,
    flip: !1,
    fit: !1,
    oversize: 0
  }
}, ZI = function(e, t) {
  var i = g(e), n = i.offset(), r = T(!0, {}, bV, {
    h: {
      location: n.left
    },
    v: {
      location: n.top
    }
  });
  if (!t)
    return r;
  var a = gg(t.my), o = gg(t.at), s = g(t.of).length && t.of || hx, l = fx(t.offset), u = yV(t.collision), d = t.boundary, c = fx(t.boundaryOffset), h = {
    mySize: Ge(i),
    myAlign: a.h,
    atAlign: o.h,
    offset: l.h,
    collision: u.h,
    boundaryOffset: c.h
  }, p = {
    mySize: Ne(i),
    myAlign: a.v,
    atAlign: o.v,
    offset: l.v,
    collision: u.v,
    boundaryOffset: c.v
  };
  if (s.preventDefault)
    h.atLocation = s.pageX, p.atLocation = s.pageY, h.atSize = 0, p.atSize = 0;
  else if (s = g(s), Ct(s[0]))
    h.atLocation = s.scrollLeft(), p.atLocation = s.scrollTop(), ve.real().deviceType === "phone" && s[0].visualViewport ? (h.atLocation = Math.max(h.atLocation, s[0].visualViewport.offsetLeft), p.atLocation = Math.max(p.atLocation, s[0].visualViewport.offsetTop), h.atSize = s[0].visualViewport.width, p.atSize = s[0].visualViewport.height) : (h.atSize = s[0].innerWidth > s[0].outerWidth ? s[0].innerWidth : Ae(s), p.atSize = s[0].innerHeight > s[0].outerHeight || xV ? s[0].innerHeight : Fe(s));
  else if (s[0].nodeType === 9)
    h.atLocation = 0, p.atLocation = 0, h.atSize = Ae(s), p.atSize = Fe(s);
  else {
    var f = Et(s.get(0)), v = QI(s);
    h.atLocation = v.left, p.atLocation = v.top, h.atSize = Math.max(f.width, Ge(s)), p.atSize = Math.max(f.height, Ne(s));
  }
  mg(h), mg(p);
  var m = function() {
    var b = g(hx), A = Ae(b), R = Fe(b), k = b.scrollLeft(), H = b.scrollTop(), K = ee.getDocumentElement(), j = xa ? K.clientWidth / A : 1, z = xa ? K.clientHeight / R : 1;
    XI === void 0 && YI();
    var re = A, he = R;
    if (d && !Ct(d)) {
      var P = g(d), V = P.offset();
      k = V.left, H = V.top, re = Ae(P), he = Fe(P);
    }
    return {
      h: {
        min: k + h.boundaryOffset,
        max: k + re / j - h.mySize - h.boundaryOffset
      },
      v: {
        min: H + p.boundaryOffset,
        max: H + he / z - p.mySize - p.boundaryOffset
      }
    };
  }();
  h.oversize = vg(h, m.h), p.oversize = vg(p, m.v), h.collisionSide = _x("h", h, m.h), p.collisionSide = _x("v", p, m.v), lu[h.collision] && lu[h.collision](h, m.h), lu[p.collision] && lu[p.collision](p, m.v);
  var C = function(b) {
    return t.precise ? b : Math.round(b);
  };
  return T(!0, r, {
    h: {
      location: C(h.myLocation),
      oversize: C(h.oversize),
      fit: h.fit,
      flip: h.flip,
      collisionSide: h.collisionSide
    },
    v: {
      location: C(p.myLocation),
      oversize: C(p.oversize),
      fit: p.fit,
      flip: p.flip,
      collisionSide: p.collisionSide
    },
    precise: t.precise
  }), r;
}, vx = function(e, t, i, n, r) {
  var a = x(e.style) && !ee.isNode(e.style);
  a ? e.style.transform = r ? i.replace(t, "") : i : e.setAttribute("style", r ? n.replace(t, "") : n);
}, QI = function e(t) {
  var i, n, r, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : t, o = a.get(0);
  if (!o)
    return t.offset();
  var s = ((i = o.getAttribute) === null || i === void 0 ? void 0 : i.call(o, "style")) || "", l = (n = o.style) === null || n === void 0 ? void 0 : n.transform, u = (r = s.match(CV)) === null || r === void 0 ? void 0 : r[0], d;
  return u ? (vx(o, u, l, s, !0), d = e(t, a.parent()), vx(o, u, l, s, !1)) : d = e(t, a.parent()), d;
}, il = function(e, t) {
  var i = g(e);
  if (!t)
    return i.offset();
  Dl(i, !0);
  var n = QI(i), r = t.h && t.v ? t : ZI(i, t), a = function(o) {
    return t.precise ? o : Math.round(o);
  };
  return kt(i, {
    left: r.h.location - a(n.left),
    top: r.v.location - a(n.top)
  }), r;
}, SV = function(e) {
  return e = g(e).get(0), Ct(e) ? null : e && "pageY" in e && "pageX" in e ? {
    top: e.pageY,
    left: e.pageX
  } : g(e).offset();
};
il.inverseAlign || (il.inverseAlign = _g);
il.normalizeAlign || (il.normalizeAlign = gg);
const en = {
  calculateScrollbarWidth: YI,
  calculate: ZI,
  setup: il,
  offset: SV
};
var JI = ke(), Ns = oe(Sn, "dxFX"), EV = /^([+-])=(.*)/i, nl = "dxAnimData", ev = "dxAnimQueue", qi = "transform", wV = {
  initAnimation: function(e, t) {
    e.css({
      transitionProperty: "none"
    }), typeof t.from == "string" ? e.addClass(t.from) : xg(e, t.from);
    var i = this, n = new U(), r = t.cleanupWhen;
    t.transitionAnimation = {
      deferred: n,
      finish: function() {
        i._finishTransition(e), r ? ge(n, r).always(function() {
          i._cleanup(e, t);
        }) : i._cleanup(e, t), n.resolveWith(e, [t, e]);
      }
    }, this._completeAnimationCallback(e, t).done(function() {
      t.transitionAnimation.finish();
    }).fail(function() {
      n.rejectWith(e, [t, e]);
    }), t.duration || t.transitionAnimation.finish(), e.css("transform");
  },
  animate: function(e, t) {
    return this._startAnimation(e, t), t.transitionAnimation.deferred.promise();
  },
  _completeAnimationCallback: function(e, t) {
    var i = this, n = Date.now() + t.delay, r = new U(), a = new U(), o = new U(), s, l = Kw() + ".dxFX";
    t.transitionAnimation.cleanup = function() {
      clearTimeout(s), clearTimeout(u), w.off(e, l), w.off(e, Ns);
    }, w.one(e, l, function() {
      Date.now() - n >= t.duration && a.reject();
    }), w.off(e, Ns), w.on(e, Ns, function() {
      i.stop(e, t), r.reject();
    });
    var u = setTimeout(function() {
      s = setTimeout(function() {
        o.reject();
      }, t.duration + t.delay + ft._simulatedTransitionEndDelay), ge(a, o).fail(function() {
        r.resolve();
      }.bind(this));
    });
    return r.promise();
  },
  _startAnimation: function(e, t) {
    e.css({
      transitionProperty: "all",
      transitionDelay: t.delay + "ms",
      transitionDuration: t.duration + "ms",
      transitionTimingFunction: t.easing
    }), typeof t.to == "string" ? e[0].className += " " + t.to : t.to && xg(e, t.to);
  },
  _finishTransition: function(e) {
    e.css("transition", "none");
  },
  _cleanup: function(e, t) {
    t.transitionAnimation.cleanup(), typeof t.from == "string" && (e.removeClass(t.from), e.removeClass(t.to));
  },
  stop: function(e, t, i) {
    t && (i ? t.transitionAnimation.finish() : (Me(t.to) && B(t.to, function(n) {
      e.css(n, e.css(n));
    }), this._finishTransition(e), this._cleanup(e, t)));
  }
}, mx = {
  initAnimation: function(e, t) {
    xg(e, t.from);
  },
  animate: function(e, t) {
    var i = new U(), n = this;
    return t ? (B(t.to, function(r) {
      t.from[r] === void 0 && (t.from[r] = n._normalizeValue(e.css(r)));
    }), t.to[qi] && (t.from[qi] = n._parseTransform(t.from[qi]), t.to[qi] = n._parseTransform(t.to[qi])), t.frameAnimation = {
      to: t.to,
      from: t.from,
      currentValue: t.from,
      easing: gV(t.easing),
      duration: t.duration,
      startTime: (/* @__PURE__ */ new Date()).valueOf(),
      finish: function() {
        this.currentValue = this.to, this.draw(), Vn(t.frameAnimation.animationFrameId), i.resolve();
      },
      draw: function() {
        if (t.draw) {
          t.draw(this.currentValue);
          return;
        }
        var r = T({}, this.currentValue);
        r[qi] && (r[qi] = wt(r[qi], function(a, o) {
          if (o === "translate")
            return Tl(a);
          if (o === "scale")
            return "scale(" + a + ")";
          if (o.substr(0, o.length - 1) === "rotate")
            return o + "(" + a + "deg)";
        }).join(" ")), e.css(r);
      }
    }, t.delay ? (t.frameAnimation.startTime += t.delay, t.frameAnimation.delayTimeout = setTimeout(function() {
      n._startAnimation(e, t);
    }, t.delay)) : n._startAnimation(e, t), i.promise()) : i.reject().promise();
  },
  _startAnimation: function(e, t) {
    w.off(e, Ns), w.on(e, Ns, function() {
      t.frameAnimation && Vn(t.frameAnimation.animationFrameId);
    }), this._animationStep(e, t);
  },
  _parseTransform: function(e) {
    var t = {};
    return B(e.match(/\w+\d*\w*\([^)]*\)\s*/g), function(i, n) {
      var r = pV(n), a = n.match(/scale\((.+?)\)/), o = n.match(/(rotate.)\((.+)deg\)/);
      r && (t.translate = r), a && a[1] && (t.scale = parseFloat(a[1])), o && o[1] && (t[o[1]] = parseFloat(o[2]));
    }), t;
  },
  stop: function(e, t, i) {
    var n = t && t.frameAnimation;
    n && (Vn(n.animationFrameId), clearTimeout(n.delayTimeout), i && n.finish(), delete t.frameAnimation);
  },
  _animationStep: function(e, t) {
    var i = t && t.frameAnimation;
    if (i) {
      var n = (/* @__PURE__ */ new Date()).valueOf();
      if (n >= i.startTime + i.duration) {
        i.finish();
        return;
      }
      i.currentValue = this._calcStepValue(i, n - i.startTime), i.draw();
      var r = this;
      i.animationFrameId = Bd(function() {
        r._animationStep(e, t);
      });
    }
  },
  _calcStepValue: function(e, t) {
    return function i(n, r) {
      var a = Array.isArray(r) ? [] : {};
      return B(r, function(o, s) {
        if (typeof s == "string" && parseFloat(s) === !1)
          return !0;
        a[o] = typeof s == "object" ? i(n[o], s) : function(l) {
          var u = t / e.duration, d = t, c = 1 * n[l], h = r[l] - n[l], p = e.duration;
          return _V(e.easing)(u, d, c, h, p);
        }(o);
      }), a;
    }(e.from, e.to);
  },
  _normalizeValue: function(e) {
    var t = parseFloat(e);
    return t === !1 ? e : t;
  }
}, IV = {
  initAnimation: function() {
  },
  animate: function() {
    return new U().resolve().promise();
  },
  stop: $,
  isSynchronous: !0
}, TV = function(e) {
  e = e || {};
  var t = {
    transition: Zf() ? wV : mx,
    frame: mx,
    noAnimation: IV
  }, i = e.strategy || "transition";
  return e.type === "css" && !Zf() && (i = "noAnimation"), t[i];
}, eT = function(e, t, i, n) {
  B(["from", "to"], function() {
    if (!i(e[this]))
      throw Je.Error("E0010", t, this, n);
  });
}, tT = function(e, t) {
  return eT(e, t, function(i) {
    return Me(i);
  }, "a plain object");
}, DV = function(e, t) {
  return eT(e, t, function(i) {
    return typeof i == "string";
  }, "a string");
}, AV = {
  setup: function() {
  }
}, OV = {
  validateConfig: function(e) {
    DV(e, "css");
  },
  setup: function() {
  }
}, RV = {
  top: {
    my: "bottom center",
    at: "top center"
  },
  bottom: {
    my: "top center",
    at: "bottom center"
  },
  right: {
    my: "left center",
    at: "right center"
  },
  left: {
    my: "right center",
    at: "left center"
  }
}, Gh = {
  validateConfig: function(e) {
    tT(e, "slide");
  },
  setup: function(e, t) {
    var i = Mi(e);
    if (t.type !== "slide") {
      var n = t.type === "slideIn" ? t.from : t.to;
      n.position = T({
        of: JI
      }, RV[t.direction]), Cg(e, n);
    }
    this._setUpConfig(i, t.from), this._setUpConfig(i, t.to), J_(e);
  },
  _setUpConfig: function(e, t) {
    t.left = "left" in t ? t.left : "+=0", t.top = "top" in t ? t.top : "+=0", this._initNewPosition(e, t);
  },
  _initNewPosition: function(e, t) {
    var i = {
      left: t.left,
      top: t.top
    };
    delete t.left, delete t.top;
    var n = this._getRelativeValue(i.left);
    n !== void 0 ? i.left = n + e.left : t.left = 0, n = this._getRelativeValue(i.top), n !== void 0 ? i.top = n + e.top : t.top = 0, t[qi] = Tl({
      x: i.left,
      y: i.top
    });
  },
  _getRelativeValue: function(e) {
    var t;
    if (typeof e == "string" && (t = EV.exec(e)))
      return parseInt(t[1] + "1") * t[2];
  }
}, Kh = {
  setup: function(e, t) {
    var i, n, r = t.from, a = t.to, o = t.type === "fadeOut" ? 1 : 0, s = t.type === "fadeOut" ? 0 : 1, l = Me(r) ? String((i = r.opacity) !== null && i !== void 0 ? i : o) : String(r), u = Me(a) ? String((n = a.opacity) !== null && n !== void 0 ? n : s) : String(a);
    switch (t.skipElementInitialStyles || (l = e.css("opacity")), t.type) {
      case "fadeIn":
        u = 1;
        break;
      case "fadeOut":
        u = 0;
    }
    t.from = {
      visibility: "visible",
      opacity: l
    }, t.to = {
      opacity: u
    };
  }
}, BV = {
  validateConfig: function(e) {
    tT(e, "pop");
  },
  setup: function(e, t) {
    var i = t.from, n = t.to, r = "opacity" in i ? i.opacity : e.css("opacity"), a = "opacity" in n ? n.opacity : 1, o = "scale" in i ? i.scale : 0, s = "scale" in n ? n.scale : 1;
    t.from = {
      opacity: r
    };
    var l = Vd(e);
    t.from[qi] = this._getCssTransform(l, o), t.to = {
      opacity: a
    }, t.to[qi] = this._getCssTransform(l, s);
  },
  _getCssTransform: function(e, t) {
    return Tl(e) + "scale(" + t + ")";
  }
}, iT = {
  custom: AV,
  slide: Gh,
  slideIn: Gh,
  slideOut: Gh,
  fade: Kh,
  fadeIn: Kh,
  fadeOut: Kh,
  pop: BV,
  css: OV
}, kV = function(e) {
  var t = iT[e.type];
  if (!t)
    throw Je.Error("E0011", e.type);
  return t;
}, FV = {
  type: "custom",
  from: {},
  to: {},
  duration: 400,
  start: $,
  complete: $,
  easing: "ease",
  delay: 0
}, PV = {
  duration: 400,
  easing: "ease",
  delay: 0
};
function MV() {
  var e = this.element, t = this.config;
  if (Cg(e, t.from), Cg(e, t.to), this.configurator.setup(e, t), e.data(nl, this), this.strategy.initAnimation(e, t), t.start) {
    var i = Ie(e);
    t.start.apply(this, [i, t]);
  }
}
var LV = function(e) {
  var t = e.element, i = e.config;
  if (t.removeData(nl), i.complete) {
    var n = Ie(t);
    i.complete.apply(this, [n, i]);
  }
  e.deferred.resolveWith(this, [t, i]);
}, VV = function() {
  var e = this, t = e.element, i = e.config;
  return e.isStarted = !0, e.strategy.animate(t, i).done(function() {
    LV(e);
  }).fail(function() {
    e.deferred.rejectWith(this, [t, i]);
  });
}, NV = function(e) {
  var t = this.element, i = this.config;
  clearTimeout(this.startTimeout), this.isStarted || this.start(), this.strategy.stop(t, i, e);
}, Uh = oe(Sn, "dxFXStartAnimation"), $V = function(e) {
  w.off(e.element, Uh), w.on(e.element, Uh, function() {
    ft.stop(e.element);
  }), e.deferred.always(function() {
    w.off(e.element, Uh);
  });
}, nT = function(e, t) {
  var i = t.type === "css" ? PV : FV, n = T(!0, {}, i, t), r = kV(n), a = TV(n), o = {
    element: g(e),
    config: n,
    configurator: r,
    strategy: a,
    isSynchronous: a.isSynchronous,
    setup: MV,
    start: VV,
    stop: NV,
    deferred: new U()
  };
  return ce(r.validateConfig) && r.validateConfig(n), $V(o), o;
}, HV = function(e, t) {
  var i = g(e);
  if (!i.length)
    return new U().resolve().promise();
  var n = nT(i, t);
  return zV(i, n), n.deferred.promise();
};
function zV(e, t) {
  var i = tv(e);
  WV(e, i), i.push(t), Dc(e) || iv(e, i);
}
function tv(e) {
  return e.data(ev) || [];
}
function WV(e, t) {
  e.data(ev, t);
}
var rT = function(e) {
  e.removeData(ev);
};
function Dc(e) {
  return !!e.data(nl);
}
function iv(e, t) {
  if (t = tv(e), !!t.length) {
    var i = t.shift();
    t.length === 0 && rT(e), GV(i).done(function() {
      Dc(e) || iv(e);
    });
  }
}
function GV(e) {
  return e.setup(), e.isSynchronous ? e.start() : e.startTimeout = setTimeout(function() {
    e.start();
  }), e.deferred.promise();
}
function Cg(e, t) {
  if (!(!t || !t.position)) {
    var i = g(JI), n = 0, r = 0, a = en.calculate(e, t.position), o = e.offset(), s = e.position();
    s.top > o.top && (r = i.scrollTop()), s.left > o.left && (n = i.scrollLeft()), T(t, {
      left: a.h.location - o.left + s.left - n,
      top: a.v.location - o.top + s.top - r
    }), delete t.position;
  }
}
function xg(e, t) {
  B(t, function(i, n) {
    try {
      e.css(i, ce(n) ? n() : n);
    } catch {
    }
  });
}
var KV = function(e, t) {
  var i = g(e), n = tv(i);
  B(n, function(a, o) {
    o.config.delay = 0, o.config.duration = 0, o.isSynchronous = !0;
  }), Dc(i) || iv(i, n);
  var r = i.data(nl);
  r && r.stop(t), i.removeData(nl), rT(i);
}, ft = {
  off: !1,
  animationTypes: iT,
  animate: HV,
  createAnimation: nT,
  isAnimating: Dc,
  stop: KV,
  _simulatedTransitionEndDelay: 100
}, UV = En.add, Cx = Math.abs, jh = 0, qh = 1, rs = 2, Nd = 10, jV = 0, qV = 180, XV = function() {
  return Fa("pointer-events");
}, YV = ir(function() {
  var e = ve.real().deviceType === "desktop";
  if (!XV() || !e)
    return $;
  var t = g("<div>").addClass("dx-gesture-cover").css("pointerEvents", "none");
  return w.subscribeGlobal(t, "dxmousewheel", function(i) {
    i.preventDefault();
  }), UV(function() {
    t.appendTo("body");
  }), function(i, n) {
    t.css("pointerEvents", i ? "all" : "none"), i && t.css("cursor", n);
  };
}), ZV = function(e, t) {
  var i = YV();
  i(e, t);
}, Al = yc.inherit({
  gesture: !0,
  configure: function(e) {
    this.getElement().css("msTouchAction", e.immediate ? "pinch-zoom" : ""), this.callBase(e);
  },
  allowInterruptionByMouseWheel: function() {
    return this._stage !== rs;
  },
  getDirection: function() {
    return this.direction;
  },
  _cancel: function() {
    this.callBase.apply(this, arguments), this._toggleGestureCover(!1), this._stage = jh;
  },
  start: function(e) {
    if (e._needSkipEvent || Pw(e)) {
      this._cancel(e);
      return;
    }
    this._startEvent = xr(e), this._startEventData = _t(e), this._stage = qh, this._init(e), this._setupImmediateTimer();
  },
  _setupImmediateTimer: function() {
    var e;
    if (clearTimeout(this._immediateTimer), this._immediateAccepted = !1, !!this.immediate) {
      if (this.immediateTimeout === 0) {
        this._immediateAccepted = !0;
        return;
      }
      this._immediateTimer = setTimeout(function() {
        this._immediateAccepted = !0;
      }.bind(this), (e = this.immediateTimeout) !== null && e !== void 0 ? e : qV);
    }
  },
  move: function(e) {
    if (this._stage === qh && this._directionConfirmed(e)) {
      if (this._stage = rs, this._resetActiveElement(), this._toggleGestureCover(!0), this._clearSelection(e), this._adjustStartEvent(e), this._start(this._startEvent), this._stage === jh)
        return;
      this._requestAccept(e), this._move(e), this._forgetAccept();
    } else
      this._stage === rs && (this._clearSelection(e), this._move(e));
  },
  _directionConfirmed: function(e) {
    var t = this._getTouchBoundary(e), i = aa(this._startEventData, _t(e)), n = Cx(i.x), r = Cx(i.y), a = this._validateMove(t, n, r), o = this._validateMove(t, r, n), s = this.getDirection(e), l = s === "both" && (a || o), u = s === "horizontal" && a, d = s === "vertical" && o;
    return l || u || d || this._immediateAccepted;
  },
  _validateMove: function(e, t, i) {
    return t && t >= e && (this.immediate ? t >= i : !0);
  },
  _getTouchBoundary: function(e) {
    return this.immediate || si(e) ? jV : Nd;
  },
  _adjustStartEvent: function(e) {
    var t = this._getTouchBoundary(e), i = aa(this._startEventData, _t(e));
    this._startEvent.pageX += ko(i.x) * t, this._startEvent.pageY += ko(i.y) * t;
  },
  _resetActiveElement: function() {
    ve.real().platform === "ios" && this.getElement().find(":focus").length && Go();
  },
  _toggleGestureCover: function(e) {
    this._toggleGestureCoverImpl(e);
  },
  _toggleGestureCoverImpl: function(e) {
    var t = this._stage === rs;
    t && ZV(e, this.getElement().css("cursor"));
  },
  _clearSelection: function(e) {
    si(e) || xl(e) || HF();
  },
  end: function(e) {
    this._toggleGestureCover(!1), this._stage === rs ? this._end(e) : this._stage === qh && this._stop(e), this._stage = jh;
  },
  dispose: function() {
    clearTimeout(this._immediateTimer), this.callBase.apply(this, arguments), this._toggleGestureCover(!1);
  },
  _init: $,
  _start: $,
  _move: $,
  _stop: $,
  _end: $
});
Al.initialTouchBoundary = Nd;
Al.touchBoundary = function(e) {
  if (x(e)) {
    Nd = e;
    return;
  }
  return Nd;
};
var Sa = "dxdragstart", Rr = "dxdrag", Ea = "dxdragend", Ac = "dxdragenter", Oc = "dxdragleave", nv = "dxdrop", uu = "dxDragEventsCount", Nn = [], _o = [], yg = [], rv = {
  setup: function(e, t) {
    var i = Nn.includes(e);
    i || (Nn.push(e), _o.push([]), yg.push(t || {}));
  },
  add: function(e, t) {
    var i = Nn.indexOf(e);
    this.updateEventsCounter(e, t.type, 1);
    var n = t.selector;
    _o[i].includes(n) || _o[i].push(n);
  },
  updateEventsCounter: function(e, t, i) {
    if ([Ac, Oc, nv].indexOf(t) > -1) {
      var n = dt(e, uu) || 0;
      dt(e, uu, Math.max(0, n + i));
    }
  },
  remove: function(e, t) {
    this.updateEventsCounter(e, t.type, -1);
  },
  teardown: function(e) {
    var t = dt(e, uu);
    if (!t) {
      var i = Nn.indexOf(e);
      Nn.splice(i, 1), _o.splice(i, 1), yg.splice(i, 1), gc(e, uu);
    }
  }
};
Wi(Ac, rv);
Wi(Oc, rv);
Wi(nv, rv);
var QV = function(e) {
  var t = Nn.indexOf(e.get(0)), i = _o[t].filter((r) => r), n = e.find(i.join(", "));
  return _o[t].includes(void 0) && (n = n.add(e)), n;
}, JV = function(e) {
  var t = Nn.indexOf(e.get(0));
  return yg[t];
}, eN = function(e, t) {
  return e.itemPositionFunc ? e.itemPositionFunc(t) : t.offset();
}, tN = function(e, t) {
  return e.itemSizeFunc ? e.itemSizeFunc(t) : {
    width: t.get(0).getBoundingClientRect().width,
    height: t.get(0).getBoundingClientRect().height
  };
}, iN = Al.inherit({
  ctor: function(e) {
    this.callBase(e), this.direction = "both";
  },
  _init: function(e) {
    this._initEvent = e;
  },
  _start: function(e) {
    if (e = this._fireEvent(Sa, this._initEvent), this._maxLeftOffset = e.maxLeftOffset, this._maxRightOffset = e.maxRightOffset, this._maxTopOffset = e.maxTopOffset, this._maxBottomOffset = e.maxBottomOffset, e.targetElements || e.targetElements === null) {
      var t = ZF(e.targetElements || []);
      this._dropTargets = wt(t, function(i) {
        return g(i).get(0);
      });
    } else
      this._dropTargets = Nn;
  },
  _move: function(e) {
    var t = _t(e), i = this._calculateOffset(t);
    e = this._fireEvent(Rr, e, {
      offset: i
    }), this._processDropTargets(e), e._cancelPreventDefault || e.preventDefault();
  },
  _calculateOffset: function(e) {
    return {
      x: this._calculateXOffset(e),
      y: this._calculateYOffset(e)
    };
  },
  _calculateXOffset: function(e) {
    if (this.direction !== "vertical") {
      var t = e.x - this._startEventData.x;
      return this._fitOffset(t, this._maxLeftOffset, this._maxRightOffset);
    }
    return 0;
  },
  _calculateYOffset: function(e) {
    if (this.direction !== "horizontal") {
      var t = e.y - this._startEventData.y;
      return this._fitOffset(t, this._maxTopOffset, this._maxBottomOffset);
    }
    return 0;
  },
  _fitOffset: function(e, t, i) {
    return t != null && (e = Math.max(e, -t)), i != null && (e = Math.min(e, i)), e;
  },
  _processDropTargets: function(e) {
    var t = this._findDropTarget(e), i = t === this._currentDropTarget;
    i || (this._fireDropTargetEvent(e, Oc), this._currentDropTarget = t, this._fireDropTargetEvent(e, Ac));
  },
  _fireDropTargetEvent: function(e, t) {
    if (this._currentDropTarget) {
      var i = {
        type: t,
        originalEvent: e,
        draggingElement: this._$element.get(0),
        target: this._currentDropTarget
      };
      Vr(i);
    }
  },
  _findDropTarget: function(e) {
    var t = this, i;
    return B(Nn, function(n, r) {
      if (t._checkDropTargetActive(r)) {
        var a = g(r);
        B(QV(a), function(o, s) {
          var l = g(s);
          t._checkDropTarget(JV(a), l, g(i), e) && (i = s);
        });
      }
    }), i;
  },
  _checkDropTargetActive: function(e) {
    var t = !1;
    return B(this._dropTargets, function(i, n) {
      return t = t || n === e || Hn(n, e), !t;
    }), t;
  },
  _checkDropTarget: function(e, t, i, n) {
    var r = t.get(0) === g(n.target).get(0);
    if (r)
      return !1;
    var a = eN(e, t);
    if (n.pageX < a.left || n.pageY < a.top)
      return !1;
    var o = tN(e, t);
    return n.pageX > a.left + o.width || n.pageY > a.top + o.height || i.length && i.closest(t).length || e.checkDropTarget && !e.checkDropTarget(t, n) ? !1 : t;
  },
  _end: function(e) {
    var t = _t(e);
    this._fireEvent(Ea, e, {
      offset: this._calculateOffset(t)
    }), this._fireDropTargetEvent(e, nv), delete this._currentDropTarget;
  }
});
Ko({
  emitter: iN,
  events: [Sa, Rr, Ea]
});
var xx = function() {
  var e = [];
  return {
    add: function(t) {
      e.includes(t) || e.push(t);
    },
    remove: function(t) {
      var i = e.indexOf(t);
      i !== -1 && e.splice(i, 1);
    },
    fire: function() {
      var t = e.pop(), i = !!t;
      return i && t(), i;
    },
    hasCallback: function() {
      return e.length > 0;
    }
  };
}(), ad = 1500, wr = [], nN = (e) => (ad = ct(e, ad), ad), aT = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ad, t = wr.length, i = (t ? wr[t - 1] : e) + 1;
  return wr.push(i), i;
}, bg = (e) => {
  var t = wr.indexOf(e);
  t >= 0 && wr.splice(t, 1);
}, rN = (e) => wr.length && wr[wr.length - 1] === e, Xh = "dx-swatch-", aN = (e) => {
  var t = g(e), i = t.closest('[class^="'.concat(Xh, '"], [class*=" ').concat(Xh, '"]')), n = Ar();
  if (!i.length)
    return n;
  var r = new RegExp("(\\s|^)(".concat(Xh, ".*?)(\\s|$)")), a = i[0].className.match(r)[2], o = n.children("." + a);
  return o.length || (o = g("<div>").addClass(a).appendTo(n)), o;
};
const oT = {
  getSwatchContainer: aN
};
var oN = ke(), sT = {
  top: {
    my: "top center",
    at: "top center"
  },
  bottom: {
    my: "bottom center",
    at: "bottom center"
  },
  right: {
    my: "right center",
    at: "right center"
  },
  left: {
    my: "left center",
    at: "left center"
  },
  center: {
    my: "center",
    at: "center"
  },
  "right bottom": {
    my: "right bottom",
    at: "right bottom"
  },
  "right top": {
    my: "right top",
    at: "right top"
  },
  "left bottom": {
    my: "left bottom",
    at: "left bottom"
  },
  "left top": {
    my: "left top",
    at: "left top"
  }
}, yx = {
  h: 0,
  v: 0
};
class lT {
  constructor(t) {
    var {
      position: i,
      container: n,
      visualContainer: r,
      $root: a,
      $content: o,
      $wrapper: s,
      onPositioned: l,
      onVisualPositionChanged: u,
      restorePosition: d,
      _fixWrapperPosition: c
    } = t;
    this._props = {
      position: i,
      container: n,
      visualContainer: r,
      restorePosition: d,
      onPositioned: l,
      onVisualPositionChanged: u,
      _fixWrapperPosition: c
    }, this._$root = a, this._$content = o, this._$wrapper = s, this._$markupContainer = void 0, this._$visualContainer = void 0, this._shouldRenderContentInitialPosition = !0, this._visualPosition = void 0, this._initialPosition = void 0, this._previousVisualPosition = void 0, this.updateContainer(n), this.updatePosition(i), this.updateVisualContainer(r);
  }
  get $container() {
    return this.updateContainer(), this._$markupContainer;
  }
  get $visualContainer() {
    return this._$visualContainer;
  }
  get position() {
    return this._position;
  }
  set fixWrapperPosition(t) {
    this._props._fixWrapperPosition = t, this.styleWrapperPosition();
  }
  set restorePosition(t) {
    this._props.restorePosition = t;
  }
  restorePositionOnNextRender(t) {
    this._shouldRenderContentInitialPosition = t || !this._visualPosition;
  }
  openingHandled() {
    var t = this._props.restorePosition;
    this.restorePositionOnNextRender(t);
  }
  updatePosition(t) {
    this._props.position = t, this._position = this._normalizePosition(t), this.updateVisualContainer();
  }
  updateContainer() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._props.container;
    this._props.container = t, this._$markupContainer = t ? g(t) : oT.getSwatchContainer(this._$root), this.updateVisualContainer(this._props.visualContainer);
  }
  updateVisualContainer() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._props.visualContainer;
    this._props.visualContainer = t, this._$visualContainer = this._getVisualContainer();
  }
  detectVisualPositionChange(t) {
    this._updateVisualPositionValue(), this._raisePositionedEvents(t);
  }
  positionContent() {
    this._shouldRenderContentInitialPosition ? this._renderContentInitialPosition() : (kt(this._$content, this._visualPosition), this.detectVisualPositionChange());
  }
  positionWrapper() {
    this._$visualContainer && en.setup(this._$wrapper, {
      my: "top left",
      at: "top left",
      of: this._$visualContainer
    });
  }
  styleWrapperPosition() {
    var t = Ct(this.$visualContainer.get(0)) || this._props._fixWrapperPosition, i = t ? "fixed" : "absolute";
    this._$wrapper.css("position", i);
  }
  _updateVisualPositionValue() {
    this._previousVisualPosition = this._visualPosition, this._visualPosition = Mi(this._$content);
  }
  _renderContentInitialPosition() {
    this._renderBoundaryOffset(), Dl(this._$content);
    var t = this._$wrapper.css("overflow");
    this._$wrapper.css("overflow", "hidden");
    var i = en.setup(this._$content, this._position);
    this._$wrapper.css("overflow", t), this._initialPosition = i, this.detectVisualPositionChange();
  }
  _raisePositionedEvents(t) {
    var i = this._previousVisualPosition, n = this._visualPosition, r = (i == null ? void 0 : i.top) !== n.top || (i == null ? void 0 : i.left) !== n.left;
    r && this._props.onVisualPositionChanged({
      previousPosition: i,
      position: n,
      event: t
    }), this._props.onPositioned({
      position: this._initialPosition
    });
  }
  _renderBoundaryOffset() {
    var t, i = (t = this._position) !== null && t !== void 0 ? t : {
      boundaryOffset: yx
    };
    this._$content.css("margin", "".concat(i.v, "px ").concat(i.h, "px"));
  }
  _getVisualContainer() {
    var t, i, n = this._props.container, r = this._props.visualContainer, a = ik((t = this._props.position) === null || t === void 0 ? void 0 : t.of) ? this._props.position.of.target : (i = this._props.position) === null || i === void 0 ? void 0 : i.of;
    return g(r || n || a || oN);
  }
  _normalizePosition(t) {
    var i = {
      boundaryOffset: yx
    };
    return x(t) ? T(!0, {}, i, this._positionToObject(t)) : i;
  }
  _positionToObject(t) {
    return Te(t) ? T({}, sT[t]) : t;
  }
}
var sN = En.add, Za = ke(), bx = _c, lN = "dx-overlay", uN = "dx-overlay-wrapper", dN = "dx-overlay-content", cN = "dx-overlay-shader", Sx = "dx-inner-overlay", Yh = "dx-state-invisible", hN = "content", pN = "dx-rtl", Sg = [], Zh = "dx-prevent-safari-scrolling", fN = "tab";
sN(() => {
  w.subscribeGlobal(ee.getDocument(), je.down, (e) => {
    for (var t = Sg.length - 1; t >= 0; t--)
      if (!Sg[t]._proxiedDocumentDownHandler(e))
        return;
  });
});
var tn = Mt.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), {
      escape: function() {
        this.hide();
      }
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      activeStateEnabled: !1,
      visible: !1,
      deferRendering: !0,
      shading: !0,
      shadingColor: "",
      wrapperAttr: {},
      position: T({}, sT.center),
      width: "80vw",
      minWidth: null,
      maxWidth: null,
      height: "80vh",
      minHeight: null,
      maxHeight: null,
      animation: {
        show: {
          type: "pop",
          duration: 300,
          from: {
            scale: 0.55
          }
        },
        hide: {
          type: "pop",
          duration: 300,
          from: {
            opacity: 1,
            scale: 1
          },
          to: {
            opacity: 0,
            scale: 0.55
          }
        }
      },
      closeOnOutsideClick: !1,
      hideOnOutsideClick: !1,
      copyRootClassesToWrapper: !1,
      _ignoreCopyRootClassesToWrapperDeprecation: !1,
      _ignoreElementAttrDeprecation: !1,
      onShowing: null,
      onShown: null,
      onHiding: null,
      onHidden: null,
      contentTemplate: "content",
      innerOverlay: !1,
      restorePosition: !0,
      container: void 0,
      visualContainer: void 0,
      hideTopOverlayHandler: () => {
        this.hide();
      },
      hideOnParentScroll: !1,
      onPositioned: null,
      propagateOutsideClick: !1,
      ignoreChildEvents: !0,
      _checkParentVisibility: !0,
      _fixWrapperPosition: !1
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return !Re();
      },
      options: {
        width: null,
        height: null,
        animation: null,
        _checkParentVisibility: !1
      }
    }]);
  },
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      animation: !0
    });
  },
  $wrapper: function() {
    return this._$wrapper;
  },
  _eventBindingTarget: function() {
    return this._$content;
  },
  _setDeprecatedOptions() {
    this.callBase(), T(this._deprecatedOptions, {
      closeOnOutsideClick: {
        since: "22.1",
        alias: "hideOnOutsideClick"
      }
    });
  },
  ctor: function(e, t) {
    this.callBase(e, t), t && (t.copyRootClassesToWrapper && !t._ignoreCopyRootClassesToWrapperDeprecation && this._logDeprecatedOptionWarning("copyRootClassesToWrapper", {
      since: "21.2",
      message: 'Use the "wrapperAttr" option instead'
    }), t.elementAttr && !t._ignoreElementAttrDeprecation && this._logDeprecatedOptionWarning("elementAttr", {
      since: "21.2",
      message: 'Use the "wrapperAttr" option instead'
    }));
  },
  _init: function() {
    this.callBase(), this._initActions(), this._initHideOnOutsideClickHandler(), this._initTabTerminatorHandler(), this._customWrapperClass = null, this._$wrapper = g("<div>").addClass(uN), this._$content = g("<div>").addClass(dN), this._initInnerOverlayClass();
    var e = this.$element();
    this.option("copyRootClassesToWrapper") && this._$wrapper.addClass(e.attr("class")), e.addClass(lN), this._$wrapper.attr("data-bind", "dxControlsDescendantBindings: true"), this._toggleViewPortSubscription(!0), this._initHideTopOverlayHandler(this.option("hideTopOverlayHandler")), this._parentsScrollSubscriptionInfo = {
      handler: (t) => {
        this._hideOnParentsScrollHandler(t);
      }
    }, this.warnPositionAsFunction();
  },
  warnPositionAsFunction() {
    ce(this.option("position")) && Je.log("W0018");
  },
  _initInnerOverlayClass: function() {
    this._$content.toggleClass(Sx, this.option("innerOverlay"));
  },
  _initHideTopOverlayHandler: function(e) {
    this._hideTopOverlayHandler = e;
  },
  _getActionsList: function() {
    return ["onShowing", "onShown", "onHiding", "onHidden", "onPositioned", "onVisualPositionChanged"];
  },
  _initActions: function() {
    this._actions = {};
    var e = this._getActionsList();
    B(e, (t, i) => {
      this._actions[i] = this._createActionByOption(i, {
        excludeValidators: ["disabled", "readOnly"]
      }) || $;
    });
  },
  _initHideOnOutsideClickHandler: function() {
    var e = this;
    this._proxiedDocumentDownHandler = function() {
      return e._documentDownHandler(...arguments);
    };
  },
  _initMarkup() {
    this.callBase(), this._renderWrapperAttributes(), this._initPositionController();
  },
  _documentDownHandler: function(e) {
    this._showAnimationProcessing && this._stopAnimation();
    var t = g(Za.document).is(e.target) || Hn(Za.document, e.target), i = g(e.target).closest(".".concat(Sx)).length, n = t && !i && !(this._$content.is(e.target) || Hn(this._$content.get(0), e.target));
    return n && this._shouldHideOnOutsideClick(e) && this._outsideClickHandler(e), this.option("propagateOutsideClick");
  },
  _shouldHideOnOutsideClick: function(e) {
    var {
      hideOnOutsideClick: t
    } = this.option();
    return ce(t) ? t(e) : t;
  },
  _outsideClickHandler(e) {
    this.option("shading") && e.preventDefault(), this.hide();
  },
  _getAnonymousTemplateName: function() {
    return hN;
  },
  _initTemplates: function() {
    this._templateManager.addDefaultTemplates({
      content: new da()
    }), this.callBase();
  },
  _isTopOverlay: function() {
    for (var e = this._overlayStack(), t = e.length - 1; t >= 0; t--) {
      var i = e[t]._findTabbableBounds();
      if (i.first || i.last)
        return e[t] === this;
    }
    return !1;
  },
  _overlayStack: function() {
    return Sg;
  },
  _zIndexInitValue: function() {
    return tn.baseZIndex();
  },
  _toggleViewPortSubscription: function(e) {
    var t = this;
    bx.remove(this._viewPortChangeHandle), e && (this._viewPortChangeHandle = function() {
      t._viewPortChangeHandler(...arguments);
    }, bx.add(this._viewPortChangeHandle));
  },
  _viewPortChangeHandler: function() {
    this._positionController.updateContainer(this.option("container")), this._refresh();
  },
  _renderWrapperAttributes() {
    var {
      wrapperAttr: e
    } = this.option(), t = T({}, e), i = t.class;
    delete t.class, this.$wrapper().attr(t).removeClass(this._customWrapperClass).addClass(i), this._customWrapperClass = i;
  },
  _renderVisibilityAnimate: function(e) {
    return this._stopAnimation(), e ? this._show() : this._hide();
  },
  _getAnimationConfig: function() {
    return this._getOptionValue("animation", this);
  },
  _animateShowing: function() {
    var e, t, i, n = this, r = (e = this._getAnimationConfig()) !== null && e !== void 0 ? e : {}, a = this._normalizeAnimation(r.show, "to"), o = (t = a == null ? void 0 : a.start) !== null && t !== void 0 ? t : $, s = (i = a == null ? void 0 : a.complete) !== null && i !== void 0 ? i : $;
    this._animate(a, function() {
      if (!n._isAnimationPaused) {
        n.option("focusStateEnabled") && w.trigger(n._focusTarget(), "focus");
        for (var l = arguments.length, u = new Array(l), d = 0; d < l; d++)
          u[d] = arguments[d];
        s.call(n, ...u), n._showAnimationProcessing = !1, n._isHidden = !1, n._actions.onShown(), n._toggleSafariScrolling(), n._showingDeferred.resolve();
      }
    }, function() {
      if (!n._isAnimationPaused) {
        for (var l = arguments.length, u = new Array(l), d = 0; d < l; d++)
          u[d] = arguments[d];
        o.call(n, ...u), n._showAnimationProcessing = !0;
      }
    });
  },
  _processShowingHidingCancel: function(e, t, i) {
    Ho(e) ? e.then((n) => {
      n ? i() : t();
    }).catch(() => t()) : e ? i() : t();
  },
  _show: function() {
    if (this._showingDeferred = new U(), this._parentHidden = this._isParentHidden(), this._showingDeferred.done(() => {
      delete this._parentHidden;
    }), this._parentHidden)
      return this._isHidden = !0, this._showingDeferred.resolve();
    if (this._currentVisible)
      return new U().resolve().promise();
    if (this._currentVisible = !0, this._isHidingActionCanceled)
      delete this._isHidingActionCanceled, this._showingDeferred.reject();
    else {
      var e = () => {
        this._stopAnimation(), this._toggleVisibility(!0), this._$content.css("visibility", "hidden"), this._$content.toggleClass(Yh, !1), this._updateZIndexStackPosition(!0), this._positionController.openingHandled(), this._renderContent();
        var t = {
          cancel: !1
        };
        this._actions.onShowing(t), this._processShowingHidingCancel(t.cancel, () => {
          this._$content.css("visibility", ""), this._renderVisibility(!0), this._animateShowing();
        }, () => {
          this._toggleVisibility(!1), this._$content.css("visibility", ""), this._$content.toggleClass(Yh, !0), this._isShowingActionCanceled = !0, this._moveFromContainer(), this.option("visible", !1), this._showingDeferred.resolve();
        });
      };
      this.option("templatesRenderAsynchronously") ? (this._stopShowTimer(), this._asyncShowTimeout = setTimeout(e)) : e();
    }
    return this._showingDeferred.promise();
  },
  _normalizeAnimation: function(e, t) {
    return e && (e = T({
      type: "slide",
      skipElementInitialStyles: !0
    }, e), De(e[t]) && T(e[t], {
      position: this._positionController.position
    })), e;
  },
  _animateHiding: function() {
    var e, t, i, n = this, r = (e = this._getAnimationConfig()) !== null && e !== void 0 ? e : {}, a = this._normalizeAnimation(r.hide, "from"), o = (t = a == null ? void 0 : a.start) !== null && t !== void 0 ? t : $, s = (i = a == null ? void 0 : a.complete) !== null && i !== void 0 ? i : $;
    this._animate(a, function() {
      var l;
      n._$content.css("pointerEvents", ""), n._renderVisibility(!1);
      for (var u = arguments.length, d = new Array(u), c = 0; c < u; c++)
        d[c] = arguments[c];
      s.call(n, ...d), n._hideAnimationProcessing = !1, (l = n._actions) === null || l === void 0 || l.onHidden(), n._hidingDeferred.resolve();
    }, function() {
      n._$content.css("pointerEvents", "none");
      for (var l = arguments.length, u = new Array(l), d = 0; d < l; d++)
        u[d] = arguments[d];
      o.call(n, ...u), n._hideAnimationProcessing = !0;
    });
  },
  _hide: function() {
    if (!this._currentVisible)
      return new U().resolve().promise();
    this._currentVisible = !1, this._hidingDeferred = new U();
    var e = {
      cancel: !1
    };
    return this._isShowingActionCanceled ? (delete this._isShowingActionCanceled, this._hidingDeferred.reject()) : (this._actions.onHiding(e), this._toggleSafariScrolling(), this._processShowingHidingCancel(e.cancel, () => {
      this._forceFocusLost(), this._toggleShading(!1), this._toggleSubscriptions(!1), this._stopShowTimer(), this._animateHiding();
    }, () => {
      this._isHidingActionCanceled = !0, this.option("visible", !0), this._hidingDeferred.resolve();
    })), this._hidingDeferred.promise();
  },
  _forceFocusLost: function() {
    var e = ee.getActiveElement(), t = !!this._$content.find(e).length;
    t && Go();
  },
  _animate: function(e, t, i) {
    e ? (i = i || e.start || $, ft.animate(this._$content, T({}, e, {
      start: i,
      complete: t
    }))) : t();
  },
  _stopAnimation: function() {
    ft.stop(this._$content, !0);
  },
  _renderVisibility: function(e) {
    e && this._isParentHidden() || (this._currentVisible = e, this._stopAnimation(), e || UF(this._$content), e ? (this._checkContainerExists(), this._moveToContainer(), this._renderGeometry(), A_(this._$content), _n(this._$content)) : (this._toggleVisibility(e), this._$content.toggleClass(Yh, !e), this._updateZIndexStackPosition(e), this._moveFromContainer()), this._toggleShading(e), this._toggleSubscriptions(e));
  },
  _updateZIndexStackPosition: function(e) {
    var t = this._overlayStack(), i = t.indexOf(this);
    e ? (i === -1 && (this._zIndex = aT(this._zIndexInitValue()), t.push(this)), this._$wrapper.css("zIndex", this._zIndex), this._$content.css("zIndex", this._zIndex)) : i !== -1 && (t.splice(i, 1), bg(this._zIndex));
  },
  _toggleShading: function(e) {
    this._$wrapper.toggleClass(cN, e && this.option("shading")), this._$wrapper.css("backgroundColor", this.option("shading") ? this.option("shadingColor") : ""), this._toggleTabTerminator(e && this.option("shading"));
  },
  _initTabTerminatorHandler: function() {
    var e = this;
    this._proxiedTabTerminatorHandler = function() {
      e._tabKeyHandler(...arguments);
    };
  },
  _toggleTabTerminator: function(e) {
    var t = oe("keydown", this.NAME);
    e ? w.on(ee.getDocument(), t, this._proxiedTabTerminatorHandler) : w.off(ee.getDocument(), t, this._proxiedTabTerminatorHandler);
  },
  _findTabbableBounds: function() {
    for (var e = this._$wrapper.find("*"), t = e.length - 1, i = {
      first: null,
      last: null
    }, n = 0; n <= t && (!i.first && e.eq(n).is(pC) && (i.first = e.eq(n)), !i.last && e.eq(t - n).is(pC) && (i.last = e.eq(t - n)), !(i.first && i.last)); n++)
      ;
    return i;
  },
  _tabKeyHandler: function(e) {
    if (!(ht(e) !== fN || !this._isTopOverlay())) {
      var t = this._findTabbableBounds(), i = t.first, n = t.last, r = !e.shiftKey && e.target === n.get(0), a = e.shiftKey && e.target === i.get(0), o = t.length === 0, s = !Hn(this._$wrapper.get(0), e.target);
      if (r || a || o || s) {
        e.preventDefault();
        var l = e.shiftKey ? n : i;
        w.trigger(l, "focusin"), w.trigger(l, "focus");
      }
    }
  },
  _toggleSubscriptions: function(e) {
    Re() && (this._toggleHideTopOverlayCallback(e), this._toggleHideOnParentsScrollSubscription(e));
  },
  _toggleHideTopOverlayCallback: function(e) {
    this._hideTopOverlayHandler && (e ? xx.add(this._hideTopOverlayHandler) : xx.remove(this._hideTopOverlayHandler));
  },
  _toggleHideOnParentsScrollSubscription: function(e) {
    var t, i = oe("scroll", this.NAME), {
      prevTargets: n,
      handler: r
    } = (t = this._parentsScrollSubscriptionInfo) !== null && t !== void 0 ? t : {};
    w.off(n, i, r);
    var a = this.option("hideOnParentScroll");
    if (e && a) {
      var o = this._hideOnParentScrollTarget().parents();
      ve.real().deviceType === "desktop" && (o = o.add(Za)), w.on(o, i, r), this._parentsScrollSubscriptionInfo.prevTargets = o;
    }
  },
  _hideOnParentsScrollHandler: function(e) {
    var t = !1, i = this.option("hideOnParentScroll");
    ce(i) && (t = i(e)), !t && !this._showAnimationProcessing && this.hide();
  },
  _hideOnParentScrollTarget: function() {
    return this._$wrapper;
  },
  _render: function() {
    this.callBase(), this._appendContentToElement(), this._renderVisibilityAnimate(this.option("visible"));
  },
  _appendContentToElement: function() {
    this._$content.parent().is(this.$element()) || this._$content.appendTo(this.$element());
  },
  _renderContent: function() {
    var e = !this._currentVisible && this.option("deferRendering"), t = this.option("visible") && this._isParentHidden();
    if (t) {
      this._isHidden = !0;
      return;
    }
    this._contentAlreadyRendered || e || (this._contentAlreadyRendered = !0, this._appendContentToElement(), this.callBase());
  },
  _isParentHidden: function() {
    if (!this.option("_checkParentVisibility"))
      return !1;
    if (this._parentHidden !== void 0)
      return this._parentHidden;
    var e = this.$element().parent();
    if (e.is(":visible"))
      return !1;
    var t = !1;
    return e.add(e.parents()).each(function() {
      var i = g(this);
      if (i.css("display") === "none")
        return t = !0, !1;
    }), t || !ee.getBody().contains(e.get(0));
  },
  _renderContentImpl: function() {
    var e = new U(), t = this.option("contentTemplate"), i = this._getTemplate(t), n = this._templateManager.anonymousTemplateName === t;
    return i && i.render({
      container: Ie(this.$content()),
      noModel: !0,
      transclude: n,
      onRendered: () => {
        e.resolve(), this.option("templatesRenderAsynchronously") && this._dimensionChanged();
      }
    }), this._renderScrollTerminator(), e.done(() => {
      this.option("visible") && this._moveToContainer();
    }), e.promise();
  },
  _getPositionControllerConfig() {
    var {
      container: e,
      visualContainer: t,
      _fixWrapperPosition: i,
      restorePosition: n
    } = this.option();
    return {
      container: e,
      visualContainer: t,
      $root: this.$element(),
      $content: this._$content,
      $wrapper: this._$wrapper,
      onPositioned: this._actions.onPositioned,
      onVisualPositionChanged: this._actions.onVisualPositionChanged,
      restorePosition: n,
      _fixWrapperPosition: i
    };
  },
  _initPositionController() {
    this._positionController = new lT(this._getPositionControllerConfig());
  },
  _renderScrollTerminator: function() {
    var e = this._$wrapper, t = oe(Rr, this.NAME);
    w.off(e, t), w.on(e, t, {
      validate: function() {
        return !0;
      },
      getDirection: function() {
        return "both";
      },
      _toggleGestureCover: function(i) {
        i || this._toggleGestureCoverImpl(i);
      },
      _clearSelection: $,
      isNative: !0
    }, (i) => {
      var n = i.originalEvent.originalEvent, {
        type: r
      } = n || {}, a = r === "wheel", o = r === "mousemove", s = a && !Pt(i);
      i._cancelPreventDefault = !0, n && i.cancelable !== !1 && (!o && !a || s) && i.preventDefault();
    });
  },
  _moveFromContainer: function() {
    this._$content.appendTo(this.$element()), this._$wrapper.detach();
  },
  _checkContainerExists() {
    var e = this._positionController.$container;
    if (e !== void 0) {
      var t = e.length > 0;
      t || $e.log("W1021", this.NAME);
    }
  },
  _moveToContainer: function() {
    var e = this._positionController.$container;
    this._$wrapper.appendTo(e), this._$content.appendTo(this._$wrapper);
  },
  _renderGeometry: function(e) {
    var {
      visible: t
    } = this.option();
    t && Re() && (this._stopAnimation(), this._renderGeometryImpl());
  },
  _renderGeometryImpl: function() {
    this._positionController.updatePosition(this._getOptionValue("position")), this._renderWrapper(), this._renderDimensions(), this._renderPosition();
  },
  _renderPosition() {
    this._positionController.positionContent();
  },
  _isAllWindowCovered: function() {
    return Ct(this._positionController.$visualContainer.get(0)) && this.option("shading");
  },
  _toggleSafariScrolling: function() {
    var e = this.option("visible"), t = g(ee.getBody()), i = ve.real().platform === "ios" && lt.safari, n = this._isAllWindowCovered(), r = t.hasClass(Zh), a = !r && e && n, o = r && (!e || !n || this._disposed);
    i && (o ? (t.removeClass(Zh), Za.scrollTo(0, this._cachedBodyScrollTop), this._cachedBodyScrollTop = void 0) : a && (this._cachedBodyScrollTop = Za.pageYOffset, t.addClass(Zh)));
  },
  _renderWrapper: function() {
    this._positionController.styleWrapperPosition(), this._renderWrapperDimensions(), this._positionController.positionWrapper();
  },
  _renderWrapperDimensions: function() {
    var e = this._positionController.$visualContainer, t = ee.getDocumentElement(), i = Ct(e.get(0)), n = i ? t.clientWidth : Ge(e), r = i ? Za.innerHeight : Ne(e);
    this._$wrapper.css({
      width: n,
      height: r
    });
  },
  _renderDimensions: function() {
    var e = this._$content.get(0);
    this._$content.css({
      minWidth: this._getOptionValue("minWidth", e),
      maxWidth: this._getOptionValue("maxWidth", e),
      minHeight: this._getOptionValue("minHeight", e),
      maxHeight: this._getOptionValue("maxHeight", e),
      width: this._getOptionValue("width", e),
      height: this._getOptionValue("height", e)
    });
  },
  _focusTarget: function() {
    return this._$content;
  },
  _attachKeyboardEvents: function() {
    this._keyboardListenerId = Sr.on(this._$content, null, (e) => this._keyboardHandler(e));
  },
  _keyboardHandler: function(e) {
    var t = e.originalEvent, i = g(t.target);
    (i.is(this._$content) || !this.option("ignoreChildEvents")) && this.callBase(...arguments);
  },
  _isVisible: function() {
    return this.option("visible");
  },
  _visibilityChanged: function(e) {
    e ? this.option("visible") && this._renderVisibilityAnimate(e) : this._renderVisibilityAnimate(e);
  },
  _dimensionChanged: function() {
    this._renderGeometry();
  },
  _clean: function() {
    var e = this.option();
    !this._contentAlreadyRendered && !e.isRenovated && this.$content().empty(), this._renderVisibility(!1), this._stopShowTimer(), this._cleanFocusState();
  },
  _stopShowTimer() {
    this._asyncShowTimeout && clearTimeout(this._asyncShowTimeout), this._asyncShowTimeout = null;
  },
  _dispose: function() {
    ft.stop(this._$content, !1), clearTimeout(this._deferShowTimer), this._toggleViewPortSubscription(!1), this._toggleSubscriptions(!1), this._updateZIndexStackPosition(!1), this._toggleTabTerminator(!1), this._actions = null, this._parentsScrollSubscriptionInfo = null, this.callBase(), this._toggleSafariScrolling(), this.option("visible") && bg(this._zIndex), this._$wrapper.remove(), this._$content.remove();
  },
  _toggleRTLDirection: function(e) {
    this._$content.toggleClass(pN, e);
  },
  _optionChanged: function(e) {
    var t = e.value;
    if (this._getActionsList().includes(e.name)) {
      this._initActions();
      return;
    }
    switch (e.name) {
      case "animation":
        break;
      case "shading":
        this._toggleShading(this.option("visible")), this._toggleSafariScrolling();
        break;
      case "shadingColor":
        this._toggleShading(this.option("visible"));
        break;
      case "width":
      case "height":
        this._renderGeometry();
        break;
      case "minWidth":
      case "maxWidth":
      case "minHeight":
      case "maxHeight":
        this._renderGeometry();
        break;
      case "position":
        this._positionController.updatePosition(this.option("position")), this._positionController.restorePositionOnNextRender(!0), this._renderGeometry(), this._toggleSafariScrolling();
        break;
      case "visible":
        this._renderVisibilityAnimate(t).done(() => {
          var i;
          return (i = this._animateDeferred) === null || i === void 0 ? void 0 : i.resolveWith(this);
        }).fail(() => {
          var i;
          return (i = this._animateDeferred) === null || i === void 0 ? void 0 : i.reject();
        });
        break;
      case "container":
        this._positionController.updateContainer(t), this._invalidate(), this._toggleSafariScrolling();
        break;
      case "visualContainer":
        this._positionController.updateVisualContainer(t), this._renderWrapper(), this._toggleSafariScrolling();
        break;
      case "innerOverlay":
        this._initInnerOverlayClass();
        break;
      case "deferRendering":
      case "contentTemplate":
        this._contentAlreadyRendered = !1, this._clean(), this._invalidate();
        break;
      case "hideTopOverlayHandler":
        this._toggleHideTopOverlayCallback(!1), this._initHideTopOverlayHandler(e.value), this._toggleHideTopOverlayCallback(this.option("visible"));
        break;
      case "hideOnParentScroll":
        this._toggleHideOnParentsScrollSubscription(this.option("visible"));
        break;
      case "closeOnOutsideClick":
      case "hideOnOutsideClick":
      case "propagateOutsideClick":
        break;
      case "rtlEnabled":
        this._contentAlreadyRendered = !1, this.callBase(e);
        break;
      case "_fixWrapperPosition":
        this._positionController.fixWrapperPosition = t;
        break;
      case "wrapperAttr":
        this._renderWrapperAttributes();
        break;
      case "restorePosition":
        this._positionController.restorePosition = e.value;
        break;
      default:
        this.callBase(e);
    }
  },
  toggle: function(e) {
    e = e === void 0 ? !this.option("visible") : e;
    var t = new U();
    if (e === this.option("visible"))
      return t.resolveWith(this, [e]).promise();
    var i = new U();
    return this._animateDeferred = i, this.option("visible", e), i.promise().done(() => {
      delete this._animateDeferred, t.resolveWith(this, [this.option("visible")]);
    }).fail(() => {
      delete this._animateDeferred, t.reject();
    }), t.promise();
  },
  $content: function() {
    return this._$content;
  },
  show: function() {
    return this.toggle(!0);
  },
  hide: function() {
    return this.toggle(!1);
  },
  content: function() {
    return Ie(this._$content);
  },
  repaint: function() {
    this._contentAlreadyRendered ? (this._positionController.restorePositionOnNextRender(!0), this._renderGeometry({
      forceStopAnimation: !0
    }), _n(this._$content)) : this.callBase();
  }
});
tn.baseZIndex = (e) => nN(e);
We("dxOverlay", tn);
var gN = "dx-loadpanel", _N = "dx-loadpanel-wrapper", Ex = "dx-loadpanel-indicator", wx = "dx-loadpanel-message", vN = "dx-loadpanel-content", mN = "dx-loadpanel-content-wrapper", CN = "dx-loadpanel-pane-hidden", av = tn.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), {
      escape: $
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      message: q.format("Loading"),
      width: 222,
      height: 90,
      animation: null,
      showIndicator: !0,
      indicatorSrc: "",
      showPane: !0,
      delay: 0,
      templatesRenderAsynchronously: !1,
      hideTopOverlayHandler: null,
      focusStateEnabled: !1,
      propagateOutsideClick: !0
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: {
        platform: "generic"
      },
      options: {
        shadingColor: "transparent"
      }
    }, {
      device: function() {
        return St();
      },
      options: {
        message: "",
        width: 60,
        height: 60,
        maxHeight: 60,
        maxWidth: 60
      }
    }]);
  },
  _init: function() {
    this.callBase.apply(this, arguments);
  },
  _render: function() {
    this.callBase(), this.$element().addClass(gN), this.$wrapper().addClass(_N);
  },
  _renderContentImpl: function() {
    this.callBase(), this.$content().addClass(vN), this._$loadPanelContentWrapper = g("<div>").addClass(mN), this._$loadPanelContentWrapper.appendTo(this.$content()), this._togglePaneVisible(), this._cleanPreviousContent(), this._renderLoadIndicator(), this._renderMessage();
  },
  _show: function() {
    var e = this.option("delay");
    if (!e)
      return this.callBase();
    var t = new U(), i = this.callBase.bind(this);
    return this._clearShowTimeout(), this._showTimeout = setTimeout(function() {
      i().done(function() {
        t.resolve();
      });
    }, e), t.promise();
  },
  _hide: function() {
    return this._clearShowTimeout(), this.callBase();
  },
  _clearShowTimeout: function() {
    clearTimeout(this._showTimeout);
  },
  _renderMessage: function() {
    if (this._$loadPanelContentWrapper) {
      var e = this.option("message");
      if (e) {
        var t = g("<div>").addClass(wx).text(e);
        this._$loadPanelContentWrapper.append(t);
      }
    }
  },
  _renderLoadIndicator: function() {
    !this._$loadPanelContentWrapper || !this.option("showIndicator") || (this._$indicator || (this._$indicator = g("<div>").addClass(Ex).appendTo(this._$loadPanelContentWrapper)), this._createComponent(this._$indicator, bi, {
      indicatorSrc: this.option("indicatorSrc")
    }));
  },
  _cleanPreviousContent: function() {
    this.$content().find("." + wx).remove(), this.$content().find("." + Ex).remove(), delete this._$indicator;
  },
  _togglePaneVisible: function() {
    this.$content().toggleClass(CN, !this.option("showPane"));
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "delay":
        break;
      case "message":
      case "showIndicator":
        this._cleanPreviousContent(), this._renderLoadIndicator(), this._renderMessage();
        break;
      case "showPane":
        this._togglePaneVisible();
        break;
      case "indicatorSrc":
        this._renderLoadIndicator();
        break;
      default:
        this.callBase(e);
    }
  },
  _dispose: function() {
    this._clearShowTimeout(), this.callBase();
  }
});
We("dxLoadPanel", av);
var xN = ["year", "month", "day"], yN = ["year", "month", "day", "hour", "minute"], Eg = function(e) {
  return e === "date" || e === "datetime";
}, Qh = function(e) {
  var t, i = [], n = ["year", "month", "day", "hour", "minute", "second"], r = e.headerFilter && e.headerFilter.groupInterval, a = r === "quarter" ? "month" : r;
  if (Eg(e.dataType) && r !== null)
    return i = e.dataType === "datetime" ? yN : xN, t = n.indexOf(a), t >= 0 && (i = n.slice(0, t), i.push(r)), i;
  if (x(r))
    return Array.isArray(r) ? r : [r];
};
const Fo = function() {
  var e = function(r, a) {
    var o = r.dataField || r.selector;
    return a === "search" && (o = r.displayField || r.calculateDisplayValue || o), o;
  }, t = function(r, a) {
    var o, s, l, u = e(this, a);
    if (Array.isArray(r) && x(r[0]) && x(r[1]))
      return s = [u, ">=", r[0]], l = [u, "<=", r[1]], Eg(this.dataType) && (d = r[1], d.getHours() + d.getMinutes() + d.getSeconds() + d.getMilliseconds() < 1) && (o = new Date(r[1].getTime()), this.dataType === "date" && o.setDate(r[1].getDate() + 1), l = [u, "<", o]), [s, "and", l];
    var d;
  }, i = function(r, a, o) {
    var s, l, u, d = function(h) {
      return Qt(h) ? [h.getFullYear(), h.getMonth(), h.getDate(), h.getHours(), h.getMinutes(), h.getSeconds()] : wt(("" + h).split("/"), function(p, f) {
        return f === 1 ? Number(p) - 1 : Number(p);
      });
    }(r), c = e(this, o);
    switch (o === "headerFilter" ? u = Qh(this)[d.length - 1] : this.dataType === "datetime" && (u = "minute"), u) {
      case "year":
        s = new Date(d[0], 0, 1), l = new Date(d[0] + 1, 0, 1);
        break;
      case "month":
        s = new Date(d[0], d[1], 1), l = new Date(d[0], d[1] + 1, 1);
        break;
      case "quarter":
        s = new Date(d[0], 3 * d[1], 1), l = new Date(d[0], 3 * d[1] + 3, 1);
        break;
      case "hour":
        s = new Date(d[0], d[1], d[2], d[3]), l = new Date(d[0], d[1], d[2], d[3] + 1);
        break;
      case "minute":
        s = new Date(d[0], d[1], d[2], d[3], d[4]), l = new Date(d[0], d[1], d[2], d[3], d[4] + 1);
        break;
      case "second":
        s = new Date(d[0], d[1], d[2], d[3], d[4], d[5]), l = new Date(d[0], d[1], d[2], d[3], d[4], d[5] + 1);
        break;
      default:
        s = new Date(d[0], d[1], d[2]), l = new Date(d[0], d[1], d[2] + 1);
    }
    switch (a) {
      case "<":
        return [c, "<", s];
      case "<=":
        return [c, "<", l];
      case ">":
        return [c, ">=", l];
      case ">=":
        return [c, ">=", s];
      case "<>":
        return [
          [c, "<", s],
          "or",
          [c, ">=", l]
        ];
      default:
        return [
          [c, ">=", s],
          "and",
          [c, "<", l]
        ];
    }
  }, n = function(r, a, o) {
    var s = e(this, o), l = Qh(this);
    if (o === "headerFilter" && l && x(r)) {
      var u = ("" + r).split("/"), d = Number(u[u.length - 1]), c = l[u.length - 1], h = [s, ">=", d], p = [s, "<", d + c], f = [h, "and", p];
      return f;
    }
    return [s, a || "=", r];
  };
  return {
    defaultCalculateFilterExpression: function(r, a, o) {
      var s = this, l = e(s, o), u = s.calculateDisplayValue && o === "search", d = u && s.lookup && s.lookup.dataType || s.dataType, c = null;
      if ((o === "headerFilter" || o === "filterBuilder") && r === null)
        c = [l, a || "=", null], d === "string" && (c = [c, a === "=" ? "or" : "and", [l, a || "=", ""]]);
      else if (d === "string" && (!s.lookup || u))
        c = [l, a || "contains", r];
      else {
        if (a === "between")
          return t.apply(s, [r, o]);
        if (Eg(d) && x(r))
          return i.apply(s, arguments);
        if (d === "number")
          return n.apply(s, arguments);
        c = [l, a || "=", r];
      }
      return c;
    },
    getGroupInterval: Qh
  };
}(), bN = "scrolling.legacyMode", SN = "scrolling.rowRenderingMode", EN = {
  year: (e) => e && e.getFullYear(),
  month: (e) => e && e.getMonth() + 1,
  day: (e) => e && e.getDate(),
  quarter: (e) => e && Math.floor(e.getMonth() / 3) + 1,
  hour: (e) => e && e.getHours(),
  minute: (e) => e && e.getMinutes(),
  second: (e) => e && e.getSeconds()
}, wN = function() {
  const e = arguments[1], t = this.calculateCellValue(e);
  if (!x(t))
    return null;
  if (uT(this.dataType)) {
    const i = arguments[0];
    return EN[i](t);
  }
  if (this.dataType === "number") {
    const i = arguments[0];
    return Math.floor(Number(t) / i) * i;
  }
}, IN = function(e, t) {
  return ce(e) && ce(t) && e.originalCallback && t.originalCallback ? e.originalCallback === t.originalCallback && e.columnIndex === t.columnIndex : e === t;
};
function uT(e) {
  return e === "date" || e === "datetime";
}
const Ix = function(e) {
  e.get(0).textContent = " ";
}, Jh = function(e) {
  e = e || [];
  const t = Zn(e);
  for (let i = 0; i < e.length; i++)
    e && e[i] && e[i].isExpanded !== void 0 && (t[i].isExpanded = e[i].isExpanded), e && e[i] && e[i].groupInterval !== void 0 && (t[i].groupInterval = e[i].groupInterval);
  return t;
}, dT = function(e, t) {
  const i = RI.format(e, t.format) || e && e.toString() || "", n = {
    value: e,
    valueText: t.getDisplayFormat ? t.getDisplayFormat(i) : i,
    target: t.target || "row",
    groupInterval: t.groupInterval
  };
  return t.customizeText ? t.customizeText.call(t, n) : n.valueText;
}, Tx = function(e, t) {
  const i = e.displayFormat || e.columnCaption && t[e.summaryType + "OtherColumn"] || t[e.summaryType];
  return dT(e.value, {
    format: e.valueFormat,
    getDisplayFormat: (n) => i ? Ji(i, n, e.columnCaption) : n,
    customizeText: e.customizeText
  });
}, Dx = function(e) {
  const t = e.data && e.data(), i = t && t.dxComponents, n = i && i[0];
  return n && t[n];
}, cT = function(e, t) {
  if (Array.isArray(e) && Array.isArray(t)) {
    if (e.length !== t.length)
      return !1;
    for (let i = 0; i < e.length; i++)
      if (!cT(e[i], t[i]))
        return !1;
    return !0;
  }
  return ce(e) && e.columnIndex >= 0 && ce(t) && t.columnIndex >= 0 ? e.columnIndex === t.columnIndex && bt(e.filterValue) === bt(t.filterValue) && bt(e.selectedFilterOperation) === bt(t.selectedFilterOperation) : bt(e) == bt(t);
};
function TN(e) {
  return Array.isArray(e) || (e = [e]), e.map((t, i) => Te(t) ? {
    selector: t,
    isExpanded: i < e.length - 1
  } : t);
}
const ae = {
  renderNoDataText(e) {
    const t = this;
    if (e = e || this.element(), !e)
      return;
    const i = t.addWidgetPrefix("nodata");
    let n = e.find("." + i).last();
    const r = this._dataController.isEmpty(), a = this._dataController.isLoading();
    n.length || (n = g("<span>").addClass(i).appendTo(e)), r && !a ? n.removeClass("dx-hidden").text(t._getNoDataText()) : n.addClass("dx-hidden");
  },
  renderLoadPanel(e, t, i) {
    const n = this;
    let r;
    n._loadPanel && n._loadPanel.$element().remove(), r = n.option("loadPanel"), r && (r.enabled === "auto" ? !i : r.enabled) ? (r = T({
      shading: !1,
      message: r.text,
      container: t
    }, r), n._loadPanel = n._createComponent(g("<div>").appendTo(t), av, r)) : n._loadPanel = null;
  },
  calculateLoadPanelPosition(e) {
    const t = g(ke());
    return Fe(e) > Fe(t) ? {
      of: t,
      boundary: e,
      collision: "fit"
    } : {
      of: e
    };
  },
  getIndexByKey(e, t, i) {
    let n = -1;
    if (e !== void 0 && Array.isArray(t)) {
      i = arguments.length <= 2 ? "key" : i;
      for (let r = 0; r < t.length; r++) {
        const a = x(i) ? t[r][i] : t[r];
        if (et(e, a)) {
          n = r;
          break;
        }
      }
    }
    return n;
  },
  combineFilters(e, t) {
    var i;
    let n = [];
    t = t || "and";
    for (let r = 0; r < e.length; r++)
      if (e[r]) {
        if (((i = e[r]) === null || i === void 0 ? void 0 : i.length) === 1 && e[r][0] === "!") {
          if (t === "and")
            return ["!"];
          if (t === "or")
            continue;
        }
        n.length && n.push(t), n.push(e[r]);
      }
    if (n.length === 1 && (n = n[0]), n.length)
      return n;
  },
  checkChanges(e, t) {
    let i = 0;
    for (let n = 0; n < t.length; n++)
      e[t[n]] && i++;
    return e.length && e.length === i;
  },
  equalFilterParameters: cT,
  proxyMethod(e, t, i) {
    e[t] || (e[t] = function() {
      const n = this._dataSource;
      return n ? n[t].apply(n, arguments) : i;
    });
  },
  formatValue: dT,
  getFormatOptionsByColumn: (e, t) => ({
    format: e.format,
    getDisplayFormat: e.getDisplayFormat,
    customizeText: e.customizeText,
    target: t,
    trueText: e.trueText,
    falseText: e.falseText
  }),
  getDisplayValue(e, t, i, n) {
    return e.displayValueMap && e.displayValueMap[t] !== void 0 ? e.displayValueMap[t] : e.calculateDisplayValue && i && n !== "group" ? e.calculateDisplayValue(i) : e.lookup && !(n === "group" && (e.calculateGroupValue || e.calculateDisplayValue)) ? e.lookup.calculateCellValue(t) : t;
  },
  getGroupRowSummaryText(e, t) {
    let i = "(";
    for (let n = 0; n < e.length; n++) {
      const r = e[n];
      i += (n > 0 ? ", " : "") + Tx(r, t);
    }
    return i + ")";
  },
  getSummaryText: Tx,
  normalizeSortingInfo: Jh,
  getFormatByDataType(e) {
    switch (e) {
      case "date":
        return "shortDate";
      case "datetime":
        return "shortDateShortTime";
      default:
        return;
    }
  },
  getHeaderFilterGroupParameters(e, t) {
    let i = [];
    const n = e.dataField || e.name, r = Fo.getGroupInterval(e);
    return r ? (B(r, (a, o) => {
      i.push(t ? {
        selector: n,
        groupInterval: o,
        isExpanded: a < r.length - 1
      } : wN.bind(e, o));
    }), i) : (t ? i = [{
      selector: n,
      isExpanded: !1
    }] : (i = function(a) {
      let o = e.calculateCellValue(a);
      return (o === void 0 || o === "") && (o = null), o;
    }, e.sortingMethod && (i = [{
      selector: i,
      compare: e.sortingMethod.bind(e)
    }])), i);
  },
  equalSortParameters(e, t, i) {
    if (e = Jh(e), t = Jh(t), Array.isArray(e) && Array.isArray(t)) {
      if (e.length !== t.length)
        return !1;
      for (let n = 0; n < e.length; n++)
        if (!IN(e[n].selector, t[n].selector) || e[n].desc !== t[n].desc || e[n].groupInterval !== t[n].groupInterval || !i && !!e[n].isExpanded != !!t[n].isExpanded)
          return !1;
      return !0;
    }
    return (!e || !e.length) == (!t || !t.length);
  },
  getPointsByColumns(e, t, i, n) {
    const r = e.length;
    let a = !1, o, s, l = n || 0;
    const u = [];
    let d;
    for (let c = 0; c <= r; c++) {
      c < r && (o = e.eq(c), s = o.offset(), d = o.css("direction") === "rtl");
      const h = {
        index: l,
        x: s ? s.left + (!i && d ^ c === r ? Et(o[0]).width : 0) : 0,
        y: s ? s.top + (i && c === r ? Et(o[0]).height : 0) : 0,
        columnIndex: l
      };
      if (!i && c > 0) {
        const p = e.eq(c - 1).offset();
        p.top < h.y && (h.y = p.top);
      }
      t && (a = t(h)), a || u.push(h), l++;
    }
    return u;
  },
  getExpandCellTemplate: () => ({
    allowRenderToDetachedContainer: !0,
    render(e, t) {
      const i = g(e);
      if (x(t.value) && !(t.data && t.data.isContinuation) && !t.row.isNewRow) {
        const n = t.component.getView("rowsView");
        i.addClass("dx-datagrid-expand").addClass("dx-selection-disabled"), g("<div>").addClass(t.value ? "dx-datagrid-group-opened" : "dx-datagrid-group-closed").appendTo(i), n.setAria("label", t.value ? n.localize("dxDataGrid-ariaCollapse") : n.localize("dxDataGrid-ariaExpand"), i);
      } else
        Ix(i);
    }
  }),
  setEmptyText: Ix,
  isDateType: uT,
  getSelectionRange(e) {
    try {
      if (e)
        return {
          selectionStart: e.selectionStart,
          selectionEnd: e.selectionEnd
        };
    } catch {
    }
    return {};
  },
  setSelectionRange(e, t) {
    try {
      e && e.setSelectionRange && e.setSelectionRange(t.selectionStart, t.selectionEnd);
    } catch {
    }
  },
  focusAndSelectElement(e, t) {
    const i = t.is(":focus");
    w.trigger(t, "focus");
    const n = e.option("editing.selectTextOnEditStart"), r = t.get(0);
    if (!i && n && t.is(".dx-texteditor-input") && !t.is("[readonly]")) {
      const a = Dx(t.closest(".dx-texteditor"));
      ge(a && a._loadItemDeferred).done(() => {
        r.select();
      });
    }
  },
  getWidgetInstance: Dx,
  getLastResizableColumnIndex(e, t) {
    const i = e.some((r) => r && !r.command && !r.fixed && r.allowResizing !== !1);
    let n;
    for (n = e.length - 1; e[n]; n--) {
      const r = e[n], a = t && t[n], o = !i || r.allowResizing !== !1;
      if (!r.command && !r.fixed && a !== "adaptiveHidden" && o)
        break;
    }
    return n;
  },
  isElementInCurrentGrid(e, t) {
    return t && t.length ? t.closest("." + e.getWidgetContainerClass()).parent().is(e.component.$element()) : !1;
  },
  isVirtualRowRendering(e) {
    const t = e.option(SN), i = e.option("scrolling.mode") === "virtual", n = e.option("scrolling.mode") === "infinite";
    return e.option(bN) === !1 && (i || n) ? !0 : t === "virtual";
  },
  getPixelRatio: (e) => e.devicePixelRatio || 1,
  _setPixelRatioFn(e) {
    this.getPixelRatio = e;
  },
  getContentHeightLimit(e) {
    return e.mozilla ? 8e6 : 15e6 / this.getPixelRatio(ke());
  },
  normalizeLookupDataSource(e) {
    let t;
    return e.items ? t = e.items : (t = e.dataSource, ce(t) && !ii.isWrapped(t) && (t = t({}))), Uo(t);
  },
  getWrappedLookupDataSource(e, t, i) {
    if (!t)
      return [];
    const n = this.normalizeLookupDataSource(e.lookup);
    if (e.calculateCellValue !== e.defaultCalculateCellValue)
      return n;
    const r = t.remoteOperations().groupPaging, a = e.displayField && Te(e.displayField);
    let o, s, l;
    const u = (c, h) => {
      var p;
      const f = (p = h.skip) !== null && p !== void 0 ? p : 0, v = h.take ? f + h.take : c.length;
      return c.slice(f, v);
    };
    return Object.assign(Object.assign({}, n), {
      __dataGridSourceFilter: i,
      load: (c) => {
        const h = new U();
        return ((p) => {
          const f = TN(a ? [e.dataField, e.displayField] : e.dataField), v = new U();
          return o && (!r || p.skip === l && p.take === s) ? v.resolve(u(o, p)) : (l = p.skip, s = p.take, t.load({
            filter: i,
            group: f,
            take: r ? p.take : void 0,
            skip: r ? p.skip : void 0
          }).done((C) => {
            o = C, v.resolve(r ? C : u(C, p));
          }).fail(v.fail)), v;
        })(c).done((p) => {
          if (p.length === 0) {
            h.resolve([]);
            return;
          }
          const f = this.combineFilters(p.flatMap((m) => m.key).map((m) => [e.lookup.valueExpr, m]), "or");
          new Jn(Object.assign(Object.assign(Object.assign({}, n), c), {
            filter: this.combineFilters([f, c.filter], "and"),
            paginate: !1
          })).load().done(h.resolve).fail(h.fail);
        }).fail(h.fail), h;
      },
      key: e.lookup.valueExpr,
      byKey(c) {
        const h = U();
        return this.load({
          filter: [e.lookup.valueExpr, "=", c]
        }).done((p) => {
          h.resolve(p[0]);
        }), h.promise();
      }
    });
  }
}, hT = ze.inherit({
  _endUpdateCore() {
  },
  ctor(e) {
    const t = this;
    t._updateLockCount = 0, t.component = e, t._actions = {}, t._actionConfigs = {}, B(this.callbackNames() || [], function(i, n) {
      const r = t.callbackFlags(n) || {};
      r.unique = !0, r.syncStrategy = !0, t[this] = qe(r);
    });
  },
  init() {
  },
  callbackNames() {
  },
  callbackFlags() {
  },
  publicMethods() {
  },
  beginUpdate() {
    this._updateLockCount++;
  },
  endUpdate() {
    this._updateLockCount > 0 && (this._updateLockCount--, this._updateLockCount || this._endUpdateCore());
  },
  option(e) {
    const {
      component: t
    } = this, i = t._optionCache;
    return arguments.length === 1 && i ? (e in i || (i[e] = t.option(e)), i[e]) : t.option.apply(t, arguments);
  },
  _silentOption(e, t) {
    const {
      component: i
    } = this, n = i._optionCache;
    return n && (n[e] = t), i._setOptionWithoutOptionChange(e, t);
  },
  localize(e) {
    const t = this.component._optionCache;
    return t ? (e in t || (t[e] = q.format(e)), t[e]) : q.format(e);
  },
  on() {
    return this.component.on.apply(this.component, arguments);
  },
  off() {
    return this.component.off.apply(this.component, arguments);
  },
  optionChanged(e) {
    e.name in this._actions && (this.createAction(e.name, this._actionConfigs[e.name]), e.handled = !0);
  },
  getAction(e) {
    return this._actions[e];
  },
  setAria(e, t, i) {
    const n = i.get(0), r = e !== "role" && e !== "id" ? "aria-" : "";
    n.setAttribute ? n.setAttribute(r + e, t) : i.attr(r + e, t);
  },
  _createComponent() {
    return this.component._createComponent.apply(this.component, arguments);
  },
  getController(e) {
    return this.component._controllers[e];
  },
  createAction(e, t) {
    if (ce(e)) {
      const i = this.component._createAction(e.bind(this), t);
      return function(n) {
        i({
          event: n
        });
      };
    }
    this._actions[e] = this.component._createActionByOption(e, t), this._actionConfigs[e] = t;
  },
  executeAction(e, t) {
    const i = this._actions[e];
    return i && i(t);
  },
  dispose() {
    const e = this;
    B(e.callbackNames() || [], function() {
      e[this].empty();
    });
  },
  addWidgetPrefix(e) {
    return `dx-${this.component.NAME.slice(2).toLowerCase()}${e ? "-" + e : ""}`;
  },
  getWidgetContainerClass() {
    const e = this.component.NAME === "dxDataGrid" ? null : "container";
    return this.addWidgetPrefix(e);
  },
  elementIsInsideGrid(e) {
    return e.closest("." + this.getWidgetContainerClass()).parent().is(this.component.$element());
  }
}), ov = hT, DN = ov.inherit({
  getView(e) {
    return this.component._views[e];
  },
  getViews() {
    return this.component._views;
  }
}), pT = hT.inherit({
  _isReady() {
    return this.component.isReady();
  },
  _endUpdateCore() {
    this.callBase(), !this._isReady() && this._requireReady && (this._requireRender = !1, this.component._requireResize = !1), this._requireRender && (this._requireRender = !1, this.render(this._$parent));
  },
  _invalidate(e, t) {
    this._requireRender = !0, this.component._requireResize = Re() && (this.component._requireResize || e), this._requireReady = this._requireReady || t;
  },
  _renderCore() {
  },
  _resizeCore() {
  },
  _parentElement() {
    return this._$parent;
  },
  ctor(e) {
    this.callBase(e), this.renderCompleted = qe(), this.resizeCompleted = qe();
  },
  element() {
    return this._$element;
  },
  getElementHeight() {
    const e = this.element();
    if (!e)
      return 0;
    const t = parseFloat(e.css("marginTop")) || 0, i = parseFloat(e.css("marginBottom")) || 0, {
      offsetHeight: n
    } = e.get(0);
    return n + t + i;
  },
  isVisible: () => !0,
  getTemplate(e) {
    return this.component._getTemplate(e);
  },
  render(e, t) {
    let i = this._$element;
    const n = this.isVisible();
    if (!(!i && !e) && (this._requireReady = !1, i || (i = this._$element = g("<div>").appendTo(e), this._$parent = e), i.toggleClass("dx-hidden", !n), n)) {
      this.component._optionCache = {};
      const r = this._renderCore(t);
      this.component._optionCache = void 0, r ? r.done(() => {
        this.renderCompleted.fire(t);
      }) : this.renderCompleted.fire(t);
    }
  },
  resize() {
    this.isResizing = !0, this._resizeCore(), this.resizeCompleted.fire(), this.isResizing = !1;
  },
  focus(e) {
    this.element().get(0).focus({
      preventScroll: e
    });
  }
});
function Ax(e, t = {}) {
  const i = {};
  return Object.entries(t).forEach(([n, r]) => {
    const a = e[n];
    if (a)
      if (ce(r))
        i[n] = r(a);
      else {
        const o = a;
        i[n] = o.inherit(r);
      }
  }), i;
}
function AN(e, t, i) {
  const n = i.publicMethods();
  n && B(n, (r, a) => {
    if (i[a])
      if (!e[a])
        e[a] = (...o) => i[a](...o);
      else
        throw $e.Error("E1005", a);
    else
      throw $e.Error("E1006", t, a);
  });
}
function ON(e, t) {
  const {
    modules: i
  } = t, {
    modulesOrder: n
  } = t;
  function r(d) {
    const c = {};
    return B(d, (h, p) => {
      const f = new p(e);
      f.name = h, AN(e, h, f), c[h] = f;
    }), c;
  }
  n && i.sort((d, c) => {
    let h = n.indexOf(d.name), p = n.indexOf(c.name);
    return h < 0 && (h = 1e6), p < 0 && (p = 1e6), h - p;
  });
  const a = {}, o = {};
  i.forEach(({
    name: d,
    controllers: c = {},
    views: h = {}
  }) => {
    Object.entries(c).forEach(([p, f]) => {
      var v;
      if (a[p])
        throw $e.Error("E1001", d, p);
      if (!(!((v = f == null ? void 0 : f.subclassOf) === null || v === void 0) && v.call(f, ov)))
        throw $e.Error("E1002", d, p);
      a[p] = f;
    }), Object.entries(h).forEach(([p, f]) => {
      var v;
      if (o[p])
        throw $e.Error("E1003", d, p);
      if (!(!((v = f == null ? void 0 : f.subclassOf) === null || v === void 0) && v.call(f, pT)))
        throw $e.Error("E1004", d, p);
      o[p] = f;
    });
  });
  const s = i.filter(({
    extenders: d
  }) => !!d), l = s.reduce((d, {
    extenders: c
  }) => Object.assign(Object.assign({}, d), Ax(d, c == null ? void 0 : c.controllers)), a), u = s.reduce((d, {
    extenders: c
  }) => Object.assign(Object.assign({}, d), Ax(d, c == null ? void 0 : c.views)), o);
  e._controllers = r(l), e._views = r(u);
}
const RN = function(e, t, i) {
  i = i || [], e._controllers && B(e._controllers, function() {
    this[t] && this[t].apply(this, i);
  }), e._views && B(e._views, function() {
    this[t] && this[t].apply(this, i);
  });
}, at = {
  modules: [],
  View: pT,
  ViewController: DN,
  Controller: ov,
  registerModule(e, t) {
    const {
      modules: i
    } = this;
    for (let n = 0; n < i.length; n++)
      if (i[n].name === e)
        return;
    t.name = e, i.push(t);
  },
  registerModulesOrder(e) {
    this.modulesOrder = e;
  },
  unregisterModule(e) {
    this.modules = li(this.modules, (t) => t.name !== e);
  },
  processModules: ON,
  callModuleItemsMethod: RN
}, xe = Object.assign(Object.assign(Object.assign({}, at), ae), {
  modules: []
});
var Ol = "dxdblclick", BN = "dxDblClick", Ox = oe(Xe, BN), Rx = 300, kN = ze.inherit({
  ctor: function() {
    this._handlerCount = 0, this._forgetLastClick();
  },
  _forgetLastClick: function() {
    this._firstClickTarget = null, this._lastClickTimeStamp = -Rx;
  },
  add: function() {
    this._handlerCount <= 0 && w.on(ee.getDocument(), Ox, this._clickHandler.bind(this)), this._handlerCount++;
  },
  _clickHandler: function(e) {
    var t = e.timeStamp || Date.now(), i = t - this._lastClickTimeStamp, n = i < 0, r = !n && i < Rx;
    r ? (Vr({
      type: Ol,
      target: zF(this._firstClickTarget, e.target),
      originalEvent: e
    }), this._forgetLastClick()) : (this._firstClickTarget = e.target, this._lastClickTimeStamp = t);
  },
  remove: function() {
    this._handlerCount--, this._handlerCount <= 0 && (this._forgetLastClick(), w.off(ee.getDocument(), Ox));
  }
});
Wi(Ol, new kN());
const FN = {
  _applyColumnState(e) {
    var t;
    const i = this.option("rtlEnabled"), n = this._getColumnAlignment(e.column.alignment, i), r = T(!0, {
      columnAlignment: n
    }, e), a = r.rootElement.hasClass("dx-group-panel-item"), o = this._createIndicatorContainer(r, a), s = g("<span>").addClass(this._getIndicatorClassName(e.name)), l = (t = this.component) === null || t === void 0 ? void 0 : t.getController("columns"), u = (l == null ? void 0 : l.getHeaderContentAlignment(n)) || n;
    return r.container = o, r.indicator = s, this._renderIndicator(r), o[(a || !e.showColumnLines) && u === "left" ? "appendTo" : "prependTo"](e.rootElement), s;
  },
  _getIndicatorClassName: $,
  _getColumnAlignment(e, t) {
    return t = t || this.option("rtlEnabled"), e && e !== "center" ? e : $r(t);
  },
  _createIndicatorContainer(e, t) {
    let i = this._getIndicatorContainer(e.rootElement);
    const n = e.columnAlignment === "left" ? "right" : "left";
    return i.length || (i = g("<div>").addClass("dx-column-indicators")), this.setAria("role", "presentation", i), i.css("float", e.showColumnLines && !t ? n : null);
  },
  _getIndicatorContainer: (e) => e && e.find(".dx-column-indicators"),
  _getIndicatorElements(e) {
    const t = this._getIndicatorContainer(e);
    return t && t.children();
  },
  _renderIndicator(e) {
    const t = e.container, i = e.indicator;
    t && i && t.append(i);
  },
  _updateIndicators(e) {
    const t = this, i = t.getColumns(), n = t.getColumnElements();
    let r;
    if (!(!n || i.length !== n.length))
      for (let a = 0; a < i.length; a++) {
        r = n.eq(a), t._updateIndicator(r, i[a], e);
        const o = r.parent().data("options");
        o && o.cells && (o.cells[r.index()].column = i[a]);
      }
  },
  _updateIndicator(e, t, i) {
    if (!t.command)
      return this._applyColumnState({
        name: i,
        rootElement: e,
        column: t,
        showColumnLines: this.option("showColumnLines")
      });
  }
};
var Bx = "scroll-container", PN = "scrollable-simulated", MN = "group-space", LN = "content", VN = "table", NN = "table-fixed", $N = "content-fixed", as = "dx-row", ep = "dx-group-row", HN = "dx-group-cell", tp = "dx-master-detail-row", zN = "filter-row", WN = "dx-error-row", GN = "cell-updated-animation", kx = "0.0001px", ip = "dxCellHintVisible", KN = "dx-field-item-content", UN = {
  render: function(e) {
    e.container.append(e.content);
  }
}, jN = function(e, t) {
  var i, n, r;
  function a(o) {
    return setTimeout(function() {
      i = n = null;
    }, o);
  }
  w.on(t, "touchstart touchend", ".dx-row", function(o) {
    clearTimeout(r), o.type === "touchstart" ? (i = o.target, n = o.currentTarget, r = a(1e3)) : r = a();
  }), w.on(t, [Xe, Ol, je.down].join(" "), ".dx-row", e.createAction(function(o) {
    var s = o.event;
    i && (s.target = i, s.currentTarget = n), g(s.target).closest("a").length || (o.rowIndex = e.getRowIndex(s.currentTarget), o.rowIndex >= 0 && (o.rowElement = Ie(g(s.currentTarget)), o.columns = e.getColumns(), s.type === je.down ? e._rowPointerDown(o) : s.type === Xe ? e._rowClick(o) : e._rowDblClick(o)));
  }));
}, du = function(e) {
  return e === "auto" ? "" : rt(e) ? e + "px" : e;
}, Fx = function(e, t, i) {
  e.style.width = e.style.maxWidth = t.width === "auto" ? "" : i;
}, qN = function(e, t) {
  if (!(!e || !t)) {
    var i = e.attributes, n = t.attributes, r;
    for (r = 0; r < i.length; r++) {
      var a = i[r].nodeName;
      t.hasAttribute(a) || e.removeAttribute(a);
    }
    for (r = 0; r < n.length; r++)
      e.setAttribute(n[r].nodeName, n[r].nodeValue);
  }
}, XN = {
  _createScrollableOptions: function() {
    var e = this.option("scrolling"), t = this.option("scrolling.useNative"), i = T({}, e, {
      direction: "both",
      bounceEnabled: !1,
      useKeyboard: !1
    });
    return t === void 0 && (t = !0), t === "auto" ? (delete i.useNative, delete i.useSimulatedScrollbar) : (i.useNative = !!t, i.useSimulatedScrollbar = !t), i;
  },
  _updateCell: function(e, t) {
    t.rowType && this._cellPrepared(e, t);
  },
  _createCell: function(e) {
    var t = e.column, i = t.alignment || $r(this.option("rtlEnabled")), n = ee.createElement("td");
    n.style.textAlign = i;
    var r = g(n);
    return e.rowType === "data" && t.headerId && !t.type && this.component.option("showColumnHeaders") && this.setAria("describedby", t.headerId, r), t.cssClass && r.addClass(t.cssClass), t.command === "expand" && (r.addClass(t.cssClass), r.addClass(this.addWidgetPrefix(MN))), t.colspan > 1 ? r.attr("colSpan", t.colspan) : !t.isBand && t.visibleWidth !== "auto" && this.option("columnAutoWidth") && ((t.width || t.minWidth) && (n.style.minWidth = du(t.minWidth || t.width)), t.width && Fx(n, t, du(t.width))), r;
  },
  _createRow: function(e, t) {
    t = t || "tr";
    var i = g("<".concat(t, ">")).addClass(as);
    return this.setAria("role", "row", i), i;
  },
  _isAltRow: function(e) {
    return e && e.dataIndex % 2 === 1;
  },
  _createTable: function(e, t) {
    var i = this, n = g("<table>").addClass(i.addWidgetPrefix(VN)).addClass(i.addWidgetPrefix(NN));
    if (e && !t ? (n.append(i._createColGroup(e)), lt.safari && n.append(g("<thead>").append("<tr>")), i.setAria("role", "presentation", n)) : i.setAria("hidden", !0, n), this.setAria("role", "presentation", g("<tbody>").appendTo(n)), t)
      return n;
    lt.mozilla && w.on(n, "mousedown", "td", function(a) {
      a.ctrlKey && a.preventDefault();
    }), i.option("cellHintEnabled") && w.on(n, "mousemove", ".dx-row > td", this.createAction(function(a) {
      var o = a.event, s = g(o.target), l = g(o.currentTarget), u = l.parent(), d = i._columnsController.getVisibleColumns(), c = u.data("options"), h = l.index(), p = c && c.cells && c.cells[h], f = p ? p.column : d[h], v = u.hasClass("dx-header-row"), m = u.hasClass("dx-data-row"), C = u.hasClass(tp), b = u.hasClass(ep), A = u.hasClass(i.addWidgetPrefix(zN)), R = m && (!f || f.cellTemplate), k = m && p && (c.isEditing || p.isEditing || (f == null ? void 0 : f.showEditorAlways)), H = v && (!f || f.headerCellTemplate), K = b && (!f || f.groupIndex && f.groupCellTemplate), j = !C && !A && !k && !R && !H && !K;
      if (j) {
        s.data(ip) && (s.removeAttr("title"), s.data(ip, !1));
        var z = s[0].scrollWidth - s[0].clientWidth;
        z > 0 && !x(s.attr("title")) && (s.attr("title", s.text()), s.data(ip, !0));
      }
    }));
    var r = function(a) {
      var o = g(a.currentTarget), s = g(a.target).closest("." + KN), l = o.parent(), u = l.data("options"), d = u && u.cells && u.cells[o.index()];
      if (o.closest("table").is(a.delegateTarget)) {
        var c = T({}, d, {
          cellElement: Ie(o),
          event: a,
          eventType: a.type
        });
        if (c.rowIndex = i.getRowIndex(l), s.length) {
          var h = s.data("dx-form-item");
          h.column && (c.column = h.column, c.columnIndex = i._columnsController.getVisibleIndex(c.column.index));
        }
        return c;
      }
    };
    return w.on(n, "mouseover", ".dx-row > td", function(a) {
      var o = r(a);
      o && i.executeAction("onCellHoverChanged", o);
    }), w.on(n, "mouseout", ".dx-row > td", function(a) {
      var o = r(a);
      o && i.executeAction("onCellHoverChanged", o);
    }), w.on(n, Xe, ".dx-row > td", function(a) {
      var o = r(a);
      o && i.executeAction("onCellClick", o);
    }), w.on(n, Ol, ".dx-row > td", function(a) {
      var o = r(a);
      o && i.executeAction("onCellDblClick", o);
    }), jN(i, n), n;
  },
  _rowPointerDown: $,
  _rowClick: $,
  _rowDblClick: $,
  _createColGroup: function(e) {
    for (var t = g("<colgroup>"), i = 0; i < e.length; i++)
      for (var n = e[i].colspan || 1, r = 0; r < n; r++)
        t.append(this._createCol(e[i]));
    return t;
  },
  _createCol: function(e) {
    var t = e.visibleWidth || e.width;
    t === "adaptiveHidden" && (t = kx);
    var i = g("<col>");
    return bh(i, t), i;
  },
  renderDelayedTemplates: function(e) {
    var t = this._delayedTemplates, i = t.filter((r) => !r.async), n = t.filter((r) => r.async);
    this._delayedTemplates = [], this._renderDelayedTemplatesCore(i, !1, e), this._renderDelayedTemplatesCoreAsync(n);
  },
  _renderDelayedTemplatesCoreAsync: function(e) {
    var t = this;
    e.length && (t._templateTimeout = ke().setTimeout(function() {
      t._renderDelayedTemplatesCore(e, !0);
    }));
  },
  _renderDelayedTemplatesCore: function(e, t, i) {
    for (var n = /* @__PURE__ */ new Date(); e.length; ) {
      var r = e.shift(), a = r.options, o = ee.getRootNode(g(a.container).get(0)), s = this.needWaitAsyncTemplates();
      if ((!t || g(a.container).closest(o).length || s) && (i && (a.change = i), r.template.render(a)), t && /* @__PURE__ */ new Date() - n > 30) {
        this._renderDelayedTemplatesCoreAsync(e);
        break;
      }
    }
    !e.length && this._delayedTemplates.length && this.renderDelayedTemplates();
  },
  _processTemplate: function(e) {
    var t;
    if (e && e.render && !wi(e))
      t = {
        allowRenderToDetachedContainer: e.allowRenderToDetachedContainer,
        render: function(n) {
          e.render(n.container, n.model, n.change), n.deferred && n.deferred.resolve();
        }
      };
    else if (ce(e))
      t = {
        render: function(n) {
          var r = e(Ie(n.container), n.model, n.change);
          r && (r.nodeType || wi(r)) && n.container.append(r), n.deferred && n.deferred.resolve();
        }
      };
    else {
      var i = Te(e) ? e : g(e).attr("id");
      i ? (this._templatesCache[i] || (this._templatesCache[i] = this.getTemplate(e)), t = this._templatesCache[i]) : t = this.getTemplate(e);
    }
    return t;
  },
  renderTemplate: function(e, t, i, n, r) {
    var a = this, o = a._processTemplate(t, i), s = i.column, l = i.rowType === "data", u = new U(), d = {
      container: e,
      model: i,
      deferred: u,
      onRendered: () => {
        a.component._disposed || u.resolve();
      }
    };
    if (o) {
      i.component = a.component;
      var c = s && (s.renderAsync && l || a.option("renderAsync") && (s.renderAsync !== !1 && (s.command || s.showEditorAlways) && l || i.rowType === "filter"));
      (o.allowRenderToDetachedContainer || n) && !c ? o.render(d) : a._delayedTemplates.push({
        template: o,
        options: d,
        async: c
      }), this._templateDeferreds.add(u);
    } else
      u.reject();
    return u.promise().always(() => {
      this._templateDeferreds.delete(u);
    });
  },
  _getBodies: function(e) {
    return g(e).children("tbody").not(".dx-header").not(".dx-footer");
  },
  _needWrapRow: function(e) {
    var t, i = !!this.option().rowTemplate;
    return i && !!((t = this._getBodies(e)) !== null && t !== void 0 && t.filter("." + as).length);
  },
  _wrapRowIfNeed: function(e, t, i) {
    var n = i ? e || this._tableElement : this._tableElement || e, r = this._needWrapRow(n);
    if (r) {
      var a = g("<tbody>").addClass(t.attr("class"));
      return this.setAria("role", "presentation", a), a.append(t);
    }
    return t;
  },
  _appendRow: function(e, t, i) {
    i = i || UN, i.render({
      content: t,
      container: e
    });
  },
  _resizeCore: function() {
    var e = this._scrollLeft;
    e >= 0 && (this._scrollLeft = 0, this.scrollTo({
      left: e
    }));
  },
  _renderCore: function(e) {
    var t = this.element().parent();
    (!t || t.parent().length) && this.renderDelayedTemplates(e);
  },
  _renderTable: function(e) {
    e = e || {}, e.columns = this._columnsController.getVisibleColumns();
    var t = e.change && e.change.changeType, i = this._createTable(e.columns, t === "append" || t === "prepend" || t === "update");
    return this._renderRows(i, e), i;
  },
  _renderRows: function(e, t) {
    for (var i = this._getRows(t.change), n = t.change && t.change.columnIndices || [], r = t.change && t.change.changeTypes || [], a = 0; a < i.length; a++)
      this._renderRow(e, T({
        row: i[a],
        columnIndices: n[a],
        changeType: r[a]
      }, t));
  },
  _renderRow: function(e, t) {
    t.columnIndices || (t.row.cells = []);
    var i = this._createRow(t.row), n = this._wrapRowIfNeed(e, i);
    t.changeType !== "remove" && this._renderCells(i, t), this._appendRow(e, n);
    var r = T({
      columns: t.columns
    }, t.row);
    this._addWatchMethod(r, t.row), this._rowPrepared(n, r, t.row);
  },
  _needRenderCell: function(e, t) {
    return !t || t.indexOf(e) >= 0;
  },
  _renderCells: function(e, t) {
    for (var i = 0, n = t.row, r = t.columns, a = 0; a < r.length; a++)
      this._needRenderCell(a, t.columnIndices) && this._renderCell(e, T({
        column: r[a],
        columnIndex: i,
        value: n.values && n.values[i],
        oldValue: n.oldValues && n.oldValues[i]
      }, t)), r[a].colspan > 1 ? i += r[a].colspan : i++;
  },
  _updateCells: function(e, t, i) {
    var n = e.children(), r = t.children(), a = this.option("highlightChanges"), o = this.addWidgetPrefix(GN);
    i.forEach(function(s, l) {
      var u = n.eq(s), d = r.eq(l);
      u.replaceWith(d), a && !d.hasClass("dx-command-expand") && d.addClass(o);
    }), qN(e.get(0), t.get(0));
  },
  _setCellAriaAttributes: function(e, t) {
    if (t.rowType !== "freeSpace") {
      this.setAria("role", "gridcell", e);
      var i = this._columnsController.getColumnIndexOffset(), n = t.columnIndex + i + 1;
      this.setAria("colindex", n, e);
    }
  },
  _renderCell: function(e, t) {
    var i = this._getCellOptions(t);
    if (t.columnIndices) {
      if (t.row.cells) {
        var n = t.row.cells.findIndex((a) => a.columnIndex === i.columnIndex);
        t.row.cells[n] = i;
      }
    } else
      t.row.cells.push(i);
    var r = this._createCell(i);
    return this._setCellAriaAttributes(r, i), this._renderCellContent(r, i, t), e.get(0).appendChild(r.get(0)), r;
  },
  _renderCellContent: function(e, t, i) {
    var n = this._getCellTemplate(t);
    ge(!n || this.renderTemplate(e, n, t, void 0, i.change)).done(() => {
      this._updateCell(e, t);
    });
  },
  _getCellTemplate: function() {
  },
  _getRows: function() {
    return [];
  },
  _getCellOptions: function(e) {
    var t = {
      column: e.column,
      columnIndex: e.columnIndex,
      rowType: e.row.rowType,
      isAltRow: this._isAltRow(e.row)
    };
    return this._addWatchMethod(t), t;
  },
  _addWatchMethod: function(e, t) {
    if (this.option("repaintChangesOnly")) {
      var i = [];
      return t = t || e, t.watch = t.watch || function(n, r, a) {
        var o = n(t.data), s = function(l) {
          l && a && a(l);
          var u = n(t.data);
          JSON.stringify(o) !== JSON.stringify(u) && (l && r(u), o = u);
        };
        return i.push(s), function() {
          var l = i.indexOf(s);
          l >= 0 && i.splice(l, 1);
        };
      }, t.update = t.update || function(n, r) {
        n && (this.data = e.data = n.data, this.rowIndex = e.rowIndex = n.rowIndex, this.dataIndex = e.dataIndex = n.dataIndex, this.isExpanded = e.isExpanded = n.isExpanded, e.row && !r && (e.row = n)), i.forEach(function(a) {
          a(n);
        });
      }, t !== e && (e.watch = t.watch.bind(t)), e;
    }
  },
  _cellPrepared: function(e, t) {
    t.cellElement = Ie(g(e)), this.executeAction("onCellPrepared", t);
  },
  _rowPrepared: function(e, t) {
    dt(e.get(0), "options", t), t.rowElement = Ie(e), this.executeAction("onRowPrepared", t);
  },
  _columnOptionChanged: function(e) {
    var t = e.optionNames;
    if (ae.checkChanges(t, ["width", "visibleWidth"])) {
      var i = this._columnsController.getVisibleColumns(), n = wt(i, function(r) {
        var a = r.visibleWidth || r.width;
        return x(a) ? a : "auto";
      });
      this.setColumnWidths({
        widths: n,
        optionNames: t
      });
      return;
    }
    this._requireReady || this.render();
  },
  getCellIndex: function(e) {
    var t = e.length ? e[0].cellIndex : -1;
    return t;
  },
  getTableElements: function() {
    return this._tableElement || g();
  },
  getTableElement: function() {
    return this._tableElement;
  },
  setTableElement: function(e) {
    this._tableElement = e;
  },
  optionChanged: function(e) {
    switch (this.callBase(e), e.name) {
      case "cellHintEnabled":
      case "onCellPrepared":
      case "onRowPrepared":
      case "onCellHoverChanged":
        this._invalidate(!0, !0), e.handled = !0;
    }
  },
  init: function() {
    this._scrollLeft = -1, this._columnsController = this.getController("columns"), this._dataController = this.getController("data"), this._delayedTemplates = [], this._templateDeferreds = /* @__PURE__ */ new Set(), this._templatesCache = {}, this.createAction("onCellClick"), this.createAction("onRowClick"), this.createAction("onCellDblClick"), this.createAction("onRowDblClick"), this.createAction("onCellHoverChanged", {
      excludeValidators: ["disabled", "readOnly"]
    }), this.createAction("onCellPrepared", {
      excludeValidators: ["disabled", "readOnly"],
      category: "rendering"
    }), this.createAction("onRowPrepared", {
      excludeValidators: ["disabled", "readOnly"],
      category: "rendering",
      afterExecute: (e) => {
        this._afterRowPrepared(e);
      }
    }), this._columnsController.columnsChanged.add(this._columnOptionChanged.bind(this)), this._dataController && this._dataController.changed.add(this._handleDataChanged.bind(this));
  },
  _afterRowPrepared: $,
  _handleDataChanged: function() {
  },
  callbackNames: function() {
    return ["scrollChanged"];
  },
  _updateScrollLeftPosition: function() {
    var e = this._scrollLeft;
    e >= 0 && (this._scrollLeft = 0, this.scrollTo({
      left: e
    }));
  },
  scrollTo: function(e) {
    var t = this.element(), i = t && t.children("." + this.addWidgetPrefix(Bx)).not("." + this.addWidgetPrefix($N));
    x(e) && x(e.left) && this._scrollLeft !== e.left && (this._scrollLeft = e.left, i && i.scrollLeft(e.left));
  },
  _wrapTableInScrollContainer: function(e) {
    var t = g("<div>"), i = this.option("scrolling.useNative");
    return (i === !1 || i === "auto" && !ya) && t.addClass(this.addWidgetPrefix(PN)), w.on(t, "scroll", () => {
      var n = t.scrollLeft();
      n !== this._scrollLeft && this.scrollChanged.fire({
        left: n
      }, this.name);
    }), t.addClass(this.addWidgetPrefix(LN)).addClass(this.addWidgetPrefix(Bx)).append(e).appendTo(this.element()), this.setAria("role", "presentation", t), t;
  },
  needWaitAsyncTemplates: function() {
    return this.option("templatesRenderAsynchronously") && this.option("renderAsync") === !1;
  },
  waitAsyncTemplates: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, t = new U(), i = e || this.needWaitAsyncTemplates();
    if (!i)
      return t.resolve();
    var n = () => ge.apply(this, Array.from(this._templateDeferreds)).done(() => {
      this._templateDeferreds.size > 0 ? n() : t.resolve();
    }).fail(t.reject);
    return n(), t.promise();
  },
  _updateContent: function(e, t, i) {
    return this.waitAsyncTemplates().done(() => {
      this.setTableElement(e, i), this._wrapTableInScrollContainer(e, i);
    });
  },
  _findContentElement: $,
  _getWidths: function(e) {
    var t = [], i;
    return e && B(e, function(n, r) {
      if (i = r.offsetWidth, r.getBoundingClientRect) {
        var a = Et(r);
        a.width > i - 1 && (i = a.width);
      }
      t.push(i);
    }), t;
  },
  getColumnWidths: function(e) {
    var t = [], i, n;
    if ((this.option("forceApplyBindings") || $)(), e = e || this.getTableElement(), e) {
      i = e.children("tbody:not(.dx-header)").children();
      for (var r = 0; r < i.length; r++) {
        var a = i.eq(r), o = a.get(0).style.display !== "none" && !a.hasClass("dx-state-invisible");
        if (!a.is("." + ep) && !a.is("." + tp) && !a.is("." + WN) && o) {
          n = a.children("td");
          break;
        }
      }
      t = this._getWidths(n);
    }
    return t;
  },
  getVisibleColumnIndex: function(e, t) {
    return e;
  },
  setColumnWidths: function(e) {
    var {
      widths: t,
      $tableElement: i,
      columns: n,
      fixed: r
    } = e, a, o, s, l, u = this.option("columnAutoWidth");
    if (i = i || this.getTableElement(), i && i.length && t) {
      l = 0, a = i.children("colgroup").children("col"), bh(a, "auto"), n = n || this.getColumns(null, i);
      for (var d = 0; d < n.length; d++) {
        if (u && !r && (o = n[d].width, o && !n[d].command)) {
          o = n[d].visibleWidth || o, o = du(o), s = du(n[d].minWidth || o);
          for (var c = c || i.children().children(".dx-row").not("." + tp), h = 0; h < c.length; h++) {
            var p = c[h], f = void 0, v = this.getVisibleColumnIndex(d, h);
            p.classList.contains(ep) ? f = p.querySelector("td[aria-colindex='".concat(v + 1, "']:not(.").concat(HN, ")")) : f = p.cells[v], f && (Fx(f, n[d], o), f.style.minWidth = s);
          }
        }
        if (n[d].colspan) {
          l += n[d].colspan;
          continue;
        }
        o = t[l], o === "adaptiveHidden" && (o = kx), typeof o == "number" && (o = o.toFixed(3) + "px"), bh(a.eq(l), x(o) ? o : "auto"), l++;
      }
    }
  },
  getCellElements: function(e) {
    return this._getCellElementsCore(e);
  },
  _getCellElementsCore: function(e) {
    var t = this._getRowElements().eq(e);
    return t.children();
  },
  _getCellElement: function(e, t) {
    var i, n = this.getCellElements(e), r = this._getVisibleColumnIndex(n, e, t);
    if (n.length && r >= 0 && (i = n.eq(r)), i && i.length)
      return i;
  },
  _getRowElement: function(e) {
    var t = this, i = g(), n = t.getTableElements();
    if (B(n, function(r, a) {
      i = i.add(t._getRowElements(g(a)).eq(e));
    }), i.length)
      return i;
  },
  getCellElement: function(e, t) {
    return Ie(this._getCellElement(e, t));
  },
  getRowElement: function(e) {
    var t = this._getRowElement(e), i = [];
    if (t && !Ie(t).get)
      for (var n = 0; n < t.length; n++)
        i.push(t[n]);
    else
      i = t;
    return i;
  },
  _getVisibleColumnIndex: function(e, t, i) {
    if (Te(i)) {
      var n = this._columnsController.columnOption(i, "index");
      return this._columnsController.getVisibleIndex(n);
    }
    return i;
  },
  getColumnElements: function() {
  },
  getColumns: function(e) {
    return this._columnsController.getVisibleColumns(e);
  },
  getCell: function(e, t, i) {
    var n = t || this._getRowElements(), r;
    if (n.length > 0 && e.rowIndex >= 0 && (this.option("scrolling.mode") !== "virtual" && this.option("scrolling.rowRenderingMode") !== "virtual" && (e.rowIndex = e.rowIndex < n.length ? e.rowIndex : n.length - 1), r = i || this.getCellElements(e.rowIndex), r && r.length > 0))
      return r.eq(r.length > e.columnIndex ? e.columnIndex : r.length - 1);
  },
  getRowsCount: function() {
    var e = this.getTableElement();
    return e && e.length === 1 ? e[0].rows.length : 0;
  },
  _getRowElementsCore: function(e) {
    if (e = e || this.getTableElement(), e) {
      var t = this.option().rowTemplate || this.option("dataRowTemplate"), i = t && e.find("> tbody." + as);
      return i && i.length ? i : e.find("> tbody > ." + as + ", > ." + as);
    }
    return g();
  },
  _getRowElements: function(e) {
    return this._getRowElementsCore(e);
  },
  getRowIndex: function(e) {
    return this._getRowElements().index(e);
  },
  getBoundingRect: function() {
  },
  getName: function() {
  },
  setScrollerSpacing: function(e) {
    var t = this.element(), i = this.option("rtlEnabled");
    t && t.css({
      paddingLeft: i ? e : "",
      paddingRight: i ? "" : e
    });
  },
  isScrollbarVisible: function(e) {
    var t = this.element(), i = this._tableElement;
    return t && i ? e ? Ge(i) - Ae(t) > 0 : Ne(i) - Fe(t) > 0 : !1;
  },
  dispose: function() {
    Re() && ke().clearTimeout(this._templateTimeout);
  }
}, Rl = at.View.inherit(FN).inherit(XN), wg = "dx-state-focused", YN = "dx-cell-focus-disabled", ZN = ".dx-row-focused", fT = ".dx-datagrid-rowsview .dx-row", Px = "".concat(fT, " > td"), gT = ".dx-treelist-rowsview .dx-row", Mx = "".concat(gT, " > td"), Lx = {
  groupPanel: [".dx-datagrid-group-panel .dx-group-panel-item[tabindex]"],
  columnHeaders: [".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action", ".dx-treelist-headers .dx-header-row > td.dx-treelist-action"],
  filterRow: [".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input", ".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input"],
  rowsView: ["".concat(ZN), "".concat(fT, "[tabindex]"), "".concat(Px, "[tabindex]"), "".concat(Px), "".concat(gT, "[tabindex]"), "".concat(Mx, "[tabindex]"), "".concat(Mx)],
  footer: [".dx-datagrid-total-footer .dx-datagrid-summary-item", ".dx-treelist-total-footer .dx-treelist-summary-item"],
  filterPanel: [".dx-datagrid-filter-panel .dx-icon-filter", ".dx-treelist-filter-panel .dx-icon-filter"],
  pager: [".dx-datagrid-pager [tabindex]", ".dx-treelist-pager [tabindex]"]
}, np = !1, $d = !1, po = null;
function QN(e, t, i, n, r, a) {
  var o = e$(t, i.originalEvent, a);
  if (!o) {
    var s = ht(i);
    s === "enter" || s === "space" ? (_T(i.target, t), n && n({
      event: i
    })) : s === "tab" ? r.addClass(wg) : lv(e, t, i);
  }
}
function _T(e, t) {
  var i = g(e), n = i.attr("aria-label"), r = vT(n, t.element()), a = r.index(i);
  po = T({}, {
    ariaLabel: n,
    index: a
  }, {
    viewInstance: t
  });
}
function vT(e, t) {
  var i = g(t), n;
  return e ? n = i.find('[aria-label="'.concat(e, '"][tabindex]')) : n = i.find("[tabindex]"), n;
}
function JN(e, t) {
  var i = (t == null ? void 0 : t.getRootNode()) || ee.getDocument();
  for (var n in e) {
    var r = e[n], a = g(i).find(r).first();
    if (a.length)
      return a;
  }
}
function e$(e, t, i) {
  var n = {
    event: t,
    handled: !1
  };
  return i ? i(n) : e._createActionByOption("onKeyDown")(n), n.handled;
}
function mT() {
  $d = ee.getDocument().visibilityState === "visible";
}
function t$() {
  w.on(ee.getDocument(), "visibilitychange", mT);
}
function i$() {
  w.off(ee.getDocument(), "visibilitychange", mT);
}
function n$(e) {
  $d = !0, e.focus(), $d = !1;
}
function CT(e, t, i, n, r, a) {
  if (t.option("useLegacyKeyboardNavigation"))
    return $;
  var o = () => g(t.element()), s = (d) => QN(e, t, d, r, o(), a), l = () => {
    np = !0, o().removeClass(wg);
  }, u = () => {
    var d = !np && !$d;
    d && o().addClass(wg), np = !1;
  };
  return w.on(i, "keydown", n, s), w.on(i, "mousedown", n, l), w.on(i, "focusin", n, u), () => {
    w.off(i, "keydown", n, s), w.off(i, "mousedown", n, l), w.off(i, "focusin", n, u);
  };
}
function sv(e) {
  if (!e.option("useLegacyKeyboardNavigation") && po) {
    var t = po.viewInstance;
    if (t) {
      var i = vT(po.ariaLabel, t.element()), n = i.eq(po.index);
      po = null, w.trigger(n, "focus");
    }
  }
}
function lv(e, t, i) {
  var n = ht(i);
  if (i.ctrlKey && (n === "upArrow" || n === "downArrow"))
    for (var r = Object.keys(Lx), a = r.indexOf(e); a >= 0 && a < r.length; ) {
      a = n === "upArrow" ? --a : ++a;
      var o = r[a], s = Lx[o], l = JN(s, i.target);
      if (l && l.length) {
        l.attr("tabindex", t.option("tabindex") || 0), w.trigger(l, "focus"), l.removeClass(YN);
        break;
      }
    }
}
function r$(e, t) {
  e.option("useLegacyKeyboardnavigation") || t.attr("tabindex", e.option("tabindex") || 0);
}
const $s = function(e, t, i, n, r) {
  const a = t.getController("keyboardNavigation");
  t.option("useLegacyKeyboardNavigation") || a && !a.isKeyboardEnabled() || (t.createAction("onKeyDown"), CT(e, t, i, n, r, (o) => {
    t.executeAction("onKeyDown", o);
  }));
};
var rp = "text-content", a$ = "headers", o$ = "nowrap", s$ = ".dx-row", Vx = "dx-header-row", l$ = "dx-column-lines", u$ = "context-menu-sort-asc", d$ = "context-menu-sort-desc", c$ = "context-menu-sort-none", h$ = "dx-cell-focus-disabled", ap = "dx-visibility-hidden", Nx = "dx-text-content-alignment-", p$ = "dx-sort-indicator", f$ = "dx-sort-index-indicator", g$ = ".dx-header-filter", _$ = "dx-header-filter-indicator", v$ = "dx-header-multi-row", xT = {
  defaultOptions: function() {
    return {
      showColumnHeaders: !0,
      cellHintEnabled: !0
    };
  },
  views: {
    columnHeadersView: Rl.inherit(function() {
      var e = function(n, r, a) {
        var o = g("<div>").addClass(n.addWidgetPrefix(rp));
        n.setAria("role", "presentation", o), t(n, r, a.column, o);
        var s = n.option("showColumnLines"), l = n.getController("columns").getHeaderContentAlignment(a.column.alignment);
        return o[s || l === "right" ? "appendTo" : "prependTo"](r);
      };
      function t(n, r, a, o) {
        var s = n._getIndicatorElements(r, !0), l = n._getIndicatorElements(r), u = s && s.length, d = n._getColumnAlignment(a.alignment), c = ".".concat(n._getIndicatorClassName("sort")), h = ".".concat(n._getIndicatorClassName("sortIndex")), p = l.filter(c), f = l.children().filter(h);
        o = o || r.children("." + n.addWidgetPrefix(rp)), o.toggleClass(Nx + d, u > 0).toggleClass(Nx + (d === "left" ? "right" : "left"), u > 0 && a.alignment === "center").toggleClass(p$, !!p.length).toggleClass(f$, !!f.length).toggleClass(_$, !!l.filter("." + n._getIndicatorClassName("headerFilter")).length);
      }
      var i = {
        _createTable: function() {
          var n = this.callBase.apply(this, arguments);
          return w.on(n, "mousedown selectstart", this.createAction(function(r) {
            var a = r.event;
            a.shiftKey && a.preventDefault();
          })), n;
        },
        _isLegacyKeyboardNavigation() {
          return this.option("useLegacyKeyboardNavigation");
        },
        _getDefaultTemplate: function(n) {
          var r = this;
          return function(a, o) {
            var s = n.command ? a : e(r, a, o), l = n.command !== "expand" && n.caption;
            l ? s.text(l) : n.command && a.html("&nbsp;");
          };
        },
        _getHeaderTemplate: function(n) {
          return n.headerCellTemplate || {
            allowRenderToDetachedContainer: !0,
            render: this._getDefaultTemplate(n)
          };
        },
        _processTemplate: function(n, r) {
          var a = this, o, s = r.column, l = a.callBase(n);
          return r.rowType === "header" && l && s.headerCellTemplate && !s.command ? o = {
            render: function(u) {
              var d = e(a, u.container, u.model);
              l.render(T({}, u, {
                container: d
              }));
            }
          } : o = l, o;
        },
        _handleDataChanged: function(n) {
          n.changeType === "refresh" && (this._isGroupingChanged || this._requireReady) && (this._isGroupingChanged = !1, this.render());
        },
        _renderCell: function(n, r) {
          var a = this.callBase(n, r);
          return r.row.rowType === "header" && (a.addClass(h$), this._isLegacyKeyboardNavigation() || r.column && !r.column.type && a.attr("tabindex", this.option("tabindex") || 0)), a;
        },
        _setCellAriaAttributes: function(n, r) {
          this.callBase(n, r), r.rowType === "header" && (this.setAria("role", "columnheader", n), r.column && !r.column.command && !r.column.isBand && (n.attr("id", r.column.headerId), this.setAria("label", q.format("dxDataGrid-ariaColumn") + " " + r.column.caption, n)));
        },
        _createRow: function(n) {
          var r = this.callBase.apply(this, arguments);
          return r.toggleClass(l$, this.option("showColumnLines")), n.rowType === "header" && (r.addClass(Vx), this._isLegacyKeyboardNavigation() || $s("columnHeaders", this, r, "td", this._handleActionKeyDown.bind(this))), r;
        },
        _handleActionKeyDown: function(n) {
          var r = n.event, a = g(r.target);
          if (this._lastActionElement = r.target, a.is(g$)) {
            var o = this.getController("headerFilter"), s = a.closest("td"), l = this.getColumnIndexByElement(s);
            l >= 0 && o.showHeaderFilterMenu(l, !1);
          } else {
            var u = a.closest(s$);
            this._processHeaderAction(r, u);
          }
          r.preventDefault();
        },
        _renderCore: function() {
          var n = this, r = n.element(), a = {};
          if (!(n._tableElement && !n._dataController.isLoaded() && !n._hasRowElements)) {
            r.addClass(n.addWidgetPrefix(a$)).toggleClass(n.addWidgetPrefix(o$), !n.option("wordWrapEnabled")).empty(), n.setAria("role", "presentation", r);
            var o = n._updateContent(n._renderTable({
              change: a
            }), a);
            return n.getRowCount() > 1 && r.addClass(v$), n.callBase.apply(n, arguments), o;
          }
        },
        _renderRows: function() {
          var n = this;
          (n._dataController.isLoaded() || n._hasRowElements) && (n.callBase.apply(n, arguments), n._hasRowElements = !0);
        },
        _getRowVisibleColumns: function(n) {
          return this._columnsController.getVisibleColumns(n);
        },
        _renderRow: function(n, r) {
          r.columns = this._getRowVisibleColumns(r.row.rowIndex), this.callBase(n, r);
        },
        _createCell: function(n) {
          var r = n.column, a = this.callBase.apply(this, arguments);
          return r.rowspan > 1 && n.rowType === "header" && a.attr("rowSpan", r.rowspan), a;
        },
        _getRows: function() {
          var n = [], r = this.getRowCount();
          if (this.option("showColumnHeaders"))
            for (var a = 0; a < r; a++)
              n.push({
                rowType: "header",
                rowIndex: a
              });
          return n;
        },
        _getCellTemplate: function(n) {
          if (n.rowType === "header")
            return this._getHeaderTemplate(n.column);
        },
        _columnOptionChanged: function(n) {
          var r = n.changeTypes, a = n.optionNames;
          if (r.grouping || r.groupExpanding) {
            r.grouping && (this._isGroupingChanged = !0);
            return;
          }
          this.callBase(n), (a.width || a.visible) && this.resizeCompleted.fire();
        },
        _isElementVisible: function(n) {
          return n && n.visible;
        },
        _alignCaptionByCenter: function(n) {
          var r = this._getIndicatorContainer(n, !0);
          r && r.length && (r.filter("." + ap).remove(), r = this._getIndicatorContainer(n), r.clone().addClass(ap).css("float", "").insertBefore(n.children("." + this.addWidgetPrefix(rp))));
        },
        _updateCell: function(n, r) {
          r.rowType === "header" && r.column.alignment === "center" && this._alignCaptionByCenter(n), this.callBase.apply(this, arguments);
        },
        _updateIndicator: function(n, r, a) {
          var o = this.callBase.apply(this, arguments);
          return r.alignment === "center" && this._alignCaptionByCenter(n), t(this, n, r), o;
        },
        _getIndicatorContainer: function(n, r) {
          var a = this.callBase(n);
          return r ? a : a.filter(":not(." + ap + ")");
        },
        _isSortableElement: function() {
          return !0;
        },
        getHeadersRowHeight: function() {
          var n = this.getTableElement(), r = n && n.find("." + Vx);
          return r && r.toArray().reduce(function(a, o) {
            return a + Fe(o);
          }, 0) || 0;
        },
        getHeaderElement: function(n) {
          var r = this.getColumnElements();
          return r && r.eq(n);
        },
        getColumnElements: function(n, r) {
          var a = this, o, s = a._columnsController, l = a.getRowCount();
          if (a.option("showColumnHeaders")) {
            if (l > 1 && (!x(n) || x(r))) {
              var u = [], d = x(r) ? s.getChildrenByBandColumn(r, !0) : s.getVisibleColumns();
              return B(d, function(c, h) {
                var p = x(n) ? n : s.getRowIndex(h.index);
                o = a._getCellElement(p, s.getVisibleIndex(h.index, p)), o && u.push(o.get(0));
              }), g(u);
            } else if (!n || n < l)
              return a.getCellElements(n || 0);
          }
        },
        getColumnIndexByElement: function(n) {
          var r = this.getCellIndex(n), a = n.closest(".dx-row"), o = a[0].rowIndex, s = this.getColumns(o)[r];
          return s ? s.index : -1;
        },
        getVisibleColumnIndex: function(n, r) {
          var a = this.getColumns()[n];
          return a ? this._columnsController.getVisibleIndex(a.index, r) : -1;
        },
        getColumnWidths: function() {
          var n = this.getColumnElements();
          return n && n.length ? this._getWidths(n) : this.callBase.apply(this, arguments);
        },
        allowDragging: function(n, r, a) {
          var o, s = 0, l = n && this._columnsController.getRowIndex(n.index), u = this.getColumns(l === 0 ? 0 : null), d = (n == null ? void 0 : n.allowHiding) && u.length > 1, c = function(p) {
            return p.allowReordering || p.allowGrouping || p.allowHiding;
          };
          for (o = 0; o < u.length; o++)
            c(u[o]) && s++;
          if (s <= 1 && !d)
            return !1;
          if (!a)
            return (this.option("allowColumnReordering") || this._columnsController.isColumnOptionUsed("allowReordering")) && n && n.allowReordering;
          for (o = 0; o < a.length; o++) {
            var h = a[o];
            if (h && h.allowDragging(n, r))
              return !0;
          }
          return !1;
        },
        getBoundingRect: function() {
          var n = this.getColumnElements();
          if (n && n.length) {
            var r = this.getTableElement().offset();
            return {
              top: r.top
            };
          }
          return null;
        },
        getName: function() {
          return "headers";
        },
        getColumnCount: function() {
          var n = this.getColumnElements();
          return n ? n.length : 0;
        },
        isVisible: function() {
          return this.option("showColumnHeaders");
        },
        optionChanged: function(n) {
          switch (n.name) {
            case "showColumnHeaders":
            case "wordWrapEnabled":
            case "showColumnLines":
              this._invalidate(!0, !0), n.handled = !0;
              break;
            default:
              this.callBase(n);
          }
        },
        getHeight: function() {
          return this.getElementHeight();
        },
        getContextMenuItems: function(n) {
          var r = this, a = n.column;
          if (n.row && (n.row.rowType === "header" || n.row.rowType === "detailAdaptive")) {
            var o = r.option("sorting");
            if (o && o.mode !== "none" && a && a.allowSorting) {
              var s = function(l) {
                setTimeout(function() {
                  r._columnsController.changeSortOrder(a.index, l.itemData.value);
                });
              };
              return [{
                text: o.ascendingText,
                value: "asc",
                disabled: a.sortOrder === "asc",
                icon: u$,
                onItemClick: s
              }, {
                text: o.descendingText,
                value: "desc",
                disabled: a.sortOrder === "desc",
                icon: d$,
                onItemClick: s
              }, {
                text: o.clearText,
                value: "none",
                disabled: !a.sortOrder,
                icon: c$,
                onItemClick: s
              }];
            }
          }
        },
        getRowCount: function() {
          return this._columnsController && this._columnsController.getRowCount();
        },
        setRowsOpacity: function(n, r, a) {
          var o = this, s, l, u = o.getRowCount(), d = o._columnsController.getColumns(), c = d && d[n], h = c && c.isBand && c.index, p = function(f, v) {
            v.ownerBand === h && (l.eq(f).css({
              opacity: r
            }), v.isBand && o.setRowsOpacity(v.index, r, s + 1));
          };
          if (x(h))
            for (a = a || 0, s = a; s < u; s++)
              l = o.getCellElements(s), B(o.getColumns(s), p);
        }
      };
      return i;
    }())
  }
};
xT.views.columnHeadersView;
xe.registerModule("columnHeaders", xT);
var yT = "number", bT = "yyyy/MM/dd", m$ = "yyyy/MM/dd HH:mm:ss", ST = /^(\d{4,})(-)?(\d{2})(-)?(\d{2})(?:T(\d{2})(:)?(\d{2})?(:)?(\d{2}(?:\.(\d{1,3})\d*)?)?)?(Z|([+-])(\d{2})(:)?(\d{2})?)?$/, ET = /^(\d{2}):(\d{2})(:(\d{2}))?$/, $x = ["", "yyyy", "", "MM", "", "dd", "THH", "", "mm", "", "ss", ".SSS"], C$ = /^(\d{4})\/(\d{2})\/(\d{2})$/, x$ = 3, wT = function(e, t) {
  var i;
  return Te(e) && !t && (i = b$(e)), i || y$(e);
};
function Jt(e) {
  return +e || 0;
}
function y$(e) {
  var t = IT(e) === bT, i = !Qt(e) && Date.parse(e);
  if (!i && t) {
    var n = e.match(C$);
    if (n) {
      var r = new Date(Jt(n[1]), Jt(n[2]), Jt(n[3]));
      return r.setFullYear(Jt(n[1])), r.setMonth(Jt(n[2]) - 1), r.setDate(Jt(n[3])), r;
    }
  }
  return rt(i) ? new Date(i) : e;
}
function b$(e) {
  var t = e.match(ST);
  if (!t)
    return t = e.match(ET), t ? new Date(0, 0, 0, Jt(t[1]), Jt(t[2]), Jt(t[4])) : void 0;
  var i = Jt(t[1]), n = --t[3], r = t[5], a = 0, o = 0, s = (h) => (i < 100 && h.setFullYear(i), h);
  a = Jt(t[14]), o = Jt(t[16]), t[13] === "-" && (a = -a, o = -o);
  var l = Jt(t[6]) - a, u = Jt(t[8]) - o, d = Jt(t[10]), c = function(h) {
    return h = h || "", Jt(h) * Math.pow(10, x$ - h.length);
  }(t[11]);
  return t[12] ? s(new Date(Date.UTC(i, n, r, l, u, d, c))) : s(new Date(i, n, r, l, u, d, c));
}
var S$ = function(e, t) {
  var i = e.match(ST), n = "";
  if (!i)
    return i = e.match(ET), i ? i[3] ? "HH:mm:ss" : "HH:mm" : void 0;
  for (var r = 1; r < $x.length; r++)
    i[r] && (n += $x[r] || i[r]);
  return i[12] === "Z" && (n += "'Z'"), i[14] && (i[15] ? n += "xxx" : i[16] ? n += "xx" : n += "x"), n;
}, E$ = function(e) {
  return typeof e == "number" ? new Date(e) : wT(e, !st().forceIsoDateParsing);
}, w$ = function(e, t) {
  return t ? Qt(e) ? t === yT ? e && e.valueOf ? e.valueOf() : null : TI(t, Os)(e) : null : e;
}, IT = function(e) {
  if (typeof e == "number")
    return yT;
  if (Te(e)) {
    var t;
    return st().forceIsoDateParsing && (t = S$(e)), t || (e.indexOf(":") >= 0 ? m$ : bT);
  } else if (e)
    return null;
};
const Dt = {
  dateParser: wT,
  deserializeDate: E$,
  serializeDate: w$,
  getDateSerializationFormat: IT
};
var TT = ["filterValues", "filterType", "fixed", "fixedPosition"], cu = ["visibleIndex", "dataField", "name", "dataType", "width", "visible", "sortOrder", "lastSortOrder", "sortIndex", "groupIndex", "filterValue", "bufferedFilterValue", "selectedFilterOperation", "bufferedSelectedFilterOperation", "added"].concat(TT), I$ = {
  visibleWidth: !0,
  bestFitWidth: !0,
  bufferedFilterValue: !0
}, T$ = "dx-command-expand", Hx = Number.MAX_SAFE_INTEGER || 9007199254740991, rr = "groupExpand", op = /columns\[(\d+)\]\.?/gi, D$ = 1, zx = {
  defaultOptions: function() {
    return {
      commonColumnSettings: {
        allowFiltering: !0,
        allowHiding: !0,
        allowSorting: !0,
        allowEditing: !0,
        encodeHtml: !0,
        trueText: q.format("dxDataGrid-trueText"),
        falseText: q.format("dxDataGrid-falseText")
      },
      allowColumnReordering: !1,
      allowColumnResizing: !1,
      columnResizingMode: "nextColumn",
      columnMinWidth: void 0,
      columnWidth: void 0,
      adaptColumnWidthByRatio: !0,
      columns: void 0,
      regenerateColumnsByVisibleItems: !1,
      customizeColumns: null,
      dateSerializationFormat: void 0
    };
  },
  controllers: {
    columns: at.Controller.inherit(function() {
      var e = {
        visible: !0,
        showInColumnChooser: !0
      }, t = {
        number: ["=", "<>", "<", ">", "<=", ">=", "between"],
        string: ["contains", "notcontains", "startswith", "endswith", "=", "<>"],
        date: ["=", "<>", "<", ">", "<=", ">=", "between"],
        datetime: ["=", "<>", "<", ">", "<=", ">=", "between"]
      }, i = {
        visibleIndex: !0,
        groupIndex: !0,
        grouped: !0,
        sortIndex: !0,
        sortOrder: !0
      }, n = function(y) {
        y.filterOperations = y.defaultFilterOperations;
      }, r = function(y, I, D, M) {
        var W = {};
        if (I) {
          Te(I) && (I = {
            dataField: I
          }), y.setName(I);
          var L = {};
          if (I.command)
            L = Pi(W, I);
          else {
            W = y.getCommonSettings(I), D && D.name && D.dataField && (I = T({}, I, {
              dataField: D.dataField
            }));
            var G = y._createCalculatedColumnOptions(I, M);
            I.type || (L = {
              headerId: "dx-col-".concat(D$++)
            }), L = Pi(L, e), Pi(L, W), Pi(L, G), Pi(L, I), Pi(L, {
              selector: null
            });
          }
          return I.filterOperations === I.defaultFilterOperations && n(L), L;
        }
      }, a = function y(I, D, M) {
        var W = [];
        return D && B(D, function(L, G) {
          var le = I._columnsUserState && b(G, I._columnsUserState[L]) && I._columnsUserState[L], de = r(I, G, le, M);
          de && (M && (de.ownerBand = M), W.push(de), de.columns && (W = W.concat(y(I, de.columns, de)), delete de.columns, de.hasColumns = !0));
        }), W;
      }, o = function(y, I) {
        for (var D = [], M = I[y]; M; )
          D.unshift(M), y = M.index, M = I[y];
        return D;
      }, s = function(y, I, D) {
        var M = [], W = I[y];
        if (W)
          for (var L = 0; L < W.length; L++) {
            var G = W[L];
            (!x(G.groupIndex) || G.showWhenGrouped) && (M.push(G), D && G.isBand && (M = M.concat(s(G.index, I, D))));
          }
        return M;
      }, l = function(y, I) {
        var D = [], M, W = y.getBandColumnsCache(), L = function(le) {
          return le.ownerBand === I.ownerBand;
        };
        if (W.isPlain) {
          var G = y._columns.indexOf(I);
          G >= 0 && (D = ["columns[".concat(G, "]")]);
        } else
          for (M = y._columns.filter(L); M.length && M.indexOf(I) !== -1; )
            D.unshift("columns[".concat(M.indexOf(I), "]")), I = W.columnParentByIndex[I.index], M = I ? y._columns.filter(L) : [];
        return D.join(".");
      }, u = function y(I, D) {
        var M = 0, W = I.getChildrenByBandColumn(D, !0);
        return B(W, function(L, G) {
          G.isBand ? (G.colspan = G.colspan || y(I, G.index), M += G.colspan || 1) : M += 1;
        }), M;
      }, d = function(y) {
        var I = Ei(y);
        return I !== "string" && I !== "boolean" && I !== "number" && I !== "date" && I !== "object" && (I = void 0), I;
      }, c = function(y, I) {
        switch (y) {
          case "date":
          case "datetime":
            return Dt.getDateSerializationFormat(I);
          case "number":
            if (Te(I))
              return "string";
            if (rt(I))
              return null;
        }
      }, h = function(y, I) {
        y.deserializeValue || (ae.isDateType(I) && (y.deserializeValue = function(D) {
          return Dt.deserializeDate(D);
        }, y.serializeValue = function(D) {
          return Te(D) ? D : Dt.serializeDate(D, this.serializationFormat);
        }), I === "number" && (y.deserializeValue = function(D) {
          var M = parseFloat(D);
          return isNaN(M) ? D : M;
        }, y.serializeValue = function(D, M) {
          return M === "filter" ? D : x(D) && this.serializationFormat === "string" ? D.toString() : D;
        }));
      }, p = function(y) {
        return y.value === !0 ? this.trueText || "true" : y.value === !1 ? this.falseText || "false" : y.valueText || "";
      }, f = function(y) {
        if (y === "boolean")
          return p;
      }, v = function(y) {
        B(y._columns, function(I, D) {
          D.index = I;
        }), B(y._columns, function(I, D) {
          De(D.ownerBand) && (D.ownerBand = D.ownerBand.index);
        }), B(y._commandColumns, function(I, D) {
          D.index = -(I + 1);
        });
      }, m = function(y, I) {
        Is(y._columns, "groupIndex", I, function(D) {
          var M = D.grouped;
          return delete D.grouped, M;
        });
      }, C = function(y, I, D) {
        var M = De(I) ? I.rowIndex : null, W = D === "group" ? y.getGroupColumns() : D === "columnChooser" ? y.getChooserColumns() : y.getVisibleColumns(M), L;
        return I = De(I) ? I.columnIndex : I, L = W[I], L && L.type === rr && (L = y._columns.filter((G) => L.type === G.type)[0] || L), L && x(L.index) ? L.index : -1;
      };
      function b(y, I) {
        return y && I && I.name === (y.name || y.dataField) && (I.dataField === y.dataField || y.name);
      }
      var A = function(y) {
        var I = y._columnsUserState, D = y._ignoreColumnOptionNames || [], M = y._columns, W = {}, L = [], G = !0, le = [], de, me, Ee;
        function S(O, N) {
          if (N)
            for (var ne = 0; ne < cu.length; ne++) {
              var se = cu[ne];
              D.includes(se) || (se === "dataType" ? O[se] = O[se] || N[se] : TT.includes(se) ? se in N && (O[se] = N[se]) : (se === "selectedFilterOperation" && N[se] && (O.defaultSelectedFilterOperation = O[se] || null), O[se] = N[se]));
            }
        }
        function Y(O, N) {
          for (var ne = N.name || N.dataField, se = W[ne] || 0, X = 0; X < O.length; X++)
            if (b(N, O[X]))
              if (se)
                se--;
              else
                return W[ne] = W[ne] || 0, W[ne]++, X;
          return -1;
        }
        if (I) {
          for (Ee = 0; Ee < M.length; Ee++)
            me = Y(I, M[Ee]), G = G && me >= 0, le.push(me);
          for (Ee = 0; Ee < M.length; Ee++)
            de = M[Ee], me = le[Ee], (y._hasUserState || G) && S(de, I[me]), me >= 0 && x(I[me].initialIndex) ? L[me] = de : L.push(de);
          var Q = !1;
          for (Ee = 0; Ee < I.length; Ee++) {
            var F = I[Ee];
            F.added && Y(M, F) < 0 && (de = r(y, F.added), S(de, F), L.push(de), F.added.columns && (Q = !0));
          }
          Q && (v(y), L = a(y, L)), H(y, L);
        }
      }, R = function(y, I) {
        v(y), m(y, I), function(D, M) {
          B(D._columns, function(W, L) {
            x(L.sortIndex) && !P(L.sortOrder) && delete L.sortIndex;
          }), Is(D._columns, "sortIndex", M, function(W) {
            return !x(W.groupIndex) && P(W.sortOrder);
          });
        }(y, I), Ve(y), function(D, M) {
          for (var W, L = [], G = D.getBandColumnsCache(), le = [], de = D._columns.filter((S) => !S.command), me = 0; me < de.length; me++) {
            W = de[me];
            var Ee = o(me, G.columnParentByIndex);
            Ee.length ? le.push(W) : L.push(W);
          }
          Is(le, "visibleIndex", M), Is(L, "visibleIndex", M);
        }(y, I);
      }, k = function(y) {
        y.resetColumnsCache();
      };
      function H(y, I) {
        y._previousColumns = y._columns, y._columns = I, k(y), y.updateColumnDataTypes();
      }
      var K = function(y, I, D, M) {
        var W = y._columnChanges || {
          optionNames: {
            length: 0
          },
          changeTypes: {
            length: 0
          },
          columnIndex: M
        };
        D = D || "all", D = D.split(".")[0];
        var L = W.changeTypes;
        I && !L[I] && (L[I] = !0, L.length++);
        var G = W.optionNames;
        D && !G[D] && (G[D] = !0, G.length++), (M === void 0 || M !== W.columnIndex) && delete W.columnIndex, y._columnChanges = W, k(y);
      }, j = function(y) {
        var I = y.option("onColumnsChanging"), D = y._columnChanges, M = ["dataField", "lookup", "dataType", "columns"];
        y.isInitialized() && !y._updateLockCount && D && (I && (y._updateLockCount++, I(T({
          component: y.component
        }, D)), y._updateLockCount--), y._columnChanges = void 0, W = D.optionNames, W && M.some((L) => W[L]) ? (y._reinitAfterLookupChanges = D == null ? void 0 : D.optionNames.lookup, y.reinit(), y._reinitAfterLookupChanges = void 0) : y.columnsChanged.fire(D));
        var W;
      }, z = function(y, I, D, M) {
        var W = M >= 0;
        if (D >= 0)
          W || (I.lastSortOrder = I.sortOrder);
        else {
          var L = y.option("sorting.mode"), G = I.lastSortOrder;
          if (L === "single") {
            var le = y._columns.some((de) => de !== I && x(de.sortIndex));
            le && (G = void 0);
          }
          I.sortOrder = G;
        }
      }, re = function(y, I) {
        var D = I.value, M = I.optionName, W = I.prevValue, L = I.fullOptionName, G = "".concat(L, ".").concat(M);
        !I$[M] && y._skipProcessingColumnsChange !== G && (y._skipProcessingColumnsChange = G, y.component._notifyOptionChanged(G, D, W), y._skipProcessingColumnsChange = !1);
      }, he = function(y, I, D, M, W) {
        var L = tt(D), G = I.index, le, de, me;
        if (arguments.length === 3)
          return L(I, {
            functionsAsIs: !0
          });
        var Ee = L(I, {
          functionsAsIs: !0
        });
        if (!et(Ee, M)) {
          D === "groupIndex" || D === "calculateGroupValue" ? (de = "grouping", z(y, I, M, Ee)) : D === "sortIndex" || D === "sortOrder" || D === "calculateSortValue" ? de = "sorting" : de = "columns";
          var S = h_(D);
          S(I, M, {
            functionsAsIs: !0
          });
          var Y = l(y, I);
          i[D] && (R(y, I), M = L(I)), (D === "name" || D === "allowEditing") && y._checkColumns(), !x(Ee) && !x(M) && D.indexOf("buffer") !== 0 && (W = !0), W ? k(y) : (!cu.includes(D) && D !== "visibleWidth" && (le = y.option("columns"), me = y.getColumnByPath(Y, le), Te(me) && (me = le[G] = {
            dataField: me
          }), me && b(me, I) && S(me, M, {
            functionsAsIs: !0
          })), K(y, de, D, G)), Y && re(y, {
            fullOptionName: Y,
            optionName: D,
            value: M,
            prevValue: Ee
          });
        }
      };
      function P(y) {
        return y === "asc" || y === "desc";
      }
      var V = function(y, I) {
        if (this.dataField) {
          var D = this.dataField.split("."), M = D.length - 1;
          this.serializeValue && (I = this.serializeValue(I));
          for (var W = 0; W < M; W++) {
            var L = D[W];
            y = y[L] = y[L] || {};
          }
          y[D[M]] = I;
        }
      }, E = (y, I) => !!y._columns.filter((D) => D.type === I.type).length, J = function(y, I) {
        var D = y.option("rtlEnabled");
        return I.command && !E(y, I) || !I.fixedPosition ? D ? "right" : "left" : I.fixedPosition;
      }, Oe = function(y, I, D, M) {
        var W, L = this.getRowCount(), G = y[M] && y[M].rowspan, le = I.filter((de) => de.type === D);
        return y.forEach((de, me) => {
          de.type === D && (W = me, G = y[me + 1] ? y[me + 1].rowspan : L);
        }), G > 1 && (le = wt(le, function(de) {
          return T({}, de, {
            rowspan: G
          });
        })), le.unshift.apply(le, x(W) ? [W, 1] : [M, 0]), y.splice.apply(y, le), G || 1;
      }, pe = function(y, I) {
        for (var D = y ? y.toString() : "0"; D.length < I; )
          D = "0" + D;
        return D;
      }, Ue = (y, I, D, M) => {
        for (var W, L, G = I.slice().map((Q) => T({}, Q)), le = y._isColumnFixing(), de = D.slice().map((Q) => T({
          fixed: le
        }, Q)), me = (Q) => D.reduce((F, O, N) => {
          var ne = M && Q.type === rr ? "expand" : Q.type;
          return O.type === ne || O.command === Q.command ? N : F;
        }, -1), Ee = (Q) => Q.command !== D[L].command, S = 0; S < I.length; S++)
          if (W = I[S], L = W && (W.type || W.command) ? me(W) : -1, L >= 0)
            if (M)
              G[S] = T({
                fixed: le
              }, D[L], W), W.type !== rr && (de = de.filter(Ee));
            else {
              var Y = {
                visibleIndex: W.visibleIndex,
                index: W.index,
                headerId: W.headerId,
                allowFixing: W.groupIndex === 0,
                allowReordering: W.groupIndex === 0,
                groupIndex: W.groupIndex
              };
              G[S] = T({}, W, D[L], W.type === rr && Y);
            }
        return I.length && M && de.length && (G = G.concat(de)), G;
      }, _e = (y, I) => x(I.fixed) || !I.type ? I.fixed : y._isColumnFixing(), Ve = (y) => {
        y._bandColumnsCache = void 0;
      }, ie = (y, I) => {
        var D = Te(I) && I.substr(0, I.indexOf(":")), M;
        if (I !== void 0)
          return D && (I = I.substr(D.length + 1)), D ? M = y.filter((W) => "" + W[D] === I)[0] : ["index", "name", "dataField", "caption"].some((W) => (M = y.filter((L) => L[W] === I)[0], !!M)), M;
      }, te = {
        _getExpandColumnOptions: function() {
          return {
            type: "expand",
            command: "expand",
            width: "auto",
            cssClass: T$,
            allowEditing: !1,
            allowGrouping: !1,
            allowSorting: !1,
            allowResizing: !1,
            allowReordering: !1,
            allowHiding: !1
          };
        },
        _getFirstItems: function(y) {
          var I, D = [];
          return y && y.items().length > 0 && (I = ae.normalizeSortingInfo(y.group()).length, D = function M(W, L) {
            if (!W || !L)
              return W;
            for (var G = 0; G < W.length; G++) {
              var le = M(W[G].items || W[G].collapsedItems, L - 1);
              if (le && le.length)
                return le;
            }
          }(y.items(), I) || []), D;
        },
        _endUpdateCore: function() {
          !this._skipProcessingColumnsChange && j(this);
        },
        init: function(y) {
          var I = this.option("columns");
          this._commandColumns = this._commandColumns || [], this._columns = this._columns || [], this._isColumnsFromOptions = !!I, this._isColumnsFromOptions ? (H(this, I ? a(this, I) : []), A(this)) : H(this, this._columnsUserState ? a(this, this._columnsUserState) : this._columns), function(D) {
            var M = D._getExpandColumnOptions();
            D.addCommandColumn(M);
          }(this), this._dataSourceApplied ? this.applyDataSource(this._dataSource, !0, y) : R(this), this._checkColumns();
        },
        callbackNames: function() {
          return ["columnsChanged"];
        },
        getColumnByPath: function(y, I) {
          var D, M = [];
          return y.replace(op, function(W, L) {
            return M.push(parseInt(L)), "";
          }), M.length && (I ? D = M.reduce(function(W, L) {
            return W && W.columns && W.columns[L];
          }, {
            columns: I
          }) : D = function(W, L) {
            var G, le, de = W.getBandColumnsCache(), me = function(S) {
              var Y = G ? G.index : void 0;
              return S.ownerBand === Y;
            };
            if (de.isPlain)
              G = W._columns[L[0]];
            else {
              le = W._columns.filter(me);
              for (var Ee = 0; Ee < L.length; Ee++)
                G = le[L[Ee]], G && (le = W._columns.filter(me));
            }
            return G;
          }(this, M)), D;
        },
        optionChanged: function(y) {
          var I;
          switch (y.name) {
            case "adaptColumnWidthByRatio":
              y.handled = !0;
              break;
            case "dataSource":
              y.value !== y.previousValue && !this.option("columns") && (!Array.isArray(y.value) || !Array.isArray(y.previousValue)) && (this._columns = []);
              break;
            case "columns":
              I = this._skipProcessingColumnsChange, y.handled = !0, this._skipProcessingColumnsChange || (y.name === y.fullName ? (this._columnsUserState = null, this._ignoreColumnOptionNames = null, this.init()) : (this._columnOptionChanged(y), I = !0)), I && this._updateRequireResize(y);
              break;
            case "commonColumnSettings":
            case "columnAutoWidth":
            case "allowColumnResizing":
            case "allowColumnReordering":
            case "columnFixing":
            case "grouping":
            case "groupPanel":
            case "regenerateColumnsByVisibleItems":
            case "customizeColumns":
            case "columnHidingEnabled":
            case "dateSerializationFormat":
            case "columnResizingMode":
            case "columnMinWidth":
            case "columnWidth":
              y.handled = !0;
              var D = y.fullName === "columnWidth" && ["width"];
              this.reinit(D);
              break;
            case "rtlEnabled":
              this.reinit();
              break;
            default:
              this.callBase(y);
          }
        },
        _columnOptionChanged: function(y) {
          var I = {}, D = this.getColumnByPath(y.fullName), M = y.fullName.replace(op, "");
          D && (M ? I[M] = y.value : I = y.value, this._skipProcessingColumnsChange = y.fullName, this.columnOption(D.index, I), this._skipProcessingColumnsChange = !1);
        },
        _updateRequireResize: function(y) {
          var I = this.component;
          y.fullName.replace(op, "") === "width" && I._updateLockCount && (I._requireResize = !0);
        },
        publicMethods: function() {
          return ["addColumn", "deleteColumn", "columnOption", "columnCount", "clearSorting", "clearGrouping", "getVisibleColumns", "getVisibleColumnIndex"];
        },
        applyDataSource: function(y, I, D) {
          var M = y && y.isLoaded();
          if (this._dataSource = y, !this._dataSourceApplied || this._dataSourceColumnsCount === 0 || I || this.option("regenerateColumnsByVisibleItems"))
            if (M) {
              if (!this._isColumnsFromOptions) {
                var W = function(L, G) {
                  for (var le = L._getFirstItems(G), de, me = {}, Ee = [], S = 0; S < le.length; S++)
                    if (le[S])
                      for (de in le[S])
                        (!ce(le[S][de]) || ii.isWrapped(le[S][de])) && (me[de] = !0);
                  for (de in me)
                    if (de.indexOf("__") !== 0) {
                      var Y = r(L, de);
                      Ee.push(Y);
                    }
                  return Ee;
                }(this, y);
                W.length && (H(this, W), this._dataSourceColumnsCount = this._columns.length, A(this));
              }
              return this.updateColumns(y, I, D);
            } else
              this._dataSourceApplied = !1, R(this);
          else if (M && !this.isAllDataTypesDefined(!0) && this.updateColumnDataTypes(y))
            return K(this, "columns"), j(this), new U().reject().promise();
        },
        reset: function() {
          this._dataSource = null, this._dataSourceApplied = !1, this._dataSourceColumnsCount = void 0, this.reinit();
        },
        resetColumnsCache: function() {
          this._visibleColumns = void 0, this._fixedColumns = void 0, this._rowCount = void 0, Ve(this);
        },
        reinit: function(y) {
          this._columnsUserState = this.getUserState(), this._ignoreColumnOptionNames = y || null, this.init(), y && (this._ignoreColumnOptionNames = null);
        },
        isInitialized: function() {
          return !!this._columns.length || !!this.option("columns");
        },
        isDataSourceApplied: function() {
          return this._dataSourceApplied;
        },
        getCommonSettings: function(y) {
          var I = (!y || !y.type) && this.option("commonColumnSettings") || {}, D = this.option("grouping") || {}, M = this.option("groupPanel") || {};
          return T({
            allowFixing: this.option("columnFixing.enabled"),
            allowResizing: this.option("allowColumnResizing") || void 0,
            allowReordering: this.option("allowColumnReordering"),
            minWidth: this.option("columnMinWidth"),
            width: this.option("columnWidth"),
            autoExpandGroup: D.autoExpandAll,
            allowCollapsing: D.allowCollapsing,
            allowGrouping: M.allowColumnDragging && M.visible || D.contextMenuEnabled
          }, I);
        },
        isColumnOptionUsed: function(y) {
          for (var I = 0; I < this._columns.length; I++)
            if (this._columns[I][y])
              return !0;
        },
        isAllDataTypesDefined: function(y) {
          var I = this._columns;
          if (!I.length)
            return !1;
          for (var D = 0; D < I.length; D++)
            if (!(!I[D].dataField && I[D].calculateCellValue === I[D].defaultCalculateCellValue) && (!I[D].dataType || y && I[D].deserializeValue && I[D].serializationFormat === void 0))
              return !1;
          return !0;
        },
        getColumns: function() {
          return this._columns;
        },
        isBandColumnsUsed: function() {
          return this.getColumns().some(function(y) {
            return y.isBand;
          });
        },
        getGroupColumns: function() {
          var y = [];
          return B(this._columns, function() {
            x(this.groupIndex) && (y[this.groupIndex] = this);
          }), y;
        },
        _shouldReturnVisibleColumns: function() {
          return !0;
        },
        _compileVisibleColumns: function(y) {
          return this._visibleColumns = this._visibleColumns || this._compileVisibleColumnsCore(), y = x(y) ? y : this._visibleColumns.length - 1, this._visibleColumns[y] || [];
        },
        getVisibleColumns: function(y) {
          return this._shouldReturnVisibleColumns() ? this._compileVisibleColumns.apply(this, arguments) : [];
        },
        getFixedColumns: function(y) {
          return this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore(), y = x(y) ? y : this._fixedColumns.length - 1, this._fixedColumns[y] || [];
        },
        getFilteringColumns: function() {
          return this.getColumns().filter((y) => (y.dataField || y.name) && (y.allowFiltering || y.allowHeaderFiltering)).map((y) => {
            var I = T(!0, {}, y);
            return x(I.dataField) || (I.dataField = I.name), I.filterOperations = y.filterOperations !== y.defaultFilterOperations ? I.filterOperations : null, I;
          });
        },
        getColumnIndexOffset: function() {
          return 0;
        },
        _getFixedColumnsCore: function() {
          var y = [], I = this.getRowCount(), D = this._isColumnFixing(), M = {
            command: "transparent"
          }, W = 0, L, G, le;
          if (D)
            for (var de = 0; de <= I; de++) {
              L = 0, le = null, G = null;
              for (var me = this.getVisibleColumns(de, !0), Ee = 0; Ee < me.length; Ee++) {
                var S = me[Ee - 1], Y = me[Ee];
                Y.fixed ? S && S.fixed && J(this, S) !== J(this, Y) ? x(G) || (G = Ee) : le = Y.fixedPosition : (de === 0 && (Y.isBand && Y.colspan ? W += Y.colspan : W++), L++, x(G) || (G = Ee));
              }
              if (de === 0 && (L === 0 || L >= me.length))
                return [];
              x(G) || (G = le === "right" ? 0 : me.length), y[de] = me.slice(0), M.colspan || (M.colspan = W), y[de].splice(G, L, M);
            }
          return y.map((Q) => Q.map((F) => {
            var O = ue({}, F);
            return O.headerId && (O.headerId += "-fixed"), O;
          }));
        },
        _isColumnFixing: function() {
          var y = this.option("columnFixing.enabled");
          return !y && B(this._columns, function(I, D) {
            if (D.fixed)
              return y = !0, !1;
          }), y;
        },
        _getExpandColumnsCore: function() {
          return this.getGroupColumns();
        },
        getExpandColumns: function() {
          var y = this._getExpandColumnsCore(), I, D = y.filter((G) => G.groupIndex === 0)[0], M = D && D.fixed, W = this._isColumnFixing(), L = this.option("rtlEnabled");
          return y.length && (I = this.columnOption("command:expand")), y = wt(y, (G) => T({}, G, {
            visibleWidth: null,
            minWidth: null,
            cellTemplate: x(G.groupIndex) ? null : G.cellTemplate,
            headerCellTemplate: null,
            fixed: !x(G.groupIndex) || !M ? W : !0,
            fixedPosition: L ? "right" : "left"
          }, I, {
            index: G.index,
            type: G.type || rr
          })), y;
        },
        getBandColumnsCache: function() {
          if (!this._bandColumnsCache) {
            var y = this._columns, I = {}, D = {}, M = !0;
            y.forEach(function(W) {
              var L = W.ownerBand, G = De(L) ? L.index : L, le = y[G];
              W.hasColumns && (M = !1), W.colspan && (W.colspan = void 0), W.rowspan && (W.rowspan = void 0), le ? D[W.index] = le : G = -1, I[G] = I[G] || [], I[G].push(W);
            }), this._bandColumnsCache = {
              isPlain: M,
              columnChildrenByIndex: I,
              columnParentByIndex: D
            };
          }
          return this._bandColumnsCache;
        },
        _isColumnVisible: function(y) {
          return y.visible && this.isParentColumnVisible(y.index);
        },
        _compileVisibleColumnsCore: function() {
          var y = this, I, D = [], M = 0, W = 0, L = y.getRowCount(), G = [], le = [], de = 0, me, Ee = y.option("rtlEnabled"), S = y.getBandColumnsCache(), Y = Ue(y, y.getExpandColumns(), y._columns), Q = Ue(y, y._columns, y._commandColumns, !0), F = function(O) {
            var N;
            for (N = 0; O > 1; N++)
              O /= 10;
            return N;
          }(Q.length);
          for (function(O, N, ne) {
            for (var se, X = 0; X < N.length; X++) {
              var fe = N[X];
              (fe.visible || fe.command) && (fe.isBand && (fe.colspan = fe.colspan || u(O, fe.index)), (!fe.isBand || !fe.colspan) && (se = O.getRowCount(), !fe.command && (!x(fe.groupIndex) || fe.showWhenGrouped) && (se -= o(fe.index, ne.columnParentByIndex).length), se > 1 && (fe.rowspan = se)));
            }
          }(y, Q, S), I = 0; I < L; I++)
            D[I] = [], le[I] = [{}], G[I] = [{}, {}, {}];
          return B(Q, function() {
            var O = this.visibleIndex, N, ne = o(this.index, S.columnParentByIndex), se = y._isColumnVisible(this);
            if (se && (!x(this.groupIndex) || this.showWhenGrouped)) {
              var X = ne.length;
              if (O < 0 ? (O = -O, N = le[X]) : (this.fixed = ne.length ? ne[0].fixed : this.fixed, this.fixedPosition = ne.length ? ne[0].fixedPosition : this.fixedPosition, this.fixed ? (me = this.fixedPosition === "right", Ee && (!this.command || E(y, this)) && (me = !me), me ? N = G[X][2] : N = G[X][0]) : N = G[X][1]), ne.length)
                for (O = pe(O, F), I = ne.length - 1; I >= 0; I--)
                  O = pe(ne[I].visibleIndex, F) + O;
              N[O] = N[O] || [], N[O].push(this), de++;
            }
          }), B(D, function(O) {
            Nf(le[O], function(ne, se) {
              D[O].unshift.apply(D[O], se);
            });
            var N = D[O].length;
            B(G[O], function(ne, se) {
              Nf(se, function(X, fe) {
                D[O].push.apply(D[O], fe);
              });
            }), W < O + 1 && (W += Oe.call(y, D[O], Y, "detailExpand", N)), M < O + 1 && (M += Oe.call(y, D[O], Y, rr, N));
          }), D.push(function O(N, ne, se) {
            var X = [];
            return ne = ne || 0, N[ne] && B(N[ne], function(fe, we) {
              (we.ownerBand === se || we.type === rr) && (!we.isBand || !we.colspan ? (!we.command || ne < 1) && X.push(we) : X.push.apply(X, O(N, ne + 1, we.index)));
            }), X;
          }(D)), !de && y._columns.length && D[L].push({
            command: "empty"
          }), D;
        },
        getInvisibleColumns: function(y, I) {
          var D = this, M = [], W;
          return y = y || D._columns, B(y, function(L, G) {
            if (G.ownerBand === I) {
              if (G.isBand) {
                G.visible ? W = D.getInvisibleColumns(D.getChildrenByBandColumn(G.index), G.index) : W = D.getChildrenByBandColumn(G.index), W.length && (M.push(G), M = M.concat(W));
                return;
              }
              G.visible || M.push(G);
            }
          }), M;
        },
        getChooserColumns: function(y) {
          var I = y ? this.getColumns() : this.getInvisibleColumns(), D = I.filter((W) => W.showInColumnChooser), M = this.option("columnChooser.sortOrder");
          return ((W, L) => {
            if (L !== "asc" && L !== "desc")
              return W;
            var G = L === "asc" ? 1 : -1;
            return W.sort(function(le, de) {
              var me = le.caption || "", Ee = de.caption || "";
              return G * me.localeCompare(Ee);
            }), W;
          })(D, M);
        },
        allowMoveColumn: function(y, I, D, M) {
          var W = C(this, y, D), L = this._columns[W];
          return L && (L.allowReordering || L.allowGrouping || L.allowHiding) ? D === M ? D === "columnChooser" ? !1 : (y = De(y) ? y.columnIndex : y, I = De(I) ? I.columnIndex : I, y !== I && y + 1 !== I) : D === "group" && M !== "columnChooser" || M === "group" ? L && L.allowGrouping : D === "columnChooser" || M === "columnChooser" ? L && L.allowHiding : !0 : !1;
        },
        moveColumn: function(y, I, D, M) {
          var W = {}, L, G = C(this, y, D), le = C(this, I, M), de;
          if (G >= 0) {
            var me = this._columns[G];
            if (I = De(I) ? I.columnIndex : I, de = le >= 0 ? this._columns[le].groupIndex : -1, x(me.groupIndex) && D === "group" && (de > me.groupIndex && de--, M !== "group" ? W.groupIndex = void 0 : (L = me.groupIndex, delete me.groupIndex, m(this))), M === "group")
              W.groupIndex = function(Y, Q, F) {
                var O = Y.getGroupColumns(), N;
                if (F >= 0)
                  for (N = 0; N < O.length; N++)
                    O[N].groupIndex >= F && O[N].groupIndex++;
                else
                  for (F = 0, N = 0; N < O.length; N++)
                    F = Math.max(F, O[N].groupIndex + 1);
                return F;
              }(this, 0, de), me.groupIndex = L;
            else if (I >= 0) {
              var Ee = this._columns[le];
              !Ee || me.ownerBand !== Ee.ownerBand || _e(this, me) ^ _e(this, Ee) ? W.visibleIndex = Hx : W.visibleIndex = Ee.visibleIndex;
            }
            var S = M !== "columnChooser";
            me.visible !== S && (W.visible = S), this.columnOption(me.index, W);
          }
        },
        changeSortOrder: function(y, I) {
          var D = {}, M = this.option("sorting"), W = M && M.mode, L = W === "single" || !I, G = W === "single" || W === "multiple", le = this._columns[y];
          G && le && le.allowSorting && (L && !x(le.groupIndex) && B(this._columns, function(de) {
            de !== y && this.sortOrder && (x(this.groupIndex) || delete this.sortOrder, delete this.sortIndex);
          }), P(I) ? le.sortOrder !== I && (D.sortOrder = I) : I === "none" ? le.sortOrder && (D.sortIndex = void 0, D.sortOrder = void 0) : function(de) {
            if (I === "ctrl") {
              if (!("sortOrder" in de && "sortIndex" in de))
                return !1;
              D.sortOrder = void 0, D.sortIndex = void 0;
            } else
              x(de.groupIndex) || x(de.sortIndex) ? D.sortOrder = de.sortOrder === "desc" ? "asc" : "desc" : D.sortOrder = "asc";
            return !0;
          }(le)), this.columnOption(le.index, D);
        },
        getSortDataSourceParameters: function(y) {
          var I = [], D = [];
          return B(this._columns, function() {
            (this.dataField || this.selector || this.calculateCellValue) && x(this.sortIndex) && !x(this.groupIndex) && (I[this.sortIndex] = this);
          }), B(I, function() {
            var M = this && this.sortOrder;
            if (P(M)) {
              var W = {
                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || y && this.selector || this.dataField || this.calculateCellValue,
                desc: this.sortOrder === "desc"
              };
              this.sortingMethod && (W.compare = this.sortingMethod.bind(this)), D.push(W);
            }
          }), D.length > 0 ? D : null;
        },
        getGroupDataSourceParameters: function(y) {
          var I = [];
          return B(this.getGroupColumns(), function() {
            var D = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || y && this.selector || this.dataField || this.calculateCellValue;
            if (D) {
              var M = {
                selector: D,
                desc: this.sortOrder === "desc",
                isExpanded: !!this.autoExpandGroup
              };
              this.sortingMethod && (M.compare = this.sortingMethod.bind(this)), I.push(M);
            }
          }), I.length > 0 ? I : null;
        },
        refresh: function(y) {
          var I = [];
          return B(this._columns, function() {
            var D = this.lookup;
            if (D && !this.calculateDisplayValue) {
              if (y && D.valueMap)
                return;
              D.update && I.push(D.update());
            }
          }), ge.apply(g, I).done(k.bind(null, this));
        },
        _updateColumnOptions: function(y, I) {
          y.selector = y.selector || function(W) {
            return y.calculateCellValue(W);
          }, this._reinitAfterLookupChanges && this._previousColumns ? (y.selector.columnIndex = I, y.selector.originalCallback = this._previousColumns[I].selector.originalCallback) : (y.selector.columnIndex = I, y.selector.originalCallback = y.selector), B(["calculateSortValue", "calculateGroupValue", "calculateDisplayValue"], function(W, L) {
            var G = y[L];
            if (ce(G))
              if (G.originalCallback)
                y[L].context.column = y;
              else {
                var le = {
                  column: y
                };
                y[L] = function(de) {
                  return G.call(le.column, de);
                }, y[L].originalCallback = G, y[L].columnIndex = I, y[L].context = le;
              }
          }), Te(y.calculateDisplayValue) && (y.displayField = y.calculateDisplayValue, y.calculateDisplayValue = tt(y.displayField)), y.calculateDisplayValue && (y.displayValueMap = y.displayValueMap || {}), h(y, y.dataType);
          var D = y.lookup;
          D && h(D, D.dataType);
          var M = D ? D.dataType : y.dataType;
          M && (y.alignment = y.alignment || function(W, L) {
            switch (W) {
              case "number":
                return "right";
              case "boolean":
                return "center";
              default:
                return $r(L);
            }
          }(M, this.option("rtlEnabled")), y.format = y.format || ae.getFormatByDataType(M), y.customizeText = y.customizeText || f(M), y.defaultFilterOperations = y.defaultFilterOperations || !D && t[M] || [], x(y.filterOperations) || n(y), y.defaultFilterOperation = y.filterOperations && y.filterOperations[0] || "=", y.showEditorAlways = x(y.showEditorAlways) ? y.showEditorAlways : M === "boolean" && !y.cellTemplate && !y.lookup);
        },
        updateColumnDataTypes: function(y) {
          var I = this, D = I.option("dateSerializationFormat"), M = I._getFirstItems(y), W = !1;
          return B(I._columns, function(L, G) {
            var le, de, me, Ee, S, Y = G.lookup;
            if (ae.isDateType(G.dataType) && G.serializationFormat === void 0 && (G.serializationFormat = D), Y && ae.isDateType(Y.dataType) && G.serializationFormat === void 0 && (Y.serializationFormat = D), G.calculateCellValue && M.length) {
              if (!G.dataType || Y && !Y.dataType) {
                for (le = 0; le < M.length; le++)
                  de = G.calculateCellValue(M[le]), G.dataType || (S = d(de), me = me || S, me && S && me !== S && (me = "string")), Y && !Y.dataType && (S = d(ae.getDisplayValue(G, de, M[le])), Ee = Ee || S, Ee && S && Ee !== S && (Ee = "string"));
                (me || Ee) && (me && (G.dataType = me), Y && Ee && (Y.dataType = Ee), W = !0);
              }
              if (G.serializationFormat === void 0 || Y && Y.serializationFormat === void 0)
                for (le = 0; le < M.length; le++)
                  de = G.calculateCellValue(M[le], !0), G.serializationFormat === void 0 && (G.serializationFormat = c(G.dataType, de)), Y && Y.serializationFormat === void 0 && (Y.serializationFormat = c(Y.dataType, Y.calculateCellValue(de, !0)));
            }
            I._updateColumnOptions(G, L);
          }), W;
        },
        _customizeColumns: function(y) {
          var I = this.option("customizeColumns");
          if (I) {
            var D = y.some(function(M) {
              return De(M.ownerBand);
            });
            D && R(this), I(y), H(this, a(this, y));
          }
        },
        updateColumns: function(y, I, D) {
          if (I || this.updateSortingGrouping(y), !y || y.isLoaded()) {
            var M = y ? y.sort() || [] : this.getSortDataSourceParameters(), W = y ? y.group() || [] : this.getGroupDataSourceParameters(), L = y == null ? void 0 : y.lastLoadOptions().filter;
            D || this._customizeColumns(this._columns), R(this);
            var G = this._columns;
            return ge(this.refresh(!0)).always(() => {
              this._columns === G && (this._updateChanges(y, {
                sorting: M,
                grouping: W,
                filtering: L
              }), j(this));
            });
          }
        },
        _updateChanges: function(y, I) {
          y && (this.updateColumnDataTypes(y), this._dataSourceApplied = !0), ae.equalSortParameters(I.sorting, this.getSortDataSourceParameters()) || K(this, "sorting"), ae.equalSortParameters(I.grouping, this.getGroupDataSourceParameters()) || K(this, "grouping");
          var D = this.getController("data");
          D && !ae.equalFilterParameters(I.filtering, D.getCombinedFilter()) && K(this, "filtering"), K(this, "columns");
        },
        updateSortingGrouping: function(y, I) {
          var D = this, M, W, L = function(S, Y, Q) {
            B(S, function(F, O) {
              if (delete O[Q], Y)
                for (var N = 0; N < Y.length; N++) {
                  var ne = Y[N].selector, se = Y[N].isExpanded;
                  if (ne === O.dataField || ne === O.name || ne === O.selector || ne === O.calculateCellValue || ne === O.calculateGroupValue || ne === O.calculateDisplayValue) {
                    I ? O.sortOrder = "sortOrder" in O ? O.sortOrder : Y[N].desc ? "desc" : "asc" : O.sortOrder = O.sortOrder || (Y[N].desc ? "desc" : "asc"), se !== void 0 && (O.autoExpandGroup = se), O[Q] = N;
                    break;
                  }
                }
            });
          };
          if (y) {
            M = ae.normalizeSortingInfo(y.sort());
            var G = ae.normalizeSortingInfo(y.group()), le = D.getGroupDataSourceParameters(), de = D.getSortDataSourceParameters(), me = !ae.equalSortParameters(G, le, !0), Ee = !me && !ae.equalSortParameters(G, le);
            D._columns.length || (B(G, function(S, Y) {
              D._columns.push(Y.selector);
            }), B(M, function(S, Y) {
              ce(Y.selector) || D._columns.push(Y.selector);
            }), H(D, a(D, D._columns))), (I || !le && !D._hasUserState) && (me || Ee) && (L(D._columns, G, "groupIndex"), I && (me && K(D, "grouping"), Ee && K(D, "groupExpanding"), W = !0)), (I || !de && !D._hasUserState) && !ae.equalSortParameters(M, de) && (L(D._columns, M, "sortIndex"), I && (K(D, "sorting"), W = !0)), W && j(D);
          }
        },
        updateFilter: function(y, I, D, M) {
          if (!Array.isArray(y))
            return y;
          if (y = T([], y), D = y.columnIndex !== void 0 ? y.columnIndex : D, M = y.filterValue !== void 0 ? y.filterValue : M, Te(y[0]) && y[0] !== "!") {
            var W = this.columnOption(y[0]);
            I ? st().forceIsoDateParsing && W && W.serializeValue && y.length > 1 && (y[y.length - 1] = W.serializeValue(y[y.length - 1], "filter")) : W && W.selector && (y[0] = W.selector, y[0].columnIndex = W.index);
          } else
            ce(y[0]) && (y[0].columnIndex = D, y[0].filterValue = M, y[0].selectedFilterOperation = y.selectedFilterOperation);
          for (var L = 0; L < y.length; L++)
            y[L] = this.updateFilter(y[L], I, D, M);
          return y;
        },
        columnCount: function() {
          return this._columns ? this._columns.length : 0;
        },
        columnOption: function(y, I, D, M) {
          var W = this, L = W._columns.concat(W._commandColumns), G = ie(L, y);
          if (G) {
            if (arguments.length === 1)
              return T({}, G);
            if (Te(I)) {
              if (arguments.length === 2)
                return he(W, G, I);
              he(W, G, I, D, M);
            } else
              De(I) && B(I, function(le, de) {
                he(W, G, le, de, M);
              });
            j(W);
          }
        },
        clearSorting: function() {
          var y = this.columnCount();
          this.beginUpdate();
          for (var I = 0; I < y; I++)
            this.columnOption(I, "sortOrder", void 0), delete ie(this._columns, I).sortOrder;
          this.endUpdate();
        },
        clearGrouping: function() {
          var y = this.columnCount();
          this.beginUpdate();
          for (var I = 0; I < y; I++)
            this.columnOption(I, "groupIndex", void 0);
          this.endUpdate();
        },
        getVisibleIndex: function(y, I) {
          for (var D = this.getVisibleColumns(I), M = D.length - 1; M >= 0; M--)
            if (D[M].index === y)
              return M;
          return -1;
        },
        getVisibleIndexByColumn: function(y, I) {
          var D = this.getVisibleColumns(I), M = D.filter((W) => W.index === y.index && W.command === y.command)[0];
          return D.indexOf(M);
        },
        getVisibleColumnIndex: function(y, I) {
          var D = this.columnOption(y, "index");
          return this.getVisibleIndex(D, I);
        },
        addColumn: function(y) {
          var I = r(this, y), D = this._columns.length;
          this._columns.push(I), I.isBand && (this._columns = a(this, this._columns), I = this._columns[D]), I.added = y, R(this, I), this.updateColumns(this._dataSource), this._checkColumns();
        },
        deleteColumn: function(y) {
          var I = this.columnOption(y);
          if (I && I.index >= 0) {
            if (M = this._columns, M.forEach((W) => {
              x(W.ownerBand) && (W.ownerBand = M[W.ownerBand]);
            }), this._columns.splice(I.index, 1), I.isBand) {
              var D = this.getChildrenByBandColumn(I.index).map((W) => W.index);
              this._columns = this._columns.filter((W) => D.indexOf(W.index) < 0);
            }
            R(this), this.updateColumns(this._dataSource);
          }
          var M;
        },
        addCommandColumn: function(y) {
          var I = this._commandColumns.filter((D) => D.command === y.command)[0];
          I || (I = y, this._commandColumns.push(I));
        },
        getUserState: function() {
          var y = this._columns, I = [], D;
          function M(W, L) {
            y[D][L] !== void 0 && (I[D][L] = y[D][L]);
          }
          for (D = 0; D < y.length; D++)
            I[D] = {}, B(cu, M);
          return I;
        },
        setName: function(y) {
          y.name = y.name || y.dataField || y.type;
        },
        setUserState: function(y) {
          var I = this._dataSource, D = this.option("stateStoring.ignoreColumnOptionNames");
          if (y == null || y.forEach(this.setName), !D) {
            D = [];
            var M = this.getCommonSettings();
            this.option("columnChooser.enabled") || D.push("visible"), this.option("sorting.mode") === "none" && D.push("sortIndex", "sortOrder"), M.allowGrouping || D.push("groupIndex"), M.allowFixing || D.push("fixed", "fixedPosition"), M.allowResizing || D.push("width", "visibleWidth");
            var W = !this.option("filterPanel.visible");
            !this.option("filterRow.visible") && W && D.push("filterValue", "selectedFilterOperation"), !this.option("headerFilter.visible") && W && D.push("filterValues", "filterType");
          }
          this._columnsUserState = y, this._ignoreColumnOptionNames = D, this._hasUserState = !!y, K(this, "filtering"), this.init(!0), I && (I.sort(this.getSortDataSourceParameters()), I.group(this.getGroupDataSourceParameters()));
        },
        _checkColumns: function() {
          var y = {}, I = !1, D = [];
          this._columns.forEach((M) => {
            var W, L = M.name, G = (W = M.columns) === null || W === void 0 ? void 0 : W.length, le = M.allowEditing && (M.dataField || M.setCellValue) && !G;
            L ? (y[L] && D.push('"'.concat(L, '"')), y[L] = !0) : le && (I = !0);
          }), D.length && $e.log("E1059", D.join(", ")), I && $e.log("E1060");
        },
        _createCalculatedColumnOptions: function(y, I) {
          var D = {}, M = y.dataField;
          if ((Array.isArray(y.columns) && y.columns.length || y.isBand) && (D.isBand = !0, M = null), M) {
            if (Te(M)) {
              var W = tt(M);
              D = {
                caption: va(M),
                calculateCellValue: function(L, G) {
                  var le = W(L);
                  return this.deserializeValue && !G ? this.deserializeValue(le) : le;
                },
                setCellValue: V,
                parseValue: function(L) {
                  var G, le;
                  return this.dataType === "number" ? Te(L) && this.format ? G = function(de, me) {
                    var Ee = nt.parse(de);
                    if (rt(Ee)) {
                      var S = nt.format(Ee, me), Y = nt.format(Ee, "decimal");
                      if (S === de || Y === de)
                        return Ee;
                    }
                  }(L.trim(), this.format) : x(L) && rt(L) && (G = Number(L)) : this.dataType === "boolean" ? L === this.trueText ? G = !0 : L === this.falseText && (G = !1) : ae.isDateType(this.dataType) ? (le = Pe.parse(L, this.format), le && (G = le)) : G = L, G;
                }
              };
            }
            D.allowFiltering = !0;
          } else
            D.allowFiltering = !!y.calculateFilterExpression;
          return D.calculateFilterExpression = function() {
            return Fo.defaultCalculateFilterExpression.apply(this, arguments);
          }, D.defaultFilterOperation = "=", D.createFilterExpression = function(L, G) {
            var le;
            return this.calculateFilterExpression && (le = this.calculateFilterExpression.apply(this, arguments)), ce(le) && (le = [le, "=", !0]), le && (le.columnIndex = this.index, le.filterValue = L, le.selectedFilterOperation = G), le;
          }, (!M || !Te(M)) && T(!0, D, {
            allowSorting: !1,
            allowGrouping: !1,
            calculateCellValue: function() {
              return null;
            }
          }), I && (D.allowFixing = !1), y.dataType && (D.userDataType = y.dataType), y.selectedFilterOperation && !("defaultSelectedFilterOperation" in D) && (D.defaultSelectedFilterOperation = y.selectedFilterOperation), y.lookup && (D.lookup = {
            calculateCellValue: function(L, G) {
              return this.valueExpr && (L = this.valueMap && this.valueMap[L]), this.deserializeValue && !G ? this.deserializeValue(L) : L;
            },
            updateValueMap: function() {
              if (this.valueMap = {}, this.items)
                for (var L = tt(this.valueExpr), G = tt(this.displayExpr), le = 0; le < this.items.length; le++) {
                  var de = this.items[le], me = G(de);
                  this.valueMap[L(de)] = me, this.dataType = this.dataType || d(me);
                }
            },
            update: function() {
              var L = this, G = L.dataSource;
              if (G)
                if (ce(G) && !ii.isWrapped(G) && (G = G({})), Me(G) || G instanceof mn || Array.isArray(G)) {
                  if (L.valueExpr) {
                    var le = Uo(G);
                    return le.paginate = !1, G = new Jn(le), G.load().done(function(de) {
                      L.items = de, L.updateValueMap && L.updateValueMap();
                    });
                  }
                } else
                  $e.log("E1016");
              else
                L.updateValueMap && L.updateValueMap();
            }
          }), D.resizedCallbacks = qe(), y.resized && D.resizedCallbacks.add(y.resized.bind(y)), B(D, function(L) {
            if (ce(D[L]) && L.indexOf("default") !== 0) {
              var G = "default" + L.charAt(0).toUpperCase() + L.substr(1);
              D[G] = D[L];
            }
          }), D;
        },
        getRowCount: function() {
          return this._rowCount = this._rowCount || function(y) {
            var I = 1, D = y.getBandColumnsCache(), M = D.columnParentByIndex;
            return y._columns.forEach(function(W) {
              var L = o(W.index, M), G = L.filter(function(le) {
                return !le.visible;
              });
              W.visible && !G.length && (I = Math.max(I, L.length + 1));
            }), I;
          }(this), this._rowCount;
        },
        getRowIndex: function(y, I) {
          var D = this._columns[y], M = this.getBandColumnsCache();
          return D && (I || D.visible && !(D.command || x(D.groupIndex))) ? o(y, M.columnParentByIndex).length : 0;
        },
        getChildrenByBandColumn: function(y, I) {
          var D = this.getBandColumnsCache(), M = s(y, D.columnChildrenByIndex, !I);
          return I ? M.filter(function(W) {
            return W.visible && !W.command;
          }).sort(function(W, L) {
            return W.visibleIndex - L.visibleIndex;
          }) : M;
        },
        isParentBandColumn: function(y, I) {
          var D = !1, M = this._columns[y], W = this.getBandColumnsCache(), L = M && o(y, W.columnParentByIndex);
          return L && B(L, function(G, le) {
            if (le.index === I)
              return D = !0, !1;
          }), D;
        },
        isParentColumnVisible: function(y) {
          var I = !0, D = this.getBandColumnsCache(), M = y >= 0 && o(y, D.columnParentByIndex);
          return M && B(M, function(W, L) {
            return I = I && L.visible, I;
          }), I;
        },
        getColumnId: function(y) {
          return y.command && y.type === rr ? E(this, y) ? "type:" + y.type : "command:" + y.command : y.index;
        },
        getCustomizeTextByDataType: f,
        getHeaderContentAlignment: function(y) {
          var I = this.option("rtlEnabled");
          return I ? y === "left" ? "right" : "left" : y;
        }
      };
      return te;
    }())
  }
};
xe.registerModule("columns", {
  defaultOptions: () => T(!0, {}, zx.defaultOptions(), {
    commonColumnSettings: {
      allowExporting: !0
    }
  }),
  controllers: zx.controllers
});
var A$ = {
  load: () => U().reject(),
  loadSingle: () => U().reject(),
  loadFromStore: () => U().reject(),
  loadNextPage: () => U().reject(),
  loadOptions: $,
  userData: $,
  cancel: $,
  cancelAll: $,
  filter: $,
  addSearchFilter: $,
  group: $,
  paginate: $,
  pageSize: $,
  pageIndex: $,
  resetDataSourcePageIndex: $,
  totalCount: $,
  isLastPage: $,
  isLoading: $,
  isLoaded: $,
  searchValue: $,
  searchOperation: $,
  searchExpr: $,
  select: $,
  key: $,
  keyOf: $,
  store: $,
  items: $,
  applyMapFunction: $,
  getDataSource: $,
  reload: $,
  on: $,
  off: $
};
let O$ = class {
  constructor(t) {
    if (!t)
      return A$;
    this._dataSource = t;
  }
  load() {
    return this._dataSource.load();
  }
  loadSingle(t, i) {
    return arguments.length < 2 && (i = t, t = this.key()), this._dataSource.loadSingle(t, i);
  }
  loadFromStore(t) {
    return this.store().load(t);
  }
  loadNextPage() {
    return this.pageIndex(1 + this.pageIndex()), this.load();
  }
  loadOptions() {
    return this._dataSource.loadOptions();
  }
  userData() {
    return this._dataSource._userData;
  }
  cancel(t) {
    this._dataSource.cancel(t);
  }
  cancelAll() {
    this._dataSource.cancelAll();
  }
  filter(t) {
    return this._dataSource.filter(t);
  }
  addSearchFilter(t) {
    this._dataSource._addSearchFilter(t);
  }
  group(t) {
    return this._dataSource.group(t);
  }
  paginate() {
    return this._dataSource.paginate();
  }
  pageSize() {
    return this._dataSource._pageSize;
  }
  pageIndex(t) {
    return this._dataSource.pageIndex(t);
  }
  resetDataSourcePageIndex() {
    this.pageIndex() && (this.pageIndex(0), this.load());
  }
  totalCount() {
    return this._dataSource.totalCount();
  }
  isLastPage() {
    return this._dataSource.isLastPage() || !this._dataSource._pageSize;
  }
  isLoading() {
    return this._dataSource.isLoading();
  }
  isLoaded() {
    return this._dataSource.isLoaded();
  }
  searchValue(t) {
    return arguments.length ? this._dataSource.searchValue(t) : this._dataSource.searchValue();
  }
  searchOperation(t) {
    return this._dataSource.searchOperation(t);
  }
  searchExpr(t) {
    return arguments.length ? this._dataSource.searchExpr(t) : this._dataSource.searchExpr();
  }
  select() {
    return this._dataSource.select(...arguments);
  }
  key() {
    return this._dataSource.key();
  }
  keyOf(t) {
    return this.store().keyOf(t);
  }
  store() {
    return this._dataSource.store();
  }
  items() {
    return this._dataSource.items();
  }
  applyMapFunction(t) {
    return this._dataSource._applyMapFunction(t);
  }
  getDataSource() {
    return this._dataSource || null;
  }
  reload() {
    return this._dataSource.reload();
  }
  on(t, i) {
    this._dataSource.on(t, i);
  }
  off(t, i) {
    this._dataSource.off(t, i);
  }
};
var Wx = "_dataSourceOptions", Gx = "_dataSourceChangedHandler", Kx = "_dataSourceLoadErrorHandler", Ux = "_dataSourceLoadingChangedHandler", jx = "_dataSourceFromUrlLoadMode", qx = "_getSpecificDataSourceOption", Xx = "_normalizeDataSource", Rc = {
  postCtor: function() {
    this.on("disposing", function() {
      this._disposeDataSource();
    }.bind(this));
  },
  _refreshDataSource: function() {
    this._initDataSource(), this._loadDataSource();
  },
  _initDataSource: function() {
    var e = qx in this ? this[qx]() : this.option("dataSource"), t, i;
    this._disposeDataSource(), e && (e instanceof Jn ? (this._isSharedDataSource = !0, this._dataSource = e) : (t = Wx in this ? this[Wx]() : {}, i = this._dataSourceType ? this._dataSourceType() : Jn, e = Uo(e, {
      fromUrlLoadMode: jx in this && this[jx]()
    }), this._dataSource = new i(T(!0, {}, t, e))), Xx in this && (this._dataSource = this[Xx](this._dataSource)), this._addDataSourceHandlers(), this._initDataController());
  },
  _initDataController: function() {
    var e, t = (e = this.option) === null || e === void 0 ? void 0 : e.call(this, "_dataController"), i = this._dataSource;
    t ? this._dataController = t : this._dataController = new O$(i);
  },
  _addDataSourceHandlers: function() {
    Gx in this && this._addDataSourceChangeHandler(), Kx in this && this._addDataSourceLoadErrorHandler(), Ux in this && this._addDataSourceLoadingChangedHandler(), this._addReadyWatcher();
  },
  _addReadyWatcher: function() {
    this._dataSource.on("loadingChanged", function(e) {
      this._ready && this._ready(!e);
    }.bind(this));
  },
  _addDataSourceChangeHandler: function() {
    var e = this._dataSource;
    this._proxiedDataSourceChangedHandler = function(t) {
      this[Gx](e.items(), t);
    }.bind(this), e.on("changed", this._proxiedDataSourceChangedHandler);
  },
  _addDataSourceLoadErrorHandler: function() {
    this._proxiedDataSourceLoadErrorHandler = this[Kx].bind(this), this._dataSource.on("loadError", this._proxiedDataSourceLoadErrorHandler);
  },
  _addDataSourceLoadingChangedHandler: function() {
    this._proxiedDataSourceLoadingChangedHandler = this[Ux].bind(this), this._dataSource.on("loadingChanged", this._proxiedDataSourceLoadingChangedHandler);
  },
  _loadDataSource: function() {
    var e = this._dataSource;
    e && (e.isLoaded() ? this._proxiedDataSourceChangedHandler && this._proxiedDataSourceChangedHandler() : e.load());
  },
  _loadSingle: function(e, t) {
    return e = e === "this" ? this._dataSource.key() || "this" : e, this._dataSource.loadSingle(e, t);
  },
  _isLastPage: function() {
    return !this._dataSource || this._dataSource.isLastPage() || !this._dataSource._pageSize;
  },
  _isDataSourceLoading: function() {
    return this._dataSource && this._dataSource.isLoading();
  },
  _disposeDataSource: function() {
    this._dataSource && (this._isSharedDataSource ? (delete this._isSharedDataSource, this._proxiedDataSourceChangedHandler && this._dataSource.off("changed", this._proxiedDataSourceChangedHandler), this._proxiedDataSourceLoadErrorHandler && this._dataSource.off("loadError", this._proxiedDataSourceLoadErrorHandler), this._proxiedDataSourceLoadingChangedHandler && this._dataSource.off("loadingChanged", this._proxiedDataSourceLoadingChangedHandler)) : this._dataSource.dispose(), delete this._dataSource, delete this._proxiedDataSourceChangedHandler, delete this._proxiedDataSourceLoadErrorHandler, delete this._proxiedDataSourceLoadingChangedHandler);
  },
  getDataSource: function() {
    return this._dataSource || null;
  }
}, od = function(e, t) {
  var i = t(e);
  if (De(i))
    try {
      return JSON.stringify(i);
    } catch {
      return i;
    }
  return i;
}, R$ = function(e, t, i, n) {
  var r = od(e, n);
  return t[i[r]];
}, B$ = function(e, t) {
  if (e.length !== t.length)
    return !1;
  for (var i = 0; i < t.length; i++)
    if (e[i] !== t[i])
      return !1;
  return !0;
}, DT = function(e, t, i, n) {
  var r = {}, a = {}, o = 0, s = 0, l = [];
  e.forEach(function(b, A) {
    var R = od(b, i);
    r[R] = A;
  }), t.forEach(function(b, A) {
    var R = od(b, i);
    a[R] = A;
  });
  for (var u = Math.max(e.length, t.length), d = 0; d < u + o; d++) {
    var c = t[d], h = d - o + s, p = e[h], f = !c || p && !R$(p, t, a, i);
    if (f)
      p && (l.push({
        type: "remove",
        key: i(p),
        index: d,
        oldItem: p
      }), s++, d--);
    else {
      var v = od(c, i), m = r[v], C = e[m];
      if (!C)
        o++, l.push({
          type: "insert",
          data: c,
          index: d
        });
      else if (m === h)
        n(C, c) || l.push({
          type: "update",
          data: c,
          key: i(c),
          index: d,
          oldItem: C
        });
      else
        return;
    }
  }
  return l;
}, AT = {
  defaultOptions: function() {
    return {
      loadingTimeout: 0,
      dataSource: null,
      cacheEnabled: !0,
      repaintChangesOnly: !1,
      highlightChanges: !1,
      onDataErrorOccurred: null,
      remoteOperations: "auto",
      paging: {
        enabled: !0,
        pageSize: void 0,
        pageIndex: void 0
      }
    };
  },
  controllers: {
    data: at.Controller.inherit(Rc).inherit(function() {
      var e = function(i, n, r) {
        var a = i._dataSource;
        if (a) {
          if (r !== void 0) {
            var o = i._getPagingOptionValue(n);
            if (o !== r) {
              n === "pageSize" && a.pageIndex(0), a[n](r), i._skipProcessingPagingChange = !0, i.option("paging." + n, r), i._skipProcessingPagingChange = !1;
              var s = a.pageIndex();
              return i._isPaging = n === "pageIndex", a[n === "pageIndex" ? "load" : "reload"]().done(() => {
                i._isPaging = !1, i.pageChanged.fire(s);
              });
            }
            return U().resolve().promise();
          }
          return a[n]();
        }
        return 0;
      }, t = {
        init: function() {
          var i = this;
          i._items = [], i._cachedProcessedItems = null, i._columnsController = i.getController("columns"), i._isPaging = !1, i._currentOperationTypes = null, i._dataChangedHandler = (n) => {
            i._currentOperationTypes = this._dataSource.operationTypes(), i._handleDataChanged(n), i._currentOperationTypes = null;
          }, i._columnsChangedHandler = i._handleColumnsChanged.bind(i), i._loadingChangedHandler = i._handleLoadingChanged.bind(i), i._loadErrorHandler = i._handleLoadError.bind(i), i._customizeStoreLoadOptionsHandler = i._handleCustomizeStoreLoadOptions.bind(i), i._changingHandler = i._handleChanging.bind(i), i._dataPushedHandler = i._handleDataPushed.bind(i), i._columnsController.columnsChanged.add(i._columnsChangedHandler), i._isLoading = !1, i._isCustomLoading = !1, i._repaintChangesOnly = void 0, i._changes = [], i.createAction("onDataErrorOccurred"), i.dataErrorOccurred.add(function(n) {
            return i.executeAction("onDataErrorOccurred", {
              error: n
            });
          }), i._refreshDataSource();
        },
        _getPagingOptionValue: function(i) {
          return this._dataSource[i]();
        },
        callbackNames: function() {
          return ["changed", "loadingChanged", "dataErrorOccurred", "pageChanged", "dataSourceChanged", "pushed"];
        },
        callbackFlags: function(i) {
          if (i === "dataErrorOccurred")
            return {
              stopOnFalse: !0
            };
        },
        publicMethods: function() {
          return ["beginCustomLoading", "endCustomLoading", "refresh", "filter", "clearFilter", "getCombinedFilter", "keyOf", "byKey", "getDataByKeys", "pageIndex", "pageSize", "pageCount", "totalCount", "_disposeDataSource", "getKeyByRowIndex", "getRowIndexByKey", "getDataSource", "getVisibleRows", "repaintRows"];
        },
        reset: function() {
          this._columnsController.reset(), this._items = [], this._refreshDataSource();
        },
        _handleDataSourceChange(i) {
          if (i.value === i.previousValue || this.option("columns") && Array.isArray(i.value) && Array.isArray(i.previousValue)) {
            var n = i.value !== i.previousValue;
            if (n) {
              var r = this.store();
              r && (r._array = i.value);
            }
            return this.needToRefreshOnDataSourceChange(i) && this.refresh(this.option("repaintChangesOnly")), !0;
          }
          return !1;
        },
        needToRefreshOnDataSourceChange: function(i) {
          return !0;
        },
        optionChanged: function(i) {
          var n = this, r, a;
          function o() {
            i.handled = !0;
          }
          if (i.name === "dataSource" && i.name === i.fullName && this._handleDataSourceChange(i)) {
            o();
            return;
          }
          switch (i.name) {
            case "cacheEnabled":
            case "repaintChangesOnly":
            case "highlightChanges":
            case "loadingTimeout":
              o();
              break;
            case "remoteOperations":
            case "keyExpr":
            case "dataSource":
            case "scrolling":
              o(), n.reset();
              break;
            case "paging":
              if (r = n.dataSource(), r && (a = n._setPagingOptions(r), a)) {
                var s = r.pageIndex();
                this._isPaging = a.isPageIndexChanged, r.load().done(() => {
                  this._isPaging = !1, n.pageChanged.fire(s);
                });
              }
              o();
              break;
            case "rtlEnabled":
              n.reset();
              break;
            case "columns":
              r = n.dataSource(), r && r.isLoading() && i.name === i.fullName && (this._useSortingGroupingFromColumns = !0, r.load());
              break;
            default:
              n.callBase(i);
          }
        },
        isReady: function() {
          return !this._isLoading;
        },
        getDataSource: function() {
          return this._dataSource && this._dataSource._dataSource;
        },
        getCombinedFilter: function(i) {
          return this.combinedFilter(void 0, i);
        },
        combinedFilter: function(i, n) {
          var r = this._dataSource, a = this._columnsController;
          if (r) {
            i === void 0 && (i = r.filter());
            var o = this._calculateAdditionalFilter();
            o && (a.isDataSourceApplied() || a.isAllDataTypesDefined()) && (i = ae.combineFilters([o, i])), i = a.updateFilter(i, n || r.remoteOperations().filtering);
          }
          return i;
        },
        waitReady: function() {
          return this._updateLockCount ? (this._readyDeferred = new U(), this._readyDeferred) : ge();
        },
        _endUpdateCore: function() {
          var i = this._changes;
          if (i.length) {
            this._changes = [];
            var n = i.every((r) => r.repaintChangesOnly);
            this.updateItems(i.length === 1 ? i[0] : {
              repaintChangesOnly: n
            });
          }
          this._readyDeferred && (this._readyDeferred.resolve(), this._readyDeferred = null);
        },
        _handleCustomizeStoreLoadOptions: function(i) {
          var n, r = this._columnsController, a = this._dataSource, o = i.storeLoadOptions;
          i.isCustomLoading && !o.isLoadingAll || (o.filter = this.combinedFilter(o.filter), ((n = o.filter) === null || n === void 0 ? void 0 : n.length) === 1 && o.filter[0] === "!" && (i.data = [], i.extra = i.extra || {}, i.extra.totalCount = 0), r.isDataSourceApplied() || r.updateColumnDataTypes(a), this._columnsUpdating = !0, r.updateSortingGrouping(a, !this._useSortingGroupingFromColumns), this._columnsUpdating = !1, o.sort = r.getSortDataSourceParameters(), o.group = r.getGroupDataSourceParameters(), a.sort(o.sort), a.group(o.group), o.sort = r.getSortDataSourceParameters(!a.remoteOperations().sorting), i.group = r.getGroupDataSourceParameters(!a.remoteOperations().grouping));
        },
        _handleColumnsChanged: function(i) {
          var n = this, r = i.changeTypes, a = i.optionNames, o, s, l;
          if (r.sorting || r.grouping)
            n._dataSource && !n._columnsUpdating && (n._dataSource.group(n._columnsController.getGroupDataSourceParameters()), n._dataSource.sort(n._columnsController.getSortDataSourceParameters()), n.reload());
          else if (r.columns && (s = n._columnsController.columnOption(i.columnIndex, "filterValues"), (a.filterValues || a.filterType && Array.isArray(s) || a.filterValue || a.selectedFilterOperation || a.allowFiltering) && (o = n._columnsController.columnOption(i.columnIndex, "filterValue"), (Array.isArray(s) || i.columnIndex === void 0 || x(o) || !a.selectedFilterOperation || a.filterValue) && (n._applyFilter(), l = !0)), !n._needApplyFilter && !ae.checkChanges(a, ["width", "visibleWidth", "filterValue", "bufferedFilterValue", "selectedFilterOperation", "filterValues", "filterType"]) && n._columnsController.columnsChanged.add(function d(c) {
            var h;
            n._columnsController.columnsChanged.remove(d), n.updateItems({
              repaintChangesOnly: !1,
              virtualColumnsScrolling: c == null || (h = c.changeTypes) === null || h === void 0 ? void 0 : h.virtualColumnsScrolling
            });
          }), x(a.visible))) {
            var u = n._columnsController.columnOption(i.columnIndex);
            u && (x(u.filterValue) || x(u.filterValues)) && (n._applyFilter(), l = !0);
          }
          !l && r.filtering && n.reload();
        },
        _handleDataChanged: function(i) {
          var n = this, r = n._dataSource, a = n._columnsController, o = !1;
          this._useSortingGroupingFromColumns = !1, r && !n._isDataSourceApplying && (n._isDataSourceApplying = !0, ge(n._columnsController.applyDataSource(r)).done(function() {
            n._isLoading && n._handleLoadingChanged(!1), o && i && i.isDelayed && (i.isDelayed = !1), n._isDataSourceApplying = !1;
            var s = n._needApplyFilter;
            n._needApplyFilter = !1, s && !n._isAllDataTypesDefined && (l = n._calculateAdditionalFilter(), l && l.length) ? ($e.log("W1005", n.component.NAME), n._applyFilter()) : n.updateItems(i, !0);
            var l;
          }).fail(function() {
            n._isDataSourceApplying = !1;
          }), n._isDataSourceApplying && (o = !0, n._handleLoadingChanged(!0)), n._needApplyFilter = !n._columnsController.isDataSourceApplied(), n._isAllDataTypesDefined = a.isAllDataTypesDefined());
        },
        _handleLoadingChanged: function(i) {
          this._isLoading = i, this._fireLoadingChanged();
        },
        _handleLoadError: function(i) {
          this.dataErrorOccurred.fire(i);
        },
        _handleDataPushed: function(i) {
          this.pushed.fire(i);
        },
        fireError: function() {
          this.dataErrorOccurred.fire($e.Error.apply($e, arguments));
        },
        _setPagingOptions: function(i) {
          var n = this.option("paging.pageIndex"), r = this.option("paging.pageSize"), a = this.option("paging.enabled"), o = this.option("scrolling.mode"), s = o === "infinite", l = o === "virtual", u = a || l || s, d = !1, c = !1, h = !1;
          return i.requireTotalCount(!s), a !== void 0 && i.paginate() !== u && (i.paginate(u), d = !0), r !== void 0 && i.pageSize() !== r && (i.pageSize(r), c = !0), n !== void 0 && i.pageIndex() !== n && (i.pageIndex(n), h = !0), d || c || h ? {
            isPaginateChanged: d,
            isPageSizeChanged: c,
            isPageIndexChanged: h
          } : !1;
        },
        _getSpecificDataSourceOption: function() {
          var i = this.option("dataSource");
          return Array.isArray(i) ? {
            store: {
              type: "array",
              data: i,
              key: this.option("keyExpr")
            }
          } : i;
        },
        _initDataSource: function() {
          var i = this._dataSource;
          this.callBase();
          var n = this._dataSource;
          if (this._useSortingGroupingFromColumns = !0, this._cachedProcessedItems = null, n) {
            var r = this._setPagingOptions(n);
            this._isPaging = r == null ? void 0 : r.isPageIndexChanged, this.setDataSource(n);
          } else
            i && this.updateItems();
        },
        _loadDataSource: function() {
          var i = this, n = i._dataSource, r = new U();
          return ge(this._columnsController.refresh(!0)).always(function() {
            n ? n.load().done(function() {
              i._isPaging = !1, r.resolve.apply(r, arguments);
            }).fail(r.reject) : r.resolve();
          }), r.promise();
        },
        _beforeProcessItems: function(i) {
          return i.slice(0);
        },
        getRowIndexDelta: function() {
          return 0;
        },
        getDataIndex: function(i) {
          var n = this._items, r = i.changeType === "append" && n.length > 0 ? n[n.length - 1] : null;
          return x(r == null ? void 0 : r.dataIndex) ? r.dataIndex + 1 : 0;
        },
        _processItems: function(i, n) {
          var r = this, a = r.getRowIndexDelta(), o = n.changeType, s = r._columnsController.getVisibleColumns(null, o === "loadingAll"), l = this.getDataIndex(n), u = {
            visibleColumns: s,
            dataIndex: l
          }, d = [];
          return B(i, function(c, h) {
            x(h) && (u.rowIndex = c - a, h = r._processItem(h, u), d.push(h));
          }), d;
        },
        _processItem: function(i, n) {
          return i = this._generateDataItem(i, n), i = this._processDataItem(i, n), i.dataIndex = n.dataIndex++, i;
        },
        _generateDataItem: function(i) {
          return {
            rowType: "data",
            data: i,
            key: this.keyOf(i)
          };
        },
        _processDataItem: function(i, n) {
          return i.values = this.generateDataValues(i.data, n.visibleColumns), i;
        },
        generateDataValues: function(i, n, r) {
          for (var a = [], o, s = 0; s < n.length; s++) {
            var l = n[s];
            o = r ? void 0 : null, l.command || (l.calculateCellValue ? o = l.calculateCellValue(i) : l.dataField && (o = i[l.dataField])), a.push(o);
          }
          return a;
        },
        _applyChange: function(i) {
          i.changeType === "update" ? this._applyChangeUpdate(i) : this.items().length && i.repaintChangesOnly && i.changeType === "refresh" ? this._applyChangesOnly(i) : i.changeType === "refresh" && this._applyChangeFull(i);
        },
        _applyChangeFull: function(i) {
          this._items = i.items.slice(0);
        },
        _getRowIndices: function(i) {
          var n = i.rowIndices.slice(0), r = this.getRowIndexDelta();
          n.sort(function(s, l) {
            return s - l;
          });
          for (var a = 0; a < n.length; a++) {
            var o = n[a];
            i.allowInvisibleRowIndices && (o += r), o < 0 && (n.splice(a, 1), a--);
          }
          return n;
        },
        _applyChangeUpdate: function(i) {
          var n = this, r = i.items, a = n._getRowIndices(i), o = n.getRowIndexDelta(), s = n.option("repaintChangesOnly"), l = -1, u = 0, d;
          i.items = [], i.rowIndices = [], i.columnIndices = [], i.changeTypes = [];
          var c = function(h, p, f) {
            var v = h && p && et(h.key, p.key);
            return v && f && (v = h.rowType === p.rowType && (p.rowType !== "detail" || h.isEditing === p.isEditing)), v;
          };
          B(a, function(h, p) {
            var f;
            if (p += u + o, l !== p) {
              l = p;
              var v = n._items[p], m = n._items[p + 1], C = r[p], b = r[p + 1], A = c(v, m) || c(C, b);
              if (C && (C.rowIndex = p, i.items.push(C)), v && C && c(v, C, A))
                d = "update", n._items[p] = C, v.visible !== C.visible ? i.items.splice(-1, 1, {
                  visible: C.visible
                }) : s && !i.isFullUpdate && (f = n._partialUpdateRow(v, C, p - o));
              else if (C && !v || b && c(v, b, A))
                d = "insert", n._items.splice(p, 0, C), u++;
              else if (v && !C || m && c(C, m, A))
                d = "remove", n._items.splice(p, 1), u--, l = -1;
              else if (C)
                d = "update", n._items[p] = C;
              else
                return;
              i.rowIndices.push(p - o), i.changeTypes.push(d), i.columnIndices.push(f);
            }
          });
        },
        _isCellChanged: function(i, n, r, a, o) {
          if (JSON.stringify(i.values[a]) !== JSON.stringify(n.values[a]))
            return !0;
          function s(l, u) {
            return l.modifiedValues ? l.modifiedValues[u] !== void 0 : !1;
          }
          return s(i, a) !== s(n, a);
        },
        _getChangedColumnIndices: function(i, n, r, a) {
          var o;
          if (i.rowType === n.rowType) {
            if (n.rowType !== "group" && n.rowType !== "groupFooter" && (o = [], n.rowType !== "detail"))
              for (var s = 0; s < i.values.length; s++)
                this._isCellChanged(i, n, r, s, a) && o.push(s);
            n.rowType === "group" && n.isExpanded === i.isExpanded && i.cells && (o = i.cells.map((l, u) => {
              var d;
              return ((d = l.column) === null || d === void 0 ? void 0 : d.type) !== "groupExpand" ? u : -1;
            }).filter((l) => l >= 0));
          }
          return o;
        },
        _partialUpdateRow: function(i, n, r, a) {
          var o, s = this._getChangedColumnIndices(i, n, r, a);
          return (o = s) !== null && o !== void 0 && o.length && this.option("dataRowTemplate") && (s = void 0), s && (i.cells && i.cells.forEach(function(l, u) {
            var d = s.indexOf(u) >= 0;
            !d && l && l.update && l.update(n);
          }), n.update = i.update, n.watch = i.watch, n.cells = i.cells, a && (n.oldValues = i.values), i.update && i.update(n)), s;
        },
        _isItemEquals: function(i, n) {
          if (JSON.stringify(i.values) !== JSON.stringify(n.values) || ["modified", "isNewRow", "removed", "isEditing"].some((c) => i[c] !== n[c]))
            return !1;
          if (i.rowType === "group" || i.rowType === "groupFooter") {
            var r, a, o, s, l = i.isExpanded === n.isExpanded, u = JSON.stringify(i.summaryCells) === JSON.stringify(n.summaryCells), d = ((r = i.data) === null || r === void 0 ? void 0 : r.isContinuation) === ((a = n.data) === null || a === void 0 ? void 0 : a.isContinuation) && ((o = i.data) === null || o === void 0 ? void 0 : o.isContinuationOnNextPage) === ((s = n.data) === null || s === void 0 ? void 0 : s.isContinuationOnNextPage);
            if (!l || !u || !d)
              return !1;
          }
          return !0;
        },
        _applyChangesOnly: function(i) {
          var n, r = [], a = [], o = [], s = [], l = {}, u = (n = i == null ? void 0 : i.isLiveUpdate) !== null && n !== void 0 ? n : !0;
          function d(f) {
            if (f)
              return f.rowType + "," + JSON.stringify(f.key);
          }
          var c = this._items, h = c.slice();
          i.items.forEach(function(f, v) {
            var m = d(f);
            l[m] = v, f.rowIndex = v;
          });
          var p = DT(h, i.items, d, (f, v) => this._isItemEquals(f, v) ? (f.cells && (f.update && f.update(v), f.cells.forEach(function(m) {
            m && m.update && m.update(v, !0);
          })), !0) : !1);
          if (!p) {
            this._applyChangeFull(i);
            return;
          }
          p.forEach((f) => {
            switch (f.type) {
              case "update":
                var v = f.index, m = f.data, C = f.oldItem, b = this._partialUpdateRow(C, m, v, u);
                r.push(v), o.push("update"), s.push(m), c[v] = m, a.push(b);
                break;
              case "insert":
                r.push(f.index), o.push("insert"), s.push(f.data), a.push(void 0), c.splice(f.index, 0, f.data);
                break;
              case "remove":
                r.push(f.index), o.push("remove"), c.splice(f.index, 1), s.push(f.oldItem), a.push(void 0);
            }
          }), i.repaintChangesOnly = !0, i.changeType = "update", i.rowIndices = r, i.columnIndices = a, i.changeTypes = o, i.items = s, h.length && (i.isLiveUpdate = !0), this._correctRowIndices((f) => {
            var v = this._rowIndexOffset || 0, m = this.getRowIndexOffset(), C = h[f - v], b = d(C), A = l[b];
            return A >= 0 ? A + m - f : 0;
          });
        },
        _correctRowIndices: $,
        _afterProcessItems: function(i) {
          return i;
        },
        _updateItemsCore: function(i) {
          var n, r = this._dataSource, a = i.changeType || "refresh";
          if (i.changeType = a, r) {
            var o = this._cachedProcessedItems;
            i.useProcessedItemsCache && o ? n = o : (n = i.items || r.items(), n = this._beforeProcessItems(n), n = this._processItems(n, i), this._cachedProcessedItems = n), n = this._afterProcessItems(n, i), i.items = n;
            var s = this._items.length === n.length && this._items;
            this._applyChange(i);
            var l = this.getRowIndexDelta();
            B(this._items, (u, d) => {
              d.rowIndex = u - l, s && (d.cells = s[u].cells || []);
              var c = n[u];
              c && (d.loadIndex = c.loadIndex);
            }), this._rowIndexOffset = this.getRowIndexOffset();
          } else
            this._items = [];
        },
        _handleChanging: function(i) {
          var n = this.getVisibleRows(), r = this.dataSource();
          r && i.changes.forEach(function(a) {
            if (a.type === "insert" && a.index >= 0) {
              for (var o = 0, s = 0; s < a.index; s++) {
                var l = n[s];
                l && (l.rowType === "data" || l.rowType === "group") && o++;
              }
              a.index = o;
            }
          });
        },
        updateItems: function(i, n) {
          if (i = i || {}, this._repaintChangesOnly !== void 0) {
            var r;
            i.repaintChangesOnly = (r = i.repaintChangesOnly) !== null && r !== void 0 ? r : this._repaintChangesOnly, i.needUpdateDimensions = i.needUpdateDimensions || this._needUpdateDimensions;
          } else if (i.changes)
            i.repaintChangesOnly = this.option("repaintChangesOnly");
          else if (n) {
            var a = this.dataSource().operationTypes();
            i.repaintChangesOnly = a && !a.grouping && !a.filtering && this.option("repaintChangesOnly"), i.isDataChanged = !0, a && (a.reload || a.paging || a.groupExpanding) && (i.needUpdateDimensions = !0);
          }
          if (this._updateLockCount && !i.cancel) {
            this._changes.push(i);
            return;
          }
          this._updateItemsCore(i), !i.cancel && this._fireChanged(i);
        },
        loadingOperationTypes: function() {
          var i = this.dataSource();
          return i && i.loadingOperationTypes() || {};
        },
        _fireChanged: function(i) {
          this._currentOperationTypes && (i.operationTypes = this._currentOperationTypes, this._currentOperationTypes = null), Bt(() => {
            this.changed.fire(i);
          });
        },
        isLoading: function() {
          return this._isLoading || this._isCustomLoading;
        },
        _fireLoadingChanged: function() {
          this.loadingChanged.fire(this.isLoading(), this._loadingText);
        },
        _calculateAdditionalFilter: function() {
          return null;
        },
        _applyFilter: function() {
          var i = this._dataSource;
          if (i)
            return i.pageIndex(0), this._isFilterApplying = !0, this.reload().done(() => {
              this._isFilterApplying && this.pageChanged.fire();
            });
        },
        resetFilterApplying: function() {
          this._isFilterApplying = !1;
        },
        filter: function(i) {
          var n = this._dataSource, r = n && n.filter();
          if (arguments.length === 0)
            return r;
          i = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : i, !ae.equalFilterParameters(r, i) && (n && n.filter(i), this._applyFilter());
        },
        clearFilter: function(i) {
          var n = this, r = n._columnsController, a = function(o) {
            for (var s = r.columnCount(), l = 0; l < s; l++)
              r.columnOption(l, o, void 0);
          };
          if (n.component.beginUpdate(), arguments.length > 0)
            switch (i) {
              case "dataSource":
                n.filter(null);
                break;
              case "search":
                n.searchByText("");
                break;
              case "header":
                a("filterValues");
                break;
              case "row":
                a("filterValue");
            }
          else
            n.filter(null), n.searchByText(""), a("filterValue"), a("bufferedFilterValue"), a("filterValues");
          n.component.endUpdate();
        },
        _fireDataSourceChanged: function() {
          var i = this;
          i.changed.add(function n() {
            i.changed.remove(n), i.dataSourceChanged.fire();
          });
        },
        _getDataSourceAdapter: $,
        _createDataSourceAdapterCore: function(i, n) {
          var r = this._getDataSourceAdapter(), a = r.create(this.component);
          return a.init(i, n), a;
        },
        isLocalStore: function(i) {
          return i = i || this.store(), i instanceof Il;
        },
        isCustomStore: function(i) {
          return i = i || this.store(), i instanceof Tc;
        },
        _createDataSourceAdapter: function(i) {
          var n = this.option("remoteOperations"), r = i.store(), a = {
            filtering: !0,
            sorting: !0,
            paging: !0,
            grouping: !0,
            summary: !0
          };
          return n && n.groupPaging && (n = T({}, a, n)), n === "auto" && (n = this.isLocalStore(r) || this.isCustomStore(r) ? {} : {
            filtering: !0,
            sorting: !0,
            paging: !0
          }), n === !0 && (n = a), this._createDataSourceAdapterCore(i, n);
        },
        setDataSource: function(i) {
          var n = this._dataSource;
          !i && n && (n.cancelAll(), n.changed.remove(this._dataChangedHandler), n.loadingChanged.remove(this._loadingChangedHandler), n.loadError.remove(this._loadErrorHandler), n.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler), n.changing.remove(this._changingHandler), n.pushed.remove(this._dataPushedHandler), n.dispose(this._isSharedDataSource)), i && (i = this._createDataSourceAdapter(i)), this._dataSource = i, i && (this._fireDataSourceChanged(), this._isLoading = !i.isLoaded(), this._needApplyFilter = !0, this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined(), i.changed.add(this._dataChangedHandler), i.loadingChanged.add(this._loadingChangedHandler), i.loadError.add(this._loadErrorHandler), i.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler), i.changing.add(this._changingHandler), i.pushed.add(this._dataPushedHandler));
        },
        items: function() {
          return this._items;
        },
        isEmpty: function() {
          return !this.items().length;
        },
        pageCount: function() {
          return this._dataSource ? this._dataSource.pageCount() : 1;
        },
        dataSource: function() {
          return this._dataSource;
        },
        store: function() {
          var i = this._dataSource;
          return i && i.store();
        },
        loadAll: function(i) {
          var n = this, r = new U(), a = n._dataSource;
          if (a)
            if (i) {
              var o = {
                data: i,
                isCustomLoading: !0,
                storeLoadOptions: {
                  isLoadingAll: !0
                },
                loadOptions: {
                  filter: n.getCombinedFilter(),
                  group: a.group(),
                  sort: a.sort()
                }
              };
              a._handleDataLoaded(o), ge(o.data).done(function(l) {
                l = n._beforeProcessItems(l), r.resolve(n._processItems(l, {
                  changeType: "loadingAll"
                }), o.extra && o.extra.summary);
              }).fail(r.reject);
            } else if (a.isLoading())
              r.reject();
            else {
              var s = T({}, a.loadOptions(), {
                isLoadingAll: !0,
                requireTotalCount: !1
              });
              a.load(s).done(function(l, u) {
                l = n._beforeProcessItems(l), l = n._processItems(l, {
                  changeType: "loadingAll"
                }), r.resolve(l, u && u.summary);
              }).fail(r.reject);
            }
          else
            r.resolve([]);
          return r;
        },
        getKeyByRowIndex: function(i, n) {
          var r = this.items(n)[i];
          if (r)
            return r.key;
        },
        getRowIndexByKey: function(i, n) {
          return ae.getIndexByKey(i, this.items(n));
        },
        keyOf: function(i) {
          var n = this.store();
          if (n)
            return n.keyOf(i);
        },
        byKey: function(i) {
          var n = this.store(), r = this.getRowIndexByKey(i), a;
          if (n)
            return r >= 0 && (a = new U().resolve(this.items()[r].data)), a || n.byKey(i);
        },
        key: function() {
          var i = this.store();
          if (i)
            return i.key();
        },
        getRowIndexOffset: function() {
          return 0;
        },
        getDataByKeys: function(i) {
          var n = this, r = new U(), a = [], o = [];
          return B(i, function(s, l) {
            a.push(n.byKey(l).done(function(u) {
              o[s] = u;
            }));
          }), ge.apply(g, a).always(function() {
            r.resolve(o);
          }), r;
        },
        pageIndex: function(i) {
          return e(this, "pageIndex", i);
        },
        pageSize: function(i) {
          return e(this, "pageSize", i);
        },
        beginCustomLoading: function(i) {
          this._isCustomLoading = !0, this._loadingText = i || "", this._fireLoadingChanged();
        },
        endCustomLoading: function() {
          this._isCustomLoading = !1, this._loadingText = void 0, this._fireLoadingChanged();
        },
        refresh: function(i) {
          i === !0 ? i = {
            reload: !0,
            changesOnly: !0
          } : i || (i = {
            lookup: !0,
            selection: !0,
            reload: !0
          });
          var n = this, r = n.getDataSource(), a = i.changesOnly, o = new U(), s = function() {
            n._repaintChangesOnly = !!a;
          };
          return ge(!i.lookup || n._columnsController.refresh()).always(function() {
            i.load || i.reload ? (r && r.on("customizeLoadResult", s), ge(n.reload(i.reload, a)).always(function() {
              r && r.off("customizeLoadResult", s), n._repaintChangesOnly = void 0;
            }).done(o.resolve).fail(o.reject)) : (n.updateItems({
              repaintChangesOnly: i.changesOnly
            }), o.resolve());
          }), o.promise();
        },
        getVisibleRows: function() {
          return this.items();
        },
        _disposeDataSource: function() {
          this.setDataSource(null);
        },
        dispose: function() {
          this._disposeDataSource(), this.callBase.apply(this, arguments);
        },
        repaintRows: function(i, n) {
          i = Array.isArray(i) ? i : [i], (i.length > 1 || x(i[0])) && this.updateItems({
            changeType: "update",
            rowIndices: i,
            isFullUpdate: !n
          });
        },
        skipProcessingPagingChange: function(i) {
          return this._skipProcessingPagingChange && (i === "paging.pageIndex" || i === "paging.pageSize");
        },
        getUserState: function() {
          return {
            searchText: this.option("searchPanel.text"),
            pageIndex: this.pageIndex(),
            pageSize: this.pageSize()
          };
        },
        getCachedStoreData: function() {
          return this._dataSource && this._dataSource.getCachedStoreData();
        },
        isLastPageLoaded: function() {
          var i = this.pageIndex(), n = this.pageCount();
          return i === n - 1;
        }
      };
      return ae.proxyMethod(t, "load"), ae.proxyMethod(t, "reload"), ae.proxyMethod(t, "push"), ae.proxyMethod(t, "itemsCount", 0), ae.proxyMethod(t, "totalItemsCount", 0), ae.proxyMethod(t, "hasKnownLastPage", !0), ae.proxyMethod(t, "isLoaded", !0), ae.proxyMethod(t, "totalCount", 0), t;
    }())
  }
};
const k$ = at.Controller.inherit(function() {
  function e(s, l) {
    if (s && (s = s.slice(0), l))
      for (var u = 0; u < s.length; u++)
        s[u] = T({
          key: s[u].key
        }, s[u]), s[u].items = e(s[u].items, l - 1);
    return s;
  }
  function t(s, l, u) {
    var d = {
      reload: !0,
      fullReload: !0
    };
    return l && (d = {
      sorting: !ae.equalSortParameters(s.sort, l.sort),
      grouping: !ae.equalSortParameters(s.group, l.group, !0),
      groupExpanding: !ae.equalSortParameters(s.group, l.group) || l.groupExpand,
      filtering: !ae.equalFilterParameters(s.filter, l.filter),
      pageIndex: s.pageIndex !== l.pageIndex,
      skip: s.skip !== l.skip,
      take: s.take !== l.take,
      pageSize: s.pageSize !== l.pageSize,
      fullReload: u,
      reload: !1,
      paging: !1
    }, d.reload = u || d.sorting || d.grouping || d.filtering, d.paging = d.pageIndex || d.pageSize || d.take), d;
  }
  function i(s, l) {
    var u = ae.normalizeSortingInfo(s.group || s.storeLoadOptions.group || s.loadOptions.group).length, d = [];
    if (n(d, s, u))
      return d;
    l && function(c, h, p) {
      var f = c.length, {
        storeLoadOptions: v
      } = h;
      if (v.skip !== void 0 && v.take && !p) {
        var m = [];
        n(m, h, p, !0);
        var C = m.length;
        if (f || C) {
          var b, A;
          h.skip = (b = h.skip) !== null && b !== void 0 ? b : v.skip, h.take = (A = h.take) !== null && A !== void 0 ? A : v.take;
        }
        f && (v.skip += f, v.take -= f, h.cachedDataPartBegin = c), C && (v.take -= C, h.cachedDataPartEnd = m.reverse());
      }
    }(d, s, u);
  }
  function n(s, l, u, d) {
    var c, h, p, {
      storeLoadOptions: f
    } = l, v = (c = (h = l.take) !== null && h !== void 0 ? h : f.take) !== null && c !== void 0 ? c : 0, m = (p = l.cachedData) === null || p === void 0 ? void 0 : p.items;
    if (v && m) {
      for (var C, b, A = (C = (b = l.skip) !== null && b !== void 0 ? b : f.skip) !== null && C !== void 0 ? C : 0, R = 0; R < v; R++) {
        var k = d ? v - 1 - R : R, H = k + A, K = m[H];
        if (K === void 0 && H in m)
          return !0;
        var j = r(l, K, u, k, v);
        if (j)
          s.push(j);
        else
          return !1;
      }
      return !0;
    }
    return !1;
  }
  function r(s, l, u, d, c) {
    if (u && l) {
      var h = d === 0 && s.skips || [], p = d === c - 1 && s.takes || [];
      return function f(v, m, C, b) {
        if (m && v) {
          var A = ue({}, v), R = C[0] || 0, k = b[0], H = v.items;
          if (H) {
            if (k === void 0 && !H[R])
              return;
            A.items = [], C.length && (A.isContinuation = !0), b.length && (A.isContinuationOnNextPage = !0);
            for (var K = 0; k === void 0 ? H[K + R] : K < k; K++) {
              var j = H[K + R], z = K + 1 === k, re = f(j, m - 1, K === 0 ? C.slice(1) : [], z ? b.slice(1) : []);
              if (re !== void 0)
                A.items.push(re);
              else
                return;
            }
          }
          return A;
        }
        return v;
      }(l, u, h, p);
    } else
      return l;
  }
  function a(s, l, u, d) {
    if (u && l) {
      var c = ue({}, l);
      delete c.isContinuation, delete c.isContinuationOnNextPage;
      var h = d[0] || 0;
      return l.items && (c.items = (s == null ? void 0 : s.items) || {}, l.items.forEach((p, f) => {
        var v = f + h, m = f === 0 ? d.slice(1) : [];
        c.items[v] = a(c.items[v], p, u - 1, m);
      })), c;
    }
    return l;
  }
  var o = {
    init: function(s, l) {
      var u = this;
      u._dataSource = s, u._remoteOperations = l || {}, u._isLastPage = !s.isLastPage(), u._hasLastPage = !1, u._currentTotalCount = 0, u._cachedData = {
        items: {}
      }, u._lastOperationTypes = {}, u._eventsStrategy = s._eventsStrategy, u._totalCountCorrection = 0, u._isLoadingAll = !1, u.changed = qe(), u.loadingChanged = qe(), u.loadError = qe(), u.customizeStoreLoadOptions = qe(), u.changing = qe(), u.pushed = qe(), u._dataChangedHandler = u._handleDataChanged.bind(u), u._customizeStoreLoadOptionsHandler = u._handleCustomizeStoreLoadOptions.bind(u), u._dataLoadedHandler = u._handleDataLoaded.bind(u), u._loadingChangedHandler = u._handleLoadingChanged.bind(u), u._loadErrorHandler = u._handleLoadError.bind(u), u._pushHandler = u._handlePush.bind(u), u._changingHandler = u._handleChanging.bind(u), s.on("changed", u._dataChangedHandler), s.on("customizeStoreLoadOptions", u._customizeStoreLoadOptionsHandler), s.on("customizeLoadResult", u._dataLoadedHandler), s.on("loadingChanged", u._loadingChangedHandler), s.on("loadError", u._loadErrorHandler), s.on("changing", u._changingHandler), s.store().on("beforePush", u._pushHandler), B(s, function(d, c) {
        !u[d] && ce(c) && (u[d] = function() {
          return this._dataSource[d].apply(this._dataSource, arguments);
        });
      });
    },
    remoteOperations: function() {
      return this._remoteOperations;
    },
    dispose: function(s) {
      var l = this._dataSource, u = l.store();
      l.off("changed", this._dataChangedHandler), l.off("customizeStoreLoadOptions", this._customizeStoreLoadOptionsHandler), l.off("customizeLoadResult", this._dataLoadedHandler), l.off("loadingChanged", this._loadingChangedHandler), l.off("loadError", this._loadErrorHandler), l.off("changing", this._changingHandler), u && u.off("beforePush", this._pushHandler), s || l.dispose();
    },
    refresh: function(s, l) {
      var u = this._dataSource;
      l.reload && (this.resetCurrentTotalCount(), this._isLastPage = !u.paginate(), this._hasLastPage = this._isLastPage);
    },
    resetCurrentTotalCount: function() {
      this._currentTotalCount = 0, this._totalCountCorrection = 0;
    },
    resetCache: function() {
      this._cachedStoreData = void 0, this._cachedPagingData = void 0;
    },
    resetPagesCache: function() {
      this._cachedData = {
        items: {}
      };
    },
    _needClearStoreDataCache: function() {
      var s = this.remoteOperations(), l = t(this._lastLoadOptions || {}, {}), u = Object.keys(s).every((d) => !l[d] || !s[d]);
      return !u;
    },
    push: function(s, l) {
      var u = this.store();
      this._needClearStoreDataCache() && (this._cachedStoreData = void 0), this._cachedPagingData = void 0, this.resetPagesCache(!0), this._cachedStoreData && Eo({
        keyInfo: u,
        data: this._cachedStoreData,
        changes: s
      }), l || this._applyBatch(s), this.pushed.fire(s);
    },
    getDataIndexGetter: function() {
      if (!this._dataIndexGetter) {
        var s, l, u = this.store();
        this._dataIndexGetter = (d) => {
          var c = l && l !== this._cachedStoreData;
          if (!s || c) {
            l = this._cachedStoreData || [], s = {};
            for (var h = 0; h < l.length; h++)
              s[xn(u.keyOf(l[h]))] = h;
          }
          return s[xn(u.keyOf(d))];
        };
      }
      return this._dataIndexGetter;
    },
    _getKeyInfo: function() {
      return this.store();
    },
    _needToCopyDataObject: () => !0,
    _applyBatch: function(s, l) {
      var u = this._getKeyInfo(), d = this._dataSource, c = ae.normalizeSortingInfo(this.group()).length, h = this.option("editing.refreshMode") === "reshape", p = this.option("scrolling.mode") === "virtual";
      s = s.filter(function(C) {
        return !d.paginate() || C.type !== "insert" || C.index !== void 0;
      });
      var f = () => c ? this.itemsCount() : this.items().length, v = f();
      Eo({
        keyInfo: u,
        data: this._items,
        changes: s,
        groupCount: c,
        useInsertIndex: !0,
        skipCopying: !this._needToCopyDataObject()
      }), Eo({
        keyInfo: u,
        data: d.items(),
        changes: s,
        groupCount: c,
        useInsertIndex: !0,
        skipCopying: !this._needToCopyDataObject()
      });
      var m = this._currentTotalCount > 0 || (l || !h) && p;
      m && (this._totalCountCorrection += f() - v), s.splice(0, s.length);
    },
    _handlePush: function(s) {
      var {
        changes: l
      } = s;
      this.push(l, !0);
    },
    _handleChanging: function(s) {
      this.changing.fire(s), this._applyBatch(s.changes, !0);
    },
    _needCleanCacheByOperation: function(s, l) {
      var u = ["filtering", "sorting", "paging"], d = u.indexOf(s), c = d >= 0 ? u.slice(d) : [s];
      return c.some((h) => l[h]);
    },
    _customizeRemoteOperations: function(s, l) {
      var u = this._cachedStoreData, d = this._cachedPagingData, c = this._cachedData;
      (s.storeLoadOptions.filter && !s.remoteOperations.filtering || s.storeLoadOptions.sort && !s.remoteOperations.sorting) && (s.remoteOperations = {
        filtering: s.remoteOperations.filtering,
        summary: s.remoteOperations.summary
      }), l.fullReload ? (u = void 0, d = void 0, c = {
        items: {}
      }) : (l.reload ? (d = void 0, c = {
        items: {}
      }) : l.groupExpanding && (c = {
        items: {}
      }), B(l, (h, p) => {
        p && this._needCleanCacheByOperation(h, s.remoteOperations) && (u = void 0, d = void 0);
      })), d && (s.remoteOperations.paging = !1), s.cachedStoreData = u, s.cachedPagingData = d, s.cachedData = c, s.isCustomLoading || (this._cachedStoreData = u, this._cachedPagingData = d, this._cachedData = c);
    },
    _handleCustomizeStoreLoadOptions(s) {
      var l;
      this._handleDataLoading(s), ((l = s.data) === null || l === void 0 ? void 0 : l.length) !== 0 && (s.data = i(s, !0) || s.cachedStoreData);
    },
    _handleDataLoading: function(s) {
      var l = this._dataSource, u = this._lastLoadOptions;
      this.customizeStoreLoadOptions.fire(s), s.delay = this.option("loadingTimeout"), s.originalStoreLoadOptions = s.storeLoadOptions, s.remoteOperations = T({}, this.remoteOperations());
      var d = !this.isLoaded() && !this._isRefreshing;
      this.option("integrationOptions.renderedOnServer") && !this.isLoaded() && (s.delay = void 0);
      var c = T({
        pageIndex: this.pageIndex(),
        pageSize: this.pageSize()
      }, s.storeLoadOptions), h = t(c, u, d);
      if (this._customizeRemoteOperations(s, h), !s.isCustomLoading) {
        var p = this._isRefreshing;
        s.pageIndex = l.pageIndex(), s.lastLoadOptions = c, s.operationTypes = h, this._loadingOperationTypes = h, this._isRefreshing = !0, ge(p || this._isRefreshed || this.refresh(s, h)).done(() => {
          this._lastOperationId === s.operationId && (this._isRefreshed = !0, this.load().always(() => {
            this._isRefreshed = !1;
          }));
        }).fail(() => {
          l.cancel(s.operationId);
        }).always(() => {
          this._isRefreshing = !1;
        }), l.cancel(this._lastOperationId), this._lastOperationId = s.operationId, this._isRefreshing && l.cancel(this._lastOperationId);
      }
      this._handleDataLoadingCore(s);
    },
    _handleDataLoadingCore: function(s) {
      var l = s.remoteOperations;
      s.loadOptions = {};
      var u = s.cachedData.extra, d = {
        filter: !l.filtering,
        sort: !l.sorting,
        group: !l.grouping,
        summary: !l.summary,
        skip: !l.paging,
        take: !l.paging,
        requireTotalCount: u && "totalCount" in u || !l.paging
      };
      B(s.storeLoadOptions, function(c, h) {
        d[c] && (s.loadOptions[c] = h, delete s.storeLoadOptions[c]);
      }), u && (s.extra = u);
    },
    _handleDataLoaded: function(s) {
      var l = s.loadOptions, u = s.remoteOperations && !s.remoteOperations.paging, d = s.cachedData, c = s.storeLoadOptions, h = this.option("cacheEnabled") !== !1 && c, p = h && !s.isCustomLoading && d && (!u || c.group), f = h && u, v = f && !s.isCustomLoading;
      if (!l) {
        this._dataSource.cancel(s.operationId);
        return;
      }
      u && (s.skip = l.skip, s.take = l.take, delete l.skip, delete l.take), l.group && (l.group = s.group || l.group);
      var m = ae.normalizeSortingInfo(s.group || c.group || l.group).length;
      if (s.cachedDataPartBegin && (s.data = s.cachedDataPartBegin.concat(s.data)), s.cachedDataPartEnd && (s.data = s.data.concat(s.cachedDataPartEnd)), !p || !i(s)) {
        var C, b;
        f && s.cachedPagingData ? s.data = e(s.cachedPagingData, m) : (v && (this._cachedStoreData ? s.mergeStoreLoadData && (s.data = this._cachedStoreData = this._cachedStoreData.concat(s.data)) : this._cachedStoreData = e(s.data, ae.normalizeSortingInfo(c.group).length)), new Il(s.data).load(l).done((A) => {
          s.data = A, v && (this._cachedPagingData = e(s.data, m));
        }).fail((A) => {
          s.data = new U().reject(A);
        })), l.requireTotalCount && u && (s.extra = Me(s.extra) ? s.extra : {}, s.extra.totalCount = s.data.length), s.extra && s.extra.totalCount >= 0 && (c.requireTotalCount === !1 || l.requireTotalCount === !1) && (s.extra.totalCount = -1), !l.data && (c.requireTotalCount || ((C = (b = s.extra) === null || b === void 0 ? void 0 : b.totalCount) !== null && C !== void 0 ? C : -1) >= 0) && (this._totalCountCorrection = 0), this._handleDataLoadedCore(s), p && (d.extra = d.extra || T({}, s.extra), ge(s.data).done((A) => {
          (function(R, k, H) {
            for (var K, j, z, re, {
              storeLoadOptions: he
            } = R, P = (K = (j = R.skip) !== null && j !== void 0 ? j : he.skip) !== null && K !== void 0 ? K : 0, V = (z = (re = R.take) !== null && re !== void 0 ? re : he.take) !== null && z !== void 0 ? z : 0, E = 0; E < V; E++) {
              var J = E + P, Oe = R.cachedData.items, pe = E === 0 && R.skips || [];
              Oe[J] = a(Oe[J], k[E], H, pe);
            }
          })(s, A, m);
        }));
      }
      ge(s.data).done(() => {
        s.lastLoadOptions && (this._lastLoadOptions = s.lastLoadOptions, Object.keys(s.operationTypes).forEach((A) => {
          this._lastOperationTypes[A] = this._lastOperationTypes[A] || s.operationTypes[A];
        }));
      }), s.storeLoadOptions = s.originalStoreLoadOptions;
    },
    _handleDataLoadedCore: function(s) {
      s.remoteOperations && !s.remoteOperations.paging && Array.isArray(s.data) && (s.skip !== void 0 && (s.data = s.data.slice(s.skip)), s.take !== void 0 && (s.data = s.data.slice(0, s.take)));
    },
    _handleLoadingChanged: function(s) {
      this.loadingChanged.fire(s);
    },
    _handleLoadError: function(s) {
      this.loadError.fire(s), this.changed.fire({
        changeType: "loadError",
        error: s
      });
    },
    _loadPageSize: function() {
      return this.pageSize();
    },
    _handleDataChanged: function(s) {
      var l, u = this._dataSource, d = !1, c = !s || x(s.changeType), h = this.itemsCount();
      c && (this._isLastPage = !h || !this._loadPageSize() || h < this._loadPageSize(), this._isLastPage && (this._hasLastPage = !0)), u.totalCount() >= 0 ? u.pageIndex() >= this.pageCount() && (u.pageIndex(this.pageCount() - 1), this.pageIndex(u.pageIndex()), this.resetPagesCache(), u.load(), d = !0) : c && (l = u.pageIndex() * this.pageSize() + h, l > this._currentTotalCount && (this._currentTotalCount = l, (u.pageIndex() === 0 || !this.option("scrolling.legacyMode")) && (this._totalCountCorrection = 0)), h === 0 && u.pageIndex() >= this.pageCount() && (u.pageIndex(this.pageCount() - 1), this.option("scrolling.mode") !== "infinite" && (u.load(), d = !0))), d || (this._operationTypes = this._lastOperationTypes, this._lastOperationTypes = {}, this.component._optionCache = {}, this.changed.fire(s), this.component._optionCache = void 0);
    },
    _scheduleCustomLoadCallbacks: function(s) {
      var l = this;
      l._isCustomLoading = !0, s.always(function() {
        l._isCustomLoading = !1;
      });
    },
    loadingOperationTypes: function() {
      return this._loadingOperationTypes;
    },
    operationTypes: function() {
      return this._operationTypes;
    },
    lastLoadOptions: function() {
      return this._lastLoadOptions || {};
    },
    isLastPage: function() {
      return this._isLastPage;
    },
    _dataSourceTotalCount: function() {
      return this._dataSource.totalCount();
    },
    totalCount: function() {
      return parseInt((this._currentTotalCount || this._dataSourceTotalCount()) + this._totalCountCorrection);
    },
    totalCountCorrection: function() {
      return this._totalCountCorrection;
    },
    itemsCount: function() {
      return this._dataSource.items().length;
    },
    totalItemsCount: function() {
      return this.totalCount();
    },
    pageSize: function() {
      var s = this._dataSource;
      return !arguments.length && !s.paginate() ? 0 : s.pageSize.apply(s, arguments);
    },
    pageCount: function() {
      var s = this.totalItemsCount() - this._totalCountCorrection, l = this.pageSize();
      return l && s > 0 ? Math.max(1, Math.ceil(s / l)) : 1;
    },
    hasKnownLastPage: function() {
      return this._hasLastPage || this._dataSource.totalCount() >= 0;
    },
    loadFromStore: function(s, l) {
      var u = this._dataSource, d = new U();
      if (u)
        return l = l || u.store(), l.load(s).done(function(c, h) {
          c && !Array.isArray(c) && Array.isArray(c.data) && (h = c, c = c.data), d.resolve(c, h);
        }).fail(d.reject), d;
    },
    isCustomLoading: function() {
      return !!this._isCustomLoading;
    },
    load: function(s) {
      var l = this, u = l._dataSource, d = new U();
      if (s) {
        var c = u.store(), h = u.loadOptions(), p = {
          storeLoadOptions: s,
          isCustomLoading: !0
        };
        return B(c._customLoadOptions() || [], function(f, v) {
          v in p.storeLoadOptions || (p.storeLoadOptions[v] = h[v]);
        }), this._isLoadingAll = s.isLoadingAll, l._scheduleCustomLoadCallbacks(d), u._scheduleLoadCallbacks(d), l._handleCustomizeStoreLoadOptions(p), function(f, v) {
          x(v) ? p_(f, v) : f();
        }(function() {
          if (!u.store())
            return d.reject("canceled");
          ge(p.data || l.loadFromStore(p.storeLoadOptions)).done(function(f, v) {
            p.data = f, p.extra = v || {}, l._handleDataLoaded(p), s.requireTotalCount && p.extra.totalCount === void 0 && (p.extra.totalCount = c.totalCount(p.storeLoadOptions)), ge(p.data, p.extra.totalCount).done(function(m, C) {
              p.extra.totalCount = C, d.resolve(m, p.extra);
            }).fail(d.reject);
          }).fail(d.reject);
        }, l.option("loadingTimeout")), d.fail(function() {
          l._eventsStrategy.fireEvent("loadError", arguments);
        }).always(() => {
          this._isLoadingAll = !1;
        }).promise();
      } else
        return u.load();
    },
    reload: function(s) {
      return s ? this._dataSource.reload() : this._dataSource.load();
    },
    getCachedStoreData: function() {
      return this._cachedStoreData;
    }
  };
  return o;
}());
let sp = k$;
const Bl = {
  extend(e) {
    sp = sp.inherit(e);
  },
  create: (e) => new sp(e)
}, F$ = AT.controllers.data.inherit({
  _getDataSourceAdapter: () => Bl,
  _getSpecificDataSourceOption() {
    const e = this.option("dataSource");
    return e && !Array.isArray(e) && this.option("keyExpr") && $e.log("W1011"), this.callBase();
  }
});
xe.registerModule("data", {
  defaultOptions: AT.defaultOptions,
  controllers: {
    data: F$
  }
});
var Yx = "dx-sort", Zx = "dx-sort-none", P$ = "dx-sort-up", M$ = "dx-sort-down", L$ = "dx-sort-index", Qx = "dx-sort-index-icon", V$ = "action";
const OT = {
  _applyColumnState: function(e) {
    var t, i, n = this.option("sorting.mode"), r = e.rootElement, a = e.column, o = this._getIndicatorContainer(r);
    if (e.name === "sort") {
      r.find("." + Yx).remove(), !o.children().length && o.remove();
      var s = n !== "none" && a.allowSorting;
      if (!x(a.groupIndex) && (s || x(a.sortOrder))) {
        t = a.sortOrder === "asc" ? "ascending" : "descending", i = this.callBase(e).toggleClass(P$, a.sortOrder === "asc").toggleClass(M$, a.sortOrder === "desc");
        var l = this.getController && !!this.getController("columns").columnOption("sortIndex:1");
        l && this.option("sorting.showSortIndexes") && a.sortIndex >= 0 && (g("<span>").addClass(Qx).text(a.sortIndex + 1).appendTo(i), i.addClass(L$)), s && e.rootElement.addClass(this.addWidgetPrefix(V$));
      }
      return x(a.sortOrder) ? this.setAria("sort", t, r) : this.setAria("sort", "none", r), i;
    } else
      return this.callBase(e);
  },
  _getIndicatorClassName: function(e) {
    return e === "sort" ? Yx : e === "sortIndex" ? Qx : this.callBase(e);
  },
  _renderIndicator: function(e) {
    var t = e.column, i = e.container, n = e.indicator;
    if (e.name === "sort") {
      var r = this.option("rtlEnabled");
      if (x(t.sortOrder) || n && n.addClass(Zx), i.children().length && (!r && e.columnAlignment === "left" || r && e.columnAlignment === "right")) {
        i.prepend(n);
        return;
      }
    }
    this.callBase(e);
  },
  _updateIndicator: function(e, t, i) {
    if (!(i === "sort" && x(t.groupIndex)))
      return this.callBase.apply(this, arguments);
  },
  _getIndicatorElements: function(e, t) {
    var i = this.callBase(e);
    return t ? i : i && i.not("." + Zx);
  }
}, N$ = T({}, OT, {
  _createRow(e) {
    const t = this.callBase(e);
    return e.rowType === "header" && w.on(t, oe(Xe, "dxDataGridColumnHeadersView"), "td", this.createAction((i) => {
      this._processHeaderAction(i.event, t);
    })), t;
  },
  _processHeaderAction(e, t) {
    if (g(e.currentTarget).parent().get(0) !== t.get(0))
      return;
    const i = this;
    let n = null;
    const r = g(e.currentTarget), a = r.parent().index();
    let o = -1;
    [].slice.call(i.getCellElements(a)).some((h, p) => {
      if (h === r.get(0))
        return o = p, !0;
    });
    const l = i._columnsController.getVisibleColumns(a)[o], u = i.getController("editing"), d = i.option("editing.mode");
    u && u.isEditing() && (d === "batch" || d === "cell") || !i._isSortableElement(g(e.target)) || l && !x(l.groupIndex) && !l.command && (e.shiftKey ? n = "shift" : Pt(e) && (n = "ctrl"), setTimeout(() => {
      i._columnsController.changeSortOrder(l.index, n);
    }));
  },
  _renderCellContent(e, t) {
    const i = this, {
      column: n
    } = t;
    !n.command && t.rowType === "header" && i._applyColumnState({
      name: "sort",
      rootElement: e,
      column: n,
      showColumnLines: i.option("showColumnLines")
    }), this.callBase.apply(this, arguments);
  },
  _columnOptionChanged(e) {
    const {
      changeTypes: t
    } = e;
    if (t.length === 1 && t.sorting) {
      this._updateIndicators("sort");
      return;
    }
    this.callBase(e);
  },
  optionChanged(e) {
    const t = this;
    switch (e.name) {
      case "sorting":
        t._invalidate(), e.handled = !0;
        break;
      default:
        t.callBase(e);
    }
  }
}), $$ = T({}, OT, {
  _createGroupPanelItem(e, t) {
    const i = this, n = i.callBase(...arguments);
    return w.on(n, oe(Xe, "dxDataGridHeaderPanel"), i.createAction(() => {
      i._processGroupItemAction(t.index);
    })), i._applyColumnState({
      name: "sort",
      rootElement: n,
      column: {
        alignment: i.option("rtlEnabled") ? "right" : "left",
        allowSorting: t.allowSorting,
        sortOrder: t.sortOrder === "desc" ? "desc" : "asc"
      },
      showColumnLines: !0
    }), n;
  },
  _processGroupItemAction(e) {
    setTimeout(() => this.getController("columns").changeSortOrder(e));
  },
  optionChanged(e) {
    const t = this;
    switch (e.name) {
      case "sorting":
        t._invalidate(), e.handled = !0;
        break;
      default:
        t.callBase(e);
    }
  }
}), H$ = {
  defaultOptions: () => ({
    sorting: {
      mode: "single",
      ascendingText: q.format("dxDataGrid-sortingAscendingText"),
      descendingText: q.format("dxDataGrid-sortingDescendingText"),
      clearText: q.format("dxDataGrid-sortingClearText"),
      showSortIndexes: !0
    }
  }),
  extenders: {
    views: {
      columnHeadersView: N$,
      headerPanel: $$
    }
  }
};
xe.registerModule("sorting", H$);
var z$ = ze.abstract, W$ = ve.real(), RT = "scroll", uv = "dxscrollinit", dv = "dxscrollstart", cv = "dxscroll", hv = "dxscrollend", pv = "dxscrollstop", fv = "dxscrollcancel", BT = ze.inherit(function() {
  var e = oe(RT, "dxScrollEmitter");
  return {
    ctor: function(t) {
      this._element = t, this._locked = !1, this._proxiedScroll = (i) => {
        this._disposed || this._scroll(i);
      }, w.on(this._element, e, this._proxiedScroll);
    },
    _scroll: z$,
    check: function(t, i) {
      this._locked && i();
    },
    dispose: function() {
      this._disposed = !0, w.off(this._element, e, this._proxiedScroll);
    }
  };
}()), kT = BT.inherit({
  ctor: function(e, t) {
    this.callBase(e), this._timeout = t;
  },
  _scroll: function() {
    this._prepare(), this._forget();
  },
  _prepare: function() {
    this._timer && this._clearTimer(), this._locked = !0;
  },
  _clearTimer: function() {
    clearTimeout(this._timer), this._locked = !1, this._timer = null;
  },
  _forget: function() {
    var e = this;
    this._timer = setTimeout(function() {
      e._clearTimer();
    }, this._timeout);
  },
  dispose: function() {
    this.callBase(), this._clearTimer();
  }
}), Jx = kT.inherit({
  ctor: function(e) {
    this.callBase(e, 400), this._lastWheelDirection = null;
  },
  check: function(e, t) {
    this._checkDirectionChanged(e), this.callBase(e, t);
  },
  _checkDirectionChanged: function(e) {
    if (!si(e)) {
      this._lastWheelDirection = null;
      return;
    }
    var t = e.shiftKey || !1, i = this._lastWheelDirection !== null && t !== this._lastWheelDirection;
    this._lastWheelDirection = t, this._locked = this._locked && !i;
  }
}), Ig = kT.inherit({
  ctor: function(e) {
    this.callBase(e, 400);
  }
});
(function() {
  var {
    ios: e,
    android: t
  } = W$;
  (e || t) && (Ig = BT.inherit({
    _scroll: function() {
      this._locked = !0;
      var i = this;
      Vn(this._scrollFrame), this._scrollFrame = Bd(function() {
        i._locked = !1;
      });
    },
    check: function(i, n) {
      Vn(this._scrollFrame), Vn(this._checkFrame);
      var r = this, a = this.callBase;
      this._checkFrame = Bd(function() {
        a.call(r, i, n), r._locked = !1;
      });
    },
    dispose: function() {
      this.callBase(), Vn(this._scrollFrame), Vn(this._checkFrame);
    }
  }));
})();
var G$ = Al.inherit(function() {
  var e = Math.round(16.666666666666668);
  return {
    ctor: function(t) {
      this.callBase.apply(this, arguments), this.direction = "both", this._pointerLocker = new Ig(t), this._wheelLocker = new Jx(t);
    },
    validate: function() {
      return !0;
    },
    configure: function(t) {
      t.scrollTarget && (this._pointerLocker.dispose(), this._wheelLocker.dispose(), this._pointerLocker = new Ig(t.scrollTarget), this._wheelLocker = new Jx(t.scrollTarget)), this.callBase(t);
    },
    _init: function(t) {
      this._wheelLocker.check(t, function() {
        si(t) && this._accept(t);
      }.bind(this)), this._pointerLocker.check(t, function() {
        var i = this.isNative && Ca(t);
        !si(t) && !i && this._accept(t);
      }.bind(this)), this._fireEvent(uv, t), this._prevEventData = _t(t);
    },
    move: function(t) {
      this.callBase.apply(this, arguments), t.isScrollingEvent = this.isNative || t.isScrollingEvent;
    },
    _start: function(t) {
      this._savedEventData = _t(t), this._fireEvent(dv, t), this._prevEventData = _t(t);
    },
    _move: function(t) {
      var i = _t(t);
      this._fireEvent(cv, t, {
        delta: aa(this._prevEventData, i)
      });
      var n = aa(this._savedEventData, i);
      n.time > 200 && (this._savedEventData = this._prevEventData), this._prevEventData = _t(t);
    },
    _end: function(t) {
      var i = aa(this._prevEventData, _t(t)), n = {
        x: 0,
        y: 0
      };
      if (!si(t) && i.time < 100) {
        var r = aa(this._savedEventData, this._prevEventData), a = e / r.time;
        n = {
          x: r.x * a,
          y: r.y * a
        };
      }
      this._fireEvent(hv, t, {
        velocity: n
      });
    },
    _stop: function(t) {
      this._fireEvent(pv, t);
    },
    cancel: function(t) {
      this.callBase.apply(this, arguments), this._fireEvent(fv, t);
    },
    dispose: function() {
      this.callBase.apply(this, arguments), this._pointerLocker.dispose(), this._wheelLocker.dispose();
    },
    _clearSelection: function() {
      if (!this.isNative)
        return this.callBase.apply(this, arguments);
    },
    _toggleGestureCover: function() {
      if (!this.isNative)
        return this.callBase.apply(this, arguments);
    }
  };
}());
Ko({
  emitter: G$,
  events: [uv, dv, cv, hv, pv, fv]
});
const Qa = {
  init: uv,
  start: dv,
  move: cv,
  end: hv,
  stop: pv,
  cancel: fv,
  scroll: RT
};
var K$ = ze.abstract, FT = ze.inherit({
  ctor: function() {
    this._finished = !0, this._stopped = !1, this._proxiedStepCore = this._stepCore.bind(this);
  },
  start: function() {
    this._stopped = !1, this._finished = !1, this._stepCore();
  },
  stop: function() {
    this._stopped = !0, Vn(this._stepAnimationFrame);
  },
  _stepCore: function() {
    if (this._isStopped()) {
      this._stop();
      return;
    }
    if (this._isFinished()) {
      this._finished = !0, this._complete();
      return;
    }
    this._step(), this._stepAnimationFrame = Bd(this._proxiedStepCore);
  },
  _step: K$,
  _isFinished: $,
  _stop: $,
  _complete: $,
  _isStopped: function() {
    return this._stopped;
  },
  inProgress: function() {
    return !(this._stopped || this._finished);
  }
}), Tg = "dxScrollbar", PT = "dx-scrollable-scrollbar", ey = "".concat(PT, "-active"), U$ = "dx-scrollable-scroll", j$ = "dx-scrollable-scroll-content", q$ = "dx-scrollbar-hoverable", ty = "horizontal", X$ = 15, Dn = {
  onScroll: "onScroll",
  onHover: "onHover",
  always: "always",
  never: "never"
}, vo = null, MT = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      direction: null,
      visible: !1,
      activeStateEnabled: !1,
      visibilityMode: Dn.onScroll,
      containerSize: 0,
      contentSize: 0,
      expandable: !0,
      scaleRatio: 1
    });
  },
  _init: function() {
    this.callBase(), this._isHovered = !1;
  },
  _initMarkup: function() {
    this._renderThumb(), this.callBase();
  },
  _render: function() {
    this.callBase(), this._renderDirection(), this._update(), this._attachPointerDownHandler(), this.option("hoverStateEnabled", this._isHoverMode()), this.$element().toggleClass(q$, this.option("hoverStateEnabled"));
  },
  _renderThumb: function() {
    this._$thumb = g("<div>").addClass(U$), g("<div>").addClass(j$).appendTo(this._$thumb), this.$element().addClass(PT).append(this._$thumb);
  },
  isThumb: function(e) {
    return !!this.$element().find(e).length;
  },
  _isHoverMode: function() {
    var e = this.option("visibilityMode");
    return (e === Dn.onHover || e === Dn.always) && this.option("expandable");
  },
  _renderDirection: function() {
    var e = this.option("direction");
    this.$element().addClass("dx-scrollbar-" + e), this._dimension = e === ty ? "width" : "height", this._prop = e === ty ? "left" : "top";
  },
  _attachPointerDownHandler: function() {
    w.on(this._$thumb, oe(je.down, Tg), this.feedbackOn.bind(this));
  },
  feedbackOn: function() {
    this.$element().addClass(ey), vo = this;
  },
  feedbackOff: function() {
    this.$element().removeClass(ey), vo = null;
  },
  cursorEnter: function() {
    this._isHovered = !0, this._needScrollbar() && this.option("visible", !0);
  },
  cursorLeave: function() {
    this._isHovered = !1, this.option("visible", !1);
  },
  _renderDimensions: function() {
    this._$thumb.css({
      width: this.option("width"),
      height: this.option("height")
    });
  },
  _toggleVisibility: function(e) {
    this.option("visibilityMode") === Dn.onScroll && this._$thumb.css("opacity"), e = this._adjustVisibility(e), this.option().visible = e, this._$thumb.toggleClass("dx-state-invisible", !e);
  },
  _adjustVisibility: function(e) {
    if (this._baseContainerToContentRatio && !this._needScrollbar())
      return !1;
    switch (this.option("visibilityMode")) {
      case Dn.onScroll:
        break;
      case Dn.onHover:
        e = e || !!this._isHovered;
        break;
      case Dn.never:
        e = !1;
        break;
      case Dn.always:
        e = !0;
    }
    return e;
  },
  moveTo: function(e) {
    if (!this._isHidden()) {
      Me(e) && (e = e[this._prop] || 0);
      var t = {};
      t[this._prop] = this._calculateScrollBarPosition(e), kt(this._$thumb, t);
    }
  },
  _calculateScrollBarPosition: function(e) {
    return -e * this._thumbRatio;
  },
  _update: function() {
    var e = Math.round(this.option("containerSize")), t = Math.round(this.option("contentSize")), i = Math.round(this.option("baseContainerSize")), n = Math.round(this.option("baseContentSize"));
    isNaN(i) && (i = e, n = t), this._baseContainerToContentRatio = n ? i / n : i, this._realContainerToContentRatio = t ? e / t : e;
    var r = Math.round(Math.max(Math.round(e * this._realContainerToContentRatio), X$));
    this._thumbRatio = (e - r) / (this.option("scaleRatio") * (t - e)), this.option(this._dimension, r / this.option("scaleRatio")), this.$element().css("display", this._needScrollbar() ? "" : "none");
  },
  _isHidden: function() {
    return this.option("visibilityMode") === Dn.never;
  },
  _needScrollbar: function() {
    return !this._isHidden() && this._baseContainerToContentRatio < 1;
  },
  containerToContentRatio: function() {
    return this._realContainerToContentRatio;
  },
  _normalizeSize: function(e) {
    return Me(e) ? e[this._dimension] || 0 : e;
  },
  _clean: function() {
    this.callBase(), this === vo && (vo = null), w.off(this._$thumb, "." + Tg);
  },
  _optionChanged: function(e) {
    if (!this._isHidden())
      switch (e.name) {
        case "containerSize":
        case "contentSize":
          this.option()[e.name] = this._normalizeSize(e.value), this._update();
          break;
        case "baseContentSize":
        case "baseContainerSize":
          this._update();
          break;
        case "visibilityMode":
        case "direction":
          this._invalidate();
          break;
        case "scaleRatio":
          this._update();
          break;
        default:
          this.callBase.apply(this, arguments);
      }
  },
  update: bo(function() {
    this._adjustVisibility() && this.option("visible", !0);
  })
});
En.add(function() {
  w.subscribeGlobal(ee.getDocument(), oe(je.up, Tg), function() {
    vo && vo.feedbackOff();
  });
});
var LT = "dxSimulatedScrollable", Y$ = "dxScrollableStrategy", hu = LT + "Cursor", lp = LT + "Keyboard", up = "dx-scrollable-simulated", Z$ = "dx-scrollable-scrollbars-alwaysvisible", Q$ = "dx-scrollable-scrollbar", sn = "vertical", Yt = "horizontal", Hd = 0.92, VT = 0.5, NT = 1, J$ = Math.round(1e3 / 60), eH = 40, tH = 500, iH = NT / 5, nH = 400, rH = nH / J$, aH = (1 - Math.pow(Hd, rH)) / (1 - Hd), An = {
  PAGE_UP: "pageUp",
  PAGE_DOWN: "pageDown",
  END: "end",
  HOME: "home",
  LEFT: "leftArrow",
  UP: "upArrow",
  RIGHT: "rightArrow",
  DOWN: "downArrow",
  TAB: "tab"
}, $T = FT.inherit({
  ctor: function(e) {
    this.callBase(), this.scroller = e;
  },
  VELOCITY_LIMIT: NT,
  _isFinished: function() {
    return Math.abs(this.scroller._velocity) <= this.VELOCITY_LIMIT;
  },
  _step: function() {
    this.scroller._scrollStep(this.scroller._velocity), this.scroller._velocity *= this._acceleration();
  },
  _acceleration: function() {
    return this.scroller._inBounds() ? Hd : VT;
  },
  _complete: function() {
    this.scroller._scrollComplete();
  }
}), oH = $T.inherit({
  VELOCITY_LIMIT: iH,
  _isFinished: function() {
    return this.scroller._crossBoundOnNextStep() || this.callBase();
  },
  _acceleration: function() {
    return Hd;
  },
  _complete: function() {
    this.scroller._move(this.scroller._bounceLocation), this.callBase();
  }
}), HT = ze.inherit({
  ctor: function(e) {
    this._initOptions(e), this._initAnimators(), this._initScrollbar();
  },
  _initOptions: function(e) {
    this._location = 0, this._topReached = !1, this._bottomReached = !1, this._axis = e.direction === Yt ? "x" : "y", this._prop = e.direction === Yt ? "left" : "top", this._dimension = e.direction === Yt ? "width" : "height", this._scrollProp = e.direction === Yt ? "scrollLeft" : "scrollTop", B(e, (t, i) => {
      this["_" + t] = i;
    });
  },
  _initAnimators: function() {
    this._inertiaAnimator = new $T(this), this._bounceAnimator = new oH(this);
  },
  _initScrollbar: function() {
    this._scrollbar = new MT(g("<div>").appendTo(this._$container), {
      direction: this._direction,
      visible: this._scrollByThumb,
      visibilityMode: this._visibilityModeNormalize(this._scrollbarVisible),
      expandable: this._scrollByThumb
    }), this._$scrollbar = this._scrollbar.$element();
  },
  _visibilityModeNormalize: function(e) {
    return e === !0 ? "onScroll" : e === !1 ? "never" : e;
  },
  _scrollStep: function(e) {
    var t = this._location;
    this._location += e, this._suppressBounce(), this._move(), !(Math.abs(t - this._location) < 1) && w.triggerHandler(this._$container, {
      type: "scroll"
    });
  },
  _suppressBounce: function() {
    this._bounceEnabled || this._inBounds(this._location) || (this._velocity = 0, this._location = this._boundLocation());
  },
  _boundLocation: function(e) {
    return e = e !== void 0 ? e : this._location, Math.max(Math.min(e, this._maxOffset), this._minOffset);
  },
  _move: function(e) {
    this._location = e !== void 0 ? e * this._getScaleRatio() : this._location, this._moveContent(), this._moveScrollbar();
  },
  _moveContent: function() {
    var e = this._location;
    this._$container[this._scrollProp](-e / this._getScaleRatio()), this._moveContentByTranslator(e);
  },
  _getScaleRatio: function() {
    if (Re() && !this._scaleRatio) {
      var e = this._$element.get(0), t = this._getRealDimension(e, this._dimension), i = this._getBaseDimension(e, this._dimension);
      this._scaleRatio = Math.round(t / i * 100) / 100;
    }
    return this._scaleRatio || 1;
  },
  _getRealDimension: function(e, t) {
    return Math.round(Et(e)[t]);
  },
  _getBaseDimension: function(e, t) {
    var i = "offset" + Js(t);
    return e[i];
  },
  _moveContentByTranslator: function(e) {
    var t, i = -this._maxScrollPropValue;
    if (e > 0 ? t = e : e <= i ? t = e - i : t = e % 1, this._translateOffset !== t) {
      var n = {};
      if (n[this._prop] = t, this._translateOffset = t, t === 0) {
        Dl(this._$content);
        return;
      }
      kt(this._$content, n);
    }
  },
  _moveScrollbar: function() {
    this._scrollbar.moveTo(this._location);
  },
  _scrollComplete: function() {
    this._inBounds() && (this._hideScrollbar(), this._completeDeferred && this._completeDeferred.resolve()), this._scrollToBounds();
  },
  _scrollToBounds: function() {
    this._inBounds() || (this._bounceAction(), this._setupBounce(), this._bounceAnimator.start());
  },
  _setupBounce: function() {
    var e = this._bounceLocation = this._boundLocation(), t = e - this._location;
    this._velocity = t / aH;
  },
  _inBounds: function(e) {
    return e = e !== void 0 ? e : this._location, this._boundLocation(e) === e;
  },
  _crossBoundOnNextStep: function() {
    var e = this._location, t = e + this._velocity;
    return e < this._minOffset && t >= this._minOffset || e > this._maxOffset && t <= this._maxOffset;
  },
  _initHandler: function(e) {
    this._stopScrolling(), this._prepareThumbScrolling(e);
  },
  _stopScrolling: bo(function() {
    this._hideScrollbar(), this._inertiaAnimator.stop(), this._bounceAnimator.stop();
  }),
  _prepareThumbScrolling: function(e) {
    if (!si(e.originalEvent)) {
      var t = g(e.originalEvent.target), i = this._isScrollbar(t);
      i && this._moveToMouseLocation(e), this._thumbScrolling = i || this._isThumb(t), this._crossThumbScrolling = !this._thumbScrolling && this._isAnyThumbScrolling(t), this._thumbScrolling && this._scrollbar.feedbackOn();
    }
  },
  _isThumbScrollingHandler: function(e) {
    return this._isThumb(e);
  },
  _moveToMouseLocation: function(e) {
    var t = e["page" + this._axis.toUpperCase()] - this._$element.offset()[this._prop], i = this._location + t / this._containerToContentRatio() - Fe(this._$container) / 2;
    this._scrollStep(-Math.round(i));
  },
  _startHandler: function() {
    this._showScrollbar();
  },
  _moveHandler: function(e) {
    this._crossThumbScrolling || (this._thumbScrolling && (e[this._axis] = -Math.round(e[this._axis] / this._containerToContentRatio())), this._scrollBy(e));
  },
  _scrollBy: function(e) {
    e = e[this._axis], this._inBounds() || (e *= VT), this._scrollStep(e);
  },
  _scrollByHandler: function(e) {
    this._scrollBy(e), this._scrollComplete();
  },
  _containerToContentRatio: function() {
    return this._scrollbar.containerToContentRatio();
  },
  _endHandler: function(e) {
    return this._completeDeferred = new U(), this._velocity = e[this._axis], this._inertiaHandler(), this._resetThumbScrolling(), this._completeDeferred.promise();
  },
  _inertiaHandler: function() {
    this._suppressInertia(), this._inertiaAnimator.start();
  },
  _suppressInertia: function() {
    (!this._inertiaEnabled || this._thumbScrolling) && (this._velocity = 0);
  },
  _resetThumbScrolling: function() {
    this._thumbScrolling = !1, this._crossThumbScrolling = !1;
  },
  _stopHandler: function() {
    this._thumbScrolling && this._scrollComplete(), this._resetThumbScrolling(), this._scrollToBounds();
  },
  _disposeHandler: function() {
    this._stopScrolling(), this._$scrollbar.remove();
  },
  _updateHandler: function() {
    this._update(), this._moveToBounds();
  },
  _update: function() {
    return this._stopScrolling(), oi(() => {
      this._resetScaleRatio(), this._updateLocation(), this._updateBounds(), this._updateScrollbar(), Bt(() => {
        this._moveScrollbar(), this._scrollbar.update();
      });
    });
  },
  _resetScaleRatio: function() {
    this._scaleRatio = null;
  },
  _updateLocation: function() {
    this._location = (Mi(this._$content)[this._prop] - this._$container[this._scrollProp]()) * this._getScaleRatio();
  },
  _updateBounds: function() {
    this._maxOffset = this._getMaxOffset(), this._minOffset = this._getMinOffset();
  },
  _getMaxOffset: function() {
    return 0;
  },
  _getMinOffset: function() {
    return this._maxScrollPropValue = Math.max(this._contentSize() - this._containerSize(), 0), -this._maxScrollPropValue;
  },
  _updateScrollbar: Hm(function() {
    var e = this._containerSize(), t = this._contentSize(), i = this._getBaseDimension(this._$container.get(0), this._dimension), n = this._getBaseDimension(this._$content.get(0), this._dimension);
    Bt(() => {
      this._scrollbar.option({
        containerSize: e,
        contentSize: t,
        baseContainerSize: i,
        baseContentSize: n,
        scaleRatio: this._getScaleRatio()
      });
    });
  }),
  _moveToBounds: bo(Hm(bo(function() {
    var e = this._boundLocation(), t = e !== this._location;
    this._location = e, this._move(), t && this._scrollAction();
  }))),
  _createActionsHandler: function(e) {
    this._scrollAction = e.scroll, this._bounceAction = e.bounce;
  },
  _showScrollbar: function() {
    this._scrollbar.option("visible", !0);
  },
  _hideScrollbar: function() {
    this._scrollbar.option("visible", !1);
  },
  _containerSize: function() {
    return this._getRealDimension(this._$container.get(0), this._dimension);
  },
  _contentSize: function() {
    var e = this._$content.css("overflow" + this._axis.toUpperCase()) === "hidden", t = this._getRealDimension(this._$content.get(0), this._dimension);
    if (!e) {
      var i = this._$content[0]["scroll" + Js(this._dimension)] * this._getScaleRatio();
      t = Math.max(i, t);
    }
    return t;
  },
  _validateEvent: function(e) {
    var t = g(e.originalEvent.target);
    return this._isThumb(t) || this._isScrollbar(t);
  },
  _isThumb: function(e) {
    return this._scrollByThumb && this._scrollbar.isThumb(e);
  },
  _isScrollbar: function(e) {
    return this._scrollByThumb && e && e.is(this._$scrollbar);
  },
  _reachedMin: function() {
    return Math.round(this._location - this._minOffset) <= 0;
  },
  _reachedMax: function() {
    return Math.round(this._location - this._maxOffset) >= 0;
  },
  _cursorEnterHandler: function() {
    this._resetScaleRatio(), this._updateScrollbar(), this._scrollbar.cursorEnter();
  },
  _cursorLeaveHandler: function() {
    this._scrollbar.cursorLeave();
  },
  dispose: $
}), Ki, Ja, zT = ze.inherit({
  ctor: function(e) {
    this._init(e);
  },
  _init: function(e) {
    this._component = e, this._$element = e.$element(), this._$container = g(e.container()), this._$wrapper = e._$wrapper, this._$content = e.$content(), this.option = e.option.bind(e), this._createActionByOption = e._createActionByOption.bind(e), this._isLocked = e._isLocked.bind(e), this._isDirection = e._isDirection.bind(e), this._allowedDirection = e._allowedDirection.bind(e), this._getMaxOffset = e._getMaxOffset.bind(e);
  },
  render: function() {
    this._$element.addClass(up), this._createScrollers(), this.option("useKeyboard") && this._$container.prop("tabIndex", 0), this._attachKeyboardHandler(), this._attachCursorHandlers();
  },
  _createScrollers: function() {
    this._scrollers = {}, this._isDirection(Yt) && this._createScroller(Yt), this._isDirection(sn) && this._createScroller(sn), this._$element.toggleClass(Z$, this.option("showScrollbar") === "always");
  },
  _createScroller: function(e) {
    this._scrollers[e] = new HT(this._scrollerOptions(e));
  },
  _scrollerOptions: function(e) {
    return {
      direction: e,
      $content: this._$content,
      $container: this._$container,
      $wrapper: this._$wrapper,
      $element: this._$element,
      scrollByThumb: this.option("scrollByThumb"),
      scrollbarVisible: this.option("showScrollbar"),
      bounceEnabled: this.option("bounceEnabled"),
      inertiaEnabled: this.option("inertiaEnabled"),
      isAnyThumbScrolling: this._isAnyThumbScrolling.bind(this)
    };
  },
  _applyScaleRatio: function(e) {
    for (var t in this._scrollers) {
      var i = this._getPropByDirection(t);
      if (x(e[i])) {
        var n = this._scrollers[t];
        e[i] *= n._getScaleRatio();
      }
    }
    return e;
  },
  _isAnyThumbScrolling: function(e) {
    var t = !1;
    return this._eventHandler("isThumbScrolling", e).done(function(i, n) {
      t = i || n;
    }), t;
  },
  handleInit: function(e) {
    this._suppressDirections(e), this._eventForUserAction = e, this._eventHandler("init", e);
  },
  _suppressDirections: function(e) {
    if (si(e.originalEvent)) {
      this._prepareDirections(!0);
      return;
    }
    this._prepareDirections(), this._eachScroller(function(t, i) {
      var n = g(e.originalEvent.target), r = t._validateEvent(e) || this.option("scrollByContent") && this._isContent(n);
      this._validDirections[i] = r;
    });
  },
  _isContent: function(e) {
    return !!e.closest(this._$element).length;
  },
  _prepareDirections: function(e) {
    e = e || !1, this._validDirections = {}, this._validDirections[Yt] = e, this._validDirections[sn] = e;
  },
  _eachScroller: function(e) {
    e = e.bind(this), B(this._scrollers, function(t, i) {
      e(i, t);
    });
  },
  handleStart: function(e) {
    this._eventForUserAction = e, this._eventHandler("start").done(this._startAction);
  },
  _saveActive: function() {
    Ja = this;
  },
  _resetActive: function() {
    Ja === this && (Ja = null);
  },
  handleMove: function(e) {
    if (this._isLocked()) {
      e.cancel = !0, this._resetActive();
      return;
    }
    this._saveActive(), e.preventDefault && e.preventDefault(), this._adjustDistance(e, e.delta), this._eventForUserAction = e, this._eventHandler("move", e.delta);
  },
  _adjustDistance: function(e, t) {
    t.x *= this._validDirections[Yt], t.y *= this._validDirections[sn];
    var i = this._tryGetDevicePixelRatio();
    i && si(e.originalEvent) && (t.x = Math.round(t.x / i * 100) / 100, t.y = Math.round(t.y / i * 100) / 100);
  },
  _tryGetDevicePixelRatio: function() {
    if (Re())
      return ke().devicePixelRatio;
  },
  handleEnd: function(e) {
    return this._resetActive(), this._refreshCursorState(e.originalEvent && e.originalEvent.target), this._adjustDistance(e, e.velocity), this._eventForUserAction = e, this._eventHandler("end", e.velocity).done(this._endAction);
  },
  handleCancel: function(e) {
    return this._resetActive(), this._eventForUserAction = e, this._eventHandler("end", {
      x: 0,
      y: 0
    });
  },
  handleStop: function() {
    this._resetActive(), this._eventHandler("stop");
  },
  handleScroll: function() {
    this._updateRtlConfig(), this._scrollAction();
  },
  _attachKeyboardHandler: function() {
    w.off(this._$element, ".".concat(lp)), !this.option("disabled") && this.option("useKeyboard") && w.on(this._$element, oe("keydown", lp), this._keyDownHandler.bind(this));
  },
  _keyDownHandler: function(e) {
    if (clearTimeout(this._updateHandlerTimeout), this._updateHandlerTimeout = setTimeout(() => {
      ht(e) === An.TAB && this._eachScroller((i) => {
        i._updateHandler();
      });
    }), !!this._$container.is(ee.getActiveElement(this._$container.get(0)))) {
      var t = !0;
      switch (ht(e)) {
        case An.DOWN:
          this._scrollByLine({
            y: 1
          });
          break;
        case An.UP:
          this._scrollByLine({
            y: -1
          });
          break;
        case An.RIGHT:
          this._scrollByLine({
            x: 1
          });
          break;
        case An.LEFT:
          this._scrollByLine({
            x: -1
          });
          break;
        case An.PAGE_DOWN:
          this._scrollByPage(1);
          break;
        case An.PAGE_UP:
          this._scrollByPage(-1);
          break;
        case An.HOME:
          this._scrollToHome();
          break;
        case An.END:
          this._scrollToEnd();
          break;
        default:
          t = !1;
      }
      t && (e.stopPropagation(), e.preventDefault());
    }
  },
  _scrollByLine: function(e) {
    var t = this._tryGetDevicePixelRatio(), i = eH;
    t && (i = Math.abs(i / t * 100) / 100), this.scrollBy({
      top: (e.y || 0) * -i,
      left: (e.x || 0) * -i
    });
  },
  _scrollByPage: function(e) {
    var t = this._wheelProp(), i = this._dimensionByProp(t), n = {}, r = i === "width" ? Ae : Fe;
    n[t] = e * -r(this._$container), this.scrollBy(n);
  },
  _dimensionByProp: function(e) {
    return e === "left" ? "width" : "height";
  },
  _getPropByDirection: function(e) {
    return e === Yt ? "left" : "top";
  },
  _scrollToHome: function() {
    var e = this._wheelProp(), t = {};
    t[e] = 0, this._component.scrollTo(t);
  },
  _scrollToEnd: function() {
    var e = this._wheelProp(), t = this._dimensionByProp(e), i = {}, n = t === "width" ? Ae : Fe;
    i[e] = n(this._$content) - n(this._$container), this._component.scrollTo(i);
  },
  createActions: function() {
    this._startAction = this._createActionHandler("onStart"), this._endAction = this._createActionHandler("onEnd"), this._updateAction = this._createActionHandler("onUpdated"), this._createScrollerActions();
  },
  _createScrollerActions: function() {
    this._scrollAction = this._createActionHandler("onScroll"), this._bounceAction = this._createActionHandler("onBounce"), this._eventHandler("createActions", {
      scroll: this._scrollAction,
      bounce: this._bounceAction
    });
  },
  _createActionHandler: function(e) {
    var t = this._createActionByOption(e);
    return () => {
      t(T(this._createActionArgs(), arguments));
    };
  },
  _createActionArgs: function() {
    var {
      horizontal: e,
      vertical: t
    } = this._scrollers, i = this._getScrollOffset();
    return this._scrollOffset = {
      top: t && i.top,
      left: e && i.left
    }, {
      event: this._eventForUserAction,
      scrollOffset: this._scrollOffset,
      reachedLeft: e && e._reachedMax(),
      reachedRight: e && e._reachedMin(),
      reachedTop: t && t._reachedMax(),
      reachedBottom: t && t._reachedMin()
    };
  },
  _getScrollOffset() {
    return {
      top: -this.location().top,
      left: -this.location().left
    };
  },
  _eventHandler: function(e) {
    var t = [].slice.call(arguments).slice(1), i = wt(this._scrollers, (n) => n["_" + e + "Handler"].apply(n, t));
    return ge.apply(g, i).promise();
  },
  location: function() {
    var e = Mi(this._$content);
    return e.top -= this._$container.scrollTop(), e.left -= this._$container.scrollLeft(), e;
  },
  disabledChanged: function() {
    this._attachCursorHandlers();
  },
  _attachCursorHandlers: function() {
    w.off(this._$element, ".".concat(hu)), !this.option("disabled") && this._isHoverMode() && (w.on(this._$element, oe("mouseenter", hu), this._cursorEnterHandler.bind(this)), w.on(this._$element, oe("mouseleave", hu), this._cursorLeaveHandler.bind(this)));
  },
  _isHoverMode: function() {
    return this.option("showScrollbar") === "onHover";
  },
  _cursorEnterHandler: function(e) {
    e = e || {}, e.originalEvent = e.originalEvent || {}, !(Ja || e.originalEvent._hoverHandled) && (Ki && Ki._cursorLeaveHandler(), Ki = this, this._eventHandler("cursorEnter"), e.originalEvent._hoverHandled = !0);
  },
  _cursorLeaveHandler: function(e) {
    Ki !== this || Ja === Ki || (this._eventHandler("cursorLeave"), Ki = null, this._refreshCursorState(e && e.relatedTarget));
  },
  _refreshCursorState: function(e) {
    if (!(!this._isHoverMode() && (!e || Ja))) {
      var t = g(e), i = t.closest(".".concat(up, ":not(.dx-state-disabled)")), n = i.length && i.data(Y$);
      Ki && Ki !== n && Ki._cursorLeaveHandler(), n && n._cursorEnterHandler();
    }
  },
  update: function() {
    var e = this._eventHandler("update").done(this._updateAction);
    return ge(e, oi(() => {
      var t = this._allowedDirections();
      return Bt(() => {
        var i = t.vertical ? "pan-x" : "";
        i = t.horizontal ? "pan-y" : i, i = t.vertical && t.horizontal ? "none" : i, this._$container.css("touchAction", i);
      }), ge().promise();
    }));
  },
  _allowedDirections: function() {
    var e = this.option("bounceEnabled"), t = this._scrollers[sn], i = this._scrollers[Yt];
    return {
      vertical: t && (t._minOffset < 0 || e),
      horizontal: i && (i._minOffset < 0 || e)
    };
  },
  _updateBounds: function() {
    this._scrollers[Yt] && this._scrollers[Yt]._updateBounds();
  },
  _isHorizontalAndRtlEnabled: function() {
    return this.option("rtlEnabled") && this.option("direction") !== sn;
  },
  updateRtlPosition: function(e) {
    if (e && (this._rtlConfig = {
      scrollRight: 0,
      clientWidth: this._$container.get(0).clientWidth,
      windowPixelRatio: this._getWindowDevicePixelRatio()
    }), this._updateBounds(), this._isHorizontalAndRtlEnabled()) {
      var t = this._getMaxOffset().left - this._rtlConfig.scrollRight;
      t <= 0 && (t = 0, this._rtlConfig.scrollRight = this._getMaxOffset().left), this._getScrollOffset().left !== t && (this._rtlConfig.skipUpdating = !0, this._component.scrollTo({
        left: t
      }), this._rtlConfig.skipUpdating = !1);
    }
  },
  _updateRtlConfig: function() {
    if (this._isHorizontalAndRtlEnabled() && !this._rtlConfig.skipUpdating) {
      var {
        clientWidth: e,
        scrollLeft: t
      } = this._$container.get(0), i = this._getWindowDevicePixelRatio();
      this._rtlConfig.windowPixelRatio === i && this._rtlConfig.clientWidth === e && (this._rtlConfig.scrollRight = this._getMaxOffset().left - t), this._rtlConfig.clientWidth = e, this._rtlConfig.windowPixelRatio = i;
    }
  },
  _getWindowDevicePixelRatio: function() {
    return Re() ? ke().devicePixelRatio : 1;
  },
  scrollBy: function(e) {
    var t = this._scrollers[sn], i = this._scrollers[Yt];
    t && (e.top = t._boundLocation(e.top + t._location) - t._location), i && (e.left = i._boundLocation(e.left + i._location) - i._location), this._prepareDirections(!0), this._startAction(), this._eventHandler("scrollBy", {
      x: e.left,
      y: e.top
    }), this._endAction(), this._updateRtlConfig();
  },
  validate: function(e) {
    return si(e) && Pt(e) || this.option("disabled") ? !1 : this.option("bounceEnabled") ? !0 : si(e) ? this._validateWheel(e) : this._validateMove(e);
  },
  _validateWheel: function(e) {
    var t = this._scrollers[this._wheelDirection(e)], i = t._reachedMin(), n = t._reachedMax(), r = !i || !n, a = !i && !n, o = i && e.delta > 0, s = n && e.delta < 0, l = r && (a || o || s);
    return l = l || this._validateWheelTimer !== void 0, l && (clearTimeout(this._validateWheelTimer), this._validateWheelTimer = setTimeout(() => {
      this._validateWheelTimer = void 0;
    }, tH)), l;
  },
  _validateMove: function(e) {
    return !this.option("scrollByContent") && !g(e.target).closest(".".concat(Q$)).length ? !1 : this._allowedDirection();
  },
  getDirection: function(e) {
    return si(e) ? this._wheelDirection(e) : this._allowedDirection();
  },
  _wheelProp: function() {
    return this._wheelDirection() === Yt ? "left" : "top";
  },
  _wheelDirection: function(e) {
    switch (this.option("direction")) {
      case Yt:
        return Yt;
      case sn:
        return sn;
      default:
        return e && e.shiftKey ? Yt : sn;
    }
  },
  dispose: function() {
    this._resetActive(), Ki === this && (Ki = null), this._eventHandler("dispose"), this._detachEventHandlers(), this._$element.removeClass(up), this._eventForUserAction = null, clearTimeout(this._validateWheelTimer), clearTimeout(this._updateHandlerTimeout);
  },
  _detachEventHandlers: function() {
    w.off(this._$element, ".".concat(hu)), w.off(this._$container, ".".concat(lp));
  }
}), iy = "dxNativeScrollable", dp = "dx-scrollable-native", sH = "dx-scrollable-scrollbar-simulated", lH = "dx-scrollable-scrollbars-hidden", os = "vertical", pu = "horizontal", uH = 500, gv = ze.inherit({
  ctor: function(e) {
    this._init(e);
  },
  _init: function(e) {
    this._component = e, this._$element = e.$element(), this._$container = g(e.container()), this._$content = e.$content(), this._direction = e.option("direction"), this._useSimulatedScrollbar = e.option("useSimulatedScrollbar"), this.option = e.option.bind(e), this._createActionByOption = e._createActionByOption.bind(e), this._isLocked = e._isLocked.bind(e), this._isDirection = e._isDirection.bind(e), this._allowedDirection = e._allowedDirection.bind(e), this._getMaxOffset = e._getMaxOffset.bind(e), this._isRtlNativeStrategy = e._isRtlNativeStrategy.bind(e);
  },
  render: function() {
    var e = ve.real(), t = e.platform;
    this._$element.addClass(dp).addClass(dp + "-" + t).toggleClass(lH, !this._isScrollbarVisible()), this._isScrollbarVisible() && this._useSimulatedScrollbar && this._renderScrollbars();
  },
  updateRtlPosition: function(e) {
    e && this.option("rtlEnabled") && this._isScrollbarVisible() && this._useSimulatedScrollbar && this._moveScrollbars();
  },
  _renderScrollbars: function() {
    this._scrollbars = {}, this._hideScrollbarTimeout = 0, this._$element.addClass(sH), this._renderScrollbar(os), this._renderScrollbar(pu);
  },
  _renderScrollbar: function(e) {
    this._isDirection(e) && (this._scrollbars[e] = new MT(g("<div>").appendTo(this._$element), {
      direction: e,
      expandable: this._component.option("scrollByThumb")
    }));
  },
  handleInit: $,
  handleStart: $,
  handleMove: function(e) {
    if (this._isLocked()) {
      e.cancel = !0;
      return;
    }
    this._allowedDirection() && (e.originalEvent.isScrollingEvent = !0);
  },
  handleEnd: $,
  handleCancel: $,
  handleStop: $,
  _eachScrollbar: function(e) {
    e = e.bind(this), B(this._scrollbars || {}, function(t, i) {
      e(i, t);
    });
  },
  createActions: function() {
    this._scrollAction = this._createActionByOption("onScroll"), this._updateAction = this._createActionByOption("onUpdated");
  },
  _createActionArgs: function() {
    var {
      left: e,
      top: t
    } = this.location();
    return {
      event: this._eventForUserAction,
      scrollOffset: this._getScrollOffset(),
      reachedLeft: this._isRtlNativeStrategy() ? this._isReachedRight(-e) : this._isReachedLeft(e),
      reachedRight: this._isRtlNativeStrategy() ? this._isReachedLeft(-Math.abs(e)) : this._isReachedRight(e),
      reachedTop: this._isDirection(os) ? Math.round(t) >= 0 : void 0,
      reachedBottom: this._isDirection(os) ? Math.round(Math.abs(t) - this._getMaxOffset().top) >= 0 : void 0
    };
  },
  _getScrollOffset: function() {
    var {
      top: e,
      left: t
    } = this.location();
    return {
      top: -e,
      left: this._normalizeOffsetLeft(-t)
    };
  },
  _normalizeOffsetLeft(e) {
    return this._isRtlNativeStrategy() ? this._getMaxOffset().left + e : e;
  },
  _isReachedLeft: function(e) {
    return this._isDirection(pu) ? Math.round(e) >= 0 : void 0;
  },
  _isReachedRight: function(e) {
    return this._isDirection(pu) ? Math.round(Math.abs(e) - this._getMaxOffset().left) >= 0 : void 0;
  },
  _isScrollbarVisible: function() {
    var {
      showScrollbar: e
    } = this.option();
    return e !== "never" && e !== !1;
  },
  handleScroll: function(e) {
    this._eventForUserAction = e, this._moveScrollbars(), this._scrollAction(this._createActionArgs());
  },
  _moveScrollbars: function() {
    var {
      top: e,
      left: t
    } = this._getScrollOffset();
    this._eachScrollbar(function(i) {
      i.moveTo({
        top: -e,
        left: -t
      }), i.option("visible", !0);
    }), this._hideScrollbars();
  },
  _hideScrollbars: function() {
    clearTimeout(this._hideScrollbarTimeout), this._hideScrollbarTimeout = setTimeout(function() {
      this._eachScrollbar(function(e) {
        e.option("visible", !1);
      });
    }.bind(this), uH);
  },
  location: function() {
    return {
      left: -this._$container.scrollLeft(),
      top: -this._$container.scrollTop()
    };
  },
  disabledChanged: $,
  update: function() {
    this._update(), this._updateAction(this._createActionArgs());
  },
  _update: function() {
    this._updateDimensions(), this._updateScrollbars();
  },
  _updateDimensions: function() {
    this._containerSize = {
      height: Fe(this._$container),
      width: Ae(this._$container)
    }, this._componentContentSize = {
      height: Fe(this._component.$content()),
      width: Ae(this._component.$content())
    }, this._contentSize = {
      height: Fe(this._$content),
      width: Ae(this._$content)
    };
  },
  _updateScrollbars: function() {
    this._eachScrollbar(function(e, t) {
      var i = t === os ? "height" : "width";
      e.option({
        containerSize: this._containerSize[i],
        contentSize: this._componentContentSize[i]
      }), e.update();
    });
  },
  _allowedDirections: function() {
    return {
      vertical: this._isDirection(os) && this._contentSize.height > this._containerSize.height,
      horizontal: this._isDirection(pu) && this._contentSize.width > this._containerSize.width
    };
  },
  dispose: function() {
    var e = this._$element.get(0).className, t = new RegExp(dp + "\\S*", "g");
    t.test(e) && this._$element.removeClass(e.match(t).join(" ")), w.off(this._$element, "." + iy), w.off(this._$container, "." + iy), this._removeScrollbars(), clearTimeout(this._hideScrollbarTimeout);
  },
  _removeScrollbars: function() {
    this._eachScrollbar(function(e) {
      e.$element().remove();
    });
  },
  scrollBy: function(e) {
    var t = this.location();
    this._$container.scrollTop(Math.round(-t.top - e.top)), this._$container.scrollLeft(Math.round(-t.left - e.left));
  },
  validate: function(e) {
    return this.option("disabled") || si(e) && this._isScrolledInMaxDirection(e) ? !1 : !!this._allowedDirection();
  },
  _isScrolledInMaxDirection(e) {
    var t = this._$container.get(0), i;
    return e.delta > 0 ? i = e.shiftKey ? !t.scrollLeft : !t.scrollTop : e.shiftKey ? i = t.scrollLeft >= this._getMaxOffset().left : i = t.scrollTop >= this._getMaxOffset().top, i;
  },
  getDirection: function() {
    return this._allowedDirection();
  }
}), WT = function() {
  return [{
    device: function() {
      return !ya;
    },
    options: {
      useNative: !1
    }
  }, {
    device: function(e) {
      return !ve.isSimulator() && ve.real().deviceType === "desktop" && e.platform === "generic";
    },
    options: {
      bounceEnabled: !1,
      scrollByThumb: !0,
      scrollByContent: xa,
      showScrollbar: "onHover"
    }
  }];
};
function GT(e, t) {
  for (var i = {
    left: 0,
    top: 0
  }, n = t; (r = n) !== null && r !== void 0 && r.offsetParent && !n.classList.contains(e); ) {
    var r, a = n.offsetParent, o = n.getBoundingClientRect(), s = a.getBoundingClientRect();
    i.left += o.left - s.left, i.top += o.top - s.top, n = n.offsetParent;
  }
  return i;
}
var zd = "vertical", KT = "horizontal", cp = "both", UT = "dx-scrollable-content";
function dH(e, t, i, n, r) {
  var a = ue({
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  }, r), o = t === zd, s = o ? "top" : "left", l = o ? "bottom" : "right", u = o ? "height" : "width", d = i["offset".concat(Js(u))], c = i["client".concat(Js(u))], h = i.getBoundingClientRect()[u], p = e.getBoundingClientRect()[u], f = 1;
  Math.abs(h - d) > 1 && (f = h / d);
  var v = GT(UT, e)[s] / f, m = n[s], C = m - v + a[s], b = m - v - p / f + c - a[l];
  return C <= 0 && b >= 0 ? m : m - (Math.abs(C) > Math.abs(b) ? b : C);
}
var dn = "dxScrollable", cH = "dxScrollableStrategy", ny = "dx-scrollable", hH = "dx-scrollable-disabled", pH = "dx-scrollable-container", fH = "dx-scrollable-wrapper", ry = "dx-scrollable-content", ln = "vertical", On = "horizontal", hp = "both", Si = wn.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      disabled: !1,
      onScroll: null,
      direction: ln,
      showScrollbar: "onScroll",
      useNative: !0,
      bounceEnabled: !0,
      scrollByContent: !0,
      scrollByThumb: !1,
      onUpdated: null,
      onStart: null,
      onEnd: null,
      onBounce: null,
      useSimulatedScrollbar: !1,
      useKeyboard: !0,
      inertiaEnabled: !0,
      updateManually: !1
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat(WT(), [{
      device: function() {
        return ya && ve.real().platform === "android" && !lt.mozilla;
      },
      options: {
        useSimulatedScrollbar: !0
      }
    }]);
  },
  _initOptions: function(e) {
    this.callBase(e), "useSimulatedScrollbar" in e || this._setUseSimulatedScrollbar();
  },
  _setUseSimulatedScrollbar: function() {
    this.initialOption("useSimulatedScrollbar") || this.option("useSimulatedScrollbar", !this.option("useNative"));
  },
  _init: function() {
    this.callBase(), this._initScrollableMarkup(), this._locked = !1;
  },
  _visibilityChanged: function(e) {
    e ? (this.update(), this._updateRtlPosition(), this._savedScrollOffset && this.scrollTo(this._savedScrollOffset), delete this._savedScrollOffset) : this._savedScrollOffset = this.scrollOffset();
  },
  _initScrollableMarkup: function() {
    var e = this.$element().addClass(ny), t = this._$container = g("<div>").addClass(pH), i = this._$wrapper = g("<div>").addClass(fH), n = this._$content = g("<div>").addClass(ry);
    n.append(e.contents()).appendTo(t), t.appendTo(i), i.appendTo(e);
  },
  _dimensionChanged: function() {
    this.update(), this._updateRtlPosition();
  },
  _initMarkup: function() {
    this.callBase(), this._renderDirection();
  },
  _render: function() {
    this._renderStrategy(), this._attachEventHandlers(), this._renderDisabledState(), this._createActions(), this.update(), this.callBase(), this._updateRtlPosition(!0);
  },
  _updateRtlPosition: function(e) {
    this._strategy.updateRtlPosition(e);
  },
  _getMaxOffset: function() {
    var {
      scrollWidth: e,
      clientWidth: t,
      scrollHeight: i,
      clientHeight: n
    } = g(this.container()).get(0);
    return {
      left: e - t,
      top: i - n
    };
  },
  _attachEventHandlers: function() {
    var e = this._strategy, t = {
      getDirection: e.getDirection.bind(e),
      validate: this._validate.bind(this),
      isNative: this.option("useNative"),
      scrollTarget: this._$container
    };
    w.off(this._$wrapper, "." + dn), w.on(this._$wrapper, oe(Qa.init, dn), t, this._initHandler.bind(this)), w.on(this._$wrapper, oe(Qa.start, dn), e.handleStart.bind(e)), w.on(this._$wrapper, oe(Qa.move, dn), e.handleMove.bind(e)), w.on(this._$wrapper, oe(Qa.end, dn), e.handleEnd.bind(e)), w.on(this._$wrapper, oe(Qa.cancel, dn), e.handleCancel.bind(e)), w.on(this._$wrapper, oe(Qa.stop, dn), e.handleStop.bind(e)), w.off(this._$container, "." + dn), w.on(this._$container, oe("scroll", dn), e.handleScroll.bind(e));
  },
  _validate: function(e) {
    return this._isLocked() ? !1 : (this._updateIfNeed(), this._moveIsAllowed(e));
  },
  _moveIsAllowed(e) {
    return this._strategy.validate(e);
  },
  handleMove(e) {
    this._strategy.handleMove(e);
  },
  _prepareDirections(e) {
    this._strategy._prepareDirections(e);
  },
  _initHandler: function() {
    var e = this._strategy;
    e.handleInit.apply(e, arguments);
  },
  _renderDisabledState: function() {
    this.$element().toggleClass(hH, this.option("disabled")), this.option("disabled") ? this._lock() : this._unlock();
  },
  _renderDirection: function() {
    this.$element().removeClass("dx-scrollable-" + On).removeClass("dx-scrollable-" + ln).removeClass("dx-scrollable-" + hp).addClass("dx-scrollable-" + this.option("direction"));
  },
  _renderStrategy: function() {
    this._createStrategy(), this._strategy.render(), this.$element().data(cH, this._strategy);
  },
  _createStrategy: function() {
    this._strategy = this.option("useNative") ? new gv(this) : new zT(this);
  },
  _createActions: function() {
    this._strategy && this._strategy.createActions();
  },
  _clean: function() {
    this._strategy && this._strategy.dispose();
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "onStart":
      case "onEnd":
      case "onUpdated":
      case "onScroll":
      case "onBounce":
        this._createActions();
        break;
      case "direction":
        this._resetInactiveDirection(), this._invalidate();
        break;
      case "useNative":
        this._setUseSimulatedScrollbar(), this._invalidate();
        break;
      case "inertiaEnabled":
      case "scrollByThumb":
      case "bounceEnabled":
      case "useKeyboard":
      case "showScrollbar":
      case "useSimulatedScrollbar":
        this._invalidate();
        break;
      case "disabled":
        this._renderDisabledState(), this._strategy && this._strategy.disabledChanged();
        break;
      case "updateManually":
      case "scrollByContent":
        break;
      case "width":
        this.callBase(e), this._updateRtlPosition();
        break;
      default:
        this.callBase(e);
    }
  },
  _resetInactiveDirection: function() {
    var e = this._getInactiveProp();
    if (!(!e || !Re())) {
      var t = this.scrollOffset();
      t[e] = 0, this.scrollTo(t);
    }
  },
  _getInactiveProp: function() {
    var e = this.option("direction");
    if (e === ln)
      return "left";
    if (e === On)
      return "top";
  },
  _location: function() {
    return this._strategy.location();
  },
  _normalizeLocation: function(e) {
    if (Me(e)) {
      var t = ct(e.left, e.x), i = ct(e.top, e.y);
      return {
        left: x(t) ? -t : void 0,
        top: x(i) ? -i : void 0
      };
    } else {
      var n = this.option("direction");
      return {
        left: n !== ln ? -e : void 0,
        top: n !== On ? -e : void 0
      };
    }
  },
  _isLocked: function() {
    return this._locked;
  },
  _lock: function() {
    this._locked = !0;
  },
  _unlock: function() {
    this.option("disabled") || (this._locked = !1);
  },
  _isDirection: function(e) {
    var t = this.option("direction");
    return e === ln ? t !== On : e === On ? t !== ln : t === e;
  },
  _updateAllowedDirection: function() {
    var e = this._strategy._allowedDirections();
    this._isDirection(hp) && e.vertical && e.horizontal ? this._allowedDirectionValue = hp : this._isDirection(On) && e.horizontal ? this._allowedDirectionValue = On : this._isDirection(ln) && e.vertical ? this._allowedDirectionValue = ln : this._allowedDirectionValue = null;
  },
  _allowedDirection: function() {
    return this._allowedDirectionValue;
  },
  $content: function() {
    return this._$content;
  },
  content: function() {
    return Ie(this._$content);
  },
  container: function() {
    return Ie(this._$container);
  },
  scrollOffset: function() {
    return this._strategy._getScrollOffset();
  },
  _isRtlNativeStrategy: function() {
    var {
      useNative: e,
      rtlEnabled: t
    } = this.option();
    return e && t;
  },
  scrollTop: function() {
    return this.scrollOffset().top;
  },
  scrollLeft: function() {
    return this.scrollOffset().left;
  },
  clientHeight: function() {
    return Fe(this._$container);
  },
  scrollHeight: function() {
    return Ne(this.$content());
  },
  clientWidth: function() {
    return Ae(this._$container);
  },
  scrollWidth: function() {
    return Ge(this.$content());
  },
  update: function() {
    if (this._strategy)
      return ge(this._strategy.update()).done(function() {
        this._updateAllowedDirection();
      }.bind(this));
  },
  scrollBy: function(e) {
    e = this._normalizeLocation(e), !(!e.top && !e.left) && (this._updateIfNeed(), this._strategy.scrollBy(e));
  },
  scrollTo: function(e) {
    e = this._normalizeLocation(e), this._updateIfNeed();
    var t = this._location();
    this.option("useNative") || (e = this._strategy._applyScaleRatio(e), t = this._strategy._applyScaleRatio(t)), this._isRtlNativeStrategy() && (t.left = t.left - this._getMaxOffset().left);
    var i = this._normalizeLocation({
      left: t.left - ct(e.left, t.left),
      top: t.top - ct(e.top, t.top)
    });
    !i.top && !i.left || this._strategy.scrollBy(i);
  },
  scrollToElement: function(e, t) {
    var i = g(e), n = this.$content().find(e).length, r = i.parents("." + ny).length - i.parents("." + ry).length === 0;
    if (!(!n || !r)) {
      var a = {
        top: 0,
        left: 0
      }, o = this.option("direction");
      o !== ln && (a.left = this.getScrollElementPosition(i, On, t)), o !== On && (a.top = this.getScrollElementPosition(i, ln, t)), this.scrollTo(a);
    }
  },
  getScrollElementPosition: function(e, t, i) {
    var n = this.scrollOffset();
    return dH(e.get(0), t, g(this.container()).get(0), n, i);
  },
  _updateIfNeed: function() {
    this.option("updateManually") || this.update();
  },
  _useTemplates: function() {
    return !1;
  },
  isRenovated: function() {
    return !!Si.IS_RENOVATED_WIDGET;
  }
});
We(dn, Si);
var gH = "rowsview", _H = "content", vH = "nowrap", pp = "dx-group-row", ay = "dx-group-cell", mH = "dx-data-row", fu = "dx-freespace-row", CH = "dx-row-lines", oy = "dx-column-lines", sy = "dx-row-alt", ly = "dx-last-row-border", xH = "dx-empty", yH = "row-inserted-animation", bH = 200;
function uy(e) {
  return e ? Math.round(e.scrollWidth() - e.clientWidth()) : 0;
}
function dy(e) {
  var {
    rowType: t,
    column: i
  } = e;
  return t === "group" && x(i.groupIndex) && !i.showWhenGrouped && !i.command;
}
var jT = {
  defaultOptions: function() {
    return {
      hoverStateEnabled: !1,
      scrolling: {
        useNative: "auto"
      },
      loadPanel: {
        enabled: "auto",
        text: q.format("Loading"),
        width: 200,
        height: 90,
        showIndicator: !0,
        indicatorSrc: "",
        showPane: !0
      },
      dataRowTemplate: null,
      columnAutoWidth: !1,
      noDataText: q.format("dxDataGrid-noDataText"),
      wordWrapEnabled: !1,
      showColumnLines: !0,
      showRowLines: !1,
      rowAlternationEnabled: !1,
      activeStateEnabled: !1,
      twoWayBindingEnabled: !0
    };
  },
  views: {
    rowsView: Rl.inherit(function() {
      var e = function(i, n) {
        var r = ed(n.text) && n.rowType === "data", a = n.text, o = i.get(0);
        r ? ae.setEmptyText(i) : n.column.encodeHtml ? o.textContent = a : o.innerHTML = a;
      }, t = {
        _getDefaultTemplate: function(i) {
          switch (i.command) {
            case "empty":
              return function(n) {
                n.html("&nbsp;");
              };
            default:
              return e;
          }
        },
        _getDefaultGroupTemplate: function(i) {
          var n = this.option("summary.texts");
          return function(r, a) {
            var o = a.data, s = a.column.caption + ": " + a.text, l = r.get(0);
            a.summaryItems && a.summaryItems.length && (s += " " + ae.getGroupRowSummaryText(a.summaryItems, n)), o && (a.groupContinuedMessage && a.groupContinuesMessage ? s += " (" + a.groupContinuedMessage + ". " + a.groupContinuesMessage + ")" : a.groupContinuesMessage ? s += " (" + a.groupContinuesMessage + ")" : a.groupContinuedMessage && (s += " (" + a.groupContinuedMessage + ")")), i.encodeHtml ? l.textContent = s : l.innerHTML = s;
          };
        },
        _update: function() {
        },
        _updateCell: function(i, n) {
          dy(n) && i.addClass(ay), this.callBase.apply(this, arguments);
        },
        _getCellTemplate: function(i) {
          var n = i.column, r;
          return dy(i) ? r = n.groupCellTemplate || {
            allowRenderToDetachedContainer: !0,
            render: this._getDefaultGroupTemplate(n)
          } : (i.rowType === "data" || n.command) && n.cellTemplate ? r = n.cellTemplate : r = {
            allowRenderToDetachedContainer: !0,
            render: this._getDefaultTemplate(n)
          }, r;
        },
        _createRow: function(i) {
          var n = this.callBase.apply(this, arguments);
          if (i) {
            var r = i.rowType === "group", a = i.rowType === "data";
            if (a && n.addClass(mH), a && this.option("showRowLines") && n.addClass(CH), this.option("showColumnLines") && n.addClass(oy), i.visible === !1 && n.hide(), r) {
              n.addClass(pp);
              var o = i.isExpanded;
              this.setAria("role", "row", n), this.setAria("expanded", x(o) && o.toString(), n);
            }
          }
          return n;
        },
        _rowPrepared: function(i, n, r) {
          n.rowType === "data" && (this.option("rowAlternationEnabled") && (this._isAltRow(r) && i.addClass(sy), n.watch && n.watch(() => this._isAltRow(r), (a) => {
            i.toggleClass(sy, a);
          })), this._setAriaRowIndex(n, i), n.watch && n.watch(() => n.rowIndex, () => this._setAriaRowIndex(n, i))), this.callBase.apply(this, arguments);
        },
        _setAriaRowIndex: function(i, n) {
          var r = this.component, a = r.option("scrolling.mode") === "standard" && !ae.isVirtualRowRendering(r), o = i.rowIndex + 1;
          a ? o = r.pageIndex() * r.pageSize() + o : o += this._dataController.getRowIndexOffset(), this.setAria("rowindex", o, n);
        },
        _afterRowPrepared: function(i) {
          var n = i.args[0], r = this._dataController, a = r.getVisibleRows()[n.rowIndex], o = this.option("integrationOptions.watchMethod");
          if (!(!n.data || n.rowType !== "data" || n.isNewRow || !this.option("twoWayBindingEnabled") || !o || !a)) {
            var s = o(() => r.generateDataValues(n.data, n.columns), () => {
              r.repaintRows([a.rowIndex], this.option("repaintChangesOnly"));
            }, {
              deep: !0,
              skipImmediate: !0
            });
            w.on(n.rowElement, Sn, s);
          }
        },
        _renderScrollable: function(i) {
          var n = this.element();
          if (n.children().length || n.append("<div>"), (i || !this._loadPanel) && this._renderLoadPanel(n, n.parent(), this._dataController.isLocalStore()), (i || !this.getScrollable()) && this._dataController.isLoaded()) {
            for (var r = this.getColumns(), a = !0, o = 0; o < r.length; o++)
              if (!r[o].width && !r[o].minWidth) {
                a = !1;
                break;
              }
            (this.option("columnAutoWidth") || this._hasHeight || a || this._columnsController._isColumnFixing()) && this._renderScrollableCore(n);
          }
        },
        _handleScroll: function(i) {
          var n = this.option("rtlEnabled"), r = i.component.option("useNative");
          this._scrollTop = i.scrollOffset.top, this._scrollLeft = i.scrollOffset.left;
          var a = i.scrollOffset.left;
          n && (this._scrollRight = uy(i.component) - this._scrollLeft, r && (a = -this._scrollRight), this.isScrollbarVisible(!0) || (this._scrollLeft = -1)), this.scrollChanged.fire(ue({}, i.scrollOffset, {
            left: a
          }), this.name);
        },
        _renderScrollableCore: function(i) {
          var n = this._createScrollableOptions(), r = this._handleScroll.bind(this);
          n.onScroll = r, this._scrollable = this._createComponent(i, Si, n), this._scrollableContainer = this._scrollable && g(this._scrollable.container());
        },
        _renderLoadPanel: ae.renderLoadPanel,
        _renderContent: function(i, n) {
          return i.empty().append(n), this._findContentElement();
        },
        _updateContent: function(i, n, r) {
          return this._contentChanges.push({
            newTableElement: i,
            change: n,
            isFixedTableRendering: r
          }), this.waitAsyncTemplates().done(() => {
            var a = this._contentChanges;
            this._contentChanges = [], a.forEach((o) => {
              var {
                newTableElement: s,
                change: l,
                isFixedTableRendering: u
              } = o, d = this.getTableElement(u), c = this._findContentElement(u), h = l == null ? void 0 : l.changeType, p = [], f = this.option("highlightChanges"), v = this.addWidgetPrefix(yH);
              switch (h) {
                case "update":
                  B(l.rowIndices, (m, C) => {
                    var b, A = this._getRowElements(s).eq(m), R = (b = l.changeTypes) === null || b === void 0 ? void 0 : b[m], k = l.items && l.items[m];
                    p.push(() => {
                      var H = this._getRowElements(d), K = H.eq(C);
                      switch (R) {
                        case "update":
                          if (k) {
                            var j, z = (j = l.columnIndices) === null || j === void 0 ? void 0 : j[m];
                            x(k.visible) && k.visible !== K.is(":visible") ? K.toggle(k.visible) : z ? this._updateCells(K, A, z) : K.replaceWith(A);
                          }
                          break;
                        case "insert":
                          if (H.length)
                            K.length ? A.insertBefore(K) : A.insertAfter(H.last());
                          else if (d) {
                            var re = A.is("tbody") ? d : d.children("tbody");
                            A.prependTo(re);
                          }
                          f && l.isLiveUpdate && A.addClass(v);
                          break;
                        case "remove":
                          K.remove();
                      }
                    });
                  }), B(p, function() {
                    this();
                  }), s.remove();
                  break;
                default:
                  this.setTableElement(s, u), c.addClass(this.addWidgetPrefix(_H)), this._renderContent(c, s, u);
              }
            });
          }).fail(() => {
            this._contentChanges = [];
          });
        },
        _createEmptyRow: function(i, n, r) {
          var a, o = this._createRow(), s = n ? this.getFixedColumns() : this.getColumns();
          o.addClass(i).toggleClass(oy, this.option("showColumnLines"));
          for (var l = 0; l < s.length; l++)
            a = this._createCell({
              column: s[l],
              rowType: "freeSpace",
              columnIndex: l,
              columns: s
            }), rt(r) && a.css("height", r), o.append(a);
          return this.setAria("role", "presentation", o), o;
        },
        _appendEmptyRow: function(i, n, r) {
          var a = this._getBodies(i), o = !a.length || n.is("tbody"), s = o ? i : a;
          if (r === "top") {
            if (s.first().prepend(n), o) {
              var l = s.children("colgroup");
              s.prepend(l);
            }
          } else
            s.last().append(n);
        },
        _renderFreeSpaceRow: function(i, n) {
          var r = this._createEmptyRow(fu);
          r = this._wrapRowIfNeed(i, r, (n == null ? void 0 : n.changeType) === "refresh"), this._appendEmptyRow(i, r);
        },
        _checkRowKeys: function(i) {
          var n = this, r = n._getRows(i), a = n._dataController.store() && n._dataController.store().key();
          a && r.some(function(o) {
            if (o.rowType === "data" && o.key === void 0)
              return n._dataController.fireError("E1046", a), !0;
          });
        },
        _needUpdateRowHeight: function(i) {
          return i > 0 && !this._rowHeight;
        },
        _getRowsHeight: function(i) {
          i = i || this._tableElement;
          var n = i.children("tbody").children().not(".dx-virtual-row").not("." + fu);
          return n.toArray().reduce(function(r, a) {
            return r + Et(a).height;
          }, 0);
        },
        _updateRowHeight: function() {
          var i = this.getTableElement(), n = this._dataController.items().length;
          if (i && this._needUpdateRowHeight(n)) {
            var r = this._getRowsHeight(i);
            this._rowHeight = r / n;
          }
        },
        _findContentElement: function() {
          var i = this.element(), n = this.getScrollable();
          if (i)
            return n && (i = g(n.content())), i.children().first();
        },
        _getRowElements: function(i) {
          var n = this.callBase(i);
          return n && n.not("." + fu);
        },
        _getFreeSpaceRowElements: function(i) {
          var n = i || this.getTableElements();
          return n && n.children("tbody").children("." + fu);
        },
        _getNoDataText: function() {
          return this.option("noDataText");
        },
        _rowClick: function(i) {
          var n = this._dataController.items()[i.rowIndex] || {};
          this.executeAction("onRowClick", T({
            evaluate: function(r) {
              var a = tt(r);
              return a(n.data);
            }
          }, i, n));
        },
        _rowDblClick: function(i) {
          var n = this._dataController.items()[i.rowIndex] || {};
          this.executeAction("onRowDblClick", T({}, i, n));
        },
        _getColumnsCountBeforeGroups: function(i) {
          for (var n = 0; n < i.length; n++)
            if (i[n].type === "groupExpand")
              return n;
          return 0;
        },
        _getGroupCellOptions: function(i) {
          var n = this._getColumnsCountBeforeGroups(i.columns), r = (i.row.groupIndex || 0) + n;
          return {
            columnIndex: r,
            colspan: i.columns.length - r - 1
          };
        },
        _needWrapRow: function() {
          return this.callBase.apply(this, arguments) || !!this.option("dataRowTemplate");
        },
        _renderCells: function(i, n) {
          n.row.rowType === "group" ? this._renderGroupedCells(i, n) : n.row.values && this.callBase(i, n);
        },
        _renderGroupedCells: function(i, n) {
          for (var r = n.row, a, o = n.columns, s = r.rowIndex, l, u = this._getGroupCellOptions(n), d = 0; d <= u.columnIndex; d++)
            d === u.columnIndex && o[d].allowCollapsing && n.scrollingMode !== "infinite" ? (l = !!r.isExpanded, a = o[d]) : (l = null, a = {
              command: "expand",
              cssClass: o[d].cssClass
            }), this._needRenderCell(d, n.columnIndices) && this._renderCell(i, {
              value: l,
              row: r,
              rowIndex: s,
              column: a,
              columnIndex: d,
              columnIndices: n.columnIndices,
              change: n.change
            });
          var c = $r(this.option("rtlEnabled")), h = T({}, o[u.columnIndex], {
            command: null,
            type: null,
            cssClass: null,
            width: null,
            showWhenGrouped: !1,
            alignment: c
          });
          u.colspan > 1 && (h.colspan = u.colspan), this._needRenderCell(u.columnIndex + 1, n.columnIndices) && this._renderCell(i, {
            value: r.values[r.groupIndex],
            row: r,
            rowIndex: s,
            column: h,
            columnIndex: u.columnIndex + 1,
            columnIndices: n.columnIndices,
            change: n.change
          });
        },
        _renderRows: function(i, n) {
          var r = this.option("scrolling.mode");
          this.callBase(i, T({
            scrollingMode: r
          }, n)), this._checkRowKeys(n.change), this._renderFreeSpaceRow(i, n.change), this._hasHeight || this.updateFreeSpaceRowHeight(i);
        },
        _renderDataRowByTemplate(i, n, r) {
          var a = n.row, o = T({
            columns: n.columns
          }, a), s = this._createRow(a, "tbody");
          s.appendTo(i), this.renderTemplate(s, r, o, !0, n.change), this._rowPrepared(s, o, n.row);
        },
        _renderRow: function(i, n) {
          var r = n.row, a = this.option().rowTemplate, o = this.option("dataRowTemplate");
          r.rowType === "data" && o ? this._renderDataRowByTemplate(i, n, o) : (r.rowType === "data" || r.rowType === "group") && !x(r.groupIndex) && a ? this.renderTemplate(i, a, T({
            columns: n.columns
          }, r), !0) : this.callBase(i, n);
        },
        _renderTable: function(i) {
          var n = this, r = n.callBase(i);
          return x(n.getTableElement()) ? n._renderScrollable() : (n.setTableElement(r), n._renderScrollable(!0), n.resizeCompleted.add(function a() {
            var o = n.getScrollable();
            o && n.element().closest(ke().document).length && (n.resizeCompleted.remove(a), o._visibilityChanged(!0));
          })), r;
        },
        _createTable: function() {
          var i = this.callBase.apply(this, arguments);
          return (this.option().rowTemplate || this.option().dataRowTemplate) && i.appendTo(this.component.$element()), i;
        },
        _renderCore: function(i) {
          var n = this.element();
          n.addClass(this.addWidgetPrefix(gH)).toggleClass(this.addWidgetPrefix(vH), !this.option("wordWrapEnabled")), n.toggleClass(xH, this._dataController.isEmpty()), this.setAria("role", "presentation", n);
          var r = this._renderTable({
            change: i
          }), a = this._updateContent(r, i);
          return this.callBase(i), this._lastColumnWidths = null, a;
        },
        _getRows: function(i) {
          return i && i.items || this._dataController.items();
        },
        _getCellOptions: function(i) {
          var n = i.column, r = i.row, a = r.data, o = r && r.summaryCells, s = i.value, l = ae.getDisplayValue(n, s, a, r.rowType), u = this.callBase(i);
          if (u.value = s, u.oldValue = i.oldValue, u.displayValue = l, u.row = r, u.key = r.key, u.data = a, u.rowType = r.rowType, u.values = r.values, u.text = n.command ? "" : ae.formatValue(l, n), u.rowIndex = r.rowIndex, u.summaryItems = o && o[i.columnIndex], u.resized = n.resizedCallbacks, x(n.groupIndex) && !n.command) {
            var d = this.option("grouping.texts"), c = this.option("scrolling.mode");
            c !== "virtual" && c !== "infinite" && (u.groupContinuesMessage = a && a.isContinuationOnNextPage && d && d.groupContinuesMessage, u.groupContinuedMessage = a && a.isContinuation && d && d.groupContinuedMessage);
          }
          return u;
        },
        _setRowsOpacityCore: function(i, n, r, a) {
          var o = this._columnsController, s = o.getColumns(), l = s && s[r], u = l && l.isBand && l.index;
          B(i, function(d, c) {
            if (!g(c).hasClass(pp))
              for (var h = 0; h < n.length && !((rt(u) && o.isParentBandColumn(n[h].index, u) || n[h].index === r) && (i.eq(d).children().eq(h).css({
                opacity: a
              }), !rt(u))); h++)
                ;
          });
        },
        _getDevicePixelRatio: function() {
          return ke().devicePixelRatio;
        },
        renderNoDataText: ae.renderNoDataText,
        getCellOptions: function(i, n) {
          var r = this._dataController.items()[i], a, o;
          return r && (Te(n) ? o = this._columnsController.columnOption(n) : o = this._columnsController.getVisibleColumns()[n], o && (a = this._getCellOptions({
            value: o.calculateCellValue(r.data),
            rowIndex: r.rowIndex,
            row: r,
            column: o
          }))), a;
        },
        getRow: function(i) {
          if (i >= 0) {
            var n = this._getRowElements();
            if (n.length > i)
              return g(n[i]);
          }
        },
        updateFreeSpaceRowHeight: function(i) {
          var n = this._dataController, r = n.items(!0).length, a = this._findContentElement(), o = this._getFreeSpaceRowElements(i);
          if (o && a && n.totalCount() >= 0) {
            var s = !1;
            if (r > 0)
              if (this._hasHeight)
                o.hide(), oi(() => {
                  var d = this.getScrollbarWidth(!0), c = Fe(this.element()) - d, h = Ne(a), p = c - h > 0, f = this._getRowsHeight(a.children().first()), v = i || this.getTableElements(), m = Math.ceil(parseFloat(v.css("borderTopWidth"))), C = this._getHeightCorrection(), b = c - f - m - C;
                  p && Bt(() => {
                    o.css("height", b), s = !0, o.show();
                  }), Bt(() => this._updateLastRowBorder(s));
                });
              else {
                var l = n.pageSize() - r, u = this.option("scrolling.mode");
                l > 0 && n.pageCount() > 1 && u !== "virtual" && u !== "infinite" && (Sh(o, l * this._rowHeight), s = !0), !s && i ? Sh(o, 0) : o.toggle(s), this._updateLastRowBorder(s);
              }
            else
              o.css("height", 0), o.show(), this._updateLastRowBorder(!0);
          }
        },
        _getHeightCorrection: function() {
          var i = lt.webkit && this._getDevicePixelRatio() >= 2, n = lt.chrome && lt.version >= 91, r = lt.mozilla && lt.version >= 70 && !this.option("showRowLines");
          return i || r || n ? 1 : 0;
        },
        _columnOptionChanged: function(i) {
          var n = i.optionNames;
          i.changeTypes.grouping || (n.width || n.visibleWidth) && (this.callBase(i), this._fireColumnResizedCallbacks());
        },
        getScrollable: function() {
          return this._scrollable;
        },
        init: function() {
          var i = this, n = i.getController("data");
          i.callBase(), i._editorFactoryController = i.getController("editorFactory"), i._rowHeight = 0, i._scrollTop = 0, i._scrollLeft = -1, i._scrollRight = 0, i._hasHeight = !1, i._contentChanges = [], n.loadingChanged.add(function(r, a) {
            i.setLoading(r, a);
          }), n.dataSourceChanged.add(() => {
            this._scrollLeft >= 0 && !this._dataController.isLoading() && this._handleScroll({
              component: this.getScrollable(),
              forceUpdateScrollPosition: !0,
              scrollOffset: {
                top: this._scrollTop,
                left: this._scrollLeft
              }
            });
          });
        },
        _handleDataChanged: function(i) {
          switch (i.changeType) {
            case "refresh":
            case "prepend":
            case "append":
            case "update":
              this.render(null, i);
              break;
            default:
              this._update(i);
          }
        },
        publicMethods: function() {
          return ["isScrollbarVisible", "getTopVisibleRowData", "getScrollbarWidth", "getCellElement", "getRowElement", "getScrollable"];
        },
        contentWidth: function() {
          return Ae(this.element()) - this.getScrollbarWidth();
        },
        getScrollbarWidth: function(i) {
          var n = this._scrollableContainer && this._scrollableContainer.get(0), r = 0;
          n && (i ? (r = n.clientHeight ? n.offsetHeight - n.clientHeight : 0, r += (a = this, o = a.getScrollable(), o ? Math.ceil(parseFloat(g(o.content()).css("paddingBottom"))) : 0)) : r = n.clientWidth ? n.offsetWidth - n.clientWidth : 0);
          var a, o;
          return r > 0 ? r : 0;
        },
        _fireColumnResizedCallbacks: function() {
          for (var i = this._lastColumnWidths || [], n = [], r = this.getColumns(), a = 0; a < r.length; a++)
            n[a] = r[a].visibleWidth, r[a].resizedCallbacks && !x(r[a].groupIndex) && i[a] !== n[a] && r[a].resizedCallbacks.fire(n[a]);
          this._lastColumnWidths = n;
        },
        _updateLastRowBorder: function(i) {
          this.option("showBorders") && this.option("showRowLines") && !i ? this.element().addClass(ly) : this.element().removeClass(ly);
        },
        _updateScrollable: function() {
          var i = Si.getInstance(this.element());
          i && (i.update(), (i.option("useNative") || !(i != null && i.isRenovated())) && this._updateHorizontalScrollPosition());
        },
        _updateHorizontalScrollPosition: function() {
          var i = this.getScrollable(), n = i && i.scrollOffset().left, r = this.option("rtlEnabled");
          if (r) {
            var a = uy(i), o = a - n;
            o !== this._scrollRight && (this._scrollLeft = a - this._scrollRight);
          }
          this._scrollLeft >= 0 && n !== this._scrollLeft && i.scrollTo({
            x: this._scrollLeft
          });
        },
        _resizeCore: function() {
          var i = this;
          i._fireColumnResizedCallbacks(), i._updateRowHeight(), Bt(function() {
            i._renderScrollable(), i.renderNoDataText(), i.updateFreeSpaceRowHeight(), oi(function() {
              i._updateScrollable();
            });
          });
        },
        scrollTo: function(i) {
          var n = this.element(), r = n && Si.getInstance(n);
          r && r.scrollTo(i);
        },
        height: function(i) {
          var n = this, r = this.element();
          if (arguments.length === 0)
            return r ? Ne(r, !0) : 0;
          x(i) && r && (n.hasHeight(i !== "auto"), Sh(r, i));
        },
        hasHeight: function(i) {
          if (arguments.length === 0)
            return !!this._hasHeight;
          this._hasHeight = i;
        },
        setLoading: function(i, n) {
          var r = this._loadPanel, a = this._dataController, o = this.option("loadPanel") || {}, s = a.isLoaded() ? o.animation : null, l = this.element();
          if (Re() && (!r && n !== void 0 && a.isLocalStore() && o.enabled === "auto" && l && (this._renderLoadPanel(l, l.parent()), r = this._loadPanel), r)) {
            var u = {
              message: n || o.text,
              animation: s,
              visible: i
            };
            i && (u.position = ae.calculateLoadPanelPosition(l)), clearTimeout(this._hideLoadingTimeoutID), r.option("visible") && !i ? this._hideLoadingTimeoutID = setTimeout(function() {
              r.option(u);
            }, bH) : r.option(u);
          }
        },
        setRowsOpacity: function(i, n) {
          var r = this._getRowElements().not("." + pp) || [];
          this._setRowsOpacityCore(r, this.getColumns(), i, n);
        },
        _getCellElementsCore: function(i) {
          var n = this.callBase.apply(this, arguments);
          if (n) {
            var r = n.filter("." + ay).index();
            if (r >= 0 && n.length > r + 1)
              return n.slice(0, r + 1);
          }
          return n;
        },
        _getBoundaryVisibleItemIndex: function(i, n) {
          var r = 0, a = 0, o = 0, s = this._scrollTop, l = this._findContentElement(), u = l && l.offset().top, d = this.getController("data"), c = d.items(), h = this.getTableElement();
          if (c.length && h) {
            var p = this._getRowElements(h).filter(":visible");
            if (!i) {
              var f = Ne(this._hasHeight ? this.element() : ke());
              s += f;
            }
            for (r = 0; r < c.length; r++) {
              a = o;
              var v = g(p).eq(r);
              if (v.length && (o = v.offset(), o = (i ? o.top : o.top + Ne(v)) - u, o > s)) {
                r && (n || 2 * s < Math.round(o + a)) && r--;
                break;
              }
            }
            r && r === c.length && r--;
          }
          return r;
        },
        getTopVisibleItemIndex: function(i) {
          return this._getBoundaryVisibleItemIndex(!0, i);
        },
        getBottomVisibleItemIndex: function(i) {
          return this._getBoundaryVisibleItemIndex(!1, i);
        },
        getTopVisibleRowData: function() {
          var i = this.getTopVisibleItemIndex(), n = this._dataController.items();
          if (n[i])
            return n[i].data;
        },
        _scrollToElement: function(i, n) {
          var r = this.getScrollable();
          r && r.scrollToElement(i, n);
        },
        optionChanged: function(i) {
          switch (this.callBase(i), i.name) {
            case "wordWrapEnabled":
            case "showColumnLines":
            case "showRowLines":
            case "rowAlternationEnabled":
            case "rowTemplate":
            case "dataRowTemplate":
            case "twoWayBindingEnabled":
              this._invalidate(!0, !0), i.handled = !0;
              break;
            case "scrolling":
              this._rowHeight = null, this._tableElement = null, i.handled = !0;
              break;
            case "rtlEnabled":
              this._rowHeight = null, this._tableElement = null;
              break;
            case "loadPanel":
              this._tableElement = null, this._invalidate(!0, i.fullName !== "loadPanel.enabled"), i.handled = !0;
              break;
            case "noDataText":
              this.renderNoDataText(), i.handled = !0;
          }
        },
        dispose: function() {
          this.callBase(), clearTimeout(this._hideLoadingTimeoutID), this._scrollable && this._scrollable.dispose();
        },
        setScrollerSpacing: function() {
        },
        _restoreErrorRow: function() {
        }
      };
      return t;
    }())
  }
};
jT.views.rowsView;
xe.registerModule("rows", jT);
var cy = "dx-inkripple", hy = "dx-inkripple-wave", qT = "dx-inkripple-showing", XT = "dx-inkripple-hiding", SH = 2, EH = 4e3, fp = 300, wH = 1e3, YT = 0, ZT = function() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, {
    useHoldAnimation: t,
    waveSizeCoefficient: i,
    isCentered: n,
    wavesNumber: r
  } = e;
  return {
    waveSizeCoefficient: i || SH,
    isCentered: n || !1,
    wavesNumber: r || 1,
    durations: AH(t ?? !0)
  };
}, _v = function(e) {
  var t = ZT(e);
  return {
    showWave: JT.bind(this, t),
    hideWave: tD.bind(this, t)
  };
}, IH = function(e) {
  var t = e.children("." + cy);
  return t.length === 0 && (t = g("<div>").addClass(cy).appendTo(e)), t;
}, QT = function(e, t) {
  for (var i = IH(g(e)), n = i.children("." + hy).toArray(), r = n.length; r < t; r++) {
    var a = g("<div>").appendTo(i).addClass(hy);
    n.push(a[0]);
  }
  return g(n);
}, TH = function(e, t) {
  var i = g(t.element), n = Ge(i), r = Ne(i), a = parseInt(Math.sqrt(n * n + r * r)), o = Math.min(EH, parseInt(a * e.waveSizeCoefficient)), s, l;
  if (e.isCentered)
    s = (n - o) / 2, l = (r - o) / 2;
  else {
    var u = t.event, d = i.offset(), c = u.pageX - d.left, h = u.pageY - d.top;
    s = c - o / 2, l = h - o / 2;
  }
  return {
    left: s,
    top: l,
    height: o,
    width: o
  };
};
function JT(e, t) {
  var i = QT(t.element, e.wavesNumber).eq(t.wave || YT);
  e.hidingTimeout && clearTimeout(e.hidingTimeout), eD(i), i.css(TH(e, t)), e.showingTimeout = setTimeout(DH.bind(this, e, i), 0);
}
function DH(e, t) {
  var i = e.durations.showingScale + "ms";
  t.addClass(qT).css("transitionDuration", i);
}
function AH(e) {
  return {
    showingScale: e ? wH : fp,
    hidingScale: fp,
    hidingOpacity: fp
  };
}
function eD(e) {
  e.removeClass(XT).css("transitionDuration", "");
}
function tD(e, t) {
  e.showingTimeout && clearTimeout(e.showingTimeout);
  var i = QT(t.element, t.wavesNumber).eq(t.wave || YT), n = e.durations, r = n.hidingScale + "ms, " + n.hidingOpacity + "ms";
  i.addClass(XT).removeClass(qT).css("transitionDuration", r);
  var a = Math.max(n.hidingScale, n.hidingOpacity);
  e.hidingTimeout = setTimeout(eD.bind(this, i), a);
}
var ss = "dx-icon", OH = "dx-svg-icon", kl = (e) => !e || typeof e != "string" ? !1 : /^\s*<svg[^>]*>(.|\r?\n)*?<\/svg>\s*$/i.test(e) ? "svg" : /data:.*base64|\.|[^<\s]\/{1,1}/.test(e) ? "image" : /^[\w-_]+$/.test(e) ? "dxIcon" : /^\s?([\w-_]\s?)+$/.test(e) ? "fontIcon" : !1, wa = (e) => {
  switch (kl(e)) {
    case "image":
      return g("<img>").attr("src", e).addClass(ss);
    case "fontIcon":
      return g("<i>").addClass("".concat(ss, " ").concat(e));
    case "dxIcon":
      return g("<i>").addClass("".concat(ss, " ").concat(ss, "-").concat(e));
    case "svg":
      return g("<i>").addClass("".concat(ss, " ").concat(OH)).append(e);
    default:
      return null;
  }
};
function RH(e) {
  return class {
    constructor() {
      throw new Error("Module '".concat(e, "' not found"));
    }
    static getInstance() {
    }
  };
}
var py = RH("TextBox");
const Ia = {
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      searchMode: "",
      searchExpr: null,
      searchValue: "",
      searchEnabled: !1,
      searchEditorOptions: {}
    });
  },
  _initMarkup: function() {
    this._renderSearch(), this.callBase();
  },
  _renderSearch: function() {
    var e = this.$element(), t = this.option("searchEnabled"), i = this._addWidgetPrefix("search"), n = this._addWidgetPrefix("with-search");
    if (!t) {
      e.removeClass(n), this._removeSearchBox();
      return;
    }
    var r = this._getSearchEditorOptions();
    this._searchEditor ? this._searchEditor.option(r) : (e.addClass(n), this._$searchEditorElement = g("<div>").addClass(i).prependTo(e), this._searchEditor = this._createComponent(this._$searchEditorElement, py, r));
  },
  _removeSearchBox: function() {
    this._$searchEditorElement && this._$searchEditorElement.remove(), delete this._$searchEditorElement, delete this._searchEditor;
  },
  _getSearchEditorOptions: function() {
    var e = this, t = e.option("searchEditorOptions"), i = q.format("Search");
    return T({
      mode: "search",
      placeholder: i,
      tabIndex: e.option("tabIndex"),
      value: e.option("searchValue"),
      valueChangeEvent: "input",
      inputAttr: {
        "aria-label": i
      },
      onValueChanged: function(n) {
        var r = e.option("searchTimeout");
        e._valueChangeDeferred = new U(), clearTimeout(e._valueChangeTimeout), e._valueChangeDeferred.done(function() {
          this.option("searchValue", n.value);
        }.bind(e)), n.event && n.event.type === "input" && r ? e._valueChangeTimeout = setTimeout(function() {
          e._valueChangeDeferred.resolve();
        }, r) : e._valueChangeDeferred.resolve();
      }
    }, t);
  },
  _getAriaTarget: function() {
    return this.option("searchEnabled") ? this._itemContainer(!0) : this.$element();
  },
  _focusTarget: function() {
    return this.option("searchEnabled") ? this._itemContainer(!0) : this.callBase();
  },
  _updateFocusState: function(e, t) {
    this.option("searchEnabled") && this._toggleFocusClass(t, this.$element()), this.callBase(e, t);
  },
  getOperationBySearchMode: function(e) {
    return e === "equals" ? "=" : e;
  },
  _cleanAria: function(e) {
    this.setAria({
      role: null,
      activedescendant: null
    }, e), e.attr("tabIndex", null);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "searchEnabled":
      case "searchEditorOptions":
        this._cleanAria(this.option("searchEnabled") ? this.$element() : this._itemContainer()), this._invalidate();
        break;
      case "searchExpr":
      case "searchMode":
      case "searchValue":
        if (!this._dataSource) {
          $e.log("W1009");
          return;
        }
        e.name === "searchMode" ? this._dataSource.searchOperation(this.getOperationBySearchMode(e.value)) : this._dataSource[e.name](e.value), this._dataSource.load();
        break;
      case "searchTimeout":
        break;
      default:
        this.callBase(e);
    }
  },
  focus: function() {
    if (!this.option("focusedElement") && this.option("searchEnabled")) {
      this._searchEditor && this._searchEditor.focus();
      return;
    }
    this.callBase();
  },
  _refresh: function() {
    this._valueChangeDeferred && this._valueChangeDeferred.resolve(), this.callBase();
  },
  setEditorClass: function(e) {
    py = e;
  }
};
var {
  ios: BH,
  mac: kH
} = ve.real(), FH = BH || kH, PH = function(e) {
  var t;
  try {
    t = {
      start: e.selectionStart,
      end: e.selectionEnd
    };
  } catch {
    t = {
      start: 0,
      end: 0
    };
  }
  return t;
}, MH = function(e, t) {
  var i = ee.getBody();
  if (!(!i.contains(e) && !i.contains(e.getRootNode().host)))
    try {
      e.selectionStart = t.start, e.selectionEnd = t.end;
    } catch {
    }
}, iD = function(e, t) {
  var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  if (e = g(e).get(0), !x(t))
    return PH(e);
  !i && FH && ee.getActiveElement(e) !== e || MH(e, t);
};
function LH() {
  var {
    android: e,
    version: t
  } = ve.real();
  return e && t[0] > 4;
}
function VH() {
  return "onbeforeinput" in ee.createElement("input") && !lt.chrome || LH();
}
var fo = " ", nD = ze.inherit({
  ctor: function(e) {
    this._value = fo, T(this, e);
  },
  next: function(e) {
    if (!arguments.length)
      return this._next;
    this._next = e;
  },
  text: $,
  value: $,
  rawValue: $,
  handle: $,
  _prepareHandlingArgs: function(e, t) {
    var i, n, r;
    t = t || {};
    var a = Object.prototype.hasOwnProperty.call(e, "value") ? "value" : "text";
    return e[a] = (i = t.str) !== null && i !== void 0 ? i : e[a], e.start = (n = t.start) !== null && n !== void 0 ? n : e.start, e.length = (r = t.length) !== null && r !== void 0 ? r : e.length, e.index = e.index + 1, e;
  },
  reset: $,
  clear: $,
  first: function(e) {
    return e = e || 0, this.next().first(e + 1);
  },
  isAccepted: function() {
    return !1;
  },
  adjustedCaret: function(e, t, i) {
    return t ? this._adjustedForward(e, 0, i) : this._adjustedBackward(e, 0, i);
  },
  _adjustedForward: $,
  _adjustedBackward: $,
  isValid: $
}), NH = nD.inherit({
  next: $,
  handle: function() {
    return 0;
  },
  text: function() {
    return "";
  },
  value: function() {
    return "";
  },
  first: function() {
    return 0;
  },
  rawValue: function() {
    return "";
  },
  adjustedCaret: function() {
    return 0;
  },
  isValid: function() {
    return !0;
  }
}), rD = nD.inherit({
  text: function() {
    return (this._value !== fo ? this._value : this.maskChar) + this.next().text();
  },
  value: function() {
    return this._value + this.next().value();
  },
  rawValue: function() {
    return this._value + this.next().rawValue();
  },
  handle: function(e) {
    var t = Object.prototype.hasOwnProperty.call(e, "value") ? e.value : e.text;
    if (!t || !t.length || !e.length)
      return 0;
    if (e.start)
      return this.next().handle(this._prepareHandlingArgs(e, {
        start: e.start - 1
      }));
    var i = t[0], n = t.substring(1);
    return this._tryAcceptChar(i, e), this._accepted() ? this.next().handle(this._prepareHandlingArgs(e, {
      str: n,
      length: e.length - 1
    })) + 1 : this.handle(this._prepareHandlingArgs(e, {
      str: n,
      length: e.length - 1
    }));
  },
  clear: function(e) {
    this._tryAcceptChar(fo, e), this.next().clear(this._prepareHandlingArgs(e));
  },
  reset: function() {
    this._accepted(!1), this.next().reset();
  },
  _tryAcceptChar: function(e, t) {
    if (this._accepted(!1), !!this._isAllowed(e, t)) {
      var i = e === fo ? this.maskChar : e;
      t.fullText = t.fullText.substring(0, t.index) + i + t.fullText.substring(t.index + 1), this._accepted(!0), this._value = e;
    }
  },
  _accepted: function(e) {
    if (!arguments.length)
      return !!this._isAccepted;
    this._isAccepted = !!e;
  },
  first: function(e) {
    return this._value === fo ? e || 0 : this.callBase(e);
  },
  _isAllowed: function(e, t) {
    return e === fo ? !0 : this._isValid(e, t);
  },
  _isValid: function(e, t) {
    var i = this.allowedChars;
    return i instanceof RegExp ? i.test(e) : ce(i) ? i(e, t.index, t.fullText) : Array.isArray(i) ? i.includes(e) : i === e;
  },
  isAccepted: function(e) {
    return e === 0 ? this._accepted() : this.next().isAccepted(e - 1);
  },
  _adjustedForward: function(e, t, i) {
    return t >= e ? t : this.next()._adjustedForward(e, t + 1, i) || t + 1;
  },
  _adjustedBackward: function(e, t) {
    return t >= e - 1 ? e : this.next()._adjustedBackward(e, t + 1) || t + 1;
  },
  isValid: function(e) {
    return this._isValid(this._value, e) && this.next().isValid(this._prepareHandlingArgs(e));
  }
}), fy = rD.inherit({
  value: function() {
    return this.next().value();
  },
  handle: function(e) {
    var t = Object.prototype.hasOwnProperty.call(e, "value"), i = t ? e.value : e.text;
    if (!i.length || !e.length)
      return 0;
    if (e.start || t)
      return this.next().handle(this._prepareHandlingArgs(e, {
        start: e.start && e.start - 1
      }));
    var n = i[0], r = i.substring(1);
    this._tryAcceptChar(n);
    var a = this._isAllowed(n) ? this._prepareHandlingArgs(e, {
      str: r,
      length: e.length - 1
    }) : e;
    return this.next().handle(a) + 1;
  },
  clear: function(e) {
    this._accepted(!1), this.next().clear(this._prepareHandlingArgs(e));
  },
  _tryAcceptChar: function(e) {
    this._accepted(this._isValid(e));
  },
  _isValid: function(e) {
    return e === this.maskChar;
  },
  first: function(e) {
    return e = e || 0, this.next().first(e + 1);
  },
  _adjustedForward: function(e, t, i) {
    return t >= e && i === this.maskChar ? t : e === t + 1 && this._accepted() ? e : this.next()._adjustedForward(e, t + 1, i);
  },
  _adjustedBackward: function(e, t) {
    return t >= e - 1 ? 0 : this.next()._adjustedBackward(e, t + 1);
  },
  isValid: function(e) {
    return this.next().isValid(this._prepareHandlingArgs(e));
  }
}), It = {
  valid: "valid",
  invalid: "invalid",
  pending: "pending"
};
class Hr {
  constructor() {
    this.NAME = "base";
  }
  defaultMessage(t) {
    return q.getFormatter("validation-".concat(this.NAME))(t);
  }
  defaultFormattedMessage(t) {
    return q.getFormatter("validation-".concat(this.NAME, "-formatted"))(t);
  }
  _isValueEmpty(t) {
    return !Fl.required.validate(t, {});
  }
  validate(t, i) {
    var n = Array.isArray(t) ? t : [t], r = !0;
    return n.length ? n.every((a) => (r = this._validate(a, i), r)) : r = this._validate(null, i), r;
  }
}
class $H extends Hr {
  constructor() {
    super(), this.NAME = "required";
  }
  _validate(t, i) {
    return !x(t) || t === !1 ? !1 : (t = String(t), (i.trim || !x(i.trim)) && (t = t.trim()), t !== "");
  }
}
class HH extends Hr {
  constructor() {
    super(), this.NAME = "numeric";
  }
  _validate(t, i) {
    return i.ignoreEmptyValue !== !1 && this._isValueEmpty(t) ? !0 : i.useCultureSettings && Te(t) ? !isNaN(nt.parse(t)) : rt(t);
  }
}
class zH extends Hr {
  constructor() {
    super(), this.NAME = "range";
  }
  _validate(t, i) {
    if (i.ignoreEmptyValue !== !1 && this._isValueEmpty(t))
      return !0;
    var n = Fl.numeric.validate(t, i), r = x(t) && t !== "", a = n ? parseFloat(t) : r && t.valueOf(), o = i.min, s = i.max;
    if (!(n || Qt(t)) && !r)
      return !1;
    if (x(o))
      return x(s) ? a >= o && a <= s : a >= o;
    if (x(s))
      return a <= s;
    throw Je.Error("E0101");
  }
}
class WH extends Hr {
  constructor() {
    super(), this.NAME = "stringLength";
  }
  _validate(t, i) {
    var n;
    return t = String((n = t) !== null && n !== void 0 ? n : ""), (i.trim || !x(i.trim)) && (t = t.trim()), i.ignoreEmptyValue && this._isValueEmpty(t) ? !0 : Fl.range.validate(t.length, T({}, i));
  }
}
class aD extends Hr {
  constructor() {
    super(), this.NAME = "custom";
  }
  validate(t, i) {
    if (i.ignoreEmptyValue && this._isValueEmpty(t))
      return !0;
    var n = i.validator, r = n && ce(n.option) && n.option("dataGetter"), a = ce(r) && r(), o = {
      value: t,
      validator: n,
      rule: i
    };
    return a && T(o, a), i.validationCallback(o);
  }
}
class GH extends aD {
  constructor() {
    super(), this.NAME = "async";
  }
  validate(t, i) {
    if (x(i.reevaluate) || T(i, {
      reevaluate: !0
    }), i.ignoreEmptyValue && this._isValueEmpty(t))
      return !0;
    var n = i.validator, r = n && ce(n.option) && n.option("dataGetter"), a = ce(r) && r(), o = {
      value: t,
      validator: n,
      rule: i
    };
    a && T(o, a);
    var s = i.validationCallback(o);
    if (!Ho(s))
      throw Je.Error("E0103");
    return this._getWrappedPromise(Nt(s).promise());
  }
  _getWrappedPromise(t) {
    var i = new U();
    return t.then(function(n) {
      i.resolve(n);
    }, function(n) {
      var r = {
        isValid: !1
      };
      x(n) && (Te(n) ? r.message = n : De(n) && x(n.message) && Te(n.message) && (r.message = n.message)), i.resolve(r);
    }), i.promise();
  }
}
class KH extends Hr {
  constructor() {
    super(), this.NAME = "compare";
  }
  _validate(t, i) {
    if (!i.comparisonTarget)
      throw Je.Error("E0102");
    if (i.ignoreEmptyValue && this._isValueEmpty(t))
      return !0;
    T(i, {
      reevaluate: !0
    });
    var n = i.comparisonTarget(), r = i.comparisonType || "==";
    switch (r) {
      case "==":
        return t == n;
      case "!=":
        return t != n;
      case "===":
        return t === n;
      case "!==":
        return t !== n;
      case ">":
        return t > n;
      case ">=":
        return t >= n;
      case "<":
        return t < n;
      case "<=":
        return t <= n;
    }
  }
}
class UH extends Hr {
  constructor() {
    super(), this.NAME = "pattern";
  }
  _validate(t, i) {
    if (i.ignoreEmptyValue !== !1 && this._isValueEmpty(t))
      return !0;
    var n = i.pattern;
    return Te(n) && (n = new RegExp(n)), n.test(t);
  }
}
class jH extends Hr {
  constructor() {
    super(), this.NAME = "email";
  }
  _validate(t, i) {
    return i.ignoreEmptyValue !== !1 && this._isValueEmpty(t) ? !0 : Fl.pattern.validate(t, T({}, i, {
      pattern: /^[\d\w._-]+@[\d\w._-]+\.[\w]+$/i
    }));
  }
}
var Fl = {
  required: new $H(),
  numeric: new HH(),
  range: new zH(),
  stringLength: new WH(),
  custom: new aD(),
  async: new GH(),
  compare: new KH(),
  pattern: new UH(),
  email: new jH()
}, qH = ze.inherit({
  ctor(e) {
    this.group = e, this.validators = [], this._pendingValidators = [], this._onValidatorStatusChanged = this._onValidatorStatusChanged.bind(this), this._resetValidationInfo(), this._eventsStrategy = new Pa(this);
  },
  validate() {
    var e = {
      isValid: !0,
      brokenRules: [],
      validators: [],
      status: It.valid,
      complete: null
    };
    return this._unsubscribeFromAllChangeEvents(), this._pendingValidators = [], this._resetValidationInfo(), B(this.validators, (t, i) => {
      var n = i.validate();
      e.isValid = e.isValid && n.isValid, n.brokenRules && (e.brokenRules = e.brokenRules.concat(n.brokenRules)), e.validators.push(i), n.status === It.pending && this._addPendingValidator(i), this._subscribeToChangeEvents(i);
    }), this._pendingValidators.length ? e.status = It.pending : (e.status = e.isValid ? It.valid : It.invalid, this._unsubscribeFromAllChangeEvents(), this._raiseValidatedEvent(e)), this._updateValidationInfo(e), T({}, this._validationInfo.result);
  },
  _subscribeToChangeEvents(e) {
    e.on("validating", this._onValidatorStatusChanged), e.on("validated", this._onValidatorStatusChanged);
  },
  _unsubscribeFromChangeEvents(e) {
    e.off("validating", this._onValidatorStatusChanged), e.off("validated", this._onValidatorStatusChanged);
  },
  _unsubscribeFromAllChangeEvents() {
    B(this.validators, (e, t) => {
      this._unsubscribeFromChangeEvents(t);
    });
  },
  _updateValidationInfo(e) {
    this._validationInfo.result = e, e.status === It.pending && (this._validationInfo.deferred || (this._validationInfo.deferred = new U(), this._validationInfo.result.complete = this._validationInfo.deferred.promise()));
  },
  _addPendingValidator(e) {
    var t = li(this._pendingValidators, function(i) {
      return i === e;
    })[0];
    t || this._pendingValidators.push(e);
  },
  _removePendingValidator(e) {
    var t = this._pendingValidators.indexOf(e);
    t >= 0 && this._pendingValidators.splice(t, 1);
  },
  _orderBrokenRules(e) {
    var t = [];
    return B(this.validators, function(i, n) {
      var r = li(e, function(a) {
        return a.validator === n;
      });
      r.length && (t = t.concat(r));
    }), t;
  },
  _updateBrokenRules(e) {
    if (this._validationInfo.result) {
      var t = this._validationInfo.result.brokenRules, i = li(t, function(n) {
        return n.validator !== e.validator;
      });
      e.brokenRules && (t = i.concat(e.brokenRules)), this._validationInfo.result.brokenRules = this._orderBrokenRules(t);
    }
  },
  _onValidatorStatusChanged(e) {
    if (e.status === It.pending) {
      this._addPendingValidator(e.validator);
      return;
    }
    this._resolveIfComplete(e);
  },
  _resolveIfComplete(e) {
    if (this._removePendingValidator(e.validator), this._updateBrokenRules(e), !this._pendingValidators.length) {
      if (this._unsubscribeFromAllChangeEvents(), !this._validationInfo.result)
        return;
      this._validationInfo.result.status = this._validationInfo.result.brokenRules.length === 0 ? It.valid : It.invalid, this._validationInfo.result.isValid = this._validationInfo.result.status === It.valid;
      var t = T({}, this._validationInfo.result, {
        complete: null
      }), i = this._validationInfo.deferred;
      this._validationInfo.deferred = null, this._raiseValidatedEvent(t), i && setTimeout(() => {
        i.resolve(t);
      });
    }
  },
  _raiseValidatedEvent(e) {
    this._eventsStrategy.fireEvent("validated", [e]);
  },
  _resetValidationInfo() {
    this._validationInfo = {
      result: null,
      deferred: null
    };
  },
  _synchronizeValidationInfo() {
    this._validationInfo.result && (this._validationInfo.result.validators = this.validators);
  },
  removeRegisteredValidator(e) {
    var t = this.validators.indexOf(e);
    t > -1 && (this.validators.splice(t, 1), this._synchronizeValidationInfo(), this._resolveIfComplete({
      validator: e
    }));
  },
  registerValidator(e) {
    this.validators.includes(e) || (this.validators.push(e), this._synchronizeValidationInfo());
  },
  reset() {
    B(this.validators, function(e, t) {
      t.reset();
    }), this._pendingValidators = [], this._resetValidationInfo();
  },
  on(e, t) {
    return this._eventsStrategy.on(e, t), this;
  },
  off(e, t) {
    return this._eventsStrategy.off(e, t), this;
  }
}), Ze = {
  groups: [],
  getGroupConfig(e) {
    var t = li(this.groups, function(i) {
      return i.group === e;
    });
    if (t.length)
      return t[0];
  },
  findGroup(e, t) {
    var i, n, r = (i = e.data()) === null || i === void 0 || (n = i.dxComponents) === null || n === void 0 ? void 0 : n.includes("dxValidationGroup"), a = r && e.dxValidationGroup("instance");
    if (a)
      return a;
    var o = e.parents(".dx-validationgroup").first();
    return o.length ? o.dxValidationGroup("instance") : t;
  },
  initGroups() {
    this.groups = [], this.addGroup();
  },
  addGroup(e) {
    var t = this.getGroupConfig(e);
    return t || (t = new qH(e), this.groups.push(t)), t;
  },
  removeGroup(e) {
    var t = this.getGroupConfig(e), i = this.groups.indexOf(t);
    return i > -1 && this.groups.splice(i, 1), t;
  },
  _setDefaultMessage(e) {
    var {
      rule: t,
      validator: i,
      name: n
    } = e;
    x(t.message) || (i.defaultFormattedMessage && x(n) ? t.message = i.defaultFormattedMessage(n) : t.message = i.defaultMessage());
  },
  _addBrokenRule(e) {
    var {
      result: t,
      rule: i
    } = e;
    t.brokenRule || (t.brokenRule = i), t.brokenRules || (t.brokenRules = []), t.brokenRules.push(i);
  },
  validate(e, t, i) {
    var n, r = {
      name: i,
      value: e,
      brokenRule: null,
      brokenRules: null,
      isValid: !0,
      validationRules: t,
      pendingRules: null,
      status: It.valid,
      complete: null
    }, a = t == null || (n = t[0]) === null || n === void 0 ? void 0 : n.validator, o = [];
    return B(t || [], (s, l) => {
      var u = Fl[l.type], d;
      if (u) {
        if (x(l.isValid) && l.value === e && !l.reevaluate)
          return l.isValid ? !0 : (r.isValid = !1, this._addBrokenRule({
            result: r,
            rule: l
          }), !1);
        if (l.value = e, l.type === "async")
          return o.push({
            rule: l,
            ruleValidator: u
          }), !0;
        if (d = u.validate(e, l), l.isValid = d, d || (r.isValid = !1, this._setDefaultMessage({
          rule: l,
          validator: u,
          name: i
        }), this._addBrokenRule({
          result: r,
          rule: l
        })), !l.isValid)
          return !1;
      } else
        throw Je.Error("E0100");
    }), r.isValid && !r.brokenRules && o.length && (r = this._validateAsyncRules({
      value: e,
      items: o,
      result: r,
      name: i
    })), this._synchronizeGroupValidationInfo(a, r), r.status = r.pendingRules ? It.pending : r.isValid ? It.valid : It.invalid, r;
  },
  _synchronizeGroupValidationInfo(e, t) {
    var i;
    if (e) {
      var n = Ze.getGroupConfig(e._validationGroup);
      n._updateBrokenRules.call(n, {
        validator: e,
        brokenRules: (i = t.brokenRules) !== null && i !== void 0 ? i : []
      });
    }
  },
  _validateAsyncRules(e) {
    var {
      result: t,
      value: i,
      items: n,
      name: r
    } = e, a = [];
    return B(n, (o, s) => {
      var l = s.ruleValidator.validate(i, s.rule);
      if (!Ho(l))
        this._updateRuleConfig({
          rule: s.rule,
          ruleResult: this._getPatchedRuleResult(l),
          validator: s.ruleValidator,
          name: r
        });
      else {
        t.pendingRules || (t.pendingRules = []), t.pendingRules.push(s.rule);
        var u = l.then((d) => {
          var c = this._getPatchedRuleResult(d);
          return this._updateRuleConfig({
            rule: s.rule,
            ruleResult: c,
            validator: s.ruleValidator,
            name: r
          }), c;
        });
        a.push(u);
      }
    }), a.length && (t.complete = Promise.all(a).then((o) => this._getAsyncRulesResult({
      result: t,
      values: o
    }))), t;
  },
  _updateRuleConfig(e) {
    var {
      rule: t,
      ruleResult: i,
      validator: n,
      name: r
    } = e;
    t.isValid = i.isValid, i.isValid || (x(i.message) && Te(i.message) && i.message.length ? t.message = i.message : this._setDefaultMessage({
      rule: t,
      validator: n,
      name: r
    }));
  },
  _getPatchedRuleResult(e) {
    var t;
    return De(e) ? (t = T({}, e), x(t.isValid) || (t.isValid = !0)) : t = {
      isValid: _a(e) ? e : !0
    }, t;
  },
  _getAsyncRulesResult(e) {
    var {
      values: t,
      result: i
    } = e;
    return B(t, (n, r) => {
      if (r.isValid === !1) {
        i.isValid = r.isValid;
        var a = i.pendingRules[n];
        this._addBrokenRule({
          result: i,
          rule: a
        });
      }
    }), i.pendingRules = null, i.complete = null, i.status = i.isValid ? It.valid : It.invalid, i;
  },
  registerValidatorInGroup(e, t) {
    var i = Ze.addGroup(e);
    i.registerValidator.call(i, t);
  },
  _shouldRemoveGroup(e, t) {
    var i = e === void 0, n = e && e.NAME === "dxValidationGroup";
    return !i && !n && !t.length;
  },
  removeRegisteredValidator(e, t) {
    var i = Ze.getGroupConfig(e);
    if (i) {
      i.removeRegisteredValidator.call(i, t);
      var n = i.validators;
      this._shouldRemoveGroup(e, n) && this.removeGroup(e);
    }
  },
  initValidationOptions(e) {
    var t = {};
    return e && ["isValid", "validationStatus", "validationError", "validationErrors"].forEach((i) => {
      i in e && T(t, this.synchronizeValidationOptions({
        name: i,
        value: e[i]
      }, e));
    }), t;
  },
  synchronizeValidationOptions(e, t) {
    var {
      name: i,
      value: n
    } = e;
    switch (i) {
      case "validationStatus":
        var r = n === It.valid || n === It.pending;
        return t.isValid !== r ? {
          isValid: r
        } : {};
      case "isValid":
        var {
          validationStatus: a
        } = t, o = a;
        return n && a === It.invalid ? o = It.valid : !n && a !== It.invalid && (o = It.invalid), o !== a ? {
          validationStatus: o
        } : {};
      case "validationErrors":
        var s = !n || !n.length ? null : n[0];
        return t.validationError !== s ? {
          validationError: s
        } : {};
      case "validationError":
        var {
          validationErrors: l
        } = t;
        if (!n && l)
          return {
            validationErrors: null
          };
        if (n && !l)
          return {
            validationErrors: [n]
          };
        if (n && l && n !== l[0])
          return l[0] = n, {
            validationErrors: l.slice()
          };
    }
    return {};
  },
  validateGroup(e) {
    var t = Ze.getGroupConfig(e);
    if (!t)
      throw Je.Error("E0110");
    return t.validate();
  },
  resetGroup(e) {
    var t = Ze.getGroupConfig(e);
    if (!t)
      throw Je.Error("E0110");
    return t.reset();
  }
};
Ze.initGroups();
var gu = "dx-invalid-message", XH = "dx-invalid-message-auto", YH = "dx-invalid-message-always", ZH = "dx-invalid-message-content", QH = 100, vv = tn.inherit({
  _getDefaultOptions() {
    return T(this.callBase(), {
      integrationOptions: {},
      templatesRenderAsynchronously: !1,
      shading: !1,
      width: "auto",
      height: "auto",
      hideOnOutsideClick: !1,
      animation: null,
      visible: !0,
      propagateOutsideClick: !0,
      _checkParentVisibility: !1,
      rtlEnabled: !1,
      contentTemplate: this._renderInnerHtml,
      maxWidth: "100%",
      container: this.$element(),
      target: void 0,
      mode: "auto",
      validationErrors: void 0,
      positionSide: "top",
      boundary: void 0,
      offset: {
        h: 0,
        v: 0
      },
      contentId: void 0
    });
  },
  _init() {
    this.callBase(), this.updateMaxWidth(), this._updatePosition();
  },
  _initMarkup() {
    this.callBase(), this._ensureMessageNotEmpty(), this._updatePositionByTarget(), this._toggleModeClass(), this._updateContentId();
  },
  _updatePositionByTarget: function() {
    var {
      target: e
    } = this.option();
    this.option("position.of", e);
  },
  _ensureMessageNotEmpty: function() {
    this._textMarkup = this._getTextMarkup();
    var e = this.option("visible") && this._textMarkup;
    this._toggleVisibilityClasses(e);
  },
  _toggleVisibilityClasses: function(e) {
    e ? (this.$element().addClass(gu), this.$wrapper().addClass(gu)) : (this.$element().removeClass(gu), this.$wrapper().removeClass(gu));
  },
  _updateContentId() {
    var {
      container: e,
      contentId: t
    } = this.option(), i = t ?? g(e).attr("aria-describedby");
    this.$content().addClass(ZH).attr("id", i);
  },
  _renderInnerHtml(e) {
    var t = e && g(e);
    t == null || t.html(this._textMarkup);
  },
  _getTextMarkup() {
    var e, t = (e = this.option("validationErrors")) !== null && e !== void 0 ? e : [], i = "";
    return t.forEach((n) => {
      var r, a = i ? "<br />" : "";
      i += a + d_((r = n == null ? void 0 : n.message) !== null && r !== void 0 ? r : "");
    }), i;
  },
  _toggleModeClass() {
    var e = this.option("mode");
    this.$wrapper().toggleClass(XH, e === "auto").toggleClass(YH, e === "always");
  },
  updateMaxWidth() {
    var e = this.option("target"), t = Ge(e), i = "100%";
    t && (i = Math.max(t, QH)), this.option({
      maxWidth: i
    });
  },
  _getPositionsArray: function(e, t) {
    switch (e) {
      case "top":
        return ["".concat(t, " bottom"), "".concat(t, " top")];
      case "left":
        return ["right", "left"];
      case "right":
        return ["left", "right"];
      default:
        return ["".concat(t, " top"), "".concat(t, " bottom")];
    }
  },
  _updatePosition: function() {
    var {
      positionSide: e,
      rtlEnabled: t,
      offset: i,
      boundary: n
    } = this.option(), r = $r(t), a = this._getPositionsArray(e, r), o = ue({}, i);
    this.$element().addClass("dx-invalid-message-".concat(e)), t && e !== "left" && e !== "right" && (o.h = -o.h), e === "top" && (o.v = -o.v), e === "left" && (o.h = -o.h), this.option("position", {
      offset: o,
      boundary: n,
      my: a[0],
      at: a[1],
      collision: "none flip"
    });
  },
  _optionChanged(e) {
    var {
      name: t,
      value: i,
      previousValue: n
    } = e;
    switch (t) {
      case "target":
        this._updatePositionByTarget(), this.updateMaxWidth(), this.callBase(e);
        break;
      case "boundary":
        this.option("position.boundary", i);
        break;
      case "mode":
        this._toggleModeClass(i);
        break;
      case "rtlEnabled":
      case "offset":
      case "positionSide":
        this.$element().removeClass("dx-invalid-message-".concat(n)), this._updatePosition();
        break;
      case "container":
        this._updateContentId(), this.callBase(e);
        break;
      case "contentId":
        this._updateContentId();
        break;
      case "validationErrors":
        this._ensureMessageNotEmpty(), this._renderInnerHtml(this.$content());
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxValidationMessage", vv);
var gy = "dx-invalid-message-auto", JH = "dx-state-readonly", ez = "dx-invalid", tz = "dx-show-invalid-badge", _y = "dx-validation-target", iz = "valid", vy = "invalid", nz = "editorReadOnly", rz = ["outlined", "filled", "underlined"], my = {
  validationMessageMode: "mode",
  validationMessagePosition: "positionSide",
  validationMessageOffset: "offset",
  validationBoundary: "boundary"
}, nn = Mt.inherit({
  ctor: function() {
    this.showValidationMessageTimeout = null, this.validationRequest = qe(), this.callBase.apply(this, arguments);
  },
  _createElement: function(e) {
    this.callBase(e);
    var t = this.$element();
    t && dt(t[0], _y, this);
  },
  _initOptions: function(e) {
    this.callBase.apply(this, arguments), this.option(Ze.initValidationOptions(e));
  },
  _init: function() {
    this.callBase(), this._options.cache("validationTooltipOptions", this.option("validationTooltipOptions"));
    var e = this.$element();
    e.addClass(tz);
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      value: null,
      name: "",
      onValueChanged: null,
      readOnly: !1,
      isValid: !0,
      validationError: null,
      validationErrors: null,
      validationStatus: iz,
      validationMessageMode: "auto",
      validationMessagePosition: "bottom",
      validationBoundary: void 0,
      validationMessageOffset: {
        h: 0,
        v: 0
      },
      validationTooltipOptions: {}
    });
  },
  _attachKeyboardEvents: function() {
    this.option("readOnly") || this.callBase();
  },
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      validationError: !0
    });
  },
  _createValueChangeAction: function() {
    this._valueChangeAction = this._createActionByOption("onValueChanged", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _suppressValueChangeAction: function() {
    this._valueChangeActionSuppressed = !0;
  },
  _resumeValueChangeAction: function() {
    this._valueChangeActionSuppressed = !1;
  },
  _initMarkup: function() {
    var e;
    this._toggleReadOnlyState(), this._setSubmitElementName(this.option("name")), this.callBase(), this._renderValidationState(), (e = this.option("_onMarkupRendered")) === null || e === void 0 || e();
  },
  _raiseValueChangeAction: function(e, t) {
    this._valueChangeAction || this._createValueChangeAction(), this._valueChangeAction(this._valueChangeArgs(e, t));
  },
  _valueChangeArgs: function(e, t) {
    return {
      value: e,
      previousValue: t,
      event: this._valueChangeEventInstance
    };
  },
  _saveValueChangeEvent: function(e) {
    this._valueChangeEventInstance = e;
  },
  _focusInHandler: function(e) {
    var t = this.option("validationMessageMode") === "auto";
    if (this._canValueBeChangedByClick() && t) {
      var i, n = (i = this._validationMessage) === null || i === void 0 ? void 0 : i.$wrapper();
      n == null || n.removeClass(gy), clearTimeout(this.showValidationMessageTimeout), this.showValidationMessageTimeout = setTimeout(() => n == null ? void 0 : n.addClass(gy), 150);
    }
    return this.callBase(e);
  },
  _canValueBeChangedByClick: function() {
    return !1;
  },
  _getStylingModePrefix: function() {
    return "dx-editor-";
  },
  _renderStylingMode: function() {
    var e = this.option("stylingMode"), t = this._getStylingModePrefix(), i = rz.map((o) => t + o);
    i.forEach((o) => this.$element().removeClass(o));
    var n = t + e;
    if (i.indexOf(n) === -1) {
      var r = this._getDefaultOptions().stylingMode, a = this._convertRulesToOptions(this._defaultOptionsRules()).stylingMode;
      n = t + (a || r);
    }
    this.$element().addClass(n);
  },
  _getValidationErrors: function() {
    var e = this.option("validationErrors");
    return !e && this.option("validationError") && (e = [this.option("validationError")]), e;
  },
  _disposeValidationMessage: function() {
    this._$validationMessage && (this._$validationMessage.remove(), this.setAria("describedby", null), this._$validationMessage = void 0, this._validationMessage = void 0);
  },
  _toggleValidationClasses: function(e) {
    this.$element().toggleClass(ez, e), this.setAria(vy, e || void 0);
  },
  _renderValidationState: function() {
    var e = this.option("isValid") && this.option("validationStatus") !== vy, t = this._getValidationErrors(), i = this.$element();
    if (this._toggleValidationClasses(!e), !!Re() && (this._disposeValidationMessage(), !e && t)) {
      var {
        validationMessageMode: n,
        validationMessagePosition: r,
        validationMessageOffset: a,
        validationBoundary: o,
        rtlEnabled: s
      } = this.option();
      this._$validationMessage = g("<div>").appendTo(i);
      var l = "dx-".concat(new Ot());
      this.setAria("describedby", l), this._validationMessage = new vv(this._$validationMessage, T({
        validationErrors: t,
        rtlEnabled: s,
        target: this._getValidationMessageTarget(),
        visualContainer: i,
        mode: n,
        positionSide: r,
        offset: a,
        boundary: o,
        contentId: l
      }, this._options.cache("validationTooltipOptions"))), this._bindInnerWidgetOptions(this._validationMessage, "validationTooltipOptions");
    }
  },
  _getValidationMessageTarget: function() {
    return this.$element();
  },
  _toggleReadOnlyState: function() {
    var e = this.option("readOnly");
    this._toggleBackspaceHandler(e), this.$element().toggleClass(JH, !!e), this.setAria("readonly", e || void 0);
  },
  _toggleBackspaceHandler: function(e) {
    var t = this._keyboardEventBindingTarget(), i = oe("keydown", nz);
    w.off(t, i), e && w.on(t, i, (n) => {
      ht(n) === "backspace" && n.preventDefault();
    });
  },
  _dispose: function() {
    var e = this.$element()[0];
    dt(e, _y, null), clearTimeout(this.showValidationMessageTimeout), this._disposeValidationMessage(), this.callBase();
  },
  _setSubmitElementName: function(e) {
    var t = this._getSubmitElement();
    t && (e.length > 0 ? t.attr("name", e) : t.removeAttr("name"));
  },
  _getSubmitElement: function() {
    return null;
  },
  _setValidationMessageOption: function(e) {
    var t, {
      name: i,
      value: n
    } = e, r = my[i] ? my[i] : i;
    (t = this._validationMessage) === null || t === void 0 || t.option(r, n);
  },
  _hasActiveElement: $,
  _optionChanged: function(e) {
    var t;
    switch (e.name) {
      case "onValueChanged":
        this._createValueChangeAction();
        break;
      case "readOnly":
        this._toggleReadOnlyState(), this._refreshFocusState();
        break;
      case "value":
        e.value != e.previousValue && this.validationRequest.fire({
          value: e.value,
          editor: this
        }), this._valueChangeActionSuppressed || (this._raiseValueChangeAction(e.value, e.previousValue), this._saveValueChangeEvent(void 0));
        break;
      case "width":
        this.callBase(e), (t = this._validationMessage) === null || t === void 0 || t.updateMaxWidth();
        break;
      case "name":
        this._setSubmitElementName(e.value);
        break;
      case "isValid":
      case "validationError":
      case "validationErrors":
      case "validationStatus":
        this.option(Ze.synchronizeValidationOptions(e, this.option())), this._renderValidationState();
        break;
      case "validationBoundary":
      case "validationMessageMode":
      case "validationMessagePosition":
      case "validationMessageOffset":
        this._setValidationMessageOption(e);
        break;
      case "rtlEnabled":
        this._setValidationMessageOption(e), this.callBase(e);
        break;
      case "validationTooltipOptions":
        this._innerWidgetOptionChanged(this._validationMessage, e);
        break;
      default:
        this.callBase(e);
    }
  },
  blur: function() {
    this._hasActiveElement() && Go();
  },
  reset: function() {
    var e = this._getDefaultOptions();
    this.option("value", e.value);
  }
});
nn.isEditor = (e) => e instanceof nn;
class Bc {
  constructor(t, i, n) {
    this.instance = null, this.$container = null, this.$placeMarker = null, this.editor = i, this.name = t, this.options = n || {};
  }
  _addPlaceMarker(t) {
    this.$placeMarker = g("<div>").appendTo(t);
  }
  _addToContainer(t) {
    var {
      $placeMarker: i,
      $container: n
    } = this;
    i ? i.replaceWith(t) : t.appendTo(n);
  }
  _attachEvents() {
    throw "Not implemented";
  }
  _create() {
    throw "Not implemented";
  }
  _isRendered() {
    return !!this.instance;
  }
  _isVisible() {
    var {
      editor: t,
      options: i
    } = this;
    return i.visible || !t.option("readOnly");
  }
  _isDisabled() {
    throw "Not implemented";
  }
  _shouldRender() {
    return this._isVisible() && !this._isRendered();
  }
  dispose() {
    var {
      instance: t,
      $placeMarker: i
    } = this;
    t && (t.dispose ? t.dispose() : t.remove(), this.instance = null), i && i.remove();
  }
  render() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.$container;
    if (this.$container = t, this._isVisible()) {
      var {
        instance: i,
        $element: n
      } = this._create();
      this.instance = i, this._attachEvents(i, n);
    } else
      this._addPlaceMarker(t);
  }
  update() {
    return this._shouldRender() && this.render(), !!this.instance;
  }
}
var az = je.down, oz = "dx-state-invisible", sz = "dx-clear-button-area", lz = "dx-icon-clear", uz = "dx-icon", dz = "dx-show-clear-button";
class cz extends Bc {
  _create() {
    var t = g("<span>").addClass(sz).append(g("<span>").addClass(uz).addClass(lz));
    return this._addToContainer(t), this.update(!0), {
      instance: t,
      $element: t
    };
  }
  _isVisible() {
    var {
      editor: t
    } = this;
    return t._isClearButtonVisible();
  }
  _attachEvents(t, i) {
    var {
      editor: n
    } = this, r = n.NAME;
    w.on(i, oe(az, r), (a) => {
      a.preventDefault(), a.pointerType !== "mouse" && n._clearValueHandler(a);
    }), w.on(i, oe(Xe, r), (a) => n._clearValueHandler(a));
  }
  _legacyRender(t, i) {
    t.toggleClass(dz, i);
  }
  update() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    !t && super.update();
    var {
      editor: i,
      instance: n
    } = this, r = i.$element(), a = this._isVisible();
    n && n.toggleClass(oz, !a), this._legacyRender(r, a);
  }
}
var rl = Array.isArray;
function Wd(e) {
  var t = typeof e;
  return t === "string" || t === "number";
}
function Qe(e) {
  return e == null;
}
function al(e) {
  return e === null || e === !1 || e === !0 || e === void 0;
}
function vt(e) {
  return typeof e == "function";
}
function ol(e) {
  return typeof e == "string";
}
function hz(e) {
  return typeof e == "number";
}
function di(e) {
  return e === null;
}
function pz(e) {
  return e === void 0;
}
function zr(e, t) {
  var i = {};
  if (e)
    for (var n in e)
      i[n] = e[n];
  if (t)
    for (var r in t)
      i[r] = t[r];
  return i;
}
function mv(e) {
  return !di(e) && typeof e == "object";
}
var $t = {}, fz = "$F";
function Cv(e) {
  return e.substr(2).toLowerCase();
}
function oD(e, t) {
  e.appendChild(t);
}
function xv(e, t, i) {
  di(i) ? oD(e, t) : e.insertBefore(t, i);
}
function gz(e, t) {
  return t ? document.createElementNS("http://www.w3.org/2000/svg", e) : document.createElement(e);
}
function _z(e, t, i) {
  e.replaceChild(t, i);
}
function sD(e, t) {
  e.removeChild(t);
}
function lD(e) {
  for (var t = 0; t < e.length; t++)
    e[t]();
}
function vz(e, t, i) {
  var n = e.children;
  return i & 4 ? n.$LI : i & 8192 ? e.childFlags === 2 ? n : n[t ? 0 : n.length - 1] : n;
}
function Vi(e, t) {
  for (var i; e; ) {
    if (i = e.flags, i & 2033)
      return e.dom;
    e = vz(e, t, i);
  }
  return null;
}
function Pl(e, t) {
  do {
    var i = e.flags;
    if (i & 2033) {
      sD(t, e.dom);
      return;
    }
    var n = e.children;
    if (i & 4 && (e = n.$LI), i & 8 && (e = n), i & 8192)
      if (e.childFlags === 2)
        e = n;
      else {
        for (var r = 0, a = n.length; r < a; ++r)
          Pl(n[r], t);
        return;
      }
  } while (e);
}
function uD(e, t, i) {
  do {
    var n = e.flags;
    if (n & 2033) {
      xv(t, e.dom, i);
      return;
    }
    var r = e.children;
    if (n & 4 && (e = r.$LI), n & 8 && (e = r), n & 8192)
      if (e.childFlags === 2)
        e = r;
      else {
        for (var a = 0, o = r.length; a < o; ++a)
          uD(r[a], t, i);
        return;
      }
  } while (e);
}
function dD(e, t, i) {
  return e.constructor.getDerivedStateFromProps ? zr(i, e.constructor.getDerivedStateFromProps(t, i)) : i;
}
var sl = {
  v: !1
}, Cy = {
  componentComparator: null,
  createVNode: null,
  renderComplete: null
};
function Hs(e, t) {
  e.textContent = t;
}
function cD(e, t) {
  return mv(e) && e.event === t.event && e.data === t.data;
}
function hD(e, t) {
  for (var i in t)
    pz(e[i]) && (e[i] = t[i]);
  return e;
}
function yv(e, t) {
  return !!vt(e) && (e(t), !0);
}
var zs = "$";
function kc(e, t, i, n, r, a, o, s) {
  this.childFlags = e, this.children = t, this.className = i, this.dom = null, this.flags = n, this.key = r === void 0 ? null : r, this.props = a === void 0 ? null : a, this.ref = o === void 0 ? null : o, this.type = s;
}
function yt(e, t, i, n, r, a, o, s) {
  var l = r === void 0 ? 1 : r, u = new kc(l, n, i, e, o, a, s, t);
  return l === 0 && fD(u, u.children), u;
}
function mz(e, t, i) {
  if (e & 4)
    return i;
  var n = (e & 32768 ? t.render : t).defaultHooks;
  return Qe(n) ? i : Qe(i) ? n : hD(i, n);
}
function Cz(e, t, i) {
  var n = (e & 32768 ? t.render : t).defaultProps;
  return Qe(n) ? i : Qe(i) ? zr(n, null) : hD(i, n);
}
function xz(e, t) {
  return e & 12 ? e : t.prototype && t.prototype.render ? 4 : t.render ? 32776 : 8;
}
function ot(e, t, i, n, r) {
  e = xz(e, t);
  var a = new kc(1, null, null, e, n, Cz(e, t, i), mz(e, t, r), t);
  return a;
}
function Ml(e, t) {
  return new kc(1, Qe(e) || e === !0 || e === !1 ? "" : e, null, 16, t, null, null, null);
}
function nr(e, t, i) {
  var n = yt(8192, 8192, null, e, t, null, i, null);
  switch (n.childFlags) {
    case 1:
      n.children = Fc(), n.childFlags = 2;
      break;
    case 16:
      n.children = [Ml(e)], n.childFlags = 4;
      break;
  }
  return n;
}
function vi(e) {
  var t = e.props;
  if (t) {
    var i = e.flags;
    i & 481 && (t.children !== void 0 && Qe(e.children) && fD(e, t.children), t.className !== void 0 && (Qe(e.className) && (e.className = t.className || null), t.className = void 0)), t.key !== void 0 && (e.key = t.key, t.key = void 0), t.ref !== void 0 && (i & 8 ? e.ref = zr(e.ref, t.ref) : e.ref = t.ref, t.ref = void 0);
  }
  return e;
}
function yz(e) {
  var t = e.children, i = e.childFlags;
  return nr(i === 2 ? Ht(t) : t.map(Ht), i, e.key);
}
function Ht(e) {
  var t = e.flags & -16385, i = e.props;
  if (t & 14 && !di(i)) {
    var n = i;
    i = {};
    for (var r in n)
      i[r] = n[r];
  }
  return t & 8192 ? yz(e) : new kc(e.childFlags, e.children, e.className, t, e.key, i, e.ref, e.type);
}
function Fc() {
  return Ml("", null);
}
function pD(e, t, i, n) {
  for (var r = e.length; i < r; i++) {
    var a = e[i];
    if (!al(a)) {
      var o = n + zs + i;
      if (rl(a))
        pD(a, t, 0, o);
      else {
        if (Wd(a))
          a = Ml(a, o);
        else {
          var s = a.key, l = ol(s) && s[0] === zs;
          (a.flags & 81920 || l) && (a = Ht(a)), a.flags |= 65536, l ? s.substring(0, n.length) !== n && (a.key = n + s) : di(s) ? a.key = o : a.key = n + s;
        }
        t.push(a);
      }
    }
  }
}
function bz(e) {
  switch (e) {
    case "svg":
      return 32;
    case "input":
      return 64;
    case "select":
      return 256;
    case "textarea":
      return 128;
    case fz:
      return 8192;
    default:
      return 1;
  }
}
function fD(e, t) {
  var i, n = 1;
  if (al(t))
    i = t;
  else if (Wd(t))
    n = 16, i = t;
  else if (rl(t)) {
    for (var r = t.length, a = 0; a < r; ++a) {
      var o = t[a];
      if (al(o) || rl(o)) {
        i = i || t.slice(0, a), pD(t, i, a, "");
        break;
      } else if (Wd(o))
        i = i || t.slice(0, a), i.push(Ml(o, zs + a));
      else {
        var s = o.key, l = (o.flags & 81920) > 0, u = di(s), d = ol(s) && s[0] === zs;
        l || u || d ? (i = i || t.slice(0, a), (l || d) && (o = Ht(o)), (u || d) && (o.key = zs + a), i.push(o)) : i && i.push(o), o.flags |= 65536;
      }
    }
    i = i || t, i.length === 0 ? n = 1 : n = 8;
  } else
    i = t, i.flags |= 65536, t.flags & 81920 && (i = Ht(t)), n = 2;
  return e.children = i, e.childFlags = n, e;
}
function Pc(e) {
  return al(e) || Wd(e) ? Ml(e, null) : rl(e) ? nr(e, 0, null) : e.flags & 16384 ? Ht(e) : e;
}
var Ur = "http://www.w3.org/1999/xlink", gp = "http://www.w3.org/XML/1998/namespace", xy = {
  "xlink:actuate": Ur,
  "xlink:arcrole": Ur,
  "xlink:href": Ur,
  "xlink:role": Ur,
  "xlink:show": Ur,
  "xlink:title": Ur,
  "xlink:type": Ur,
  "xml:base": gp,
  "xml:lang": gp,
  "xml:space": gp
};
function Mc(e) {
  return {
    onClick: e,
    onDblClick: e,
    onFocusIn: e,
    onFocusOut: e,
    onKeyDown: e,
    onKeyPress: e,
    onKeyUp: e,
    onMouseDown: e,
    onMouseMove: e,
    onMouseUp: e,
    onTouchEnd: e,
    onTouchMove: e,
    onTouchStart: e
  };
}
var gD = Mc(0), Dg = Mc(null), _D = Mc(!0);
function yy(e, t) {
  var i = t.$EV;
  return i || (i = t.$EV = Mc(null)), i[e] || ++gD[e] === 1 && (Dg[e] = Oz(e)), i;
}
function vD(e, t) {
  var i = t.$EV;
  i && i[e] && (--gD[e] === 0 && (document.removeEventListener(Cv(e), Dg[e]), Dg[e] = null), i[e] = null);
}
function Sz(e, t, i, n) {
  if (vt(i))
    yy(e, n)[e] = i;
  else if (mv(i)) {
    if (cD(t, i))
      return;
    yy(e, n)[e] = i;
  } else
    vD(e, n);
}
function Ez(e) {
  return vt(e.composedPath) ? e.composedPath()[0] : e.target;
}
function mD(e, t, i, n) {
  var r = Ez(e);
  do {
    if (t && r.disabled)
      return;
    var a = r.$EV;
    if (a) {
      var o = a[i];
      if (o && (n.dom = r, o.event ? o.event(o.data, e) : o(e), e.cancelBubble))
        return;
    }
    r = r.parentNode;
  } while (!di(r));
}
function wz() {
  this.cancelBubble = !0, this.immediatePropagationStopped || this.stopImmediatePropagation();
}
function Iz() {
  return this.defaultPrevented;
}
function Tz() {
  return this.cancelBubble;
}
function CD(e) {
  var t = {
    dom: document
  };
  return e.isDefaultPrevented = Iz, e.isPropagationStopped = Tz, e.stopPropagation = wz, Object.defineProperty(e, "currentTarget", {
    configurable: !0,
    get: function() {
      return t.dom;
    }
  }), t;
}
function Dz(e) {
  return function(t) {
    if (t.button !== 0) {
      t.stopPropagation();
      return;
    }
    mD(t, !0, e, CD(t));
  };
}
function Az(e) {
  return function(t) {
    mD(t, !1, e, CD(t));
  };
}
function Oz(e) {
  var t = e === "onClick" || e === "onDblClick" ? Dz(e) : Az(e);
  return document.addEventListener(Cv(e), t), t;
}
function Rz(e, t) {
  var i = document.createElement("i");
  return i.innerHTML = t, i.innerHTML === e.innerHTML;
}
function by(e, t, i) {
  if (e[t]) {
    var n = e[t];
    n.event ? n.event(n.data, i) : n(i);
  } else {
    var r = t.toLowerCase();
    e[r] && e[r](i);
  }
}
function Ll(e, t) {
  var i = function(n) {
    var r = this.$V;
    if (r) {
      var a = r.props || $t, o = r.dom;
      if (ol(e))
        by(a, e, n);
      else
        for (var s = 0; s < e.length; ++s)
          by(a, e[s], n);
      if (vt(t)) {
        var l = this.$V, u = l.props || $t;
        t(u, o, !1, l);
      }
    }
  };
  return Object.defineProperty(i, "wrapped", {
    configurable: !1,
    enumerable: !1,
    value: !0,
    writable: !1
  }), i;
}
function ha(e, t, i) {
  var n = "$" + t, r = e[n];
  if (r) {
    if (r[1].wrapped)
      return;
    e.removeEventListener(r[0], r[1]), e[n] = null;
  }
  vt(i) && (e.addEventListener(t, i), e[n] = [t, i]);
}
function bv(e) {
  return e === "checkbox" || e === "radio";
}
var Bz = Ll("onInput", Sv), kz = Ll(["onClick", "onChange"], Sv);
function xD(e) {
  e.stopPropagation();
}
xD.wrapped = !0;
function Fz(e, t) {
  bv(t.type) ? (ha(e, "change", kz), ha(e, "click", xD)) : ha(e, "input", Bz);
}
function Sv(e, t) {
  var i = e.type, n = e.value, r = e.checked, a = e.multiple, o = e.defaultValue, s = !Qe(n);
  i && i !== t.type && t.setAttribute("type", i), !Qe(a) && a !== t.multiple && (t.multiple = a), !Qe(o) && !s && (t.defaultValue = o + ""), bv(i) ? (s && (t.value = n), Qe(r) || (t.checked = r)) : s && t.value !== n ? (t.defaultValue = n, t.value = n) : Qe(r) || (t.checked = r);
}
function Rs(e, t) {
  if (e.type === "option")
    Pz(e, t);
  else {
    var i = e.children, n = e.flags;
    if (n & 4)
      Rs(i.$LI, t);
    else if (n & 8)
      Rs(i, t);
    else if (e.childFlags === 2)
      Rs(i, t);
    else if (e.childFlags & 12)
      for (var r = 0, a = i.length; r < a; ++r)
        Rs(i[r], t);
  }
}
function Pz(e, t) {
  var i = e.props || $t, n = e.dom;
  n.value = i.value, i.value === t || rl(t) && t.indexOf(i.value) !== -1 ? n.selected = !0 : (!Qe(t) || !Qe(i.selected)) && (n.selected = i.selected || !1);
}
var Mz = Ll("onChange", yD);
function Lz(e) {
  ha(e, "change", Mz);
}
function yD(e, t, i, n) {
  var r = !!e.multiple;
  !Qe(e.multiple) && r !== t.multiple && (t.multiple = r);
  var a = e.selectedIndex;
  a === -1 && (t.selectedIndex = -1);
  var o = n.childFlags;
  if (o !== 1) {
    var s = e.value;
    hz(a) && a > -1 && t.options[a] && (s = t.options[a].value), i && Qe(s) && (s = e.defaultValue), Rs(n, s);
  }
}
var Vz = Ll("onInput", bD), Nz = Ll("onChange");
function $z(e, t) {
  ha(e, "input", Vz), t.onChange && ha(e, "change", Nz);
}
function bD(e, t, i) {
  var n = e.value, r = t.value;
  if (Qe(n)) {
    if (i) {
      var a = e.defaultValue;
      !Qe(a) && a !== r && (t.defaultValue = a, t.value = a);
    }
  } else
    r !== n && (t.defaultValue = n, t.value = n);
}
function SD(e, t, i, n, r, a) {
  e & 64 ? Sv(n, i) : e & 256 ? yD(n, i, r, t) : e & 128 && bD(n, i, r), a && (i.$V = t);
}
function Hz(e, t, i) {
  e & 64 ? Fz(t, i) : e & 256 ? Lz(t) : e & 128 && $z(t, i);
}
function ED(e) {
  return e.type && bv(e.type) ? !Qe(e.checked) : !Qe(e.value);
}
function zt() {
  return {
    current: null
  };
}
function Gd(e) {
  e && !yv(e, null) && e.current && (e.current = null);
}
function Vl(e, t, i) {
  e && (vt(e) || e.current !== void 0) && i.push(function() {
    !yv(e, t) && e.current !== void 0 && (e.current = t);
  });
}
function Xi(e, t) {
  Un(e), Pl(e, t);
}
function Un(e) {
  var t = e.flags, i = e.children, n;
  if (t & 481) {
    n = e.ref;
    var r = e.props;
    Gd(n);
    var a = e.childFlags;
    if (!di(r))
      for (var o = Object.keys(r), s = 0, l = o.length; s < l; s++) {
        var u = o[s];
        _D[u] && vD(u, e.dom);
      }
    a & 12 ? ll(i) : a === 2 && Un(i);
  } else
    i && (t & 4 ? (vt(i.componentWillUnmount) && i.componentWillUnmount(), Gd(e.ref), i.$UN = !0, Un(i.$LI)) : t & 8 ? (n = e.ref, !Qe(n) && vt(n.onComponentWillUnmount) && n.onComponentWillUnmount(Vi(e, !0), e.props || $t), Un(i)) : t & 1024 ? Xi(i, e.ref) : t & 8192 && e.childFlags & 12 && ll(i));
}
function ll(e) {
  for (var t = 0, i = e.length; t < i; ++t)
    Un(e[t]);
}
function sd(e) {
  e.textContent = "";
}
function ld(e, t, i) {
  ll(i), t.flags & 8192 ? Pl(t, e) : sd(e);
}
function zz(e) {
  var t = e.event;
  return function(i) {
    t(e.data, i);
  };
}
function Wz(e, t, i, n) {
  if (mv(i)) {
    if (cD(t, i))
      return;
    i = zz(i);
  }
  ha(n, Cv(e), i);
}
function Gz(e, t, i) {
  if (Qe(t)) {
    i.removeAttribute("style");
    return;
  }
  var n = i.style, r, a;
  if (ol(t)) {
    n.cssText = t;
    return;
  }
  if (!Qe(e) && !ol(e)) {
    for (r in t)
      a = t[r], a !== e[r] && n.setProperty(r, a);
    for (r in e)
      Qe(t[r]) && n.removeProperty(r);
  } else
    for (r in t)
      a = t[r], n.setProperty(r, a);
}
function Kz(e, t, i, n) {
  var r = e && e.__html || "", a = t && t.__html || "";
  r !== a && !Qe(a) && !Rz(n, a) && (di(i) || (i.childFlags & 12 ? ll(i.children) : i.childFlags === 2 && Un(i.children), i.children = null, i.childFlags = 1), n.innerHTML = a);
}
function Ag(e, t, i, n, r, a, o) {
  switch (e) {
    case "children":
    case "childrenType":
    case "className":
    case "defaultValue":
    case "key":
    case "multiple":
    case "ref":
    case "selectedIndex":
      break;
    case "autoFocus":
      n.autofocus = !!i;
      break;
    case "allowfullscreen":
    case "autoplay":
    case "capture":
    case "checked":
    case "controls":
    case "default":
    case "disabled":
    case "hidden":
    case "indeterminate":
    case "loop":
    case "muted":
    case "novalidate":
    case "open":
    case "readOnly":
    case "required":
    case "reversed":
    case "scoped":
    case "seamless":
    case "selected":
      n[e] = !!i;
      break;
    case "defaultChecked":
    case "value":
    case "volume":
      if (a && e === "value")
        break;
      var s = Qe(i) ? "" : i;
      n[e] !== s && (n[e] = s);
      break;
    case "style":
      Gz(t, i, n);
      break;
    case "dangerouslySetInnerHTML":
      Kz(t, i, o, n);
      break;
    default:
      _D[e] ? Sz(e, t, i, n) : e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 ? Wz(e, t, i, n) : Qe(i) ? n.removeAttribute(e) : r && xy[e] ? n.setAttributeNS(xy[e], e, i) : n.setAttribute(e, i);
      break;
  }
}
function wD(e, t, i, n, r) {
  var a = !1, o = (t & 448) > 0;
  o && (a = ED(i), a && Hz(t, n, i));
  for (var s in i)
    Ag(s, null, i[s], n, r, a, null);
  o && SD(t, e, n, i, !0, a);
}
function ID(e, t, i) {
  var n = Pc(e.render(t, e.state, i)), r = i;
  return vt(e.getChildContext) && (r = zr(i, e.getChildContext())), e.$CX = r, n;
}
function TD(e, t, i, n, r, a) {
  var o = new t(i, n), s = o.$N = !!(t.getDerivedStateFromProps || o.getSnapshotBeforeUpdate);
  if (o.$SVG = r, o.$L = a, e.children = o, o.$BS = !1, o.context = n, o.props === $t && (o.props = i), s)
    o.state = dD(o, i, o.state);
  else if (vt(o.componentWillMount)) {
    o.$BR = !0, o.componentWillMount();
    var l = o.$PS;
    if (!di(l)) {
      var u = o.state;
      if (di(u))
        o.state = l;
      else
        for (var d in l)
          u[d] = l[d];
      o.$PS = null;
    }
    o.$BR = !1;
  }
  return o.$LI = ID(o, i, n), o;
}
function Ev(e, t) {
  var i = e.props || $t;
  return e.flags & 32768 ? e.type.render(i, e.ref, t) : e.type(i, t);
}
function Wt(e, t, i, n, r, a) {
  var o = e.flags |= 16384;
  o & 481 ? AD(e, t, i, n, r, a) : o & 4 ? qz(e, t, i, n, r, a) : o & 8 ? (Xz(e, t, i, n, r, a), RD(e, a)) : o & 512 || o & 16 ? DD(e, t, r) : o & 8192 ? jz(e, i, t, n, r, a) : o & 1024 && Uz(e, i, t, r, a);
}
function Uz(e, t, i, n, r) {
  Wt(e.children, e.ref, t, !1, null, r);
  var a = Fc();
  DD(a, i, n), e.dom = a.dom;
}
function jz(e, t, i, n, r, a) {
  var o = e.children, s = e.childFlags;
  s & 12 && o.length === 0 && (s = e.childFlags = 2, o = e.children = Fc()), s === 2 ? Wt(o, i, t, n, r, a) : pa(o, i, t, n, r, a);
}
function DD(e, t, i) {
  var n = e.dom = document.createTextNode(e.children);
  di(t) || xv(t, n, i);
}
function AD(e, t, i, n, r, a) {
  var o = e.flags, s = e.props, l = e.className, u = e.childFlags, d = e.dom = gz(e.type, n = n || (o & 32) > 0), c = e.children;
  if (!Qe(l) && l !== "" && (n ? d.setAttribute("class", l) : d.className = l), u === 16)
    Hs(d, c);
  else if (u !== 1) {
    var h = n && e.type !== "foreignObject";
    u === 2 ? (c.flags & 16384 && (e.children = c = Ht(c)), Wt(c, d, i, h, null, a)) : (u === 8 || u === 4) && pa(c, d, i, h, null, a);
  }
  di(t) || xv(t, d, r), di(s) || wD(e, o, s, d, n), Vl(e.ref, d, a);
}
function pa(e, t, i, n, r, a) {
  for (var o = 0; o < e.length; ++o) {
    var s = e[o];
    s.flags & 16384 && (e[o] = s = Ht(s)), Wt(s, t, i, n, r, a);
  }
}
function qz(e, t, i, n, r, a) {
  var o = TD(e, e.type, e.props || $t, i, n, a);
  Wt(o.$LI, t, o.$CX, n, r, a), OD(e.ref, o, a);
}
function Xz(e, t, i, n, r, a) {
  Wt(e.children = Pc(Ev(e, i)), t, i, n, r, a);
}
function Yz(e) {
  return function() {
    e.componentDidMount();
  };
}
function OD(e, t, i) {
  Vl(e, t, i), vt(t.componentDidMount) && i.push(Yz(t));
}
function Zz(e, t) {
  return function() {
    e.onComponentDidMount(Vi(t, !0), t.props || $t);
  };
}
function RD(e, t) {
  var i = e.ref;
  Qe(i) || (yv(i.onComponentWillMount, e.props || $t), vt(i.onComponentDidMount) && t.push(Zz(i, e)));
}
function Qz(e, t, i, n, r, a) {
  Un(e), t.flags & e.flags & 2033 ? (Wt(t, null, n, r, null, a), _z(i, t.dom, e.dom)) : (Wt(t, i, n, r, Vi(e, !0), a), Pl(e, i));
}
function er(e, t, i, n, r, a, o) {
  var s = t.flags |= 16384;
  e.flags !== s || e.type !== t.type || e.key !== t.key || s & 2048 ? e.flags & 16384 ? Qz(e, t, i, n, r, o) : Wt(t, i, n, r, a, o) : s & 481 ? nW(e, t, n, r, s, o) : s & 4 ? oW(e, t, i, n, r, a, o) : s & 8 ? sW(e, t, i, n, r, a, o) : s & 16 ? lW(e, t) : s & 512 ? t.dom = e.dom : s & 8192 ? tW(e, t, i, n, r, o) : iW(e, t, n, o);
}
function Jz(e, t, i) {
  e !== t && (e !== "" ? i.firstChild.nodeValue = t : Hs(i, t));
}
function eW(e, t) {
  e.textContent !== t && (e.textContent = t);
}
function tW(e, t, i, n, r, a) {
  var o = e.children, s = t.children, l = e.childFlags, u = t.childFlags, d = null;
  u & 12 && s.length === 0 && (u = t.childFlags = 2, s = t.children = Fc());
  var c = (u & 2) !== 0;
  if (l & 12) {
    var h = o.length;
    // It uses keyed algorithm
    (l & 8 && u & 8 || // It transforms from many to single
    c || // It will append more nodes
    !c && s.length > h) && (d = Vi(o[h - 1], !1).nextSibling);
  }
  wv(l, u, o, s, i, n, r, d, e, a);
}
function iW(e, t, i, n) {
  var r = e.ref, a = t.ref, o = t.children;
  if (wv(e.childFlags, t.childFlags, e.children, o, r, i, !1, null, e, n), t.dom = e.dom, r !== a && !al(o)) {
    var s = o.dom;
    sD(r, s), oD(a, s);
  }
}
function nW(e, t, i, n, r, a) {
  var o = t.dom = e.dom, s = e.props, l = t.props, u = !1, d = !1, c;
  if (n = n || (r & 32) > 0, s !== l) {
    var h = s || $t;
    if (c = l || $t, c !== $t) {
      u = (r & 448) > 0, u && (d = ED(c));
      for (var p in c) {
        var f = h[p], v = c[p];
        f !== v && Ag(p, f, v, o, n, d, e);
      }
    }
    if (h !== $t)
      for (var m in h)
        Qe(c[m]) && !Qe(h[m]) && Ag(m, h[m], null, o, n, d, e);
  }
  var C = t.children, b = t.className;
  e.className !== b && (Qe(b) ? o.removeAttribute("class") : n ? o.setAttribute("class", b) : o.className = b), r & 4096 ? eW(o, C) : wv(e.childFlags, t.childFlags, e.children, C, o, i, n && t.type !== "foreignObject", null, e, a), u && SD(r, t, o, c, !1, d);
  var A = t.ref, R = e.ref;
  R !== A && (Gd(R), Vl(A, o, a));
}
function rW(e, t, i, n, r, a) {
  Un(e), pa(t, i, n, r, Vi(e, !0), a), Pl(e, i);
}
function wv(e, t, i, n, r, a, o, s, l, u) {
  switch (e) {
    case 2:
      switch (t) {
        case 2:
          er(i, n, r, a, o, s, u);
          break;
        case 1:
          Xi(i, r);
          break;
        case 16:
          Un(i), Hs(r, n);
          break;
        default:
          rW(i, n, r, a, o, u);
          break;
      }
      break;
    case 1:
      switch (t) {
        case 2:
          Wt(n, r, a, o, s, u);
          break;
        case 1:
          break;
        case 16:
          Hs(r, n);
          break;
        default:
          pa(n, r, a, o, s, u);
          break;
      }
      break;
    case 16:
      switch (t) {
        case 16:
          Jz(i, n, r);
          break;
        case 2:
          sd(r), Wt(n, r, a, o, s, u);
          break;
        case 1:
          sd(r);
          break;
        default:
          sd(r), pa(n, r, a, o, s, u);
          break;
      }
      break;
    default:
      switch (t) {
        case 16:
          ll(i), Hs(r, n);
          break;
        case 2:
          ld(r, l, i), Wt(n, r, a, o, s, u);
          break;
        case 1:
          ld(r, l, i);
          break;
        default:
          var d = i.length | 0, c = n.length | 0;
          d === 0 ? c > 0 && pa(n, r, a, o, s, u) : c === 0 ? ld(r, l, i) : t === 8 && e === 8 ? dW(i, n, r, a, o, d, c, s, l, u) : uW(i, n, r, a, o, d, c, s, u);
          break;
      }
      break;
  }
}
function aW(e, t, i, n, r) {
  r.push(function() {
    e.componentDidUpdate(t, i, n);
  });
}
function BD(e, t, i, n, r, a, o, s, l) {
  var u = e.state, d = e.props, c = !!e.$N, h = vt(e.shouldComponentUpdate);
  if (c && (t = dD(e, i, t !== u ? zr(u, t) : t)), o || !h || h && e.shouldComponentUpdate(i, t, r)) {
    !c && vt(e.componentWillUpdate) && e.componentWillUpdate(i, t, r), e.props = i, e.state = t, e.context = r;
    var p = null, f = ID(e, i, r);
    c && vt(e.getSnapshotBeforeUpdate) && (p = e.getSnapshotBeforeUpdate(d, u)), er(e.$LI, f, n, e.$CX, a, s, l), e.$LI = f, vt(e.componentDidUpdate) && aW(e, d, u, p, l);
  } else
    e.props = i, e.state = t, e.context = r;
}
function oW(e, t, i, n, r, a, o) {
  var s = t.children = e.children;
  if (!di(s)) {
    s.$L = o;
    var l = t.props || $t, u = t.ref, d = e.ref, c = s.state;
    if (!s.$N) {
      if (vt(s.componentWillReceiveProps)) {
        if (s.$BR = !0, s.componentWillReceiveProps(l, n), s.$UN)
          return;
        s.$BR = !1;
      }
      di(s.$PS) || (c = zr(c, s.$PS), s.$PS = null);
    }
    BD(s, c, l, i, n, r, !1, a, o), d !== u && (Gd(d), Vl(u, s, o));
  }
}
function sW(e, t, i, n, r, a, o) {
  var s = !0, l = t.props || $t, u = t.ref, d = e.props, c = !Qe(u), h = e.children;
  if (c && vt(u.onComponentShouldUpdate) && (s = u.onComponentShouldUpdate(d, l)), s !== !1) {
    c && vt(u.onComponentWillUpdate) && u.onComponentWillUpdate(d, l);
    var p = Pc(Ev(t, n));
    er(h, p, i, n, r, a, o), t.children = p, c && vt(u.onComponentDidUpdate) && u.onComponentDidUpdate(d, l);
  } else
    t.children = h;
}
function lW(e, t) {
  var i = t.children, n = t.dom = e.dom;
  i !== e.children && (n.nodeValue = i);
}
function uW(e, t, i, n, r, a, o, s, l) {
  for (var u = a > o ? o : a, d = 0, c, h; d < u; ++d)
    c = t[d], h = e[d], c.flags & 16384 && (c = t[d] = Ht(c)), er(h, c, i, n, r, s, l), e[d] = c;
  if (a < o)
    for (d = u; d < o; ++d)
      c = t[d], c.flags & 16384 && (c = t[d] = Ht(c)), Wt(c, i, n, r, s, l);
  else if (a > o)
    for (d = u; d < a; ++d)
      Xi(e[d], i);
}
function dW(e, t, i, n, r, a, o, s, l, u) {
  var d = a - 1, c = o - 1, h = 0, p = e[h], f = t[h], v, m;
  e: {
    for (; p.key === f.key; ) {
      if (f.flags & 16384 && (t[h] = f = Ht(f)), er(p, f, i, n, r, s, u), e[h] = f, ++h, h > d || h > c)
        break e;
      p = e[h], f = t[h];
    }
    for (p = e[d], f = t[c]; p.key === f.key; ) {
      if (f.flags & 16384 && (t[c] = f = Ht(f)), er(p, f, i, n, r, s, u), e[d] = f, d--, c--, h > d || h > c)
        break e;
      p = e[d], f = t[c];
    }
  }
  if (h > d) {
    if (h <= c)
      for (v = c + 1, m = v < o ? Vi(t[v], !0) : s; h <= c; )
        f = t[h], f.flags & 16384 && (t[h] = f = Ht(f)), ++h, Wt(f, i, n, r, m, u);
  } else if (h > c)
    for (; h <= d; )
      Xi(e[h++], i);
  else
    cW(e, t, n, a, o, d, c, h, i, r, s, l, u);
}
function cW(e, t, i, n, r, a, o, s, l, u, d, c, h) {
  var p, f, v, m = 0, C = s, b = s, A = a - s + 1, R = o - s + 1, k = new Int32Array(R + 1), H = A === n, K = !1, j = 0, z = 0;
  if (r < 4 || (A | R) < 32)
    for (m = C; m <= a; ++m)
      if (p = e[m], z < R) {
        for (s = b; s <= o; s++)
          if (f = t[s], p.key === f.key) {
            if (k[s - b] = m + 1, H)
              for (H = !1; C < m; )
                Xi(e[C++], l);
            j > s ? K = !0 : j = s, f.flags & 16384 && (t[s] = f = Ht(f)), er(p, f, l, i, u, d, h), ++z;
            break;
          }
        !H && s > o && Xi(p, l);
      } else
        H || Xi(p, l);
  else {
    var re = {};
    for (m = b; m <= o; ++m)
      re[t[m].key] = m;
    for (m = C; m <= a; ++m)
      if (p = e[m], z < R)
        if (s = re[p.key], s !== void 0) {
          if (H)
            for (H = !1; m > C; )
              Xi(e[C++], l);
          k[s - b] = m + 1, j > s ? K = !0 : j = s, f = t[s], f.flags & 16384 && (t[s] = f = Ht(f)), er(p, f, l, i, u, d, h), ++z;
        } else
          H || Xi(p, l);
      else
        H || Xi(p, l);
  }
  if (H)
    ld(l, c, e), pa(t, l, i, u, d, h);
  else if (K) {
    var he = hW(k);
    for (s = he.length - 1, m = R - 1; m >= 0; m--)
      k[m] === 0 ? (j = m + b, f = t[j], f.flags & 16384 && (t[j] = f = Ht(f)), v = j + 1, Wt(f, l, i, u, v < r ? Vi(t[v], !0) : d, h)) : s < 0 || m !== he[s] ? (j = m + b, f = t[j], v = j + 1, uD(f, l, v < r ? Vi(t[v], !0) : d)) : s--;
  } else if (z !== R)
    for (m = R - 1; m >= 0; m--)
      k[m] === 0 && (j = m + b, f = t[j], f.flags & 16384 && (t[j] = f = Ht(f)), v = j + 1, Wt(f, l, i, u, v < r ? Vi(t[v], !0) : d, h));
}
var Rn, _u, Sy = 0;
function hW(e) {
  var t = 0, i = 0, n = 0, r = 0, a = 0, o = 0, s = 0, l = e.length;
  for (l > Sy && (Sy = l, Rn = new Int32Array(l), _u = new Int32Array(l)); i < l; ++i)
    if (t = e[i], t !== 0) {
      if (n = Rn[r], e[n] < t) {
        _u[i] = n, Rn[++r] = i;
        continue;
      }
      for (a = 0, o = r; a < o; )
        s = a + o >> 1, e[Rn[s]] < t ? a = s + 1 : o = s;
      t < e[Rn[a]] && (a > 0 && (_u[i] = Rn[a - 1]), Rn[a] = i);
    }
  a = r + 1;
  var u = new Int32Array(a);
  for (o = Rn[a - 1]; a-- > 0; )
    u[a] = o, o = _u[o], Rn[a] = 0;
  return u;
}
var pW = typeof document < "u";
pW && window.Node && (Node.prototype.$EV = null, Node.prototype.$V = null);
function fW(e, t, i, n) {
  var r = [], a = t.$V;
  sl.v = !0, Qe(a) ? Qe(e) || (e.flags & 16384 && (e = Ht(e)), Wt(e, t, n, !1, null, r), t.$V = e, a = e) : Qe(e) ? (Xi(a, t), t.$V = null) : (e.flags & 16384 && (e = Ht(e)), er(a, e, t, n, !1, null, r), a = t.$V = e), lD(r), sl.v = !1, vt(i) && i(), vt(Cy.renderComplete) && Cy.renderComplete(a, t);
}
function Lc(e, t, i, n) {
  i === void 0 && (i = null), n === void 0 && (n = $t), fW(e, t, i, n);
}
var ud = [], gW = typeof Promise < "u" ? Promise.resolve().then.bind(Promise.resolve()) : function(e) {
  window.setTimeout(e, 0);
}, Og = !1;
function kD(e, t, i, n) {
  var r = e.$PS;
  if (vt(t) && (t = t(r ? zr(e.state, r) : e.state, e.props, e.context)), Qe(r))
    e.$PS = t;
  else
    for (var a in t)
      r[a] = t[a];
  if (e.$BR)
    vt(i) && e.$L.push(i.bind(e));
  else {
    if (!sl.v && ud.length === 0) {
      PD(e, n), vt(i) && i.call(e);
      return;
    }
    if (ud.indexOf(e) === -1 && ud.push(e), n && (e.$F = !0), Og || (Og = !0, gW(FD)), vt(i)) {
      var o = e.$QU;
      o || (o = e.$QU = []), o.push(i);
    }
  }
}
function _W(e) {
  for (var t = e.$QU, i = 0; i < t.length; ++i)
    t[i].call(e);
  e.$QU = null;
}
function FD() {
  var e;
  for (Og = !1; e = ud.shift(); )
    if (!e.$UN) {
      var t = e.$F;
      e.$F = !1, PD(e, t), e.$QU && _W(e);
    }
}
function PD(e, t) {
  if (t || !e.$BR) {
    var i = e.$PS;
    e.$PS = null;
    var n = [];
    sl.v = !0, BD(e, zr(e.state, i), e.props, Vi(e.$LI, !0).parentNode, e.context, e.$SVG, t, null, n), lD(n), sl.v = !1;
  } else
    e.state = e.$PS, e.$PS = null;
}
var Nl = function(t, i) {
  this.state = null, this.$BR = !1, this.$BS = !0, this.$PS = null, this.$LI = null, this.$UN = !1, this.$CX = null, this.$QU = null, this.$N = !1, this.$L = null, this.$SVG = !1, this.$F = !1, this.props = t || $t, this.context = i || $t;
};
Nl.prototype.forceUpdate = function(t) {
  this.$UN || kD(this, {}, t, !0);
};
Nl.prototype.setState = function(t, i) {
  this.$UN || this.$BS || kD(this, t, i, !1);
};
Nl.prototype.render = function(t, i, n) {
  return null;
};
process.env.NODE_ENV !== "production" && console.warn("You are running production build of Inferno in development mode. Use dev:module entry point.");
const fr = {
  lockCount: 0,
  lock() {
    this.lockCount++;
  },
  callbacks: [],
  callEffects() {
    if (this.lockCount--, this.lockCount < 0)
      throw new Error("Unexpected Effect Call");
    if (this.lockCount === 0) {
      const e = this.callbacks;
      this.callbacks = [], e.forEach((t) => t());
    }
  }
}, _p = (e, t) => {
  if (!(e instanceof Object && t instanceof Object))
    return e === t;
  const n = Object.keys(e), r = Object.keys(t);
  return n.length !== r.length ? !1 : !n.some((o) => e[o] !== t[o]);
};
class Gi extends Nl {
  constructor() {
    super(...arguments), this._pendingContext = this.context;
  }
  componentWillReceiveProps(t, i) {
    this._pendingContext = i ?? {};
  }
  shouldComponentUpdate(t, i) {
    return !_p(this.props, t) || !_p(this.state, i) || !_p(this.context, this._pendingContext);
  }
}
class In extends Gi {
  constructor() {
    super(...arguments), this._effects = [];
  }
  createEffects() {
    return [];
  }
  updateEffects() {
  }
  componentWillMount() {
    fr.lock();
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  componentWillUpdate(t, i, n) {
    fr.lock();
  }
  componentDidMount() {
    fr.callbacks.push(() => {
      this._effects = this.createEffects();
    }), fr.callEffects();
  }
  componentDidUpdate() {
    fr.callbacks.push(() => this.updateEffects()), fr.callEffects();
  }
  destroyEffects() {
    this._effects.forEach((t) => t.dispose());
  }
  componentWillUnmount() {
    this.destroyEffects();
  }
}
class $l extends In {
  constructor() {
    super(...arguments), this.vDomElement = null;
  }
  vDomUpdateClasses() {
    const t = this.vDomElement, i = t.className.length ? t.className.split(" ") : [], n = i.filter((a) => t.dxClasses.previous.indexOf(a) < 0), r = t.dxClasses.previous.filter((a) => i.indexOf(a) < 0);
    n.forEach((a) => {
      const o = t.dxClasses.removed.indexOf(a);
      o > -1 ? t.dxClasses.removed.splice(o, 1) : t.dxClasses.added.push(a);
    }), r.forEach((a) => {
      const o = t.dxClasses.added.indexOf(a);
      o > -1 ? t.dxClasses.added.splice(o, 1) : t.dxClasses.removed.push(a);
    });
  }
  componentDidMount() {
    const t = Vi(this.$LI, !0);
    this.vDomElement = t, super.componentDidMount(), t.dxClasses = t.dxClasses || {
      removed: [],
      added: [],
      previous: []
    }, t.dxClasses.previous = t != null && t.className.length ? t.className.split(" ") : [];
  }
  componentDidUpdate() {
    super.componentDidUpdate();
    const t = this.vDomElement;
    t !== null && (t.dxClasses.added.forEach((i) => t.classList.add(i)), t.dxClasses.removed.forEach((i) => t.classList.remove(i)), t.dxClasses.previous = t.className.length ? t.className.split(" ") : []);
  }
  shouldComponentUpdate(t, i) {
    const n = super.shouldComponentUpdate(t, i);
    return n && this.vDomUpdateClasses(), n;
  }
}
let vW = 0;
const MD = function(e) {
  const t = vW++;
  return {
    id: t,
    defaultValue: e,
    Provider: class extends Nl {
      getChildContext() {
        return Object.assign(Object.assign({}, this.context), { [t]: this.props.value || e });
      }
      render() {
        return this.props.children;
      }
    }
  };
};
class ut {
  constructor(t, i) {
    this.dependency = i, this.effect = t, this.destroy = t();
  }
  update(t) {
    const i = this.dependency;
    t && (this.dependency = t), (!t || t.some((n, r) => i[r] !== n)) && (this.dispose(), this.destroy = this.effect());
  }
  dispose() {
    this.destroy && this.destroy();
  }
}
const Hl = () => new ut(() => {
  FD();
}, []), mW = "a runtime error occured! Use Inferno in development environment to find the error.";
function CW(e) {
  return e == null;
}
function xW(e) {
  return e === null || e === !1 || e === !0 || e === void 0;
}
function yW(e) {
  return typeof e == "function";
}
function mo(e) {
  return e === null;
}
function bW(e) {
  throw e || (e = mW), new Error(`Inferno Error: ${e}`);
}
function SW(e, t) {
  const i = document.createElement("i");
  return i.innerHTML = t, i.innerHTML === e.innerHTML;
}
function EW(e) {
  let t, i;
  for (; e; ) {
    if (t = e.flags, t & 2033)
      return e.dom;
    i = e.children, t & 8192 ? e = e.childFlags === 2 ? i : i[i.length - 1] : t & 4 ? e = i.$LI : e = i;
  }
  return null;
}
function wW(e, t) {
  return !!(t && t.dangerouslySetInnerHTML && t.dangerouslySetInnerHTML.__html && SW(e, t.dangerouslySetInnerHTML.__html));
}
function IW(e, t, i, n, r, a, o) {
  const s = e.type, l = e.ref, u = e.props || $t;
  let d;
  if (a) {
    const c = TD(e, s, u, n, r, o), h = c.$LI;
    d = ul(h, t, i, c.$CX, r, o), OD(l, c, o);
  } else {
    const c = Pc(Ev(e, n));
    d = ul(c, t, i, n, r, o), e.children = c, RD(e, o);
  }
  return d;
}
function LD(e, t, i, n, r, a) {
  const o = e.childFlags, s = e.children, l = e.props, u = e.flags;
  if (o !== 1) {
    if (o === 2)
      mo(i) ? Wt(s, t, n, r, null, a) : (i = ul(s, t, i, n, r, a), i = i ? i.nextSibling : null);
    else if (o === 16)
      mo(i) ? t.appendChild(document.createTextNode(s)) : t.childNodes.length !== 1 || i.nodeType !== 3 ? t.textContent = s : i.nodeValue !== s && (i.nodeValue = s), i = null;
    else if (o & 12) {
      let d = !1;
      for (let c = 0, h = s.length; c < h; ++c) {
        const p = s[c];
        mo(i) || d && (p.flags & 16) > 0 ? Wt(p, t, n, r, i, a) : (i = ul(p, t, i, n, r, a), i = i ? i.nextSibling : null), d = (p.flags & 16) > 0;
      }
    }
    if (!(u & 8192)) {
      let d = null;
      for (; i; )
        d = i.nextSibling, t.removeChild(i), i = d;
    }
  } else
    !mo(t.firstChild) && !wW(t, l) && (t.textContent = "", u & 448 && (t.defaultValue = ""));
}
function TW(e, t, i, n, r, a) {
  const o = e.props, s = e.className, l = e.flags, u = e.ref;
  return r = r || (l & 32) > 0, i.nodeType !== 1 ? (AD(e, null, n, r, null, a), t.replaceChild(e.dom, i)) : (e.dom = i, LD(e, i, i.firstChild, n, r, a), mo(o) || wD(e, l, o, i, r), CW(s) ? i.className !== "" && i.removeAttribute("class") : r ? i.setAttribute("class", s) : i.className = s, Vl(u, i, a)), e.dom;
}
function VD(e, t, i) {
  if (i.nodeType !== 3)
    t.replaceChild(e.dom = document.createTextNode(e.children), i);
  else {
    const n = e.children;
    i.nodeValue !== n && (i.nodeValue = n), e.dom = i;
  }
  return e.dom;
}
function DW(e, t, i, n, r, a) {
  const o = e.children;
  return e.childFlags === 2 ? (VD(o, t, i), o.dom) : (LD(e, t, i, n, r, a), EW(o[o.length - 1]));
}
function ul(e, t, i, n, r, a) {
  const o = e.flags |= 16384;
  return o & 14 ? IW(e, t, i, n, r, (o & 4) > 0, a) : o & 481 ? TW(e, t, i, n, r, a) : o & 16 ? VD(e, t, i) : o & 512 ? e.dom = i : o & 8192 ? DW(e, t, i, n, r, a) : (bW(), null);
}
function AW(e, t, i) {
  let n = t.firstChild;
  if (mo(n))
    Lc(e, t, i);
  else {
    const r = [];
    for (xW(e) || (n = ul(e, t, n, {}, !1, r)); n && (n = n.nextSibling); )
      t.removeChild(n);
    if (r.length > 0) {
      let a;
      for (; (a = r.shift()) !== void 0; )
        a();
    }
  }
  t.$V = e, yW(i) && i();
}
function Ey(e) {
  return e == null;
}
function OW(e) {
  return typeof e == "string";
}
function wy(e) {
  return e === void 0;
}
var RW = {
  onComponentDidMount: 1,
  onComponentDidUpdate: 1,
  onComponentShouldUpdate: 1,
  onComponentWillMount: 1,
  onComponentWillUnmount: 1,
  onComponentWillUpdate: 1
};
function dd(e, t, i) {
  var n = arguments, r, a = null, o = null, s = null, l = 0, u, d = arguments.length - 2;
  if (d === 1)
    r = i;
  else if (d > 1)
    for (r = []; d-- > 0; )
      r[d] = n[d + 2];
  if (OW(e)) {
    if (l = bz(e), !Ey(t)) {
      u = {};
      for (var c in t)
        c === "className" || c === "class" ? s = t[c] : c === "key" ? o = t.key : c === "children" && wy(r) ? r = t.children : c === "ref" ? a = t.ref : (c === "contenteditable" && (l |= 4096), u[c] = t[c]);
    }
  } else {
    if (l = 2, wy(r) || (t || (t = {}), t.children = r), !Ey(t)) {
      u = {};
      for (var h in t)
        h === "key" ? o = t.key : h === "ref" ? a = t.ref : RW[h] === 1 ? (a || (a = {}), a[h] = t[h]) : u[h] = t[h];
    }
    return ot(l, e, u, o, a);
  }
  return l & 8192 ? nr(d === 1 ? [r] : r, 0, o) : yt(l, e, s, r, 0, u, o, a);
}
const BW = (e) => {
  var t, i;
  return ((t = e.container) === null || t === void 0 ? void 0 : t.get(0)) || ((i = e.item) === null || i === void 0 ? void 0 : i.get(0));
};
function kW(e, t, i) {
  setTimeout(() => {
    Lc(dd(e, t), BW(t));
  }, 0);
}
const FW = (e, t, i) => {
  const n = t[e];
  return !!n && typeof n != "string";
}, PW = /* @__PURE__ */ new Set([
  "animationIterationCount",
  "borderImageOutset",
  "borderImageSlice",
  "border-imageWidth",
  "boxFlex",
  "boxFlexGroup",
  "boxOrdinalGroup",
  "columnCount",
  "fillOpacity",
  "flex",
  "flexGrow",
  "flexNegative",
  "flexOrder",
  "flexPositive",
  "flexShrink",
  "floodOpacity",
  "fontWeight",
  "gridColumn",
  "gridRow",
  "lineClamp",
  "lineHeight",
  "opacity",
  "order",
  "orphans",
  "stopOpacity",
  "strokeDasharray",
  "strokeDashoffset",
  "strokeMiterlimit",
  "strokeOpacity",
  "strokeWidth",
  "tabSize",
  "widows",
  "zIndex",
  "zoom"
]), MW = (e) => typeof e == "number" ? !0 : !Number.isNaN(Number(e)), LW = (e, t) => PW.has(e) ? t : `${t}px`, VW = /[A-Z]/g, NW = (e) => e.replace(VW, "-$&").toLowerCase();
function Iv(e) {
  if (e instanceof Object)
    return Object.entries(e).reduce((t, [i, n]) => (t[NW(i)] = MW(n) ? LW(i, n) : n, t), {});
}
var Iy = (e) => {
  var {
    parentNode: t
  } = e;
  if (t) {
    var i = e.nextSibling;
    vl(e), t.$V = e.$V, Lc(null, t), t.insertBefore(e, i), e.innerHTML = "", delete t.$V;
  }
  delete e.$V;
};
const eo = zi({
  createElement: (e, t) => dd(e, t),
  remove: Iy,
  onAfterRender: () => {
    fr.callEffects();
  },
  onPreRender: () => {
    fr.lock();
  },
  render: (e, t, i, n) => {
    if (n)
      Lc(dd(e, t), i);
    else {
      var {
        parentNode: r
      } = i, a = i == null ? void 0 : i.nextSibling, o = ee.createElement("div");
      o.appendChild(i);
      var s = ee.createDocumentFragment().appendChild(o), l = !!i.$V;
      l && Iy(i), AW(dd(e, t), s), i.$V = s.$V, r && r.insertBefore(i, a);
    }
  }
});
var $W = (e, t) => Object.keys(e).length !== Object.keys(t).length ? !1 : Object.keys(e).every((i) => e[i] === t[i]), HW = (e, t) => {
  B(t, (i, n) => {
    var r = !1;
    B(e, (a, o) => {
      n === o && (r = !0);
    }), !r && n.parentNode && n.parentNode.removeChild(n);
  });
};
class Ty extends In {
  constructor(t) {
    super(t), this.renderTemplate = this.renderTemplate.bind(this);
  }
  renderTemplate() {
    var t, i = Vi(this.$LI, !0), n = i.parentNode, r = g(n), a = r.contents(), {
      data: o,
      index: s
    } = (t = this.props.model) !== null && t !== void 0 ? t : {
      data: {}
    };
    o && Object.keys(o).forEach((u) => {
      o[u] && ee.isNode(o[u]) && (o[u] = Ie(g(o[u])));
    });
    var l = g(this.props.template.render(ue({
      container: Ie(r),
      transclude: this.props.transclude
    }, {
      renovated: this.props.renovated
    }, this.props.transclude ? {} : {
      model: o
    }, !this.props.transclude && Number.isFinite(s) ? {
      index: s
    } : {})));
    return KF(g(i), l), () => {
      HW(a, r.contents()), n.appendChild(i);
    };
  }
  shouldComponentUpdate(t) {
    var {
      model: i,
      template: n
    } = this.props, {
      model: r,
      template: a
    } = t, o = n === a;
    if (!o)
      return !0;
    if (x(i) && x(r)) {
      var {
        data: s,
        index: l
      } = i, {
        data: u,
        index: d
      } = r;
      return l !== d || !$W(s, u);
    }
    var c = i === r;
    return !c;
  }
  createEffects() {
    return [new ut(this.renderTemplate, [this.props.template, this.props.model])];
  }
  updateEffects() {
    this._effects[0].update([this.props.template, this.props.model]);
  }
  componentWillUnmount() {
  }
  render() {
    return null;
  }
}
function vp(e) {
  return Array.isArray(e) ? [...e] : ue({}, e);
}
function ND(e, t, i) {
  var n = i.length > 0 && t && e !== t ? vp(t) : vp(e), r = i[0];
  return i.length > 1 ? n[r] = ND(e[r], t == null ? void 0 : t[r], i.slice(1)) : r && (Me(e[r]) ? n[r] = vp(e[r]) : n[r] = e[r]), n;
}
function zW(e, t, i, n) {
  var r = t[i], a = e[i], o = e;
  Me(r) || i !== n && Array.isArray(r) ? o[i] = ND(r, a, ka(n).slice(1)) : o[i] = r;
}
var mp = (e, t) => (i) => {
  Object.prototype.hasOwnProperty.call(e, i) && e[i] === void 0 && (e[i] = t(i));
};
class zl extends wn {
  constructor(t, i) {
    super(t, i), this._shouldRaiseContentReady = !1, this.validateKeyDownHandler();
  }
  get _propsInfo() {
    return {
      allowNull: [],
      twoWay: [],
      elements: [],
      templates: [],
      props: []
    };
  }
  validateKeyDownHandler() {
    var t = this.getSupportedKeyNames(), i = t.length > 0, n = typeof this._viewComponent.prototype.keyDown == "function";
    if (i && !n)
      throw Error("Component's declaration must have 'keyDown' method.");
  }
  get viewRef() {
    var t;
    return (t = this._viewRef) === null || t === void 0 ? void 0 : t.current;
  }
  _checkContentReadyOption(t) {
    var i = this._getContentReadyOptions().reduce((n, r) => (n[r] = !0, n), {});
    return this._checkContentReadyOption = (n) => !!i[n], this._checkContentReadyOption(t);
  }
  _getContentReadyOptions() {
    return ["rtlEnabled"];
  }
  _fireContentReady() {
    this._actionsMap.onContentReady({});
  }
  _getDefaultOptions() {
    var t = this._getViewComponentDefaultProps();
    return T(!0, super._getDefaultOptions(), t, this._propsInfo.twoWay.reduce((i, n) => {
      var [r, a, o] = n;
      return ue({}, i, {
        [r]: t[a],
        [o]: (s) => this.option(r, s)
      });
    }, {}), this._propsInfo.templates.reduce((i, n) => ue({}, i, {
      [n]: null
    }), {}));
  }
  _getUnwrappedOption() {
    var t = {};
    return Object.keys(this.option()).forEach((i) => {
      t[i] = this.option(i);
    }), t;
  }
  _initializeComponent() {
    var t;
    super._initializeComponent(), (t = this._templateManager) === null || t === void 0 || t.addDefaultTemplates(this.getDefaultTemplates());
    var i = this._getUnwrappedOption();
    this._props = this._optionsWithDefaultTemplates(i), this._propsInfo.templates.forEach((n) => {
      this._componentTemplates[n] = this._createTemplateComponent(this._props[n]);
    }), Object.keys(this._getActionConfigsFull()).forEach((n) => this._addAction(n)), this._viewRef = zt(), this.defaultKeyHandlers = this._createDefaultKeyHandlers();
  }
  _initMarkup() {
    var t = this.getProps();
    this._renderWrapper(t);
  }
  _renderWrapper(t) {
    var i = this.$element()[0];
    this._isNodeReplaced || eo.onPreRender(), eo.render(this._viewComponent, t, i, this._isNodeReplaced), this._isNodeReplaced || (this._isNodeReplaced = !0, eo.onAfterRender(), this._shouldRaiseContentReady = !0), this._shouldRaiseContentReady && (this._fireContentReady(), this._shouldRaiseContentReady = !1);
  }
  _silent(t, i) {
    this._options.silent(t, i);
  }
  _render() {
  }
  _removeWidget() {
    eo.remove(this.$element()[0]);
  }
  _dispose() {
    this._removeWidget(), super._dispose();
  }
  get elementAttr() {
    var t = this.$element()[0];
    if (!this._elementAttr) {
      var {
        attributes: i
      } = t, n = Array.from(i).filter((s) => {
        var l;
        return !this._propsInfo.templates.includes(s.name) && ((l = i[s.name]) === null || l === void 0 ? void 0 : l.specified);
      }).reduce((s, l) => {
        var {
          name: u,
          value: d
        } = l, c = s, h = u in t;
        return c[u] = d === "" && h ? t[u] : d, c;
      }, {});
      this._elementAttr = n, this._storedClasses = t.getAttribute("class") || "";
    }
    for (var r = t.style, a = {}, o = 0; o < r.length; o += 1)
      a[r[o]] = r.getPropertyValue(r[o]);
    return this._elementAttr.style = a, this._elementAttr.class = this._storedClasses, this._elementAttr;
  }
  _getAdditionalActionConfigs() {
    return {
      onContentReady: {
        excludeValidators: ["disabled", "readOnly"]
      }
    };
  }
  _getAdditionalProps() {
    return [];
  }
  _patchOptionValues(t) {
    var {
      allowNull: i,
      elements: n,
      props: r,
      twoWay: a
    } = this._propsInfo, o = this._getViewComponentDefaultProps(), s = Object.keys(o), l = this._getDefaultOptions(), {
      children: u,
      onKeyboardHandled: d,
      ref: c
    } = t, h = d ? (f, v) => {
      d(v);
    } : void 0, p = {
      ref: c,
      children: u,
      onKeyDown: h
    };
    return [...r, ...this._getAdditionalProps()].forEach((f) => {
      Object.prototype.hasOwnProperty.call(t, f) && (p[f] = t[f]);
    }), i.forEach(mp(p, () => null)), s.forEach(mp(p, (f) => l[f])), a.forEach((f) => {
      var [v, m] = f;
      mp(p, () => l[m])(v);
    }), n.forEach((f) => {
      if (f in p) {
        var v = p[f];
        wi(v) && (p[f] = this._patchElementParam(v));
      }
    }), p;
  }
  getSupportedKeyNames() {
    return [];
  }
  prepareStyleProp(t) {
    return typeof t.style == "string" ? ue({}, t, {
      style: {},
      cssText: t.style
    }) : t;
  }
  getProps() {
    var t, i, {
      elementAttr: n
    } = this.option(), r = this._patchOptionValues(ue({}, this._props, {
      ref: this._viewRef,
      children: this._extractDefaultSlot(),
      aria: this._aria
    }));
    return this._propsInfo.templates.forEach((a) => {
      r[a] = this._componentTemplates[a];
    }), this.prepareStyleProp(ue({}, r, this.elementAttr, n, {
      className: [...((t = this.elementAttr.class) !== null && t !== void 0 ? t : "").split(" "), ...((i = n == null ? void 0 : n.class) !== null && i !== void 0 ? i : "").split(" ")].filter((a, o, s) => a && s.indexOf(a) === o).join(" ").trim(),
      class: ""
    }, this._actionsMap));
  }
  _getActionConfigs() {
    return {};
  }
  _getActionConfigsFull() {
    return ue({}, this._getActionConfigs(), this._getAdditionalActionConfigs());
  }
  getDefaultTemplates() {
    var t = Object.values(this._templatesInfo), i = {};
    return t.forEach((n) => {
      i[n] = "dx-renovation-template-mock";
    }), i;
  }
  get _templatesInfo() {
    return {};
  }
  _optionsWithDefaultTemplates(t) {
    var i = Object.entries(this._templatesInfo).reduce((n, r) => {
      var a, [o, s] = r;
      return ue({}, n, {
        [o]: (a = t[o]) !== null && a !== void 0 ? a : s
      });
    }, {});
    return ue({}, t, i);
  }
  _init() {
    super._init(), this.customKeyHandlers = {}, this._actionsMap = {}, this._aria = {}, this._componentTemplates = {};
  }
  _createDefaultKeyHandlers() {
    var t = {}, i = this.getSupportedKeyNames();
    return i.forEach((n) => {
      t[n] = (r) => this.viewRef.keyDown(B_.createKeyDownOptions(r));
    }), t;
  }
  _addAction(t, i) {
    var n = i;
    if (!n) {
      var r = this._createActionByOption(t, this._getActionConfigsFull()[t]);
      n = (a) => (Object.keys(a).forEach((o) => {
        x(a[o]) && ee.isNode(a[o]) && (a[o] = Ie(g(a[o])));
      }), r(a));
    }
    this._actionsMap[t] = n;
  }
  _optionChanged(t) {
    var {
      fullName: i,
      name: n,
      previousValue: r,
      value: a
    } = t;
    zW(this._props, this.option(), n, i), this._propsInfo.templates.includes(n) && a !== r && (this._componentTemplates[n] = this._createTemplateComponent(a)), n && this._getActionConfigsFull()[n] && this._addAction(n), this._shouldRaiseContentReady = this._shouldRaiseContentReady || this._checkContentReadyOption(i), super._optionChanged(t), this._invalidate();
  }
  _extractDefaultSlot() {
    return this.option("_hasAnonymousTemplateContent") ? eo.createElement(Ty, {
      template: this._getTemplate(this._templateManager.anonymousTemplateName),
      transclude: !0,
      renovated: !0
    }) : null;
  }
  _createTemplateComponent(t) {
    if (t) {
      var i = this._getTemplate(t);
      if (!(Te(i) && i === "dx-renovation-template-mock"))
        return (n) => eo.createElement(Ty, {
          template: i,
          model: n
        });
    }
  }
  _wrapKeyDownHandler(t) {
    return (i) => {
      var {
        keyName: n,
        originalEvent: r,
        which: a
      } = i, o = this.customKeyHandlers, s = o[n] || o[a];
      if (s !== void 0) {
        var l = s.bind(this), u = l(r, i);
        if (!u)
          return r.cancel = !0, r;
      }
      return t == null ? void 0 : t(r, i);
    };
  }
  _toPublicElement(t) {
    return Ie(g(t));
  }
  _patchElementParam(t) {
    try {
      var i = g(t), n = i == null ? void 0 : i.get(0);
      return n != null && n.nodeType ? n : t;
    } catch {
      return t;
    }
  }
  repaint() {
    this._isNodeReplaced = !1, this._shouldRaiseContentReady = !0, this._removeWidget(), this._refresh();
  }
  _supportedKeys() {
    return ue({}, this.defaultKeyHandlers, this.customKeyHandlers);
  }
  registerKeyHandler(t, i) {
    this.customKeyHandlers[t] = i;
  }
  setAria(t, i) {
    this._aria[t] = i, this._initMarkup();
  }
  _getViewComponentDefaultProps() {
    return this._viewComponent.defaultProps || {};
  }
}
zl.IS_RENOVATED_WIDGET = !1;
zl.IS_RENOVATED_WIDGET = !0;
class WW extends zl {
  get _validationGroupConfig() {
    return Ze.getGroupConfig(this._findGroup());
  }
  getDefaultTemplateNames() {
    return ["content"];
  }
  getSupportedKeyNames() {
    return ["space", "enter"];
  }
  getProps() {
    var t = super.getProps();
    t.onClick = (n) => {
      var {
        event: r
      } = n;
      this._clickAction({
        event: r,
        validationGroup: this._validationGroupConfig
      });
    };
    var i = kl(t.icon);
    return i === "svg" && (t.iconTemplate = this._createTemplateComponent(() => t.icon)), t;
  }
  get _templatesInfo() {
    return {
      template: "content"
    };
  }
  _toggleActiveState(t, i) {
    var n = this.viewRef;
    i ? n.activate() : n.deactivate();
  }
  _getSubmitAction() {
    var t = !0, i = "valid";
    return this._createAction((n) => {
      var {
        event: r,
        submitInput: a
      } = n;
      if (t) {
        var o = this._validationGroupConfig;
        if (o !== void 0 && o !== "") {
          var s = o.validate();
          i = s.status, s.status === "pending" && (t = !1, this.option("disabled", !0), s.complete.then((l) => {
            var {
              status: u
            } = l;
            this.option("disabled", !1), i = u, i === "valid" && a.click(), t = !0;
          }));
        }
      }
      i !== "valid" && r.preventDefault(), r.stopPropagation();
    });
  }
  _initializeComponent() {
    super._initializeComponent(), this._addAction("onSubmit", this._getSubmitAction()), this._clickAction = this._createClickAction();
  }
  _initMarkup() {
    super._initMarkup();
    var t = this.$element().find(".dx-button-content"), i = t.children().filter(".dx-template-wrapper"), n = t.children().filter(".dx-button-submit-input");
    i.length && (i.addClass("dx-button-content"), i.append(n), t.replaceWith(i));
  }
  _patchOptionValues(t) {
    return super._patchOptionValues(ue({}, t, {
      templateData: t._templateData
    }));
  }
  _findGroup() {
    var t = this.$element(), i = this.option("validationGroup");
    return i !== void 0 && i !== "" ? i : Ze.findGroup(t, this._modelByElement(t));
  }
  _createClickAction() {
    return this._createActionByOption("onClick", {
      excludeValidators: ["readOnly"]
    });
  }
  _optionChanged(t) {
    switch (t.name) {
      case "onClick":
        this._clickAction = this._createClickAction();
    }
    super._optionChanged(t);
  }
}
function Li(e) {
  return Object.keys(e).filter((t) => e[t]).join(" ");
}
var GW = ["iconTemplate", "position", "source"], KW = (e) => {
  var {
    iconClassName: t,
    props: {
      iconTemplate: i,
      source: n
    },
    sourceType: r
  } = e;
  return nr([r === "dxIcon" && yt(1, "i", t), r === "fontIcon" && yt(1, "i", t), r === "image" && yt(1, "img", t, null, 1, {
    alt: "",
    src: n
  }), i && yt(1, "i", t, i({}), 0)], 0);
}, UW = {
  position: "left",
  source: ""
}, jW = (e) => e && (e.defaultProps ? (t) => vi(ot(2, e, ue({}, t))) : e);
class $D extends Gi {
  constructor(t) {
    super(t), this.state = {};
  }
  get sourceType() {
    return kl(this.props.source);
  }
  get cssClass() {
    return this.props.position !== "left" ? "dx-icon-right" : "";
  }
  get iconClassName() {
    var t = {
      "dx-icon": !0,
      [this.cssClass]: !!this.cssClass
    }, {
      source: i
    } = this.props;
    return this.sourceType === "dxIcon" ? Li(ue({}, t, {
      ["dx-icon-".concat(i)]: !0
    })) : this.sourceType === "fontIcon" ? Li(ue({}, t, {
      [String(i)]: !!i
    })) : this.sourceType === "image" ? Li(t) : this.sourceType === "svg" ? Li(ue({}, t, {
      "dx-svg-icon": !0
    })) : "";
  }
  get restAttributes() {
    var t = this.props, i = pt(t, GW);
    return i;
  }
  render() {
    var t = this.props;
    return KW({
      props: ue({}, t, {
        iconTemplate: jW(t.iconTemplate)
      }),
      sourceType: this.sourceType,
      cssClass: this.cssClass,
      iconClassName: this.iconClassName,
      restAttributes: this.restAttributes
    });
  }
}
$D.defaultProps = UW;
var qW = ["config"], XW = (e) => vi(yt(1, "div", "dx-inkripple", null, 1, ue({}, e.restAttributes))), YW = {
  config: Object.freeze({})
};
class HD extends Gi {
  constructor(t) {
    super(t), this.state = {}, this.__getterCache = {}, this.hideWave = this.hideWave.bind(this), this.showWave = this.showWave.bind(this);
  }
  get getConfig() {
    return this.__getterCache.getConfig !== void 0 ? this.__getterCache.getConfig : this.__getterCache.getConfig = (() => {
      var {
        config: t
      } = this.props;
      return ZT(t);
    })();
  }
  get restAttributes() {
    var t = this.props, i = pt(t, qW);
    return i;
  }
  hideWave(t) {
    tD(this.getConfig, t);
  }
  showWave(t) {
    JT(this.getConfig, t);
  }
  componentWillUpdate(t, i, n) {
    this.props.config !== t.config && (this.__getterCache.getConfig = void 0);
  }
  render() {
    var t = this.props;
    return XW({
      props: ue({}, t),
      getConfig: this.getConfig,
      restAttributes: this.restAttributes
    });
  }
}
HD.defaultProps = YW;
function Va(e) {
  return (t, i, n, r) => {
    var a = r ? oe(e, r) : e;
    if (i)
      return w.on(t, a, n, i), () => {
        w.off(t, a, i);
      };
  };
}
var ZW = Va(Xe), QW = Va("dxactive"), JW = Va("dxinactive"), e4 = Va("dxhoverstart"), t4 = Va("dxhoverend"), i4 = Va("focusin"), n4 = Va("focusout"), Vc = {
  className: "",
  activeStateEnabled: !1,
  disabled: !1,
  focusStateEnabled: !1,
  hoverStateEnabled: !1,
  tabIndex: 0,
  visible: !0
}, Xt = MD(void 0), r4 = ["children", "rtlEnabled"], a4 = (e) => e.props.children, o4 = {};
class zD extends Gi {
  constructor(t) {
    super(t), this.state = {}, this.__getterCache = {};
  }
  getChildContext() {
    return ue({}, this.context, {
      [Xt.id]: this.config || Xt.defaultValue
    });
  }
  get config() {
    return this.__getterCache.config !== void 0 ? this.__getterCache.config : this.__getterCache.config = (() => ({
      rtlEnabled: this.props.rtlEnabled
    }))();
  }
  get restAttributes() {
    var t = this.props, i = pt(t, r4);
    return i;
  }
  componentWillUpdate(t, i, n) {
    this.props.rtlEnabled !== t.rtlEnabled && (this.__getterCache.config = void 0);
  }
  render() {
    var t = this.props;
    return a4({
      props: ue({}, t),
      config: this.config,
      restAttributes: this.restAttributes
    });
  }
}
zD.defaultProps = o4;
function s4(e, t) {
  return e !== void 0 ? e : (t == null ? void 0 : t.rtlEnabled) !== void 0 ? t.rtlEnabled : st().rtlEnabled;
}
function l4(e, t) {
  var i = x(e), n = x(st().rtlEnabled) && !i && !x(t == null ? void 0 : t.rtlEnabled);
  return i && e !== (t == null ? void 0 : t.rtlEnabled) || n;
}
var u4 = ["_feedbackHideTimeout", "_feedbackShowTimeout", "accessKey", "activeStateEnabled", "activeStateUnit", "addWidgetClass", "aria", "children", "className", "classes", "cssText", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "name", "onActive", "onClick", "onDimensionChanged", "onFocusIn", "onFocusOut", "onHoverEnd", "onHoverStart", "onInactive", "onKeyDown", "onRootElementRendered", "onVisibilityChange", "rootElementRef", "rtlEnabled", "tabIndex", "visible", "width"], d4 = 400, c4 = 30, h4 = (e) => Object.keys(e).reduce((t, i) => e[i] ? ue({}, t, {
  [i === "role" || i === "id" ? i : "aria-".concat(i)]: String(e[i])
}) : t, {}), p4 = (e) => {
  var t = vi(yt(1, "div", e.cssClasses, e.props.children, 0, ue({}, e.attributes, {
    tabIndex: e.tabIndex,
    title: e.props.hint,
    style: Iv(e.styles)
  }), null, e.widgetElementRef));
  return e.shouldRenderConfigProvider ? ot(2, zD, {
    rtlEnabled: e.rtlEnabled,
    children: t
  }) : t;
}, Kd = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Vc), Object.getOwnPropertyDescriptors({
  _feedbackHideTimeout: d4,
  _feedbackShowTimeout: c4,
  cssText: "",
  aria: Object.freeze({}),
  classes: "",
  name: "",
  addWidgetClass: !0
})));
class Nc extends $l {
  constructor(t) {
    super(t), this.widgetElementRef = zt(), this.state = {
      active: !1,
      focused: !1,
      hovered: !1
    }, this.setRootElementRef = this.setRootElementRef.bind(this), this.activeEffect = this.activeEffect.bind(this), this.inactiveEffect = this.inactiveEffect.bind(this), this.clickEffect = this.clickEffect.bind(this), this.focus = this.focus.bind(this), this.blur = this.blur.bind(this), this.activate = this.activate.bind(this), this.deactivate = this.deactivate.bind(this), this.focusInEffect = this.focusInEffect.bind(this), this.focusOutEffect = this.focusOutEffect.bind(this), this.hoverStartEffect = this.hoverStartEffect.bind(this), this.hoverEndEffect = this.hoverEndEffect.bind(this), this.keyboardEffect = this.keyboardEffect.bind(this), this.resizeEffect = this.resizeEffect.bind(this), this.windowResizeEffect = this.windowResizeEffect.bind(this), this.visibilityEffect = this.visibilityEffect.bind(this), this.checkDeprecation = this.checkDeprecation.bind(this), this.applyCssTextEffect = this.applyCssTextEffect.bind(this);
  }
  get config() {
    return this.context[Xt.id] ? this.context[Xt.id] : Xt.defaultValue;
  }
  createEffects() {
    return [new ut(this.setRootElementRef, []), new ut(this.activeEffect, [this.props._feedbackShowTimeout, this.props.activeStateEnabled, this.props.activeStateUnit, this.props.disabled, this.props.onActive]), new ut(this.inactiveEffect, [this.props._feedbackHideTimeout, this.props.activeStateEnabled, this.props.activeStateUnit, this.props.onInactive, this.state.active]), new ut(this.clickEffect, [this.props.disabled, this.props.name, this.props.onClick]), new ut(this.focusInEffect, [this.props.disabled, this.props.focusStateEnabled, this.props.name, this.props.onFocusIn]), new ut(this.focusOutEffect, [this.props.focusStateEnabled, this.props.name, this.props.onFocusOut, this.state.focused]), new ut(this.hoverStartEffect, [this.props.activeStateUnit, this.props.disabled, this.props.hoverStateEnabled, this.props.onHoverStart, this.state.active]), new ut(this.hoverEndEffect, [this.props.activeStateUnit, this.props.hoverStateEnabled, this.props.onHoverEnd, this.state.hovered]), new ut(this.keyboardEffect, [this.props.focusStateEnabled, this.props.onKeyDown]), new ut(this.resizeEffect, [this.props.name, this.props.onDimensionChanged]), new ut(this.windowResizeEffect, [this.props.onDimensionChanged]), new ut(this.visibilityEffect, [this.props.name, this.props.onVisibilityChange]), new ut(this.checkDeprecation, [this.props.height, this.props.width]), new ut(this.applyCssTextEffect, [this.props.cssText]), Hl()];
  }
  updateEffects() {
    var t, i, n, r, a, o, s, l, u, d, c, h, p;
    (t = this._effects[1]) === null || t === void 0 || t.update([this.props._feedbackShowTimeout, this.props.activeStateEnabled, this.props.activeStateUnit, this.props.disabled, this.props.onActive]), (i = this._effects[2]) === null || i === void 0 || i.update([this.props._feedbackHideTimeout, this.props.activeStateEnabled, this.props.activeStateUnit, this.props.onInactive, this.state.active]), (n = this._effects[3]) === null || n === void 0 || n.update([this.props.disabled, this.props.name, this.props.onClick]), (r = this._effects[4]) === null || r === void 0 || r.update([this.props.disabled, this.props.focusStateEnabled, this.props.name, this.props.onFocusIn]), (a = this._effects[5]) === null || a === void 0 || a.update([this.props.focusStateEnabled, this.props.name, this.props.onFocusOut, this.state.focused]), (o = this._effects[6]) === null || o === void 0 || o.update([this.props.activeStateUnit, this.props.disabled, this.props.hoverStateEnabled, this.props.onHoverStart, this.state.active]), (s = this._effects[7]) === null || s === void 0 || s.update([this.props.activeStateUnit, this.props.hoverStateEnabled, this.props.onHoverEnd, this.state.hovered]), (l = this._effects[8]) === null || l === void 0 || l.update([this.props.focusStateEnabled, this.props.onKeyDown]), (u = this._effects[9]) === null || u === void 0 || u.update([this.props.name, this.props.onDimensionChanged]), (d = this._effects[10]) === null || d === void 0 || d.update([this.props.onDimensionChanged]), (c = this._effects[11]) === null || c === void 0 || c.update([this.props.name, this.props.onVisibilityChange]), (h = this._effects[12]) === null || h === void 0 || h.update([this.props.height, this.props.width]), (p = this._effects[13]) === null || p === void 0 || p.update([this.props.cssText]);
  }
  setRootElementRef() {
    var {
      onRootElementRendered: t,
      rootElementRef: i
    } = this.props;
    i && (i.current = this.widgetElementRef.current), t == null || t(this.widgetElementRef.current);
  }
  activeEffect() {
    var {
      _feedbackShowTimeout: t,
      activeStateEnabled: i,
      activeStateUnit: n,
      disabled: r,
      onActive: a
    } = this.props, o = n;
    if (i && !r)
      return QW(this.widgetElementRef.current, (s) => {
        this.setState((l) => ({
          active: !0
        })), a == null || a(s);
      }, {
        timeout: t,
        selector: o
      }, "UIFeedback");
  }
  inactiveEffect() {
    var {
      _feedbackHideTimeout: t,
      activeStateEnabled: i,
      activeStateUnit: n,
      onInactive: r
    } = this.props, a = n;
    if (i)
      return JW(this.widgetElementRef.current, (o) => {
        this.state.active && (this.setState((s) => ({
          active: !1
        })), r == null || r(o));
      }, {
        timeout: t,
        selector: a
      }, "UIFeedback");
  }
  clickEffect() {
    var {
      disabled: t,
      name: i,
      onClick: n
    } = this.props, r = i;
    if (n && !t)
      return vC.on(this.widgetElementRef.current, n, {
        namespace: r
      }), () => vC.off(this.widgetElementRef.current, {
        namespace: r
      });
  }
  focusInEffect() {
    var {
      disabled: t,
      focusStateEnabled: i,
      name: n,
      onFocusIn: r
    } = this.props, a = "".concat(n, "Focus");
    if (i && !t)
      return i4(this.widgetElementRef.current, (o) => {
        o.isDefaultPrevented() || (this.setState((s) => ({
          focused: !0
        })), r == null || r(o));
      }, null, a);
  }
  focusOutEffect() {
    var {
      focusStateEnabled: t,
      name: i,
      onFocusOut: n
    } = this.props, r = "".concat(i, "Focus");
    if (t)
      return n4(this.widgetElementRef.current, (a) => {
        !a.isDefaultPrevented() && this.state.focused && (this.setState((o) => ({
          focused: !1
        })), n == null || n(a));
      }, null, r);
  }
  hoverStartEffect() {
    var {
      activeStateUnit: t,
      disabled: i,
      hoverStateEnabled: n,
      onHoverStart: r
    } = this.props, a = t;
    if (n && !i)
      return e4(this.widgetElementRef.current, (o) => {
        !this.state.active && this.setState((s) => ({
          hovered: !0
        })), r == null || r(o);
      }, {
        selector: a
      }, "UIFeedback");
  }
  hoverEndEffect() {
    var {
      activeStateUnit: t,
      hoverStateEnabled: i,
      onHoverEnd: n
    } = this.props, r = t;
    if (i)
      return t4(this.widgetElementRef.current, (a) => {
        this.state.hovered && (this.setState((o) => ({
          hovered: !1
        })), n == null || n(a));
      }, {
        selector: r
      }, "UIFeedback");
  }
  keyboardEffect() {
    var {
      focusStateEnabled: t,
      onKeyDown: i
    } = this.props;
    if (t && i) {
      var n = Sr.on(this.widgetElementRef.current, this.widgetElementRef.current, (r) => i(r));
      return () => Sr.off(n);
    }
  }
  resizeEffect() {
    var t = "".concat(this.props.name, "VisibilityChange"), {
      onDimensionChanged: i
    } = this.props;
    if (i)
      return Od.on(this.widgetElementRef.current, i, {
        namespace: t
      }), () => Od.off(this.widgetElementRef.current, {
        namespace: t
      });
  }
  windowResizeEffect() {
    var {
      onDimensionChanged: t
    } = this.props;
    if (t)
      return ma.add(t), () => {
        ma.remove(t);
      };
  }
  visibilityEffect() {
    var {
      name: t,
      onVisibilityChange: i
    } = this.props, n = "".concat(t, "VisibilityChange");
    if (i)
      return Rd.on(this.widgetElementRef.current, () => i(!0), () => i(!1), {
        namespace: n
      }), () => Rd.off(this.widgetElementRef.current, {
        namespace: n
      });
  }
  checkDeprecation() {
    var {
      height: t,
      width: i
    } = this.props;
    ce(i) && Je.log("W0017", "width"), ce(t) && Je.log("W0017", "height");
  }
  applyCssTextEffect() {
    var {
      cssText: t
    } = this.props;
    t !== "" && (this.widgetElementRef.current.style.cssText = t);
  }
  get shouldRenderConfigProvider() {
    var {
      rtlEnabled: t
    } = this.props;
    return l4(t, this.config);
  }
  get rtlEnabled() {
    var {
      rtlEnabled: t
    } = this.props;
    return s4(t, this.config);
  }
  get attributes() {
    var {
      aria: t,
      disabled: i,
      focusStateEnabled: n,
      visible: r
    } = this.props, a = n && !i && this.props.accessKey;
    return ue({}, T({}, a && {
      accessKey: a
    }), h4(ue({}, t, {
      disabled: i,
      hidden: !r
    })), T({}, this.restAttributes));
  }
  get styles() {
    var {
      height: t,
      width: i
    } = this.props, n = this.restAttributes.style || {}, r = Oo("width", ce(i) ? i() : i), a = Oo("height", ce(t) ? t() : t);
    return ue({}, n, {
      height: a ?? n.height,
      width: r ?? n.width
    });
  }
  get cssClasses() {
    var {
      activeStateEnabled: t,
      addWidgetClass: i,
      className: n,
      classes: r,
      disabled: a,
      focusStateEnabled: o,
      hoverStateEnabled: s,
      onVisibilityChange: l,
      visible: u
    } = this.props, d = !!o && !a, c = !!s && !a, h = !!t && !a, p = {
      "dx-widget": !!i,
      [String(r)]: !!r,
      [String(n)]: !!n,
      "dx-state-disabled": !!a,
      "dx-state-invisible": !u,
      "dx-state-focused": !!this.state.focused && d,
      "dx-state-active": !!this.state.active && h,
      "dx-state-hover": !!this.state.hovered && c && !this.state.active,
      "dx-rtl": !!this.rtlEnabled,
      "dx-visibility-change-handler": !!l
    };
    return Li(p);
  }
  get tabIndex() {
    var {
      disabled: t,
      focusStateEnabled: i,
      tabIndex: n
    } = this.props, r = i && !t;
    return r ? n : void 0;
  }
  get restAttributes() {
    var t = this.props, i = pt(t, u4);
    return i;
  }
  focus() {
    nd.trigger(this.widgetElementRef.current);
  }
  blur() {
    var t = ee.getActiveElement(this.widgetElementRef.current);
    this.widgetElementRef.current === t && t.blur();
  }
  activate() {
    this.setState((t) => ({
      active: !0
    }));
  }
  deactivate() {
    this.setState((t) => ({
      active: !1
    }));
  }
  render() {
    var t = this.props;
    return p4({
      props: ue({}, t),
      active: this.state.active,
      focused: this.state.focused,
      hovered: this.state.hovered,
      widgetElementRef: this.widgetElementRef,
      config: this.config,
      shouldRenderConfigProvider: this.shouldRenderConfigProvider,
      rtlEnabled: this.rtlEnabled,
      attributes: this.attributes,
      styles: this.styles,
      cssClasses: this.cssClasses,
      tabIndex: this.tabIndex,
      restAttributes: this.restAttributes
    });
  }
}
Nc.defaultProps = Kd;
var f4 = ["accessKey", "activeStateEnabled", "children", "className", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "icon", "iconPosition", "iconTemplate", "onClick", "onKeyDown", "onSubmit", "pressed", "rtlEnabled", "stylingMode", "tabIndex", "template", "templateData", "text", "type", "useInkRipple", "useSubmitBehavior", "visible", "width"], g4 = ["outlined", "text", "contained"], _4 = (e) => {
  var {
    icon: t,
    iconPosition: i,
    stylingMode: n,
    text: r,
    type: a
  } = e, o = n && g4.includes(n), s = {
    "dx-button": !0,
    ["dx-button-mode-".concat(o ? n : "contained")]: !0,
    ["dx-button-".concat(a ?? "normal")]: !0,
    "dx-button-has-text": !!r,
    "dx-button-has-icon": !!t,
    "dx-button-icon-right": i !== "left"
  };
  return Li(s);
}, v4 = (e) => {
  var {
    children: t,
    iconPosition: i,
    iconTemplate: n,
    template: r,
    text: a
  } = e.props, o = !e.props.template && !t && a !== "", s = i === "left", l = !e.props.template && !t && (e.iconSource || e.props.iconTemplate) && ot(2, $D, {
    source: e.iconSource,
    position: i,
    iconTemplate: n
  });
  return vi(ot(2, Nc, ue({
    accessKey: e.props.accessKey,
    activeStateEnabled: e.props.activeStateEnabled,
    aria: e.aria,
    className: e.props.className,
    classes: e.cssClasses,
    disabled: e.props.disabled,
    focusStateEnabled: e.props.focusStateEnabled,
    height: e.props.height,
    hint: e.props.hint,
    hoverStateEnabled: e.props.hoverStateEnabled,
    onActive: e.onActive,
    onClick: e.onWidgetClick,
    onInactive: e.onInactive,
    onKeyDown: e.keyDown,
    rtlEnabled: e.props.rtlEnabled,
    tabIndex: e.props.tabIndex,
    visible: e.props.visible,
    width: e.props.width
  }, e.restAttributes, {
    children: yt(1, "div", "dx-button-content", [e.props.template && r({
      data: e.buttonTemplateData
    }), !e.props.template && t, s && l, o && yt(1, "span", "dx-button-text", a, 0), !s && l, e.props.useSubmitBehavior && yt(64, "input", "dx-button-submit-input", null, 1, {
      type: "submit",
      tabIndex: -1
    }, null, e.submitInputRef), e.props.useInkRipple && ot(2, HD, {
      config: e.inkRippleConfig
    }, null, e.inkRippleRef)], 0, null, null, e.contentRef)
  }), null, e.widgetRef));
}, m4 = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Vc), Object.getOwnPropertyDescriptors({
  activeStateEnabled: !0,
  hoverStateEnabled: !0,
  icon: "",
  iconPosition: "left",
  stylingMode: "contained",
  text: "",
  type: "normal",
  useInkRipple: !1,
  useSubmitBehavior: !1,
  templateData: Object.freeze({})
}))), WD = PF([{
  device: () => ve.real().deviceType === "desktop" && !ve.isSimulator(),
  options: {
    focusStateEnabled: !0
  }
}, {
  device: () => St(rn()),
  options: {
    useInkRipple: !0
  }
}]), Dy = (e) => e && (e.defaultProps ? (t) => vi(ot(2, e, ue({}, t))) : e);
let Ud = class extends $l {
  constructor(t) {
    super(t), this.state = {}, this.contentRef = zt(), this.inkRippleRef = zt(), this.submitInputRef = zt(), this.widgetRef = zt(), this.__getterCache = {}, this.focus = this.focus.bind(this), this.activate = this.activate.bind(this), this.deactivate = this.deactivate.bind(this), this.submitEffect = this.submitEffect.bind(this), this.checkDeprecation = this.checkDeprecation.bind(this), this.onActive = this.onActive.bind(this), this.onInactive = this.onInactive.bind(this), this.onWidgetClick = this.onWidgetClick.bind(this), this.keyDown = this.keyDown.bind(this);
  }
  createEffects() {
    return [new ut(this.submitEffect, [this.props.onSubmit, this.props.useSubmitBehavior]), new ut(this.checkDeprecation, [this.props.type]), Hl()];
  }
  updateEffects() {
    var t, i;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.props.onSubmit, this.props.useSubmitBehavior]), (i = this._effects[1]) === null || i === void 0 || i.update([this.props.type]);
  }
  submitEffect() {
    var {
      onSubmit: t,
      useSubmitBehavior: i
    } = this.props;
    if (i && t)
      return mC.on(this.submitInputRef.current, (n) => t({
        event: n,
        submitInput: this.submitInputRef.current
      }), {
        namespace: "UIFeedback"
      }), () => mC.off(this.submitInputRef.current, {
        namespace: "UIFeedback"
      });
  }
  checkDeprecation() {
    var {
      type: t
    } = this.props;
    t === "back" && Je.log("W0016", "type", "back", "22.2", "Use the 'back' icon instead");
  }
  onActive(t) {
    var {
      useInkRipple: i
    } = this.props;
    i && this.inkRippleRef.current.showWave({
      element: this.contentRef.current,
      event: t
    });
  }
  onInactive(t) {
    var {
      useInkRipple: i
    } = this.props;
    i && this.inkRippleRef.current.hideWave({
      element: this.contentRef.current,
      event: t
    });
  }
  onWidgetClick(t) {
    var {
      onClick: i,
      useSubmitBehavior: n
    } = this.props;
    i == null || i({
      event: t
    }), n && this.submitInputRef.current.click();
  }
  keyDown(t) {
    var {
      onKeyDown: i
    } = this.props, {
      keyName: n,
      originalEvent: r,
      which: a
    } = t, o = i == null ? void 0 : i(t);
    if (o != null && o.cancel)
      return o;
    (n === "space" || a === "space" || n === "enter" || a === "enter") && (r.preventDefault(), this.onWidgetClick(r));
  }
  get aria() {
    var {
      icon: t,
      text: i
    } = this.props, n = (i ?? "") || q.format(Qs(t, !0)) || t;
    return !i && t && kl(t) === "image" && (n = t.includes("base64") ? "Base64" : t.replace(/.+\/([^.]+)\..+$/, "$1")), ue({
      role: "button"
    }, n ? {
      label: n
    } : {});
  }
  get cssClasses() {
    return _4(this.props);
  }
  get iconSource() {
    var {
      icon: t,
      type: i
    } = this.props;
    return t || i === "back" ? (t ?? "") || "back" : "";
  }
  get inkRippleConfig() {
    return this.__getterCache.inkRippleConfig !== void 0 ? this.__getterCache.inkRippleConfig : this.__getterCache.inkRippleConfig = (() => {
      var {
        icon: t,
        text: i,
        type: n
      } = this.props;
      return !i && t || n === "back" ? {
        isCentered: !0,
        useHoldAnimation: !1,
        waveSizeCoefficient: 1
      } : {};
    })();
  }
  get buttonTemplateData() {
    var {
      icon: t,
      templateData: i,
      text: n
    } = this.props;
    return ue({
      icon: t,
      text: n
    }, i);
  }
  get restAttributes() {
    var t = this.props, i = pt(t, f4);
    return i;
  }
  focus() {
    this.widgetRef.current.focus();
  }
  activate() {
    this.widgetRef.current.activate();
  }
  deactivate() {
    this.widgetRef.current.deactivate();
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), (this.props.icon !== t.icon || this.props.text !== t.text || this.props.type !== t.type) && (this.__getterCache.inkRippleConfig = void 0);
  }
  render() {
    var t = this.props;
    return v4({
      props: ue({}, t, {
        template: Dy(t.template),
        iconTemplate: Dy(t.iconTemplate)
      }),
      contentRef: this.contentRef,
      submitInputRef: this.submitInputRef,
      inkRippleRef: this.inkRippleRef,
      widgetRef: this.widgetRef,
      onActive: this.onActive,
      onInactive: this.onInactive,
      onWidgetClick: this.onWidgetClick,
      keyDown: this.keyDown,
      aria: this.aria,
      cssClasses: this.cssClasses,
      iconSource: this.iconSource,
      inkRippleConfig: this.inkRippleConfig,
      buttonTemplateData: this.buttonTemplateData,
      restAttributes: this.restAttributes
    });
  }
};
Ud.defaultProps = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(m4), Object.getOwnPropertyDescriptors(ue({}, Ro(WD)))));
var Ay = [];
function C4(e) {
  Ay.push(e), Ud.defaultProps = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Ud.defaultProps), Object.getOwnPropertyDescriptors(Ro(WD)), Object.getOwnPropertyDescriptors(Ro(Ay))));
}
class Gt extends WW {
  getProps() {
    var t = super.getProps();
    return t.onKeyDown = this._wrapKeyDownHandler(t.onKeyDown), t;
  }
  focus() {
    var t;
    return (t = this.viewRef) === null || t === void 0 ? void 0 : t.focus(...arguments);
  }
  activate() {
    var t;
    return (t = this.viewRef) === null || t === void 0 ? void 0 : t.activate(...arguments);
  }
  deactivate() {
    var t;
    return (t = this.viewRef) === null || t === void 0 ? void 0 : t.deactivate(...arguments);
  }
  _getActionConfigs() {
    return {
      onClick: {
        excludeValidators: ["readOnly"]
      },
      onSubmit: {}
    };
  }
  get _propsInfo() {
    return {
      twoWay: [],
      allowNull: [],
      elements: ["onSubmit"],
      templates: ["template", "iconTemplate"],
      props: ["activeStateEnabled", "hoverStateEnabled", "icon", "iconPosition", "onClick", "onSubmit", "pressed", "stylingMode", "template", "iconTemplate", "text", "type", "useInkRipple", "useSubmitBehavior", "templateData", "className", "accessKey", "disabled", "focusStateEnabled", "height", "hint", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width"]
    };
  }
  get _viewComponent() {
    return Ud;
  }
}
We("dxButton", Gt);
Gt.defaultOptions = C4;
var Oy = "dx-custom-button-hovered";
class x4 extends Bc {
  _attachEvents(t, i) {
    var {
      editor: n
    } = this;
    w.on(i, V_, () => {
      n.$element().addClass(Oy);
    }), w.on(i, bc, () => {
      n.$element().removeClass(Oy);
    }), w.on(i, Xe, (r) => {
      r.stopPropagation();
    });
  }
  _create() {
    var {
      editor: t
    } = this, i = g("<div>");
    this._addToContainer(i);
    var n = t._createComponent(i, Gt, T({}, this.options, {
      ignoreParentReadOnly: !0,
      disabled: this._isDisabled(),
      integrationOptions: this._prepareIntegrationOptions(t)
    }));
    return {
      $element: i,
      instance: n
    };
  }
  _prepareIntegrationOptions(t) {
    return T({}, t.option("integrationOptions"), {
      skipTemplates: ["content"]
    });
  }
  update() {
    var t = super.update();
    return this.instance && this.instance.option("disabled", this._isDisabled()), t;
  }
  _isVisible() {
    var {
      editor: t
    } = this;
    return t.option("visible");
  }
  _isDisabled() {
    var t = this.options.disabled !== void 0;
    return t ? this.instance ? this.instance.option("disabled") : this.options.disabled : this.editor.option("readOnly");
  }
}
var y4 = "dx-texteditor-buttons-container";
function b4(e) {
  (() => {
    if (!e || typeof e != "object" || Array.isArray(e))
      throw $e.Error("E1053");
  })(), (() => {
    if (!("name" in e))
      throw $e.Error("E1054");
  })(), (() => {
    var {
      name: t
    } = e;
    if (typeof t != "string")
      throw $e.Error("E1055");
  })(), (() => {
    var {
      location: t
    } = e;
    "location" in e && t !== "after" && t !== "before" && (e.location = "after");
  })();
}
function Ry(e, t) {
  if (e.indexOf(t) !== -1)
    throw $e.Error("E1055", t);
  e.push(t);
}
function S4(e, t) {
  return !!t.find((i) => i.name === e);
}
class E4 {
  constructor(t, i) {
    this.buttons = [], this.defaultButtonsInfo = i, this.editor = t;
  }
  _compileButtonInfo(t) {
    var i = [];
    return t.map((n) => {
      var r = typeof n == "string";
      r || b4(n);
      var a = r || S4(n.name, this.defaultButtonsInfo);
      if (a) {
        var o = this.defaultButtonsInfo.find((l) => {
          var {
            name: u
          } = l;
          return u === n || u === n.name;
        });
        if (!o)
          throw $e.Error("E1056", this.editor.NAME, n);
        return Ry(i, n), o;
      } else {
        var {
          name: s
        } = n;
        return Ry(i, s), T(n, {
          Ctor: x4
        });
      }
    });
  }
  _createButton(t) {
    var {
      Ctor: i,
      options: n,
      name: r
    } = t, a = new i(r, this.editor, n);
    return this.buttons.push(a), a;
  }
  _renderButtons(t, i, n) {
    var r = null, a = t ? this._compileButtonInfo(t) : this.defaultButtonsInfo;
    return a.forEach((o) => {
      var {
        location: s = "after"
      } = o;
      s === n && this._createButton(o).render((() => (r = r || g("<div>").addClass(y4), n === "before" ? i.prepend(r) : i.append(r), r))());
    }), r;
  }
  clean() {
    this.buttons.forEach((t) => t.dispose()), this.buttons = [];
  }
  getButton(t) {
    var i = this.buttons.find((n) => {
      var {
        name: r
      } = n;
      return r === t;
    });
    return i && i.instance;
  }
  renderAfterButtons(t, i) {
    return this._renderButtons(t, i, "after");
  }
  renderBeforeButtons(t, i) {
    return this._renderButtons(t, i, "before");
  }
  updateButtons(t) {
    this.buttons.forEach((i) => {
      (!t || t.indexOf(i.name) !== -1) && i.update();
    });
  }
}
var By = "dx-texteditor-label", ky = "dx-texteditor-with-label", Fy = "dx-texteditor-with-floating-label", Py = "dx-texteditor-with-before-buttons", w4 = "dx-label-before", I4 = "dx-label", T4 = "dx-label-after";
class D4 {
  constructor(t) {
    var {
      $editor: i,
      text: n,
      mode: r,
      mark: a,
      containsButtonsBefore: o,
      containerWidth: s,
      beforeWidth: l
    } = t;
    this._props = {
      $editor: i,
      text: n,
      mode: r,
      mark: a,
      containsButtonsBefore: o,
      containerWidth: s,
      beforeWidth: l
    }, this._id = "".concat(By, "-").concat(new Ot()), this._render(), this._toggleMarkupVisibility();
  }
  _isVisible() {
    return !!this._props.text && this._props.mode !== "hidden";
  }
  _render() {
    this._$before = g("<div>").addClass(w4), this._$labelSpan = g("<span>"), this._$label = g("<div>").addClass(I4).append(this._$labelSpan), this._$after = g("<div>").addClass(T4), this._$root = g("<div>").addClass(By).attr("id", this._id).append(this._$before).append(this._$label).append(this._$after), this._updateMark(), this._updateText(), this._updateBeforeWidth(), this._updateMaxWidth();
  }
  _toggleMarkupVisibility() {
    var t = this._isVisible();
    this._updateEditorBeforeButtonsClass(t), this._updateEditorLabelClass(t), t ? this._$root.appendTo(this._props.$editor) : this._$root.detach();
  }
  _updateEditorLabelClass(t) {
    if (this._props.$editor.removeClass(Fy).removeClass(ky), t) {
      var i = this._props.mode === "floating" ? Fy : ky;
      this._props.$editor.addClass(i);
    }
  }
  _updateEditorBeforeButtonsClass() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._isVisible();
    if (this._props.$editor.removeClass(Py), t) {
      var i = this._props.containsButtonsBefore ? Py : "";
      this._props.$editor.addClass(i);
    }
  }
  _updateMark() {
    this._$labelSpan.attr("data-mark", this._props.mark);
  }
  _updateText() {
    this._$labelSpan.text(this._props.text);
  }
  _updateBeforeWidth() {
    this._$before.css({
      width: this._props.beforeWidth
    });
  }
  _updateMaxWidth() {
    this._$label.css({
      maxWidth: this._props.containerWidth
    });
  }
  $element() {
    return this._$root;
  }
  isVisible() {
    return this._isVisible();
  }
  getId() {
    if (this._isVisible())
      return this._id;
  }
  updateMode(t) {
    this._props.mode = t, this._toggleMarkupVisibility();
  }
  updateText(t) {
    this._props.text = t, this._updateText(), this._toggleMarkupVisibility();
  }
  updateMark(t) {
    this._props.mark = t, this._updateMark();
  }
  updateContainsButtonsBefore(t) {
    this._props.containsButtonsBefore = t, this._updateEditorBeforeButtonsClass();
  }
  updateBeforeWidth(t) {
    this._props.beforeWidth = t, this._updateBeforeWidth();
  }
  updateMaxWidth(t) {
    this._props.containerWidth = t, this._updateMaxWidth();
  }
}
var My = ke(), A4 = {
  observe: $,
  unobserve: $,
  disconnect: $
};
class O4 {
  constructor() {
    if (!Re() || !My.ResizeObserver)
      return A4;
    this._callbacksMap = /* @__PURE__ */ new Map(), this._observer = new My.ResizeObserver((t) => {
      t.forEach((i) => {
        var n;
        (n = this._callbacksMap.get(i.target)) === null || n === void 0 || n(i);
      });
    });
  }
  observe(t, i) {
    this._callbacksMap.set(t, i), this._observer.observe(t);
  }
  unobserve(t) {
    this._callbacksMap.delete(t), this._observer.unobserve(t);
  }
  disconnect() {
    this._callbacksMap.clear(), this._observer.disconnect();
  }
}
var fa = new O4(), R4 = "dx-texteditor", B4 = "dx-texteditor-input-container", GD = "dx-texteditor-input", k4 = "." + GD, F4 = "dx-texteditor-container", P4 = "dx-texteditor-buttons-container", Ly = "dx-placeholder", M4 = "dx-texteditor-empty", L4 = "dx-state-invisible", V4 = "dx-pending-indicator", Vy = "dx-validation-pending", N4 = "dx-valid", vu = ["KeyDown", "KeyPress", "KeyUp", "Change", "Cut", "Copy", "Paste", "Input"], $4 = ["tab", "enter", "shift", "control", "alt", "escape", "pageUp", "pageDown", "end", "home", "leftArrow", "upArrow", "rightArrow", "downArrow"], H4 = D4;
function Ny(e) {
  if (x(e) && !Array.isArray(e))
    throw $e.Error("E1053");
}
var z4 = nn.inherit({
  ctor: function(e, t) {
    t && Ny(t.buttons), this._buttonCollection = new E4(this, this._getDefaultButtons()), this._$beforeButtonsContainer = null, this._$afterButtonsContainer = null, this._labelContainerElement = null, this.callBase.apply(this, arguments);
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      buttons: void 0,
      value: "",
      spellcheck: !1,
      showClearButton: !1,
      valueChangeEvent: "change",
      placeholder: "",
      inputAttr: {},
      onFocusIn: null,
      onFocusOut: null,
      onKeyDown: null,
      onKeyUp: null,
      onChange: null,
      onInput: null,
      onCut: null,
      onCopy: null,
      onPaste: null,
      onEnterKey: null,
      mode: "text",
      hoverStateEnabled: !0,
      focusStateEnabled: !0,
      text: void 0,
      displayValueFormatter: function(e) {
        return x(e) && e !== !1 ? e : "";
      },
      stylingMode: st().editorStylingMode || "outlined",
      showValidationMark: !0,
      label: "",
      labelMode: "static",
      labelMark: ""
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        var e = rn();
        return St(e);
      },
      options: {
        stylingMode: st().editorStylingMode || "filled",
        labelMode: "floating"
      }
    }]);
  },
  _getDefaultButtons: function() {
    return [{
      name: "clear",
      Ctor: cz
    }];
  },
  _isClearButtonVisible: function() {
    return this.option("showClearButton") && !this.option("readOnly");
  },
  _input: function() {
    return this.$element().find(k4).first();
  },
  _isFocused: function() {
    return Or(this._input()) || this.callBase();
  },
  _inputWrapper: function() {
    return this.$element();
  },
  _buttonsContainer: function() {
    return this._inputWrapper().find("." + P4).eq(0);
  },
  _isControlKey: function(e) {
    return $4.indexOf(e) !== -1;
  },
  _renderStylingMode: function() {
    this.callBase(), this._updateButtonsStyling(this.option("stylingMode"));
  },
  _initMarkup: function() {
    this.$element().addClass(R4), this._renderInput(), this._renderStylingMode(), this._renderInputType(), this._renderPlaceholder(), this._renderProps(), this.callBase(), this._renderValue(), this._renderLabel();
  },
  _render: function() {
    this.callBase(), this._refreshValueChangeEvent(), this._renderEvents(), this._renderEnterKeyAction(), this._renderEmptinessEvent();
  },
  _renderInput: function() {
    this._$buttonsContainer = this._$textEditorContainer = g("<div>").addClass(F4).appendTo(this.$element()), this._$textEditorInputContainer = g("<div>").addClass(B4).appendTo(this._$textEditorContainer), this._$textEditorInputContainer.append(this._createInput()), this._renderButtonContainers();
  },
  _getInputContainer() {
    return this._$textEditorInputContainer;
  },
  _renderPendingIndicator: function() {
    this.$element().addClass(Vy);
    var e = this._getInputContainer(), t = g("<div>").addClass(V4).appendTo(e);
    this._pendingIndicator = this._createComponent(t, bi);
  },
  _disposePendingIndicator: function() {
    this._pendingIndicator && (this._pendingIndicator.dispose(), this._pendingIndicator.$element().remove(), this._pendingIndicator = null, this.$element().removeClass(Vy));
  },
  _renderValidationState: function() {
    this.callBase();
    var e = this.option("validationStatus") === "pending", t = this.$element();
    e ? (!this._pendingIndicator && this._renderPendingIndicator(), this._showValidMark = !1) : (this.option("validationStatus") === "invalid" && (this._showValidMark = !1), !this._showValidMark && this.option("showValidationMark") === !0 && (this._showValidMark = this.option("validationStatus") === "valid" && !!this._pendingIndicator), this._disposePendingIndicator()), t.toggleClass(N4, !!this._showValidMark);
  },
  _renderButtonContainers: function() {
    var e = this.option("buttons");
    this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(e, this._$buttonsContainer), this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(e, this._$buttonsContainer);
  },
  _cleanButtonContainers: function() {
    var e, t;
    (e = this._$beforeButtonsContainer) === null || e === void 0 || e.remove(), (t = this._$afterButtonsContainer) === null || t === void 0 || t.remove(), this._buttonCollection.clean();
  },
  _clean() {
    this._buttonCollection.clean(), this._disposePendingIndicator(), this._unobserveLabelContainerResize(), this._$beforeButtonsContainer = null, this._$afterButtonsContainer = null, this._$textEditorContainer = null, this._$buttonsContainer = null, this.callBase();
  },
  _createInput: function() {
    var e = g("<input>");
    return this._applyInputAttributes(e, this.option("inputAttr")), e;
  },
  _setSubmitElementName: function(e) {
    var t = this.option("inputAttr.name");
    return this.callBase(e || t || "");
  },
  _applyInputAttributes: function(e, t) {
    var i = T(this._getDefaultAttributes(), t);
    e.attr(i).addClass(GD).css("minHeight", this.option("height") ? "0" : "");
  },
  _getDefaultAttributes: function() {
    var e = {
      autocomplete: "off"
    }, {
      ios: t,
      mac: i
    } = ve.real();
    return (t || i) && (e.placeholder = " "), e;
  },
  _updateButtons: function(e) {
    this._buttonCollection.updateButtons(e);
  },
  _updateButtonsStyling: function(e) {
    B(this.option("buttons"), (t, i) => {
      var {
        options: n,
        name: r
      } = i;
      if (n && !n.stylingMode && this.option("visible")) {
        var a = this.getButton(r);
        a.option && a.option("stylingMode", e === "underlined" ? "text" : "contained");
      }
    });
  },
  _renderValue: function() {
    var e = this._renderInputValue();
    return e.promise();
  },
  _renderInputValue: function(e) {
    var t;
    e = (t = e) !== null && t !== void 0 ? t : this.option("value");
    var i = this.option("text"), n = this.option("displayValue"), r = this.option("displayValueFormatter");
    return n !== void 0 && e !== null ? i = r(n) : x(i) || (i = r(e)), this.option("text", i), this._input().val() !== (x(i) ? i : "") ? this._renderDisplayText(i) : this._toggleEmptinessEventHandler(), new U().resolve();
  },
  _renderDisplayText: function(e) {
    this._input().val(e), this._toggleEmptinessEventHandler();
  },
  _isValueValid: function() {
    if (this._input().length) {
      var e = this._input().get(0).validity;
      if (e)
        return e.valid;
    }
    return !0;
  },
  _toggleEmptiness: function(e) {
    this.$element().toggleClass(M4, e), this._togglePlaceholder(e);
  },
  _togglePlaceholder: function(e) {
    this.$element().find(".".concat(Ly)).eq(0).toggleClass(L4, !e);
  },
  _renderProps: function() {
    this._toggleReadOnlyState(), this._toggleSpellcheckState(), this._toggleTabIndex();
  },
  _toggleDisabledState: function(e) {
    this.callBase.apply(this, arguments);
    var t = this._input();
    t.prop("disabled", e);
  },
  _toggleTabIndex: function() {
    var e = this._input(), t = this.option("disabled"), i = this.option("focusStateEnabled");
    t || !i ? e.attr("tabIndex", -1) : e.removeAttr("tabIndex");
  },
  _toggleReadOnlyState: function() {
    this._input().prop("readOnly", this._readOnlyPropValue()), this.callBase();
  },
  _readOnlyPropValue: function() {
    return this.option("readOnly");
  },
  _toggleSpellcheckState: function() {
    this._input().prop("spellcheck", this.option("spellcheck"));
  },
  _unobserveLabelContainerResize: function() {
    this._labelContainerElement && (fa.unobserve(this._labelContainerElement), this._labelContainerElement = null);
  },
  _getLabelContainer: function() {
    return this._input();
  },
  _getLabelContainerWidth: function() {
    return Ae(this._getLabelContainer());
  },
  _getLabelBeforeWidth: function() {
    var e = this._$beforeButtonsContainer && Ae(this._$beforeButtonsContainer);
    return e ?? 0;
  },
  _updateLabelWidth: function() {
    this._label.updateBeforeWidth(this._getLabelBeforeWidth()), this._label.updateMaxWidth(this._getLabelContainerWidth());
  },
  _setLabelContainerAria: function() {
    this.setAria("labelledby", this._label.getId(), this._getLabelContainer());
  },
  _renderLabel: function() {
    this._unobserveLabelContainerResize(), this._labelContainerElement = g(this._getLabelContainer()).get(0);
    var {
      label: e,
      labelMode: t,
      labelMark: i
    } = this.option(), n = {
      $editor: this.$element(),
      text: e,
      mark: i,
      mode: t,
      containsButtonsBefore: !!this._$beforeButtonsContainer,
      containerWidth: this._getLabelContainerWidth(),
      beforeWidth: this._getLabelBeforeWidth()
    };
    this._label = new H4(n), this._setLabelContainerAria(), this._labelContainerElement && fa.observe(this._labelContainerElement, this._updateLabelWidth.bind(this));
  },
  _renderPlaceholder: function() {
    this._renderPlaceholderMarkup(), this._attachPlaceholderEvents();
  },
  _renderPlaceholderMarkup: function() {
    this._$placeholder && (this._$placeholder.remove(), this._$placeholder = null);
    var e = this._input(), t = this.option("placeholder"), i = this._$placeholder = g("<div>").attr("data-dx_placeholder", t);
    i.insertAfter(e), i.addClass(Ly);
  },
  _attachPlaceholderEvents: function() {
    var e = oe(je.up, this.NAME);
    w.on(this._$placeholder, e, () => {
      w.trigger(this._input(), "focus");
    }), this._toggleEmptinessEventHandler();
  },
  _placeholder: function() {
    return this._$placeholder || g();
  },
  _clearValueHandler: function(e) {
    var t = this._input();
    e.stopPropagation(), this._saveValueChangeEvent(e), this._clearValue(), !this._isFocused() && w.trigger(t, "focus"), w.trigger(t, "input");
  },
  _clearValue: function() {
    this.reset();
  },
  _renderEvents: function() {
    var e = this._input();
    B(vu, (t, i) => {
      if (this.hasActionSubscription("on" + i)) {
        var n = this._createActionByOption("on" + i, {
          excludeValidators: ["readOnly"]
        });
        w.on(e, oe(i.toLowerCase(), this.NAME), (r) => {
          this._disposed || n({
            event: r
          });
        });
      }
    });
  },
  _refreshEvents: function() {
    var e = this._input();
    B(vu, (t, i) => {
      w.off(e, oe(i.toLowerCase(), this.NAME));
    }), this._renderEvents();
  },
  _keyPressHandler: function() {
    this.option("text", this._input().val());
  },
  _keyDownHandler: function(e) {
    var t = this._input(), i = e.ctrlKey && ht(e) === "enter", n = t.val() !== this.option("value");
    i && n && w.trigger(t, "change");
  },
  _getValueChangeEventOptionName: function() {
    return "valueChangeEvent";
  },
  _renderValueChangeEvent: function() {
    var e = oe(this._renderValueEventName(), "".concat(this.NAME, "TextChange")), t = oe(this.option(this._getValueChangeEventOptionName()), "".concat(this.NAME, "ValueChange")), i = oe("keydown", "".concat(this.NAME, "TextChange")), n = this._input();
    w.on(n, e, this._keyPressHandler.bind(this)), w.on(n, t, this._valueChangeEventHandler.bind(this)), w.on(n, i, this._keyDownHandler.bind(this));
  },
  _cleanValueChangeEvent: function() {
    var e = ".".concat(this.NAME, "ValueChange"), t = ".".concat(this.NAME, "TextChange");
    w.off(this._input(), e), w.off(this._input(), t);
  },
  _refreshValueChangeEvent: function() {
    this._cleanValueChangeEvent(), this._renderValueChangeEvent();
  },
  _renderValueEventName: function() {
    return "input change keypress";
  },
  _focusTarget: function() {
    return this._input();
  },
  _focusEventTarget: function() {
    return this.element();
  },
  _isInput: function(e) {
    return e === this._input().get(0);
  },
  _preventNestedFocusEvent: function(e) {
    if (e.isDefaultPrevented())
      return !0;
    var t = this._isNestedTarget(e.relatedTarget);
    return e.type === "focusin" ? t = t && this._isNestedTarget(e.target) && !this._isInput(e.target) : t || this._toggleFocusClass(!1, this.$element()), t && e.preventDefault(), t;
  },
  _isNestedTarget: function(e) {
    return !!this.$element().find(e).length;
  },
  _focusClassTarget: function() {
    return this.$element();
  },
  _focusInHandler: function(e) {
    this._preventNestedFocusEvent(e), this.callBase.apply(this, arguments);
  },
  _focusOutHandler: function(e) {
    this._preventNestedFocusEvent(e), this.callBase.apply(this, arguments);
  },
  _toggleFocusClass: function(e, t) {
    this.callBase(e, this._focusClassTarget(t));
  },
  _hasFocusClass: function(e) {
    return this.callBase(g(e || this.$element()));
  },
  _renderEmptinessEvent: function() {
    var e = this._input();
    w.on(e, "input blur", this._toggleEmptinessEventHandler.bind(this));
  },
  _toggleEmptinessEventHandler: function() {
    var e = this._input().val(), t = (e === "" || e === null) && this._isValueValid();
    this._toggleEmptiness(t);
  },
  _valueChangeEventHandler: function(e, t) {
    this.option("readOnly") || (this._saveValueChangeEvent(e), this.option("value", arguments.length > 1 ? t : this._input().val()), this._saveValueChangeEvent(void 0));
  },
  _renderEnterKeyAction: function() {
    this._enterKeyAction = this._createActionByOption("onEnterKey", {
      excludeValidators: ["readOnly"]
    }), w.off(this._input(), "keyup.onEnterKey.dxTextEditor"), w.on(this._input(), "keyup.onEnterKey.dxTextEditor", this._enterKeyHandlerUp.bind(this));
  },
  _enterKeyHandlerUp: function(e) {
    this._disposed || ht(e) === "enter" && this._enterKeyAction({
      event: e
    });
  },
  _updateValue: function() {
    this._options.silent("text", null), this._renderValue();
  },
  _dispose: function() {
    this._enterKeyAction = void 0, this.callBase();
  },
  _getSubmitElement: function() {
    return this._input();
  },
  _hasActiveElement: function() {
    return this._input().is(ee.getActiveElement(this._input()[0]));
  },
  _optionChanged: function(e) {
    var {
      name: t,
      fullName: i,
      value: n
    } = e, r = t.replace("on", "");
    if (vu.includes(r)) {
      this._refreshEvents();
      return;
    }
    switch (t) {
      case "valueChangeEvent":
        this._refreshValueChangeEvent(), this._refreshFocusEvent(), this._refreshEvents();
        break;
      case "onValueChanged":
        this._createValueChangeAction();
        break;
      case "focusStateEnabled":
        this.callBase(e), this._toggleTabIndex();
        break;
      case "spellcheck":
        this._toggleSpellcheckState();
        break;
      case "mode":
        this._renderInputType();
        break;
      case "onEnterKey":
        this._renderEnterKeyAction();
        break;
      case "placeholder":
        this._renderPlaceholder();
        break;
      case "label":
        this._label.updateText(n), this._setLabelContainerAria();
        break;
      case "labelMark":
        this._label.updateMark(n);
        break;
      case "labelMode":
        this._label.updateMode(n), this._setLabelContainerAria();
        break;
      case "width":
        this.callBase(e), this._label.updateMaxWidth(this._getLabelContainerWidth());
        break;
      case "readOnly":
      case "disabled":
        this._updateButtons(), this.callBase(e);
        break;
      case "showClearButton":
        this._updateButtons(["clear"]);
        break;
      case "text":
        break;
      case "value":
        this._updateValue(), this.callBase(e);
        break;
      case "inputAttr":
        this._applyInputAttributes(this._input(), this.option(t));
        break;
      case "stylingMode":
        this._renderStylingMode(), this._updateLabelWidth();
        break;
      case "buttons":
        i === t && Ny(n), this._cleanButtonContainers(), this._renderButtonContainers(), this._updateButtonsStyling(this.option("stylingMode")), this._updateLabelWidth(), this._label.updateContainsButtonsBefore(!!this._$beforeButtonsContainer);
        break;
      case "visible":
        this.callBase(e), n && this.option("buttons") && (this._cleanButtonContainers(), this._renderButtonContainers(), this._updateButtonsStyling(this.option("stylingMode")));
        break;
      case "displayValueFormatter":
        this._invalidate();
        break;
      case "showValidationMark":
        break;
      default:
        this.callBase(e);
    }
  },
  _renderInputType: function() {
    this._setInputType(this.option("mode"));
  },
  _setInputType: function(e) {
    var t = this._input();
    e === "search" && (e = "text");
    try {
      t.prop("type", e);
    } catch {
      t.prop("type", "text");
    }
  },
  getButton(e) {
    return this._buttonCollection.getButton(e);
  },
  focus: function() {
    w.trigger(this._input(), "focus");
  },
  reset: function() {
    this._showValidMark && (this._showValidMark = !1, this._renderValidationState());
    var e = this._getDefaultOptions();
    this.option("value") === e.value ? (this._options.silent("text", ""), this._renderValue()) : this.option("value", e.value);
  },
  on: function(e, t) {
    var i = this.callBase(e, t), n = e.charAt(0).toUpperCase() + e.substr(1);
    return vu.indexOf(n) >= 0 && this._refreshEvents(), i;
  }
}), Cp = "dxMask", W4 = "blur beforedeactivate", G4 = " ";
class KD {
  constructor(t) {
    this.editor = t, this.DIRECTION = {
      FORWARD: "forward",
      BACKWARD: "backward"
    }, this.NAME = this._getStrategyName();
  }
  _getStrategyName() {
    return "base";
  }
  editorOption() {
    return this.editor.option(...arguments);
  }
  editorInput() {
    return this.editor._input();
  }
  editorCaret(t) {
    if (!t)
      return this.editor._caret();
    this.editor._caret(t);
  }
  getHandler(t) {
    var i = this["_".concat(t, "Handler")] || function() {
    };
    return i.bind(this);
  }
  attachEvents() {
    var t = this.editorInput();
    this.getHandleEventNames().forEach((i) => {
      var n = oe(i.toLowerCase(), Cp);
      w.on(t, n, this.getEventHandler(i));
    }), this._attachChangeEventHandlers();
  }
  getHandleEventNames() {
    return ["focusIn", "focusOut", "keyDown", "input", "paste", "cut", "drop"];
  }
  getEventHandler(t) {
    return this["_".concat(t, "Handler")].bind(this);
  }
  detachEvents() {
    w.off(this.editorInput(), ".".concat(Cp));
  }
  _attachChangeEventHandlers() {
    this.editorOption("valueChangeEvent").split(" ").includes("change") && w.on(this.editorInput(), oe(W4, Cp), function(t) {
      this._suppressCaretChanging(this._changeHandler, [t]), this._changeHandler(t);
    }.bind(this.editor));
  }
  _focusInHandler() {
    if (this.editor._showMaskPlaceholder(), this.editor._direction(this.DIRECTION.FORWARD), !this.editor._isValueEmpty() && this.editorOption("isValid"))
      this.editor._adjustCaret();
    else {
      var t = this.editor._maskRulesChain.first();
      this._caretTimeout = setTimeout(function() {
        this._caret({
          start: t,
          end: t
        });
      }.bind(this.editor), 0);
    }
  }
  _focusOutHandler(t) {
    this.editor._changeHandler(t), this.editorOption("showMaskMode") === "onFocus" && this.editor._isValueEmpty() && (this.editorOption("text", ""), this.editor._renderDisplayText(""));
  }
  _cutHandler(t) {
    var i = this.editorCaret(), n = this.editorInput().val().substring(i.start, i.end);
    this.editor._maskKeyHandler(t, () => jf(t, n));
  }
  _dropHandler() {
    this._clearDragTimer(), this._dragTimer = setTimeout(function() {
      this.option("value", this._convertToValue(this._input().val()));
    }.bind(this.editor));
  }
  _clearDragTimer() {
    clearTimeout(this._dragTimer);
  }
  _keyDownHandler() {
    this._keyPressHandled = !1;
  }
  _pasteHandler(t) {
    var {
      editor: i
    } = this;
    if (!i.option("disabled")) {
      this._keyPressHandled = !0;
      var n = this.editorCaret();
      i._maskKeyHandler(t, () => {
        var r = jf(t), a = i._maskRulesChain.text().substring(n.end), o = i._handleChain({
          text: r,
          start: n.start,
          length: r.length
        }), s = n.start + o;
        i._handleChain({
          text: a,
          start: s,
          length: a.length
        }), i._caret({
          start: s,
          end: s
        });
      });
    }
  }
  _autoFillHandler(t) {
    var {
      editor: i
    } = this, n = this.editorInput().val();
    this._inputHandlerTimer = setTimeout(() => {
      this._keyPressHandled = !0, this._isAutoFill() && (this._keyPressHandled = !0, i._maskKeyHandler(t, () => {
        i._handleChain({
          text: n,
          start: 0,
          length: n.length
        });
      }), i._validateMask());
    });
  }
  _isAutoFill() {
    var t = this.editor._input(), i = !1;
    if (lt.webkit) {
      var n = t.get(0);
      i = n && n.matches(":-webkit-autofill");
    }
    return i;
  }
  runWithoutEventProcessing(t) {
    var i = this._keyPressHandled;
    this._keyPressHandled = !0, t(), this._keyPressHandled = i;
  }
  _backspaceHandler() {
  }
  _delHandler(t) {
    var {
      editor: i
    } = this;
    this._keyPressHandled = !0, i._maskKeyHandler(t, () => !i._hasSelection() && i._handleKey(G4));
  }
  clean() {
    this._clearDragTimer(), clearTimeout(this._backspaceHandlerTimeout), clearTimeout(this._caretTimeout), clearTimeout(this._inputHandlerTimer);
  }
}
var K4 = "deleteContentBackward", U4 = " ";
class j4 extends KD {
  _getStrategyName() {
    return "default";
  }
  getHandleEventNames() {
    return [...super.getHandleEventNames(), "keyPress"];
  }
  _keyPressHandler(t) {
    if (!this._keyPressHandled && (this._keyPressHandled = !0, !this.editor._isControlKeyFired(t))) {
      var {
        editor: i
      } = this;
      i._maskKeyHandler(t, () => i._handleKey(Ad(t)));
    }
  }
  _inputHandler(t) {
    if (this._backspaceInputHandled(t.originalEvent && t.originalEvent.inputType) && this._handleBackspaceInput(t), t.originalEvent && this._autoFillHandler(t), !this._keyPressHandled) {
      this._keyPressHandled = !0;
      var i = this.editorInput().val(), n = this.editorCaret();
      if (n.end) {
        n.start = n.end - 1;
        var r = i.substring(0, n.start) + i.substring(n.end), a = i[n.start], {
          editor: o
        } = this;
        this.editorInput().val(r), o._caret({
          start: n.start,
          end: n.start
        }), o._maskKeyHandler(t, () => o._handleKey(a));
      }
    }
  }
  _backspaceHandler(t) {
    var {
      editor: i
    } = this;
    this._keyPressHandled = !0;
    var n = (r, a) => {
      r && (i._direction(this.DIRECTION.FORWARD), i._adjustCaret());
      var o = this.editorCaret();
      return new Promise((s) => {
        clearTimeout(this._backspaceHandlerTimeout), this._backspaceHandlerTimeout = setTimeout(function() {
          a(o), s();
        });
      });
    };
    i._maskKeyHandler(t, () => i._hasSelection() ? n(!0, (r) => {
      i._displayMask(r), i._maskRulesChain.reset();
    }) : i._tryMoveCaretBackward() ? n(!1, (r) => {
      this.editorCaret(r);
    }) : (i._handleKey(U4, this.DIRECTION.BACKWARD), n(!0, (r) => {
      i._displayMask(r), i._maskRulesChain.reset();
    })));
  }
  _backspaceInputHandled(t) {
    return t === K4 && !this._keyPressHandled;
  }
  _handleBackspaceInput(t) {
    var {
      start: i,
      end: n
    } = this.editorCaret();
    this.editorCaret({
      start: i + 1,
      end: n + 1
    }), this._backspaceHandler(t);
  }
}
var q4 = "deleteContentBackward";
class X4 extends KD {
  _getStrategyName() {
    return "inputEvents";
  }
  getHandleEventNames() {
    return [...super.getHandleEventNames(), "beforeInput"];
  }
  _beforeInputHandler() {
    this._prevCaret = this.editorCaret();
  }
  _inputHandler(t) {
    var {
      originalEvent: i
    } = t;
    if (i) {
      var {
        inputType: n,
        data: r
      } = i, a = this.editorCaret();
      if (n === q4) {
        var o = this._prevCaret.end - this._prevCaret.start || 1;
        this.editor.setBackwardDirection(), this._updateEditorMask({
          start: a.start,
          length: o,
          text: this._getEmptyString(o)
        });
      } else {
        var s, l, u;
        if (!a.end)
          return;
        this._autoFillHandler(i), this.editorCaret(a);
        var d = ((s = this._prevCaret) === null || s === void 0 ? void 0 : s.end) - ((l = this._prevCaret) === null || l === void 0 ? void 0 : l.start), c = r + (d ? this._getEmptyString(d - r.length) : "");
        this.editor.setForwardDirection();
        var h = this._updateEditorMask({
          start: (u = this._prevCaret) === null || u === void 0 ? void 0 : u.start,
          length: d || c.length,
          text: c
        });
        h || this.editorCaret(this._prevCaret);
      }
    }
  }
  _getEmptyString(t) {
    return Array(t + 1).join(" ");
  }
  _updateEditorMask(t) {
    var i = t.text.length, n = this.editor._handleChain(t);
    if (this.editor.isForwardDirection()) {
      var {
        start: r,
        end: a
      } = this.editorCaret(), o = n - i;
      r <= n && n > 1 && this.editorCaret({
        start: r + o,
        end: a + o
      }), this.editor.isForwardDirection() && this.editor._adjustCaret();
    }
    return this.editor._displayMask(), !!n;
  }
}
var Y4 = function() {
  return {};
}, mu = iD, $y = " ", Z4 = "\\", Hy = "dx-texteditor-masked", xp = "forward", Q4 = "backward", J4 = {
  0: /[0-9]/,
  9: /[0-9\s]/,
  "#": /[-+0-9\s]/,
  L: function(e) {
    return Cu(e);
  },
  l: function(e) {
    return Cu(e) || Wy(e);
  },
  C: /\S/,
  c: /./,
  A: function(e) {
    return Cu(e) || zy(e);
  },
  a: function(e) {
    return Cu(e) || zy(e) || Wy(e);
  }
};
function zy(e) {
  return /[0-9]/.test(e);
}
function Cu(e) {
  var t = e.charCodeAt();
  return 64 < t && t < 91 || 96 < t && t < 123 || t > 127;
}
function Wy(e) {
  return e === " ";
}
var Tv = z4.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      mask: "",
      maskChar: "_",
      maskRules: {},
      maskInvalidMessage: q.format("validation-mask"),
      useMaskedValue: !1,
      showMaskMode: "always"
    });
  },
  _supportedKeys: function() {
    var e = this, t = {
      backspace: e._maskStrategy.getHandler("backspace"),
      del: e._maskStrategy.getHandler("del"),
      enter: e._changeHandler
    }, i = e.callBase();
    return B(t, function(n, r) {
      var a = i[n];
      i[n] = function(o) {
        e.option("mask") && r.call(e, o), a && a(o);
      };
    }), i;
  },
  _getSubmitElement: function() {
    return this.option("mask") ? this._$hiddenElement : this.callBase();
  },
  _init: function() {
    this.callBase(), this._initMaskStrategy();
  },
  _initMaskStrategy: function() {
    this._maskStrategy = VH() ? new X4(this) : new j4(this);
  },
  _initMarkup: function() {
    this._renderHiddenElement(), this.callBase();
  },
  _attachMouseWheelEventHandlers: function() {
    var e = this._onMouseWheel !== $;
    if (e) {
      var t = this._input(), i = oe(yl, this.NAME), n = this._createAction(function(r) {
        var {
          event: a
        } = r;
        Or(t) && !Pt(a) && (this._onMouseWheel(a), a.preventDefault(), a.stopPropagation());
      }.bind(this));
      w.off(t, i), w.on(t, i, function(r) {
        n({
          event: r
        });
      });
    }
  },
  _onMouseWheel: $,
  _render: function() {
    this._renderMask(), this.callBase(), this._attachMouseWheelEventHandlers();
  },
  _renderHiddenElement: function() {
    this.option("mask") && (this._$hiddenElement = g("<input>").attr("type", "hidden").appendTo(this._inputWrapper()));
  },
  _removeHiddenElement: function() {
    this._$hiddenElement && this._$hiddenElement.remove();
  },
  _renderMask: function() {
    this.$element().removeClass(Hy), this._maskRulesChain = null, this._maskStrategy.detachEvents(), this.option("mask") && (this.$element().addClass(Hy), this._maskStrategy.attachEvents(), this._parseMask(), this._renderMaskedValue());
  },
  _suppressCaretChanging: function(e, t) {
    mu = Y4;
    try {
      e.apply(this, t);
    } finally {
      mu = iD;
    }
  },
  _changeHandler: function(e) {
    var t = this._input(), i = t.val();
    if (i !== this._changedValue) {
      this._changedValue = i;
      var n = xr(e, {
        type: "change"
      });
      w.trigger(t, n);
    }
  },
  _parseMask: function() {
    this._maskRules = T({}, J4, this.option("maskRules")), this._maskRulesChain = this._parseMaskRule(0);
  },
  _parseMaskRule: function(e) {
    var t = this.option("mask");
    if (e >= t.length)
      return new NH();
    var i = t[e], n = i === Z4, r = n ? new fy({
      maskChar: t[e + 1]
    }) : this._getMaskRule(i);
    return r.next(this._parseMaskRule(e + 1 + n)), r;
  },
  _getMaskRule: function(e) {
    var t;
    return B(this._maskRules, function(i, n) {
      if (i === e)
        return t = {
          pattern: i,
          allowedChars: n
        }, !1;
    }), x(t) ? new rD(T({
      maskChar: this.option("maskChar")
    }, t)) : new fy({
      maskChar: e
    });
  },
  _renderMaskedValue: function() {
    if (this._maskRulesChain) {
      var e = this.option("value") || "";
      this._maskRulesChain.clear(this._normalizeChainArguments());
      var t = {
        length: e.length
      };
      t[this._isMaskedValueMode() ? "text" : "value"] = e, this._handleChain(t), this._displayMask();
    }
  },
  _replaceSelectedText: function(e, t, i) {
    if (i === void 0)
      return e;
    var n = e.slice(0, t.start), r = e.slice(t.end), a = n + i + r;
    return a;
  },
  _isMaskedValueMode: function() {
    return this.option("useMaskedValue");
  },
  _displayMask: function(e) {
    e = e || this._caret(), this._renderValue(), this._caret(e);
  },
  _isValueEmpty: function() {
    return ed(this._value);
  },
  _shouldShowMask: function() {
    var e = this.option("showMaskMode");
    return e === "onFocus" ? Or(this._input()) || !this._isValueEmpty() : !0;
  },
  _showMaskPlaceholder: function() {
    if (this._shouldShowMask()) {
      var e = this._maskRulesChain.text();
      this.option("text", e), this.option("showMaskMode") === "onFocus" && this._renderDisplayText(e);
    }
  },
  _renderValue: function() {
    if (this._maskRulesChain && (this._showMaskPlaceholder(), this._$hiddenElement)) {
      var e = this._maskRulesChain.value(), t = ed(e) ? "" : this._getPreparedValue();
      this._$hiddenElement.val(t);
    }
    return this.callBase();
  },
  _getPreparedValue: function() {
    return this._convertToValue().replace(/\s+$/, "");
  },
  _valueChangeEventHandler: function(e) {
    if (!this._maskRulesChain) {
      this.callBase.apply(this, arguments);
      return;
    }
    this._saveValueChangeEvent(e), this.option("value", this._getPreparedValue());
  },
  _isControlKeyFired: function(e) {
    return this._isControlKey(ht(e)) || Pt(e);
  },
  _handleChain: function(e) {
    var t = this._maskRulesChain.handle(this._normalizeChainArguments(e));
    return this._value = this._maskRulesChain.value(), this._textValue = this._maskRulesChain.text(), t;
  },
  _normalizeChainArguments: function(e) {
    return e = e || {}, e.index = 0, e.fullText = this._maskRulesChain.text(), e;
  },
  _convertToValue: function(e) {
    return this._isMaskedValueMode() ? e = this._replaceMaskCharWithEmpty(e || this._textValue || "") : e = e || this._value || "", e;
  },
  _replaceMaskCharWithEmpty: function(e) {
    return e.replace(new RegExp(this.option("maskChar"), "g"), $y);
  },
  _maskKeyHandler: function(e, t) {
    if (!this.option("readOnly")) {
      this.setForwardDirection(), e.preventDefault(), this._handleSelection();
      var i = this._input().val(), n = () => {
        i !== this._input().val() && this._maskStrategy.runWithoutEventProcessing(() => w.trigger(this._input(), "input"));
      }, r = t();
      r ? r.then(n) : (this.setForwardDirection(), this._adjustCaret(), this._displayMask(), this._maskRulesChain.reset(), n());
    }
  },
  _handleKey: function(e, t) {
    this._direction(t || xp), this._adjustCaret(e), this._handleKeyChain(e), this._moveCaret();
  },
  _handleSelection: function() {
    if (this._hasSelection()) {
      var e = this._caret(), t = new Array(e.end - e.start + 1).join($y);
      this._handleKeyChain(t);
    }
  },
  _handleKeyChain: function(e) {
    var t = this._caret(), i = this.isForwardDirection() ? t.start : t.start - 1, n = this.isForwardDirection() ? t.end : t.end - 1, r = i === n ? 1 : n - i;
    this._handleChain({
      text: e,
      start: i,
      length: r
    });
  },
  _tryMoveCaretBackward: function() {
    this.setBackwardDirection();
    var e = this._caret().start;
    return this._adjustCaret(), !e || e !== this._caret().start;
  },
  _adjustCaret: function(e) {
    var t = this._caret().start, i = this.isForwardDirection(), n = this._maskRulesChain.adjustedCaret(t, i, e);
    this._caret({
      start: n,
      end: n
    });
  },
  _moveCaret: function() {
    var e = this._caret().start, t = e + (this.isForwardDirection() ? 0 : -1), i = this._maskRulesChain.isAccepted(t) ? e + (this.isForwardDirection() ? 1 : -1) : e;
    this._caret({
      start: i,
      end: i
    });
  },
  _caret: function(e, t) {
    var i = this._input();
    if (i.length) {
      if (!arguments.length)
        return mu(i);
      mu(i, e, t);
    }
  },
  _hasSelection: function() {
    var e = this._caret();
    return e.start !== e.end;
  },
  _direction: function(e) {
    if (!arguments.length)
      return this._typingDirection;
    this._typingDirection = e;
  },
  setForwardDirection: function() {
    this._direction(xp);
  },
  setBackwardDirection: function() {
    this._direction(Q4);
  },
  isForwardDirection: function() {
    return this._direction() === xp;
  },
  _clean: function() {
    this._maskStrategy && this._maskStrategy.clean(), this.callBase();
  },
  _validateMask: function() {
    if (this._maskRulesChain) {
      var e = ed(this.option("value")) || this._maskRulesChain.isValid(this._normalizeChainArguments());
      this.option({
        isValid: e,
        validationError: e ? null : {
          editorSpecific: !0,
          message: this.option("maskInvalidMessage")
        }
      });
    }
  },
  _updateHiddenElement: function() {
    this._removeHiddenElement(), this.option("mask") && (this._input().removeAttr("name"), this._renderHiddenElement()), this._setSubmitElementName(this.option("name"));
  },
  _updateMaskOption: function() {
    this._updateHiddenElement(), this._renderMask(), this._validateMask();
  },
  _processEmptyMask: function(e) {
    if (!e) {
      var t = this.option("value");
      this.option({
        text: t,
        isValid: !0
      }), this.validationRequest.fire({
        value: t,
        editor: this
      }), this._renderValue();
    }
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "mask":
        this._updateMaskOption(), this._processEmptyMask(e.value);
        break;
      case "maskChar":
      case "maskRules":
      case "useMaskedValue":
        this._updateMaskOption();
        break;
      case "value":
        this._renderMaskedValue(), this._validateMask(), this.callBase(e), this._changedValue = this._input().val();
        break;
      case "maskInvalidMessage":
        break;
      case "showMaskMode":
        this.option("text", ""), this._renderValue();
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxTextEditor", Tv);
var eG = ke(), tG = ["backspace", "tab", "enter", "pageUp", "pageDown", "end", "home", "leftArrow", "rightArrow", "downArrow", "upArrow", "del"], iG = "dx-textbox", Gy = "dx-searchbox", nG = "dx-icon", rG = "dx-icon-search", Wl = Tv.inherit({
  ctor: function(e, t) {
    t && (this._showClearButton = t.showClearButton), this.callBase.apply(this, arguments);
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      value: "",
      mode: "text",
      maxLength: null
    });
  },
  _initMarkup: function() {
    this.$element().addClass(iG), this.callBase(), this.setAria("role", "textbox");
  },
  _renderInputType: function() {
    this.callBase(), this._renderSearchMode();
  },
  _useTemplates: function() {
    return !1;
  },
  _renderProps: function() {
    this.callBase(), this._toggleMaxLengthProp();
  },
  _toggleMaxLengthProp: function() {
    var e = this._getMaxLength();
    e && e > 0 ? this._input().attr("maxLength", e) : this._input().removeAttr("maxLength");
  },
  _renderSearchMode: function() {
    var e = this._$element;
    this.option("mode") === "search" ? (e.addClass(Gy), this._renderSearchIcon(), this._showClearButton === void 0 && (this._showClearButton = this.option("showClearButton"), this.option("showClearButton", !0))) : (e.removeClass(Gy), this._$searchIcon && this._$searchIcon.remove(), this.option("showClearButton", this._showClearButton === void 0 ? this.option("showClearButton") : this._showClearButton), delete this._showClearButton);
  },
  _renderSearchIcon: function() {
    var e = g("<div>").addClass(nG).addClass(rG);
    e.prependTo(this._input().parent()), this._$searchIcon = e;
  },
  _getLabelContainerWidth: function() {
    if (this._$searchIcon) {
      var e = this._input().parent();
      return Ae(e) - this._getLabelBeforeWidth();
    }
    return this.callBase();
  },
  _getLabelBeforeWidth: function() {
    var e = this.callBase();
    return this._$searchIcon && (e += Ge(this._$searchIcon)), e;
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "maxLength":
        this._toggleMaxLengthProp();
        break;
      case "mode":
        this.callBase(e), this._updateLabelWidth();
        break;
      case "mask":
        this.callBase(e), this._toggleMaxLengthProp();
        break;
      default:
        this.callBase(e);
    }
  },
  _onKeyDownCutOffHandler: function(e) {
    var t = this._getMaxLength();
    if (t && !e.ctrlKey && !this._hasSelection()) {
      var i = g(e.target), n = ht(e);
      return this._cutOffExtraChar(i), i.val().length < t || tG.includes(n) || eG.getSelection().toString() !== "";
    } else
      return !0;
  },
  _onChangeCutOffHandler: function(e) {
    var t = g(e.target);
    this.option("maxLength") && this._cutOffExtraChar(t);
  },
  _cutOffExtraChar: function(e) {
    var t = this._getMaxLength(), i = e.val();
    t && i.length > t && e.val(i.substr(0, t));
  },
  _getMaxLength: function() {
    var e = !!this.option("mask");
    return e ? null : this.option("maxLength");
  }
});
We("dxTextBox", Wl);
var aG = ze.inherit({
  ctor: function() {
    this._dataStructure = [], this._itemsCount = 0, this._visibleItemsCount = 0;
  },
  _indexByKey: {},
  _convertItemsToNodes: function(e, t) {
    var i = this;
    B(e, function(n, r) {
      var a = x(t) ? t : i._getParentId(r), o = i._convertItemToNode(r, a);
      i._dataStructure.push(o), i._checkForDuplicateId(o.internalFields.key), i._indexByKey[o.internalFields.key] = i._dataStructure.length - 1, i._itemHasChildren(r) && i._convertItemsToNodes(i._dataAccessors.getters.items(r), o.internalFields.key);
    });
  },
  _checkForDuplicateId: function(e) {
    if (x(this._indexByKey[e]))
      throw $e.Error("E1040", e);
  },
  _getParentId: function(e) {
    return this._dataType === "plain" ? this._dataAccessors.getters.parentKey(e) : void 0;
  },
  _itemHasChildren: function(e) {
    if (this._dataType !== "plain") {
      var t = this._dataAccessors.getters.items(e);
      return t && t.length;
    }
  },
  _getUniqueKey: function(e) {
    var t = this._dataAccessors.getters.key, i = t(e), n = t && (i || i === 0) && Ps(i);
    return n ? i : this.getItemsCount();
  },
  _convertItemToNode: function(e, t) {
    this._itemsCount++, e.visible !== !1 && this._visibleItemsCount++;
    var i = {
      internalFields: {
        disabled: this._dataAccessors.getters.disabled(e, {
          defaultValue: !1
        }),
        expanded: this._dataAccessors.getters.expanded(e, {
          defaultValue: !1
        }),
        selected: this._dataAccessors.getters.selected(e, {
          defaultValue: !1
        }),
        key: this._getUniqueKey(e),
        parentKey: x(t) ? t : this._rootValue,
        item: this._makeObjectFromPrimitive(e),
        childrenKeys: []
      }
    };
    return T(i, e), delete i.items, i;
  },
  setChildrenKeys: function() {
    var e = this;
    B(this._dataStructure, function(t, i) {
      if (i.internalFields.parentKey !== e._rootValue) {
        var n = e.getParentNode(i);
        n && n.internalFields.childrenKeys.push(i.internalFields.key);
      }
    });
  },
  _makeObjectFromPrimitive: function(e) {
    if (Ps(e)) {
      var t = e;
      e = {}, this._dataAccessors.setters.key(e, t);
    }
    return e;
  },
  _convertToPublicNode: function(e, t) {
    if (!e)
      return null;
    var i = {
      text: this._dataAccessors.getters.display(e),
      key: e.internalFields.key,
      selected: e.internalFields.selected,
      expanded: e.internalFields.expanded,
      disabled: e.internalFields.disabled,
      parent: t || null,
      itemData: e.internalFields.item,
      children: [],
      items: []
    };
    return i.parent && (i.parent.children.push(i), i.parent.items.push(i)), i;
  },
  convertToPublicNodes: function(e, t) {
    if (!e.length)
      return [];
    var i = this, n = [];
    return B(e, function(r, a) {
      a = Ps(a) ? i._getByKey(a) : a;
      var o = i._convertToPublicNode(a, t);
      o.children = i.convertToPublicNodes(a.internalFields.childrenKeys, o), n.push(o), a.internalFields.publicNode = o;
    }), n;
  },
  setDataAccessors: function(e) {
    this._dataAccessors = e;
  },
  _getByKey: function(e) {
    return this._dataStructure[this.getIndexByKey(e)] || null;
  },
  getParentNode: function(e) {
    return this._getByKey(e.internalFields.parentKey);
  },
  getByKey: function(e, t) {
    if (t == null)
      return null;
    var i = null, n = this, r = function(a, o) {
      return B(a, function(s, l) {
        var u = l.internalFields && l.internalFields.key || n._dataAccessors.getters.key(l);
        if (u.toString() === o.toString())
          return i = l, !1;
      }), i;
    };
    return r(e, t);
  },
  getItemsCount: function() {
    return this._itemsCount;
  },
  getVisibleItemsCount: function() {
    return this._visibleItemsCount;
  },
  updateIndexByKey: function() {
    var e = this;
    this._indexByKey = {}, B(this._dataStructure, function(t, i) {
      e._checkForDuplicateId(i.internalFields.key), e._indexByKey[i.internalFields.key] = t;
    });
  },
  updateChildrenKeys: function() {
    this._indexByKey = {}, this.removeChildrenKeys(), this.updateIndexByKey(), this.setChildrenKeys();
  },
  removeChildrenKeys: function() {
    this._indexByKey = {}, B(this._dataStructure, function(e, t) {
      t.internalFields.childrenKeys = [];
    });
  },
  getIndexByKey: function(e) {
    return this._indexByKey[e];
  },
  createPlainStructure: function(e, t, i) {
    return this._itemsCount = 0, this._visibleItemsCount = 0, this._rootValue = t, this._dataType = i, this._indexByKey = {}, this._convertItemsToNodes(e), this.setChildrenKeys(), this._dataStructure;
  }
}), to = "expanded", jr = "selected", oG = "disabled";
Ia.setEditorClass(Wl);
var sG = ze.inherit({
  ctor: function(e) {
    this.options = {}, T(this.options, this._defaultOptions(), e), this.options.dataConverter.setDataAccessors(this.options.dataAccessors), this._selectedNodesKeys = [], this._expandedNodesKeys = [], this._dataStructure = [], this._createInternalDataStructure(), this.getTreeNodes();
  },
  setOption: function(e, t) {
    this.options[e] = t, e === "recursiveSelection" && this._updateSelection();
  },
  _defaultOptions: function() {
    return {
      dataAccessors: void 0,
      items: [],
      multipleSelection: !0,
      recursiveSelection: !1,
      recursiveExpansion: !1,
      rootValue: 0,
      searchValue: "",
      dataType: "tree",
      searchMode: "contains",
      dataConverter: new aG(),
      onNodeChanged: $,
      sort: null
    };
  },
  _createInternalDataStructure: function() {
    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType), this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure, this.options.dataConverter._dataStructure = this._dataStructure, this._updateSelection(), this._updateExpansion();
  },
  _updateSelection: function() {
    this.options.recursiveSelection && (this._setChildrenSelection(), this._setParentSelection()), this._selectedNodesKeys = this._updateNodesKeysArray(jr);
  },
  _updateExpansion: function(e) {
    this.options.recursiveExpansion && (e ? this._updateOneBranch(e) : this._setParentExpansion()), this._expandedNodesKeys = this._updateNodesKeysArray(to);
  },
  _updateNodesKeysArray: function(e) {
    var t = this, i = [];
    return B(t._getDataBySelectionMode(), function(n, r) {
      t._isNodeVisible(r) && r.internalFields[e] && (e === to || t.options.multipleSelection ? i.push(r.internalFields.key) : (i.length && t.toggleSelection(i[0], !1, !0), i = [r.internalFields.key]));
    }), i;
  },
  _getDataBySelectionMode: function() {
    return this.options.multipleSelection ? this.getData() : this.getFullData();
  },
  _isNodeVisible: function(e) {
    return e.internalFields.item.visible !== !1;
  },
  _getByKey: function(e, t) {
    return e === this._dataStructure ? this.options.dataConverter._getByKey(t) : this.options.dataConverter.getByKey(e, t);
  },
  _setChildrenSelection: function() {
    var e = this;
    B(this._dataStructure, function(t, i) {
      if (i.internalFields.childrenKeys.length) {
        var n = i.internalFields.selected;
        n === !0 && e._toggleChildrenSelection(i, n);
      }
    });
  },
  _setParentSelection: function() {
    var e = this;
    B(this._dataStructure, function(t, i) {
      var n = e.options.dataConverter.getParentNode(i);
      n && i.internalFields.parentKey !== e.options.rootValue && e._iterateParents(i, function(r) {
        var a = e._calculateSelectedState(r);
        e._setFieldState(r, jr, a);
      });
    });
  },
  _setParentExpansion: function() {
    var e = this;
    B(this._dataStructure, function(t, i) {
      i.internalFields.expanded && e._updateOneBranch(i.internalFields.key);
    });
  },
  _updateOneBranch: function(e) {
    var t = this, i = this.getNodeByKey(e);
    t._iterateParents(i, function(n) {
      t._setFieldState(n, to, !0);
    });
  },
  _iterateChildren: function(e, t, i, n) {
    if (ce(i)) {
      var r = this, a = e.internalFields.key;
      n = n || [], n.indexOf(a) === -1 && (n.push(a), B(e.internalFields.childrenKeys, function(o, s) {
        var l = r.getNodeByKey(s);
        i(l), l.internalFields.childrenKeys.length && t && r._iterateChildren(l, t, i, n);
      }));
    }
  },
  _iterateParents: function(e, t, i) {
    if (!(e.internalFields.parentKey === this.options.rootValue || !ce(t))) {
      i = i || [];
      var n = e.internalFields.key;
      if (i.indexOf(n) === -1) {
        i.push(n);
        var r = this.options.dataConverter.getParentNode(e);
        r && (t(r), r.internalFields.parentKey !== this.options.rootValue && this._iterateParents(r, t, i));
      }
    }
  },
  _calculateSelectedState: function(e) {
    for (var t = e.internalFields.childrenKeys.length, i = 0, n = 0, r = !1, a = 0; a <= t - 1; a++) {
      var o = this.getNodeByKey(e.internalFields.childrenKeys[a]), s = o.internalFields.item.visible === !1, l = o.internalFields.selected;
      if (s) {
        n++;
        continue;
      }
      l ? i++ : l === void 0 && (i += 0.5);
    }
    return i && (r = i === t - n ? !0 : void 0), r;
  },
  _toggleChildrenSelection: function(e, t) {
    var i = this;
    this._iterateChildren(e, !0, function(n) {
      i._isNodeVisible(n) && i._setFieldState(n, jr, t);
    });
  },
  _setFieldState: function(e, t, i) {
    e.internalFields[t] !== i && (e.internalFields[t] = i, e.internalFields.publicNode && (e.internalFields.publicNode[t] = i), this.options.dataAccessors.setters[t](e.internalFields.item, i), this.options.onNodeChanged(e));
  },
  _markChildren: function(e) {
    var t = this;
    B(e, function(i, n) {
      var r = t.getIndexByKey(n), a = t.getNodeByKey(n);
      t._dataStructure[r] = 0, a.internalFields.childrenKeys.length && t._markChildren(a.internalFields.childrenKeys);
    });
  },
  _removeNode: function(e) {
    var t = this.getNodeByKey(e);
    this._dataStructure[this.getIndexByKey(e)] = 0, this._markChildren(t.internalFields.childrenKeys);
    var i = this, n = 0, r = T([], this._dataStructure);
    B(r, function(a, o) {
      o || (i._dataStructure.splice(a - n, 1), n++);
    });
  },
  _addNode: function(e) {
    var t = this.options.dataConverter, i = t._convertItemToNode(e, this.options.dataAccessors.getters.parentKey(e));
    this._dataStructure = this._dataStructure.concat(i), this._initialDataStructure = this._initialDataStructure.concat(i), t._dataStructure = t._dataStructure.concat(i);
  },
  _updateFields: function() {
    this.options.dataConverter.updateChildrenKeys(), this._updateSelection(), this._updateExpansion();
  },
  getSelectedNodesKeys: function() {
    return this._selectedNodesKeys;
  },
  getExpandedNodesKeys: function() {
    return this._expandedNodesKeys;
  },
  getData: function() {
    return this._dataStructure;
  },
  getFullData: function() {
    return this._initialDataStructure;
  },
  getNodeByItem: function(e) {
    var t = null;
    return B(this._dataStructure, function(i, n) {
      if (n.internalFields.item === e)
        return t = n, !1;
    }), t;
  },
  getNodesByItems: function(e) {
    var t = this, i = [];
    return B(e, function(n, r) {
      var a = t.getNodeByItem(r);
      a && i.push(a);
    }), i;
  },
  getNodeByKey: function(e, t) {
    return this._getByKey(t || this._getDataBySelectionMode(), e);
  },
  getTreeNodes: function() {
    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());
  },
  getItemsCount: function() {
    return this.options.dataConverter.getItemsCount();
  },
  getVisibleItemsCount: function() {
    return this.options.dataConverter.getVisibleItemsCount();
  },
  getPublicNode: function(e) {
    return e.internalFields.publicNode;
  },
  getRootNodes: function() {
    return this.getChildrenNodes(this.options.rootValue);
  },
  getChildrenNodes: function(e) {
    return ui(this._dataStructure).filter(["internalFields.parentKey", e]).toArray();
  },
  getIndexByKey: function(e) {
    return this.options.dataConverter.getIndexByKey(e);
  },
  addItem: function(e) {
    this._addNode(e), this._updateFields();
  },
  removeItem: function(e) {
    this._removeNode(e), this._updateFields();
  },
  toggleSelection: function(e, t, i) {
    var n = this._isSingleModeUnselect(t), r = this._getByKey(i || n ? this._initialDataStructure : this._dataStructure, e);
    this._setFieldState(r, jr, t), this.options.recursiveSelection && !i && (t ? this._setChildrenSelection() : this._toggleChildrenSelection(r, t), this._setParentSelection()), this._selectedNodesKeys = this._updateNodesKeysArray(jr);
  },
  _isSingleModeUnselect: function(e) {
    return !this.options.multipleSelection && !e;
  },
  toggleNodeDisabledState: function(e, t) {
    var i = this.getNodeByKey(e);
    this._setFieldState(i, oG, t);
  },
  toggleSelectAll: function(e) {
    if (x(e)) {
      var t = this, i = t._selectedNodesKeys[t._selectedNodesKeys.length - 1], n = t._isSingleModeUnselect(e) ? this._initialDataStructure : this._dataStructure;
      B(n, function(r, a) {
        t._isNodeVisible(a) && t._setFieldState(a, jr, e);
      }), t._selectedNodesKeys = t._updateNodesKeysArray(jr), !e && t.options.selectionRequired && t.toggleSelection(i, !0);
    }
  },
  isAllSelected: function() {
    return this.getSelectedNodesKeys().length ? this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? !0 : void 0 : !1;
  },
  toggleExpansion: function(e, t) {
    var i = this.getNodeByKey(e);
    this._setFieldState(i, to, t), t && this._updateExpansion(e), this._expandedNodesKeys = this._updateNodesKeysArray(to);
  },
  isFiltered: function(e) {
    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [e]).length;
  },
  _createCriteria: function(e, t, i) {
    var n = [];
    return Array.isArray(e) ? (B(e, function(r, a) {
      n.push([a, i, t], "or");
    }), n.pop(), n) : [e, i, t];
  },
  _filterDataStructure: function(e, t) {
    var i = this.options.searchExpr || this.options.dataAccessors.getters.display, n = Ia.getOperationBySearchMode(this.options.searchMode), r = this._createCriteria(i, e, n);
    return t = t || this._initialDataStructure, ui(t).filter(r).toArray();
  },
  search: function(e) {
    var t = this, i = this._filterDataStructure(e), n = this.options.dataConverter;
    return function r(a, o) {
      for (var s = a.length; o < s; ) {
        var l = a[o];
        if (l.internalFields.parentKey === t.options.rootValue) {
          o++;
          continue;
        }
        var u = n.getParentNode(l);
        if (!u) {
          $e.log("W1007", l.internalFields.parentKey, l.internalFields.key), o++;
          continue;
        }
        if (u.internalFields.expanded || t._setFieldState(u, to, !0), a.includes(u)) {
          o++;
          continue;
        }
        a.splice(o, 0, u), r(a, o);
      }
    }(i, 0), this.options.sort && (i = Qn.queryByOptions(ui(i), {
      sort: this.options.sort
    }).toArray()), n._indexByKey = {}, B(i, function(r, a) {
      a.internalFields.childrenKeys = [], n._indexByKey[a.internalFields.key] = r;
    }), n._dataStructure = i, n.setChildrenKeys(), n._dataStructure;
  }
}), lG = "dx-state-invisible", uG = "dx-state-disabled", dG = "dx-item-content-placeholder", cG = function(e, t, i) {
  var n = function(a) {
    r !== a && (i(a, r), r = a);
  }, r;
  return {
    dispose: e(t, n),
    force: function() {
      n(t());
    }
  };
}, Na = ze.inherit({
  ctor: function(e, t, i) {
    this._$element = e, this._options = t, this._rawData = i, bw(e, this, this._dispose), this._render();
  },
  _render: function() {
    var e = g("<div>").addClass(dG);
    this._$element.append(e), this._watchers = [], this._renderWatchers();
  },
  _renderWatchers: function() {
    this._startWatcher("disabled", this._renderDisabled.bind(this)), this._startWatcher("visible", this._renderVisible.bind(this));
  },
  _startWatcher: function(e, t) {
    var i = this._rawData, n = this._options.fieldGetter(e), r = cG(this._options.watchMethod(), function() {
      return n(i);
    }, function(a, o) {
      this._dirty = !0, t(a, o);
    }.bind(this));
    this._watchers.push(r);
  },
  setDataField: function() {
    if (this._dirty = !1, B(this._watchers, function(e, t) {
      t.force();
    }), this._dirty)
      return !0;
  },
  _renderDisabled: function(e, t) {
    this._$element.toggleClass(uG, !!e), this._updateOwnerFocus(e);
  },
  _updateOwnerFocus: function(e) {
    var t = this._options.owner;
    t && e && t._resetItemFocus(this._$element);
  },
  _renderVisible: function(e, t) {
    this._$element.toggleClass(lG, e !== void 0 && !e);
  },
  _dispose: function() {
    B(this._watchers, function(e, t) {
      t.dispose();
    });
  }
});
Na.getInstance = function(e) {
  return Sw(e, this);
};
var Ky = Math.abs, Dv = "dxhold", hG = 750, Uy = 5, pG = yc.inherit({
  start: function(e) {
    this._startEventData = _t(e), this._startTimer(e);
  },
  _startTimer: function(e) {
    var t = "timeout" in this ? this.timeout : hG;
    this._holdTimer = setTimeout(function() {
      this._requestAccept(e), this._fireEvent(Dv, e, {
        target: e.target
      }), this._forgetAccept();
    }.bind(this), t);
  },
  move: function(e) {
    this._touchWasMoved(e) && this._cancel(e);
  },
  _touchWasMoved: function(e) {
    var t = aa(this._startEventData, _t(e));
    return Ky(t.x) > Uy || Ky(t.y) > Uy;
  },
  end: function() {
    this._stopTimer();
  },
  _stopTimer: function() {
    clearTimeout(this._holdTimer);
  },
  cancel: function() {
    this._stopTimer();
  },
  dispose: function() {
    this._stopTimer();
  }
});
Ko({
  emitter: pG,
  bubble: !0,
  events: [Dv]
});
const Br = {
  name: Dv
};
var Av = "dxContexMenu", fG = oe("contextmenu", Av), gG = oe(Br.name, Av), Ov = "dxcontextmenu", _G = ze.inherit({
  setup: function(e) {
    var t = g(e);
    w.on(t, fG, this._contextMenuHandler.bind(this)), (xa || ve.isSimulator()) && w.on(t, gG, this._holdHandler.bind(this));
  },
  _holdHandler: function(e) {
    Ca(e) && !ve.isSimulator() || this._fireContextMenu(e);
  },
  _contextMenuHandler: function(e) {
    this._fireContextMenu(e);
  },
  _fireContextMenu: function(e) {
    return Vr({
      type: Ov,
      originalEvent: e
    });
  },
  teardown: function(e) {
    w.off(e, "." + Av);
  }
});
Wi(Ov, new _G());
var UD = Ov, vG = function(e, t, i, n, r) {
  var a, o = ((s, l, u) => l(() => s, u))(e, t, function(s) {
    if (a && a(), Ps(s)) {
      r(s);
      return;
    }
    a = function(l, u, d, c, h) {
      var p = {}, f = d.slice(), v = d.map(function(m) {
        var C = c[m];
        return u(C ? () => C(l) : () => l[m], function(b) {
          if (p[m] = b, f.length) {
            var A = f.indexOf(m);
            A >= 0 && f.splice(A, 1);
          }
          f.length || h(p);
        });
      });
      return function() {
        v.forEach((m) => m());
      };
    }(s, t, i, n, r);
  });
  return function() {
    a && a(), o && o();
  };
};
class $a extends La {
  constructor(t, i, n, r) {
    super(), this._render = t, this._fields = i, this._fieldsMap = r || {}, this._watchMethod = n;
  }
  _renderCore(t) {
    var i = g(t.container), n = vG(t.model, this._watchMethod, this._fields, this._fieldsMap, (r) => {
      i.empty(), this._render(i, r, t.model);
    });
    return w.on(i, Sn, n), i.contents();
  }
}
var mG = "dx-collection", xu = "dx-item", jy = "-content", qy = "dx-item-content-placeholder", CG = "dxItemData", xG = "dxItemIndex", yG = "tmpl-", bG = "dxItem", SG = "dx-item-selected", EG = "dx-item-response-wait", wG = "dx-empty-collection", Xy = "dx-template-wrapper", IG = /^([^.]+\[\d+\]\.)+([\w.]+)$/, TG = "item", yp = "up", bp = "down", Yy = "left", Zy = "right", DG = "pageup", AG = "pagedown", Qy = "last", Jy = "first", jD = Mt.inherit({
  _activeStateUnit: "." + xu,
  _supportedKeys: function() {
    var e = function(i) {
      var n = g(this.option("focusedElement"));
      n.length && this._itemClickHandler(T({}, i, {
        target: n.get(0),
        currentTarget: n.get(0)
      }));
    }, t = function(i, n) {
      Pt(n) || (n.preventDefault(), n.stopPropagation(), this._moveFocus(i, n));
    };
    return T(this.callBase(), {
      space: function(i) {
        i.preventDefault(), e.call(this, i);
      },
      enter: e,
      leftArrow: t.bind(this, Yy),
      rightArrow: t.bind(this, Zy),
      upArrow: t.bind(this, yp),
      downArrow: t.bind(this, bp),
      pageUp: t.bind(this, yp),
      pageDown: t.bind(this, bp),
      home: t.bind(this, Jy),
      end: t.bind(this, Qy)
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      selectOnFocus: !1,
      loopItemFocus: !0,
      items: [],
      itemTemplate: "item",
      onItemRendered: null,
      onItemClick: null,
      onItemHold: null,
      itemHoldTimeout: 750,
      onItemContextMenu: null,
      onFocusedItemChanged: null,
      noDataText: q.format("dxCollectionWidget-noDataText"),
      encodeNoDataText: !1,
      dataSource: null,
      _dataController: null,
      _itemAttributes: {},
      itemTemplateProperty: "template",
      focusOnSelectedItem: !0,
      focusedElement: null,
      displayExpr: void 0,
      disabledExpr: function(e) {
        return e ? e.disabled : void 0;
      },
      visibleExpr: function(e) {
        return e ? e.visible : void 0;
      }
    });
  },
  _init: function() {
    this._compileDisplayGetter(), this._initDataController(), this.callBase(), this._cleanRenderedItems(), this._refreshDataSource();
  },
  _compileDisplayGetter: function() {
    var e = this.option("displayExpr");
    this._displayGetter = e ? tt(this.option("displayExpr")) : void 0;
  },
  _initTemplates: function() {
    this._initItemsFromMarkup(), this._initDefaultItemTemplate(), this.callBase();
  },
  _getAnonymousTemplateName: function() {
    return TG;
  },
  _initDefaultItemTemplate: function() {
    var e = this._getFieldsMap();
    this._templateManager.addDefaultTemplates({
      item: new $a(function(t, i) {
        Me(i) ? this._prepareDefaultItemTemplate(i, t) : (e && ce(e.text) && (i = e.text(i)), t.text(String(ct(i, ""))));
      }.bind(this), this._getBindableFields(), this.option("integrationOptions.watchMethod"), e)
    });
  },
  _getBindableFields: function() {
    return ["text", "html"];
  },
  _getFieldsMap: function() {
    if (this._displayGetter)
      return {
        text: this._displayGetter
      };
  },
  _prepareDefaultItemTemplate: function(e, t) {
    x(e.text) && t.text(e.text), x(e.html) && t.html(e.html);
  },
  _initItemsFromMarkup: function() {
    var e = Ow(this.$element(), bG);
    if (!(!e.length || this.option("items").length)) {
      var t = e.map((i) => {
        var {
          element: n,
          options: r
        } = i, a = /\S/.test(n.innerHTML) && !r.template;
        return a ? r.template = this._prepareItemTemplate(n) : g(n).remove(), r;
      });
      this.option("items", t);
    }
  },
  _prepareItemTemplate: function(e) {
    var t = yG + new Ot(), i = g(e).detach().clone().removeAttr("data-options").addClass(Xy);
    return this._saveTemplate(t, i), t;
  },
  _dataSourceOptions: function() {
    return {
      paginate: !1
    };
  },
  _cleanRenderedItems: function() {
    this._renderedItemsCount = 0;
  },
  _focusTarget: function() {
    return this.$element();
  },
  _focusInHandler: function(e) {
    if (this.callBase.apply(this, arguments), !!this._isFocusTarget(e.target)) {
      var t = g(this.option("focusedElement"));
      if (t.length)
        this._setFocusedItem(t);
      else {
        var i = this._getActiveItem();
        i.length && this.option("focusedElement", Ie(i));
      }
    }
  },
  _focusOutHandler: function() {
    this.callBase.apply(this, arguments);
    var e = g(this.option("focusedElement"));
    this._updateFocusedItemState(e, !1);
  },
  _getActiveItem: function(e) {
    var t = g(this.option("focusedElement"));
    if (t.length)
      return t;
    var i = this.option("focusOnSelectedItem") ? this.option("selectedIndex") : 0, n = this._getActiveElement(), r = n.length - 1;
    return i < 0 && (i = e ? r : 0), n.eq(i);
  },
  _moveFocus: function(e) {
    var t = this._getAvailableItems(), i;
    switch (e) {
      case DG:
      case yp:
        i = this._prevItem(t);
        break;
      case AG:
      case bp:
        i = this._nextItem(t);
        break;
      case Zy:
        i = this.option("rtlEnabled") ? this._prevItem(t) : this._nextItem(t);
        break;
      case Yy:
        i = this.option("rtlEnabled") ? this._nextItem(t) : this._prevItem(t);
        break;
      case Jy:
        i = t.first();
        break;
      case Qy:
        i = t.last();
        break;
      default:
        return !1;
    }
    i.length !== 0 && this.option("focusedElement", Ie(i));
  },
  _getVisibleItems: function(e) {
    return e = e || this._itemElements(), e.filter(":visible");
  },
  _getAvailableItems: function(e) {
    return this._getVisibleItems(e).not(".dx-state-disabled");
  },
  _prevItem: function(e) {
    var t = this._getActiveItem(), i = e.index(t), n = e.last(), r = g(e[i - 1]), a = this.option("loopItemFocus");
    return r.length === 0 && a && (r = n), r;
  },
  _nextItem: function(e) {
    var t = this._getActiveItem(!0), i = e.index(t), n = e.first(), r = g(e[i + 1]), a = this.option("loopItemFocus");
    return r.length === 0 && a && (r = n), r;
  },
  _selectFocusedItem: function(e) {
    this.selectItem(e);
  },
  _updateFocusedItemState: function(e, t, i) {
    var n = g(e);
    n.length && (this._refreshActiveDescendant(), this._refreshItemId(n, i), this._toggleFocusClass(t, n)), this._updateParentActiveDescendant();
  },
  _refreshActiveDescendant: function(e) {
    this.setAria("activedescendant", x(this.option("focusedElement")) ? this.getFocusedItemId() : null, e);
  },
  _refreshItemId: function(e, t) {
    !t && this.option("focusedElement") ? this.setAria("id", this.getFocusedItemId(), e) : this.setAria("id", null, e);
  },
  _setFocusedItem: function(e) {
    !e || !e.length || (this._updateFocusedItemState(e, !0), this.onFocusedItemChanged(this.getFocusedItemId()), this.option("selectOnFocus") && this._selectFocusedItem(e));
  },
  _findItemElementByItem: function(e) {
    var t = g(), i = this;
    return this.itemElements().each(function() {
      var n = g(this);
      if (n.data(i._itemDataKey()) === e)
        return t = n, !1;
    }), t;
  },
  _getIndexByItem: function(e) {
    return this.option("items").indexOf(e);
  },
  _itemOptionChanged: function(e, t, i, n) {
    var r = this._findItemElementByItem(e);
    if (r.length) {
      this.constructor.ItemClass.getInstance(r).setDataField(t, i) || this._refreshItem(r, e);
      var a = t === "disabled" && i;
      a && this._resetItemFocus(r);
    }
  },
  _resetItemFocus(e) {
    e.is(this.option("focusedElement")) && this.option("focusedElement", null);
  },
  _refreshItem: function(e) {
    var t = this._getItemData(e), i = e.data(this._itemIndexKey());
    this._renderItem(this._renderedItemsCount + i, t, null, e);
  },
  _updateParentActiveDescendant: $,
  _optionChanged: function(e) {
    if (e.name === "items") {
      var t = e.fullName.match(IG);
      if (t && t.length) {
        var i = t[t.length - 1], n = e.fullName.replace("." + i, ""), r = this.option(n);
        this._itemOptionChanged(r, i, e.value, e.previousValue);
        return;
      }
    }
    switch (e.name) {
      case "items":
      case "_itemAttributes":
      case "itemTemplateProperty":
      case "useItemTextAsTitle":
        this._cleanRenderedItems(), this._invalidate();
        break;
      case "dataSource":
        this._refreshDataSource(), this._renderEmptyMessage();
        break;
      case "noDataText":
      case "encodeNoDataText":
        this._renderEmptyMessage();
        break;
      case "itemTemplate":
        this._invalidate();
        break;
      case "onItemRendered":
        this._createItemRenderAction();
        break;
      case "onItemClick":
        break;
      case "onItemHold":
      case "itemHoldTimeout":
        this._attachHoldEvent();
        break;
      case "onItemContextMenu":
        this._attachContextMenuEvent();
        break;
      case "onFocusedItemChanged":
        this.onFocusedItemChanged = this._createActionByOption("onFocusedItemChanged");
        break;
      case "selectOnFocus":
      case "loopItemFocus":
      case "focusOnSelectedItem":
        break;
      case "focusedElement":
        this._updateFocusedItemState(e.previousValue, !1, !0), this._setFocusedItem(g(e.value));
        break;
      case "displayExpr":
        this._compileDisplayGetter(), this._initDefaultItemTemplate(), this._invalidate();
        break;
      case "visibleExpr":
      case "disabledExpr":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  },
  _invalidate: function() {
    return this.option("focusedElement", null), this.callBase.apply(this, arguments);
  },
  _loadNextPage: function() {
    return this._expectNextPageLoading(), this._dataController.loadNextPage();
  },
  _expectNextPageLoading: function() {
    this._startIndexForAppendedItems = 0;
  },
  _expectLastItemLoading: function() {
    this._startIndexForAppendedItems = -1;
  },
  _forgetNextPageLoading: function() {
    this._startIndexForAppendedItems = null;
  },
  _dataSourceChangedHandler: function(e) {
    var t = this.option("items");
    this._initialized && t && this._shouldAppendItems() ? (this._renderedItemsCount = t.length, (!this._isLastPage() || this._startIndexForAppendedItems !== -1) && (this.option().items = t.concat(e.slice(this._startIndexForAppendedItems))), this._forgetNextPageLoading(), this._refreshContent()) : this.option("items", e.slice());
  },
  _refreshContent: function() {
    this._prepareContent(), this._renderContent();
  },
  _dataSourceLoadErrorHandler: function() {
    this._forgetNextPageLoading(), this.option("items", this.option("items"));
  },
  _shouldAppendItems: function() {
    return this._startIndexForAppendedItems != null && this._allowDynamicItemsAppend();
  },
  _allowDynamicItemsAppend: function() {
    return !1;
  },
  _clean: function() {
    this._cleanFocusState(), this._cleanItemContainer(), this._inkRipple && delete this._inkRipple, this._resetActiveState();
  },
  _cleanItemContainer: function() {
    g(this._itemContainer()).empty();
  },
  _dispose: function() {
    this.callBase(), clearTimeout(this._itemFocusTimeout);
  },
  _refresh: function() {
    this._cleanRenderedItems(), this.callBase.apply(this, arguments);
  },
  _itemContainer: function() {
    return this.$element();
  },
  _itemClass: function() {
    return xu;
  },
  _itemContentClass: function() {
    return this._itemClass() + jy;
  },
  _selectedItemClass: function() {
    return SG;
  },
  _itemResponseWaitClass: function() {
    return EG;
  },
  _itemSelector: function() {
    return "." + this._itemClass();
  },
  _itemDataKey: function() {
    return CG;
  },
  _itemIndexKey: function() {
    return xG;
  },
  _itemElements: function() {
    return this._itemContainer().find(this._itemSelector());
  },
  _initMarkup: function() {
    this.callBase(), this.onFocusedItemChanged = this._createActionByOption("onFocusedItemChanged"), this.$element().addClass(mG), this._prepareContent();
  },
  _prepareContent: bo(function() {
    this._renderContentImpl();
  }),
  _renderContent: function() {
    this._fireContentReadyAction();
  },
  _render: function() {
    this.callBase(), this._attachClickEvent(), this._attachHoldEvent(), this._attachContextMenuEvent();
  },
  _attachClickEvent: function() {
    var e = this._itemSelector(), t = oe(Xe, this.NAME), i = oe(je.down, this.NAME), n = this, r = new _i(function(a) {
      var o = a.event;
      n._itemPointerDownHandler(o);
    });
    w.off(this._itemContainer(), t, e), w.off(this._itemContainer(), i, e), w.on(this._itemContainer(), t, e, function(a) {
      this._itemClickHandler(a);
    }.bind(this)), w.on(this._itemContainer(), i, e, function(a) {
      r.execute({
        element: g(a.target),
        event: a
      });
    });
  },
  _itemClickHandler: function(e, t, i) {
    this._itemDXEventHandler(e, "onItemClick", t, i);
  },
  _itemPointerDownHandler: function(e) {
    this.option("focusStateEnabled") && (this._itemFocusHandler = function() {
      if (clearTimeout(this._itemFocusTimeout), this._itemFocusHandler = null, !e.isDefaultPrevented()) {
        var t = g(e.target), i = t.closest(this._itemElements()), n = this._closestFocusable(t);
        i.length && this._isFocusTarget(n == null ? void 0 : n.get(0)) && this.option("focusedElement", Ie(i));
      }
    }.bind(this), this._itemFocusTimeout = setTimeout(this._forcePointerDownFocus.bind(this)));
  },
  _closestFocusable: function(e) {
    if (e.is(Xf))
      return e;
    for (e = e.parent(); e.length && !ee.isDocument(e.get(0)) && !ee.isDocumentFragment(e.get(0)); ) {
      if (e.is(Xf))
        return e;
      e = e.parent();
    }
  },
  _forcePointerDownFocus: function() {
    this._itemFocusHandler && this._itemFocusHandler();
  },
  _updateFocusState: function() {
    this.callBase.apply(this, arguments), this._forcePointerDownFocus();
  },
  _attachHoldEvent: function() {
    var e = this._itemContainer(), t = this._itemSelector(), i = oe(Br.name, this.NAME);
    w.off(e, i, t), w.on(e, i, t, {
      timeout: this._getHoldTimeout()
    }, this._itemHoldHandler.bind(this));
  },
  _getHoldTimeout: function() {
    return this.option("itemHoldTimeout");
  },
  _shouldFireHoldEvent: function() {
    return this.hasActionSubscription("onItemHold");
  },
  _itemHoldHandler: function(e) {
    this._shouldFireHoldEvent() ? this._itemDXEventHandler(e, "onItemHold") : e.cancel = !0;
  },
  _attachContextMenuEvent: function() {
    var e = this._itemContainer(), t = this._itemSelector(), i = oe(UD, this.NAME);
    w.off(e, i, t), w.on(e, i, t, this._itemContextMenuHandler.bind(this));
  },
  _shouldFireContextMenuEvent: function() {
    return this.hasActionSubscription("onItemContextMenu");
  },
  _itemContextMenuHandler: function(e) {
    this._shouldFireContextMenuEvent() ? this._itemDXEventHandler(e, "onItemContextMenu") : e.cancel = !0;
  },
  _renderContentImpl: function() {
    var e = this.option("items") || [];
    this._renderedItemsCount ? this._renderItems(e.slice(this._renderedItemsCount)) : this._renderItems(e);
  },
  _renderItems: function(e) {
    e.length && B(e, function(t, i) {
      this._renderItem(this._renderedItemsCount + t, i);
    }.bind(this)), this._renderEmptyMessage();
  },
  _renderItem: function(e, t, i, n) {
    var r, a = (r = e == null ? void 0 : e.item) !== null && r !== void 0 ? r : e;
    i = i || this._itemContainer();
    var o = this._renderItemFrame(a, t, i, n);
    this._setElementData(o, t, a), o.attr(this.option("_itemAttributes")), this._attachItemClickEvent(t, o);
    var s = this._getItemContent(o), l = this._renderItemContent({
      index: a,
      itemData: t,
      container: Ie(s),
      contentClass: this._itemContentClass(),
      defaultTemplateName: this.option("itemTemplate")
    }), u = this;
    return ge(l).done(function(d) {
      u._postprocessRenderItem({
        itemElement: o,
        itemContent: d,
        itemData: t,
        itemIndex: a
      }), u._executeItemRenderAction(e, t, Ie(o));
    }), o;
  },
  _getItemContent: function(e) {
    var t = e.find("." + qy);
    return t.removeClass(qy), t;
  },
  _attachItemClickEvent: function(e, t) {
    !e || !e.onClick || w.on(t, Xe, function(i) {
      this._itemEventHandlerByHandler(t, e.onClick, {
        event: i
      });
    }.bind(this));
  },
  _renderItemContent: function(e) {
    var t = this._getItemTemplateName(e), i = this._getTemplate(t);
    this._addItemContentClasses(e);
    var n = g(this._createItemByTemplate(i, e));
    return n.hasClass(Xy) ? this._renderItemContentByNode(e, n) : e.container;
  },
  _renderItemContentByNode: function(e, t) {
    return g(e.container).replaceWith(t), e.container = Ie(t), this._addItemContentClasses(e), t;
  },
  _addItemContentClasses: function(e) {
    var t = [xu + jy, e.contentClass];
    g(e.container).addClass(t.join(" "));
  },
  _appendItemToContainer: function(e, t, i) {
    t.appendTo(e);
  },
  _renderItemFrame: function(e, t, i, n) {
    var r = g("<div>");
    if (new this.constructor.ItemClass(r, this._itemOptions(), t || {}), n && n.length ? n.replaceWith(r) : this._appendItemToContainer.call(this, i, r, e), this.option("useItemTextAsTitle")) {
      var a = this._displayGetter ? this._displayGetter(t) : t;
      r.attr("title", a);
    }
    return r;
  },
  _itemOptions: function() {
    var e = this;
    return {
      watchMethod: function() {
        return e.option("integrationOptions.watchMethod");
      },
      owner: e,
      fieldGetter: function(t) {
        var i = e.option(t + "Expr"), n = tt(i);
        return n;
      }
    };
  },
  _postprocessRenderItem: $,
  _executeItemRenderAction: function(e, t, i) {
    this._getItemRenderAction()({
      itemElement: i,
      itemIndex: e,
      itemData: t
    });
  },
  _setElementData: function(e, t, i) {
    e.addClass([xu, this._itemClass()].join(" ")).data(this._itemDataKey(), t).data(this._itemIndexKey(), i);
  },
  _createItemRenderAction: function() {
    return this._itemRenderAction = this._createActionByOption("onItemRendered", {
      element: this.element(),
      excludeValidators: ["disabled", "readOnly"],
      category: "rendering"
    });
  },
  _getItemRenderAction: function() {
    return this._itemRenderAction || this._createItemRenderAction();
  },
  _getItemTemplateName: function(e) {
    var t = e.itemData, i = e.templateProperty || this.option("itemTemplateProperty"), n = t && t[i];
    return n || e.defaultTemplateName;
  },
  _createItemByTemplate: function(e, t) {
    return e.render({
      model: t.itemData,
      container: t.container,
      index: t.index,
      onRendered: this._onItemTemplateRendered(e, t)
    });
  },
  _onItemTemplateRendered: function() {
    return $;
  },
  _emptyMessageContainer: function() {
    return this._itemContainer();
  },
  _renderEmptyMessage: function(e) {
    e = e || this.option("items");
    var t = this.option("noDataText"), i = !t || e && e.length || this._dataController.isLoading();
    i && this._$noData && (this._$noData.remove(), this._$noData = null, this.setAria("label", void 0)), i || (this._$noData = this._$noData || g("<div>").addClass("dx-empty-message"), this._$noData.appendTo(this._emptyMessageContainer()), this.option("encodeNoDataText") ? this._$noData.text(t) : this._$noData.html(t), this.setAria("label", t)), this.$element().toggleClass(wG, !i);
  },
  _itemDXEventHandler: function(e, t, i, n) {
    this._itemEventHandler(e.target, t, T(i, {
      event: e
    }), n);
  },
  _itemEventHandler: function(e, t, i, n) {
    var r = this._createActionByOption(t, T({
      validatingTargetName: "itemElement"
    }, n));
    return this._itemEventHandlerImpl(e, r, i);
  },
  _itemEventHandlerByHandler: function(e, t, i, n) {
    var r = this._createAction(t, T({
      validatingTargetName: "itemElement"
    }, n));
    return this._itemEventHandlerImpl(e, r, i);
  },
  _itemEventHandlerImpl: function(e, t, i) {
    var n = this._closestItemElement(g(e)), r = T({}, i);
    return t(T(i, this._extendActionArgs(n), r));
  },
  _extendActionArgs: function(e) {
    return {
      itemElement: Ie(e),
      itemIndex: this._itemElements().index(e),
      itemData: this._getItemData(e)
    };
  },
  _closestItemElement: function(e) {
    return g(e).closest(this._itemSelector());
  },
  _getItemData: function(e) {
    return g(e).data(this._itemDataKey());
  },
  _getSummaryItemsWidth: function(e, t) {
    var i = 0;
    return e && B(e, function(n, r) {
      i += Ge(r, t || !1);
    }), i;
  },
  getFocusedItemId: function() {
    return this._focusedItemId || (this._focusedItemId = "dx-" + new Ot()), this._focusedItemId;
  },
  itemElements: function() {
    return this._itemElements();
  },
  itemsContainer: function() {
    return this._itemContainer();
  }
}).include(Rc);
jD.ItemClass = Na;
var ci = ze.abstract, OG = ze.inherit({
  ctor: function(e) {
    this._collectionWidget = e;
  },
  getIndexByItemData: ci,
  getItemDataByIndex: ci,
  getKeysByItems: ci,
  getItemsByKeys: ci,
  itemsGetter: ci,
  getKeyByIndex: function(e) {
    var t = this._denormalizeItemIndex(e);
    return this.getKeysByItems([this.getItemDataByIndex(t)])[0];
  },
  _equalKeys: function(e, t) {
    return this._collectionWidget._isKeySpecified() ? et(e, t) : e === t;
  },
  beginCache: function() {
    this._cache = {};
  },
  endCache: function() {
    this._cache = null;
  },
  getIndexByKey: ci,
  getNormalizedIndex: function(e) {
    return this._isNormalizedItemIndex(e) ? e : this._isItemIndex(e) ? this._normalizeItemIndex(e) : this._isNode(e) ? this._getNormalizedItemIndex(e) : this._normalizeItemIndex(this.getIndexByItemData(e));
  },
  getIndex: function(e) {
    return this._isNormalizedItemIndex(e) ? this._denormalizeItemIndex(e) : this._isItemIndex(e) ? e : this._isNode(e) ? this._denormalizeItemIndex(this._getNormalizedItemIndex(e)) : this.getIndexByItemData(e);
  },
  getItemElement: function(e) {
    if (this._isNormalizedItemIndex(e))
      return this._getItemByNormalizedIndex(e);
    if (this._isItemIndex(e))
      return this._getItemByNormalizedIndex(this._normalizeItemIndex(e));
    if (this._isNode(e))
      return g(e);
    var t = this._normalizeItemIndex(this.getIndexByItemData(e));
    return this._getItemByNormalizedIndex(t);
  },
  _isNode: (e) => ee.isNode(e && wi(e) ? e.get(0) : e),
  deleteItemAtIndex: ci,
  itemPlacementFunc: function(e, t) {
    return this._itemsFromSameParent(e, t) && e < t ? "after" : "before";
  },
  moveItemAtIndexToIndex: ci,
  _isNormalizedItemIndex: function(e) {
    return typeof e == "number" && Math.round(e) === e;
  },
  _isItemIndex: ci,
  _getNormalizedItemIndex: ci,
  _normalizeItemIndex: ci,
  _denormalizeItemIndex: ci,
  _getItemByNormalizedIndex: ci,
  _itemsFromSameParent: ci
}), Rv = OG.inherit({
  _getPlainItems: function() {
    return this._collectionWidget.option("items") || [];
  },
  getIndexByItemData: function(e) {
    var t = this._collectionWidget.keyOf.bind(this._collectionWidget);
    return t ? this.getIndexByKey(t(e)) : this._getPlainItems().indexOf(e);
  },
  getItemDataByIndex: function(e) {
    return this._getPlainItems()[e];
  },
  deleteItemAtIndex: function(e) {
    this._getPlainItems().splice(e, 1);
  },
  itemsGetter: function() {
    return this._getPlainItems();
  },
  getKeysByItems: function(e) {
    var t = this._collectionWidget.keyOf.bind(this._collectionWidget), i = e;
    if (t) {
      i = [];
      for (var n = 0; n < e.length; n++)
        i.push(t(e[n]));
    }
    return i;
  },
  getIndexByKey: function(e) {
    var t = this._cache, i = t && t.keys || this.getKeysByItems(this._getPlainItems());
    if (t && !t.keys && (t.keys = i), typeof e == "object") {
      for (var n = 0, r = i.length; n < r; n++)
        if (this._equalKeys(e, i[n]))
          return n;
    } else
      return i.indexOf(e);
    return -1;
  },
  getItemsByKeys: function(e, t) {
    return (t || e).slice();
  },
  moveItemAtIndexToIndex: function(e, t) {
    var i = this._getPlainItems(), n = i[e];
    i.splice(e, 1), i.splice(t, 0, n);
  },
  _isItemIndex: function(e) {
    return typeof e == "number" && Math.round(e) === e;
  },
  _getNormalizedItemIndex: function(e) {
    return this._collectionWidget._itemElements().index(e);
  },
  _normalizeItemIndex: function(e) {
    return e;
  },
  _denormalizeItemIndex: function(e) {
    return e;
  },
  _getItemByNormalizedIndex: function(e) {
    return e > -1 ? this._collectionWidget._itemElements().eq(e) : null;
  },
  _itemsFromSameParent: function() {
    return !0;
  }
});
const qD = ze.inherit({
  ctor: function(e) {
    this.options = e, this._setOption("disabledItemKeys", []), this._clearItemKeys();
  },
  _clearItemKeys: function() {
    this._setOption("addedItemKeys", []), this._setOption("removedItemKeys", []), this._setOption("removedItems", []), this._setOption("addedItems", []);
  },
  validate: $,
  _setOption: function(e, t) {
    this.options[e] = t;
  },
  onSelectionChanged: function() {
    var e = this.options.addedItemKeys, t = this.options.removedItemKeys, i = this.options.addedItems, n = this.options.removedItems, r = this.options.selectedItems, a = this.options.selectedItemKeys, o = this.options.onSelectionChanged || $;
    this._clearItemKeys(), o({
      selectedItems: r,
      selectedItemKeys: a,
      addedItemKeys: e,
      removedItemKeys: t,
      addedItems: i,
      removedItems: n
    });
  },
  equalKeys: function(e, t) {
    return this.options.equalByReference && De(e) && De(t) ? e === t : et(e, t);
  },
  getSelectableItems: function(e) {
    return e.filter(function(t) {
      return !(t != null && t.disabled);
    });
  },
  _clearSelection: function(e, t, i, n) {
    return e = e || [], e = Array.isArray(e) ? e : [e], this.validate(), this.selectedItemKeys(e, t, i, n);
  },
  _removeTemplateProperty: function(e) {
    return Array.isArray(e) ? e.map((t) => this._removeTemplateProperty(t)) : (De(e) && delete e.template, e);
  },
  _loadFilteredData: function(e, t, i, n) {
    var r = encodeURI(JSON.stringify(this._removeTemplateProperty(e))).length, a = this.options.maxFilterLengthInRequest && r > this.options.maxFilterLengthInRequest, o = new U(), s = {
      filter: a ? void 0 : e,
      select: a ? this.options.dataFields() : i || this.options.dataFields()
    };
    return e && e.length === 0 ? o.resolve([]) : this.options.load(s).done(function(l) {
      var u = Me(l) ? l.data : l;
      t && !n ? u = u.filter(t) : a && (u = ui(u).filter(e).toArray()), o.resolve(u);
    }).fail(o.reject.bind(o)), o;
  },
  updateSelectedItemKeyHash: function(e) {
    for (var t = 0; t < e.length; t++) {
      var i = xn(e[t]);
      if (!De(i)) {
        this.options.keyHashIndices[i] = this.options.keyHashIndices[i] || [];
        var n = this.options.keyHashIndices[i];
        n.push(t);
      }
    }
  },
  _isAnyItemSelected: function(e) {
    for (var t = 0; t < e.length; t++)
      if (this.options.isItemSelected(e[t]))
        return;
    return !1;
  },
  _getFullSelectAllState: function() {
    var e = this.options.plainItems(), t = this.options.filter(), i = this.options.ignoreDisabledItems ? this.options.selectedItems : this.options.selectedItems.filter((a) => !(a != null && a.disabled));
    t && (i = ui(i).filter(t).toArray());
    var n = i.length, r = e.length - this.getSelectableItems(e).length;
    if (!n)
      return this._isAnyItemSelected(e);
    if (n >= this.options.totalCount() - r)
      return !0;
  },
  _getVisibleSelectAllState: function() {
    for (var e = this.getSelectableItems(this.options.plainItems()), t = !1, i = !1, n = 0; n < e.length; n++) {
      var r = e[n], a = this.options.getItemData(r), o = this.options.keyOf(a);
      this.options.isSelectableItem(r) && (this.isItemKeySelected(o) ? t = !0 : i = !0);
    }
    return t ? i ? void 0 : !0 : !1;
  }
}), RG = qD.inherit({
  getSelectedItems: function() {
    return this._loadFilteredData(this.options.selectionFilter);
  },
  getSelectedItemKeys: function() {
    var e = new U(), t = this, i = this.options.key(), n = Te(i) ? [i] : i;
    return this._loadFilteredData(this.options.selectionFilter, null, n).done(function(r) {
      var a = r.map(function(o) {
        return t.options.keyOf(o);
      });
      e.resolve(a);
    }).fail(e.reject), e.promise();
  },
  selectedItemKeys: function(e, t, i, n) {
    if (n) {
      var r = this.options.filter(), a = !r || JSON.stringify(r) === JSON.stringify(this.options.selectionFilter) && i;
      a ? this._setOption("selectionFilter", i ? [] : null) : this._addSelectionFilter(i, r, n);
    } else {
      t || this._setOption("selectionFilter", []);
      for (var o = 0; o < e.length; o++)
        i ? this.removeSelectedItem(e[o]) : this.addSelectedItem(e[o], n, !t);
    }
    return this.onSelectionChanged(), new U().resolve();
  },
  setSelectedItems: function(e) {
    this._setOption("selectionFilter", null);
    for (var t = 0; t < e.length; t++)
      this.addSelectedItem(e[t]);
  },
  isItemDataSelected: function(e) {
    return this.isItemKeySelected(e);
  },
  isItemKeySelected: function(e) {
    var t = this.options.selectionFilter;
    return t ? !!ui([e]).filter(t).toArray().length : !0;
  },
  _getKeyExpr: function() {
    var e = this.options.key();
    return Array.isArray(e) && e.length === 1 ? e[0] : e;
  },
  _normalizeKey: function(e) {
    var t = this.options.key();
    return Array.isArray(t) && t.length === 1 ? e[t[0]] : e;
  },
  _getFilterByKey: function(e) {
    var t = this._getKeyExpr(), i = [t, "=", this._normalizeKey(e)];
    if (Array.isArray(t)) {
      i = [];
      for (var n = 0; n < t.length; n++)
        i.push([t[n], "=", e[t[n]]]), n !== t.length - 1 && i.push("and");
    }
    return i;
  },
  addSelectedItem: function(e, t, i) {
    var n = this._getFilterByKey(e);
    this._addSelectionFilter(!1, n, t, i);
  },
  removeSelectedItem: function(e) {
    var t = this._getFilterByKey(e);
    this._addSelectionFilter(!0, t);
  },
  validate: function() {
    var e = this.options.key;
    if (e && e() === void 0)
      throw $e.Error("E1042", "Deferred selection");
  },
  _findSubFilter: function(e, t) {
    if (!e)
      return -1;
    for (var i = JSON.stringify(t), n = 0; n < e.length; n++) {
      var r = e[n];
      if (r && JSON.stringify(r) === i)
        return n;
    }
    return -1;
  },
  _isLastSubFilter: function(e, t) {
    return e && t ? this._findSubFilter(e, t) === e.length - 1 || this._findSubFilter([e], t) === 0 : !1;
  },
  _addFilterOperator: function(e, t) {
    return e.length > 1 && Te(e[1]) && e[1] !== t && (e = [e]), e.length && e.push(t), e;
  },
  _denormalizeFilter: function(e) {
    return e && Te(e[0]) && (e = [e]), e;
  },
  _isOnlyNegativeFiltersLeft: function(e) {
    return e.every((t, i) => i % 2 === 0 ? Array.isArray(t) && t[0] === "!" : t === "and");
  },
  _addSelectionFilter: function(e, t, i, n) {
    var r, a = e ? ["!", t] : t, o = e ? "and" : "or", s = !0, l = this.options.selectionFilter || [];
    if (l = this._denormalizeFilter(l), (r = l) !== null && r !== void 0 && r.length && !n) {
      var u = this._removeSameFilter(l, t, e, i), d = this._removeSameFilter(l, t, !e), c = e && (u !== -1 || d !== -1) && this._isOnlyNegativeFiltersLeft(l);
      c && (l = []);
      var h = this._isKeyFilter(t) && this._hasKeyFiltersOnlyStartingFromIndex(l, d);
      s = t.length && !h;
    }
    s && (l = this._addFilterOperator(l, o), l.push(a)), l = this._normalizeFilter(l), this._setOption("selectionFilter", !e && !l.length ? null : l);
  },
  _normalizeFilter: function(e) {
    return e && e.length === 1 && (e = e[0]), e;
  },
  _removeFilterByIndex: function(e, t, i) {
    var n = e[1];
    t > 0 ? e.splice(t - 1, 2) : e.splice(t, 2), i && n === "and" && e.splice(0, e.length);
  },
  _isSimpleKeyFilter: function(e, t) {
    return e.length === 3 && e[0] === t && e[1] === "=";
  },
  _isKeyFilter: function(e) {
    if (e.length === 2 && e[0] === "!")
      return this._isKeyFilter(e[1]);
    var t = this._getKeyExpr();
    if (Array.isArray(t)) {
      if (e.length !== 2 * t.length - 1)
        return !1;
      for (var i = 0; i < t.length; i++)
        if (i > 0 && e[2 * i - 1] !== "and" || !this._isSimpleKeyFilter(e[2 * i], t[i]))
          return !1;
      return !0;
    }
    return this._isSimpleKeyFilter(e, t);
  },
  _hasKeyFiltersOnlyStartingFromIndex: function(e, t) {
    if (t >= 0) {
      for (var i = t; i < e.length; i++)
        if (typeof e[i] != "string" && !this._isKeyFilter(e[i]))
          return !1;
      return !0;
    }
    return !1;
  },
  _removeSameFilter: function(e, t, i, n) {
    if (t = i ? ["!", t] : t, JSON.stringify(t) === JSON.stringify(e))
      return e.splice(0, e.length), 0;
    var r = this._findSubFilter(e, t);
    if (r >= 0)
      return this._removeFilterByIndex(e, r, n), r;
    for (var a = 0; a < e.length; a++)
      if (Array.isArray(e[a]) && e[a].length > 2) {
        var o = this._removeSameFilter(e[a], t, !1, n);
        if (o >= 0)
          return e[a].length ? e[a].length === 1 && (e[a] = e[a][0]) : this._removeFilterByIndex(e, a, n), o;
      }
    return -1;
  },
  getSelectAllState: function() {
    var e = this.options.filter(), t = this.options.selectionFilter;
    if (!t)
      return !0;
    if (!t.length)
      return !1;
    if (!(!e || !e.length)) {
      if (t = this._denormalizeFilter(t), this._isLastSubFilter(t, e))
        return !0;
      if (this._isLastSubFilter(t, ["!", e]))
        return !1;
    }
  }
});
var BG = function(e, t) {
  this.getLocalFilter = function(o, s, l, u) {
    return s = s === void 0 ? et : s, r.bind(this, s, o, l, u);
  }, this.getExpr = function(o) {
    if (o) {
      var s;
      return e.forEach(function(l, u) {
        s = s || [];
        var d;
        u > 0 && s.push(t ? "and" : "or"), Te(o) ? d = a(o, l) : d = function(c, h) {
          for (var p = [], f = 0, v = c.length; f < v; f++) {
            var m = c[f], C = h && h[m], b = a(m, C);
            if (!b)
              break;
            f > 0 && p.push(t ? "or" : "and"), p.push(b);
          }
          return p;
        }(o, l), s.push(d);
      }), s && s.length === 1 && (s = s[0]), s;
    }
  }, this.getCombinedFilter = function(o, s) {
    var l = this.getExpr(o), u = l;
    return t && s && (l ? (u = [], u.push(l), u.push(s)) : u = s), u;
  };
  var i, n = function(o, s, l) {
    return Array.isArray(l) ? o.map((u) => s(u)) : o;
  };
  function r(o, s, l, u, d) {
    var c = s(d), h, p;
    if (!l && (h = xn(c), !De(h))) {
      var f = function(v, m) {
        if (!i) {
          i = {};
          for (var C = n(e, v, m), b = 0; b < C.length; b++)
            i[xn(C[b])] = !0;
        }
        return i;
      }(s, u);
      return f[h] ? !t : !!t;
    }
    for (p = 0; p < e.length; p++)
      if (o(e[p], c))
        return !t;
    return !!t;
  }
  function a(o, s) {
    if (s !== void 0)
      return [o, t ? "<>" : "=", s];
  }
};
const kG = qD.inherit({
  ctor: function(e) {
    this.callBase(e), this._initSelectedItemKeyHash();
  },
  _initSelectedItemKeyHash: function() {
    this._setOption("keyHashIndices", this.options.equalByReference ? null : {});
  },
  getSelectedItemKeys: function() {
    return this.options.selectedItemKeys.slice(0);
  },
  getSelectedItems: function() {
    return this.options.selectedItems.slice(0);
  },
  _preserveSelectionUpdate: function(e, t) {
    var i = this.options.keyOf, n, r, a;
    if (i) {
      var o = t && e.length > 1 && !this.options.equalByReference;
      for (o && (n = {}), a = 0; a < e.length; a++) {
        var s = e[a], l = i(s);
        t ? (r = this.removeSelectedItem(l, n, s == null ? void 0 : s.disabled), n && r >= 0 && (n[r] = !0)) : this.addSelectedItem(l, s);
      }
      o && this._batchRemoveSelectedItems(n);
    }
  },
  _batchRemoveSelectedItems: function(e) {
    var t = this.options.selectedItemKeys.slice(0), i = this.options.selectedItems.slice(0);
    this.options.selectedItemKeys.length = 0, this.options.selectedItems.length = 0;
    for (var n = 0; n < t.length; n++)
      e[n] || (this.options.selectedItemKeys.push(t[n]), this.options.selectedItems.push(i[n]));
    this._initSelectedItemKeyHash(), this.updateSelectedItemKeyHash(this.options.selectedItemKeys);
  },
  _loadSelectedItemsCore: function(e, t, i, n) {
    var r = new U(), a = this.options.key();
    if (!e.length && !i)
      return r.resolve([]), r;
    if (i && t && !n)
      return r.resolve(this.getSelectedItems()), r;
    var o = new BG(e, i), s = o.getCombinedFilter(a, n), l = [];
    if (t) {
      var u = this.options.selectedItems;
      l = s && e.length !== u.length ? ui(u).filter(s).toArray() : u.slice(0);
    }
    var d = l.length ? l : this.options.plainItems(!0).filter(this.options.isSelectableItem).map(this.options.getItemData), c = o.getLocalFilter(this.options.keyOf, this.equalKeys.bind(this), this.options.equalByReference, a);
    return d = d.filter(c), l.length || !i && d.length === e.length ? r.resolve(d) : r = this._loadFilteredData(s, c, null, i), r;
  },
  _replaceSelectionUpdate: function(e) {
    var t = [], i = this.options.keyOf;
    if (i) {
      for (var n = 0; n < e.length; n++) {
        var r = e[n], a = i(r);
        t.push(a);
      }
      this.setSelectedItems(t, e);
    }
  },
  _warnOnIncorrectKeys: function(e) {
    for (var t = this.options.allowNullValue, i = 0; i < e.length; i++) {
      var n = e[i];
      (!t || n !== null) && !this.isItemKeySelected(n) && $e.log("W1002", n);
    }
  },
  _isMultiSelectEnabled: function() {
    var e = this.options.mode;
    return e === "all" || e === "multiple";
  },
  _requestInProgress: function() {
    var e;
    return ((e = this._lastLoadDeferred) === null || e === void 0 ? void 0 : e.state()) === "pending";
  },
  _concatRequestsItems: function(e, t, i, n) {
    var r, a = t ? e : [];
    return n ? r = n : r = uC(e, this.options.selectedItemKeys), {
      addedItems: i.added.concat(r),
      removedItems: i.removed.concat(a),
      keys: e
    };
  },
  _collectLastRequestData: function(e, t, i, n) {
    var r = t && i, a = {
      added: [],
      removed: []
    }, o = this._isMultiSelectEnabled(), s = o ? this._lastRequestData : {};
    return o && (this._shouldMergeWithLastRequest && (r ? (this._lastLoadDeferred.reject(), s = {}) : B$(e, this.options.selectedItemKeys) || (a.added = s.addedItems, a.removed = s.removedItems, t || this._lastLoadDeferred.reject())), s = this._concatRequestsItems(e, t, a, this._shouldMergeWithLastRequest ? void 0 : n)), s;
  },
  _updateKeysByLastRequestData: function(e, t, i) {
    var n = e;
    if (this._isMultiSelectEnabled() && this._shouldMergeWithLastRequest && !t && !i) {
      var r, a;
      n = uC(e.concat((r = this._lastRequestData) === null || r === void 0 ? void 0 : r.addedItems), (a = this._lastRequestData) === null || a === void 0 ? void 0 : a.removedItems), n = QF(n);
    }
    return n;
  },
  _loadSelectedItems: function(e, t, i, n) {
    var r = this, a = new U(), o = r.options.filter();
    return this._shouldMergeWithLastRequest = this._requestInProgress(), this._lastRequestData = this._collectLastRequestData(e, t, i, n), ge(r._lastLoadDeferred).always(function() {
      var s = r._updateKeysByLastRequestData(e, t, i);
      r._shouldMergeWithLastRequest = !1, r._loadSelectedItemsCore(s, t, i, o).done(a.resolve).fail(a.reject);
    }), r._lastLoadDeferred = a, a;
  },
  selectedItemKeys: function(e, t, i, n, r) {
    var a = this, o = a._loadSelectedItems(e, i, n, r);
    return o.done(function(s) {
      t ? a._preserveSelectionUpdate(s, i) : a._replaceSelectionUpdate(s), a.onSelectionChanged();
    }), o;
  },
  addSelectedItem: function(e, t) {
    if (x(t) && !this.options.ignoreDisabledItems && t.disabled) {
      this.options.disabledItemKeys.indexOf(e) === -1 && this.options.disabledItemKeys.push(e);
      return;
    }
    var i = this._getKeyHash(e);
    this._indexOfSelectedItemKey(i) === -1 && (!De(i) && this.options.keyHashIndices && (this.options.keyHashIndices[i] = [this.options.selectedItemKeys.length]), this.options.selectedItemKeys.push(e), this.options.addedItemKeys.push(e), this.options.addedItems.push(t), this.options.selectedItems.push(t));
  },
  _getSelectedIndexByKey: function(e, t) {
    for (var i = this.options.selectedItemKeys, n = 0; n < i.length; n++)
      if ((!t || !t[n]) && this.equalKeys(i[n], e))
        return n;
    return -1;
  },
  _getSelectedIndexByHash: function(e, t) {
    var i = this.options.keyHashIndices[e];
    return i && i.length > 1 && t && (i = i.filter(function(n) {
      return !t[n];
    })), i && i[0] >= 0 ? i[0] : -1;
  },
  _indexOfSelectedItemKey: function(e, t) {
    var i;
    return this.options.equalByReference ? i = this.options.selectedItemKeys.indexOf(e) : De(e) ? i = this._getSelectedIndexByKey(e, t) : i = this._getSelectedIndexByHash(e, t), i;
  },
  _shiftSelectedKeyIndices: function(e) {
    for (var t = e; t < this.options.selectedItemKeys.length; t++) {
      var i = this.options.selectedItemKeys[t], n = xn(i), r = this.options.keyHashIndices[n];
      if (r)
        for (var a = 0; a < r.length; a++)
          r[a] > e && r[a]--;
    }
  },
  removeSelectedItem: function(e, t, i) {
    if (!(!this.options.ignoreDisabledItems && i)) {
      var n = this._getKeyHash(e), r = !!t, a = this._indexOfSelectedItemKey(n, t);
      if (a < 0 || (this.options.removedItemKeys.push(e), this.options.removedItems.push(this.options.selectedItems[a]), r) || (this.options.selectedItemKeys.splice(a, 1), this.options.selectedItems.splice(a, 1), De(n) || !this.options.keyHashIndices))
        return a;
      var o = this.options.keyHashIndices[n];
      return o && (o.shift(), o.length || delete this.options.keyHashIndices[n], this._shiftSelectedKeyIndices(a)), a;
    }
  },
  _updateAddedItemKeys: function(e, t) {
    for (var i = 0; i < e.length; i++)
      this.isItemKeySelected(e[i]) || (this.options.addedItemKeys.push(e[i]), this.options.addedItems.push(t[i]));
  },
  _updateRemovedItemKeys: function(e, t, i) {
    for (var n = 0; n < t.length; n++)
      this.isItemKeySelected(t[n]) || (this.options.removedItemKeys.push(t[n]), this.options.removedItems.push(i[n]));
  },
  _isItemSelectionInProgress: function(e, t) {
    var i = t && this._lastRequestData && this._requestInProgress();
    if (i) {
      var n, r = (n = this._lastRequestData.addedItems) !== null && n !== void 0 ? n : [];
      return r.includes(e);
    } else
      return !1;
  },
  _getKeyHash: function(e) {
    return this.options.equalByReference ? e : xn(e);
  },
  setSelectedItems: function(e, t) {
    this._updateAddedItemKeys(e, t);
    var i = this.options.selectedItemKeys, n = this.options.selectedItems;
    this.options.equalByReference || (this._initSelectedItemKeyHash(), this.updateSelectedItemKeyHash(e)), this._setOption("selectedItemKeys", e), this._setOption("selectedItems", t), this._updateRemovedItemKeys(e, i, n);
  },
  isItemDataSelected: function(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = this.options.keyOf(e);
    return this.isItemKeySelected(i, t);
  },
  isItemKeySelected: function(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = this._isItemSelectionInProgress(e, t.checkPending);
    if (!i) {
      var n = this._getKeyHash(e), r = this._indexOfSelectedItemKey(n);
      i = r !== -1;
    }
    return i;
  },
  getSelectAllState: function(e) {
    return e ? this._getVisibleSelectAllState() : this._getFullSelectAllState();
  }
}), XD = ze.inherit({
  ctor: function(e) {
    this.options = T(this._getDefaultOptions(), e, {
      selectedItemKeys: e.selectedKeys || []
    }), this._selectionStrategy = this.options.deferred ? new RG(this.options) : new kG(this.options), this._focusedItemIndex = -1, this.options.equalByReference || this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys);
  },
  _getDefaultOptions: function() {
    return {
      allowNullValue: !1,
      deferred: !1,
      equalByReference: !1,
      mode: "multiple",
      selectedItems: [],
      selectionFilter: [],
      maxFilterLengthInRequest: 0,
      onSelectionChanged: $,
      key: $,
      keyOf: function(e) {
        return e;
      },
      load: function() {
        return new U().resolve([]);
      },
      totalCount: function() {
        return -1;
      },
      isSelectableItem: function() {
        return !0;
      },
      isItemSelected: function() {
        return !1;
      },
      getItemData: function(e) {
        return e;
      },
      dataFields: $,
      filter: $
    };
  },
  validate: function() {
    this._selectionStrategy.validate();
  },
  getSelectedItemKeys: function() {
    return this._selectionStrategy.getSelectedItemKeys();
  },
  getSelectedItems: function() {
    return this._selectionStrategy.getSelectedItems();
  },
  selectionFilter: function(e) {
    if (e === void 0)
      return this.options.selectionFilter;
    var t = this.options.selectionFilter !== e && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(e);
    this.options.selectionFilter = e, t && this.onSelectionChanged();
  },
  setSelection: function(e, t) {
    return this.selectedItemKeys(e, !1, !1, !1, t);
  },
  select: function(e) {
    return this.selectedItemKeys(e, !0);
  },
  deselect: function(e) {
    return this.selectedItemKeys(e, !0, !0);
  },
  selectedItemKeys: function(e, t, i, n, r) {
    var a;
    return e = (a = e) !== null && a !== void 0 ? a : [], e = Array.isArray(e) ? e : [e], this.validate(), this._selectionStrategy.selectedItemKeys(e, t, i, n, r);
  },
  clearSelection: function() {
    return this.selectedItemKeys([]);
  },
  _addSelectedItem: function(e, t) {
    this._selectionStrategy.addSelectedItem(t, e);
  },
  _removeSelectedItem: function(e) {
    this._selectionStrategy.removeSelectedItem(e);
  },
  _setSelectedItems: function(e, t) {
    this._selectionStrategy.setSelectedItems(e, t);
  },
  onSelectionChanged: function() {
    this._selectionStrategy.onSelectionChanged();
  },
  changeItemSelection: function(e, t, i) {
    var n, r, a, o = this.options.plainItems(), s = o[e], l, u = (n = (r = this.options).allowLoadByRange) === null || n === void 0 ? void 0 : n.call(r), d, c = !1, h = !1, p = (b) => b >= 0 && !o.filter((A) => A.loadIndex === b).length;
    if (u && (d = s.loadIndex - e, e = s.loadIndex, c = p(this._focusedItemIndex), x(this._shiftFocusedItemIndex) && (h = p(this._shiftFocusedItemIndex))), !this.isSelectable() || !this.isDataItem(s))
      return !1;
    var f = this.options.getItemData(s), v = this.options.keyOf(f);
    if (t = t || {}, t.shift && this.options.mode === "multiple" && this._focusedItemIndex >= 0)
      c || h ? (a = e !== this._shiftFocusedItemIndex || this._focusedItemIndex !== this._shiftFocusedItemIndex, a && (l = this.changeItemSelectionWhenShiftKeyInVirtualPaging(e))) : a = this.changeItemSelectionWhenShiftKeyPressed(e, o, d);
    else if (t.control) {
      if (this._resetItemSelectionWhenShiftKeyPressed(), !i) {
        var m = this._selectionStrategy.isItemDataSelected(f);
        this.options.mode === "single" && this.clearSelectedItems(), m ? this._removeSelectedItem(v) : this._addSelectedItem(f, v);
      }
      a = !0;
    } else {
      this._resetItemSelectionWhenShiftKeyPressed();
      var C = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], v);
      (this.options.selectedItemKeys.length !== 1 || !C) && (this._setSelectedItems([v], [f]), a = !0);
    }
    if (a)
      return ge(l).done(() => {
        this._focusedItemIndex = e, !i && this.onSelectionChanged();
      }), !0;
  },
  isDataItem: function(e) {
    return this.options.isSelectableItem(e);
  },
  isSelectable: function() {
    return this.options.mode === "single" || this.options.mode === "multiple";
  },
  isItemDataSelected: function(e) {
    return this._selectionStrategy.isItemDataSelected(e, {
      checkPending: !0
    });
  },
  isItemSelected: function(e, t) {
    return this._selectionStrategy.isItemKeySelected(e, t);
  },
  _resetItemSelectionWhenShiftKeyPressed: function() {
    delete this._shiftFocusedItemIndex;
  },
  _resetFocusedItemIndex: function() {
    this._focusedItemIndex = -1;
  },
  changeItemSelectionWhenShiftKeyInVirtualPaging: function(e) {
    var t = this.options.getLoadOptions(e, this._focusedItemIndex, this._shiftFocusedItemIndex), i = new U(), n = t.skip;
    return this.options.load(t).done((r) => {
      this.changeItemSelectionWhenShiftKeyPressed(e, r, n), i.resolve();
    }), i.promise();
  },
  changeItemSelectionWhenShiftKeyPressed: function(e, t, i) {
    var n = !1, r, a = x(i), o = a ? this._focusedItemIndex - i : this._focusedItemIndex, s = this.options.keyOf, l = t[o], u = this.options.getItemData(l), d = s(u), c = l && this.isItemDataSelected(u);
    x(this._shiftFocusedItemIndex) || (this._shiftFocusedItemIndex = this._focusedItemIndex);
    var h, p, f, v;
    if (this._shiftFocusedItemIndex !== this._focusedItemIndex)
      for (r = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1, f = a ? this._focusedItemIndex - i : this._focusedItemIndex, v = a ? this._shiftFocusedItemIndex - i : this._shiftFocusedItemIndex, o = f; o !== v; o += r)
        (a || this.isDataItem(t[o])) && (p = s(this.options.getItemData(t[o])), this._removeSelectedItem(p), n = !0);
    if (e !== this._shiftFocusedItemIndex)
      for (r = e < this._shiftFocusedItemIndex ? 1 : -1, f = a ? e - i : e, v = a ? this._shiftFocusedItemIndex - i : this._shiftFocusedItemIndex, o = f; o !== v; o += r)
        (a || this.isDataItem(t[o])) && (h = this.options.getItemData(t[o]), p = s(h), this._addSelectedItem(h, p), n = !0);
    return (a || this.isDataItem(l)) && !c && (this._addSelectedItem(u, d), n = !0), n;
  },
  clearSelectedItems: function() {
    this._setSelectedItems([], []);
  },
  selectAll: function(e) {
    return this._resetFocusedItemIndex(), e ? this._onePageSelectAll(!1) : this.selectedItemKeys([], !0, !1, !0);
  },
  deselectAll: function(e) {
    return this._resetFocusedItemIndex(), e ? this._onePageSelectAll(!0) : this.selectedItemKeys([], !0, !0, !0);
  },
  _onePageSelectAll: function(e) {
    for (var t = this._selectionStrategy.getSelectableItems(this.options.plainItems()), i = 0; i < t.length; i++) {
      var n = t[i];
      if (this.isDataItem(n)) {
        var r = this.options.getItemData(n), a = this.options.keyOf(r), o = this.isItemSelected(a);
        !o && !e && this._addSelectedItem(r, a), o && e && this._removeSelectedItem(a);
      }
    }
    return this.onSelectionChanged(), new U().resolve();
  },
  getSelectAllState: function(e) {
    return this._selectionStrategy.getSelectAllState(e);
  }
});
var Sp = "dxItemDeleting", cd = -1, Ui = function(e) {
  return e !== cd;
}, Ha = jD.inherit({
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      selectedItem: !0
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      selectionMode: "none",
      selectionRequired: !1,
      selectionByClick: !0,
      selectedItems: [],
      selectedItemKeys: [],
      maxFilterLengthInRequest: 1500,
      keyExpr: null,
      selectedIndex: cd,
      selectedItem: null,
      onSelectionChanged: null,
      onItemReordered: null,
      onItemDeleting: null,
      onItemDeleted: null
    });
  },
  ctor: function(e, t) {
    this._userOptions = t || {}, this.callBase(e, t);
  },
  _init: function() {
    this._initEditStrategy(), this.callBase(), this._initKeyGetter(), this._initSelectionModule();
  },
  _initKeyGetter: function() {
    this._keyGetter = tt(this.option("keyExpr"));
  },
  _getKeysByItems: function(e) {
    return this._editStrategy.getKeysByItems(e);
  },
  _getItemsByKeys: function(e, t) {
    return this._editStrategy.getItemsByKeys(e, t);
  },
  _getKeyByIndex: function(e) {
    return this._editStrategy.getKeyByIndex(e);
  },
  _getIndexByKey: function(e) {
    return this._editStrategy.getIndexByKey(e);
  },
  _getIndexByItemData: function(e) {
    return this._editStrategy.getIndexByItemData(e);
  },
  _isKeySpecified: function() {
    return !!this._dataController.key();
  },
  _getCombinedFilter: function() {
    return this._dataController.filter();
  },
  key: function() {
    return this.option("keyExpr") ? this.option("keyExpr") : this._dataController.key();
  },
  keyOf: function(e) {
    var t = e;
    return this.option("keyExpr") ? t = this._keyGetter(e) : this._dataController.store() && (t = this._dataController.keyOf(e)), t;
  },
  _nullValueSelectionSupported: function() {
    return !1;
  },
  _initSelectionModule: function() {
    var e = this, t = e._editStrategy.itemsGetter;
    this._selection = new XD({
      allowNullValue: this._nullValueSelectionSupported(),
      mode: this.option("selectionMode"),
      maxFilterLengthInRequest: this.option("maxFilterLengthInRequest"),
      equalByReference: !this._isKeySpecified(),
      onSelectionChanged: function(i) {
        (i.addedItemKeys.length || i.removedItemKeys.length) && (e.option("selectedItems", e._getItemsByKeys(i.selectedItemKeys, i.selectedItems)), e._updateSelectedItems(i));
      },
      filter: e._getCombinedFilter.bind(e),
      totalCount: function() {
        var i = e.option("items"), n = e._dataController.totalCount();
        return n >= 0 ? n : e._getItemsCount(i);
      },
      key: e.key.bind(e),
      keyOf: e.keyOf.bind(e),
      load: function(i) {
        var n, r = e._dataController;
        return i.customQueryParams = (n = r.loadOptions()) === null || n === void 0 ? void 0 : n.customQueryParams, i.userData = r.userData(), r.store() ? r.loadFromStore(i).done(function(a) {
          if (!e._disposed) {
            var o = jI(a).data;
            r.applyMapFunction(o);
          }
        }) : new U().resolve(this.plainItems());
      },
      dataFields: function() {
        return e._dataController.select();
      },
      plainItems: t.bind(e._editStrategy)
    });
  },
  _getItemsCount: function(e) {
    return e.reduce((t, i) => t + (i.items ? this._getItemsCount(i.items) : 1), 0);
  },
  _initEditStrategy: function() {
    var e = Rv;
    this._editStrategy = new e(this);
  },
  _getSelectedItemIndices: function(e) {
    var t = this, i = [];
    return e = e || this._selection.getSelectedItemKeys(), t._editStrategy.beginCache(), B(e, function(n, r) {
      var a = t._getIndexByKey(r);
      Ui(a) && i.push(a);
    }), t._editStrategy.endCache(), i;
  },
  _initMarkup: function() {
    this._rendering = !0, this._dataController.isLoading() || this._syncSelectionOptions().done(() => this._normalizeSelectedItems()), this.callBase();
  },
  _render: function() {
    this.callBase(), this._rendering = !1;
  },
  _fireContentReadyAction: function() {
    this._rendering = !1, this._rendered = !0, this.callBase.apply(this, arguments);
  },
  _syncSelectionOptions: function(e) {
    e = e || this._chooseSelectOption();
    var t, i, n, r;
    switch (e) {
      case "selectedIndex":
        t = this._editStrategy.getItemDataByIndex(this.option("selectedIndex")), x(t) ? (this._setOptionWithoutOptionChange("selectedItems", [t]), this._setOptionWithoutOptionChange("selectedItem", t), this._setOptionWithoutOptionChange("selectedItemKeys", this._editStrategy.getKeysByItems([t]))) : (this._setOptionWithoutOptionChange("selectedItems", []), this._setOptionWithoutOptionChange("selectedItemKeys", []), this._setOptionWithoutOptionChange("selectedItem", null));
        break;
      case "selectedItems":
        if (r = this.option("selectedItems") || [], i = r.length ? this._editStrategy.getIndexByItemData(r[0]) : cd, this.option("selectionRequired") && !Ui(i))
          return this._syncSelectionOptions("selectedIndex");
        this._setOptionWithoutOptionChange("selectedItem", r[0]), this._setOptionWithoutOptionChange("selectedIndex", i), this._setOptionWithoutOptionChange("selectedItemKeys", this._editStrategy.getKeysByItems(r));
        break;
      case "selectedItem":
        if (t = this.option("selectedItem"), i = this._editStrategy.getIndexByItemData(t), this.option("selectionRequired") && !Ui(i))
          return this._syncSelectionOptions("selectedIndex");
        x(t) ? (this._setOptionWithoutOptionChange("selectedItems", [t]), this._setOptionWithoutOptionChange("selectedIndex", i), this._setOptionWithoutOptionChange("selectedItemKeys", this._editStrategy.getKeysByItems([t]))) : (this._setOptionWithoutOptionChange("selectedItems", []), this._setOptionWithoutOptionChange("selectedItemKeys", []), this._setOptionWithoutOptionChange("selectedIndex", cd));
        break;
      case "selectedItemKeys":
        if (n = this.option("selectedItemKeys"), this.option("selectionRequired")) {
          var a = this._getIndexByKey(n[0]);
          if (!Ui(a))
            return this._syncSelectionOptions("selectedIndex");
        }
        return this._selection.setSelection(n);
    }
    return new U().resolve().promise();
  },
  _chooseSelectOption: function() {
    var e = "selectedIndex", t = function(i) {
      var n = this.option(i), r = x(n) && n.length;
      return r || i in this._userOptions;
    }.bind(this);
    return t("selectedItems") ? e = "selectedItems" : t("selectedItem") ? e = "selectedItem" : t("selectedItemKeys") && (e = "selectedItemKeys"), e;
  },
  _compareKeys: function(e, t) {
    if (e.length !== t.length)
      return !1;
    for (var i = 0; i < t.length; i++)
      if (e[i] !== t[i])
        return !1;
    return !0;
  },
  _normalizeSelectedItems: function() {
    if (this.option("selectionMode") === "none")
      this._setOptionWithoutOptionChange("selectedItems", []), this._syncSelectionOptions("selectedItems");
    else if (this.option("selectionMode") === "single") {
      var e = this.option("selectedItems");
      if (e.length > 1 || !e.length && this.option("selectionRequired") && this.option("items") && this.option("items").length) {
        var t = this._selection.getSelectedItems(), i = e[0] === void 0 ? t[0] : e[0];
        return i === void 0 && (i = this._editStrategy.itemsGetter()[0]), this.option("grouped") && i && i.items && (i.items = [i.items[0]]), this._selection.setSelection(this._getKeysByItems([i])), this._setOptionWithoutOptionChange("selectedItems", [i]), this._syncSelectionOptions("selectedItems");
      } else
        this._selection.setSelection(this._getKeysByItems(e));
    } else {
      var n = this._getKeysByItems(this.option("selectedItems")), r = this._selection.getSelectedItemKeys();
      this._compareKeys(r, n) || this._selection.setSelection(n);
    }
    return new U().resolve().promise();
  },
  _itemClickHandler: function(e) {
    var t = new U().resolve(), i = this.callBase;
    this._createAction(function(n) {
      var r;
      t = (r = this._itemSelectHandler(n.event)) !== null && r !== void 0 ? r : t;
    }.bind(this), {
      validatingTargetName: "itemElement"
    })({
      itemElement: g(e.currentTarget),
      event: e
    }), t.always(() => {
      i.apply(this, arguments);
    });
  },
  _itemSelectHandler: function(e) {
    var t, i;
    if (this.option("selectionByClick")) {
      var n = e.currentTarget;
      return this.isItemSelected(n) ? this.unselectItem(e.currentTarget) : i = this.selectItem(e.currentTarget), (t = i) === null || t === void 0 ? void 0 : t.promise();
    }
  },
  _selectedItemElement: function(e) {
    return this._itemElements().eq(e);
  },
  _postprocessRenderItem: function(e) {
    if (this.option("selectionMode") !== "none") {
      var t = g(e.itemElement), i = this._editStrategy.getNormalizedIndex(t), n = this._isItemSelected(i);
      this._processSelectableItem(t, n);
    }
  },
  _processSelectableItem: function(e, t) {
    e.toggleClass(this._selectedItemClass(), t), this._setAriaSelected(e, String(t));
  },
  _updateSelectedItems: function(e) {
    var t = this, i = e.addedItemKeys, n = e.removedItemKeys;
    if (t._rendered && (i.length || n.length)) {
      var r = t._selectionChangePromise;
      if (!t._rendering) {
        var a = [], o, s = [];
        t._editStrategy.beginCache();
        for (var l = 0; l < i.length; l++)
          o = t._getIndexByKey(i[l]), a.push(o), t._addSelection(o);
        for (var u = 0; u < n.length; u++)
          o = t._getIndexByKey(n[u]), s.push(o), t._removeSelection(o);
        t._editStrategy.endCache(), t._updateSelection(a, s);
      }
      ge(r).done(function() {
        t._fireSelectionChangeEvent(e.addedItems, e.removedItems);
      });
    }
  },
  _fireSelectionChangeEvent: function(e, t) {
    this._createActionByOption("onSelectionChanged", {
      excludeValidators: ["disabled", "readOnly"]
    })({
      addedItems: e,
      removedItems: t
    });
  },
  _updateSelection: $,
  _setAriaSelected: function(e, t) {
    this.setAria("selected", t, e);
  },
  _removeSelection: function(e) {
    var t = this._editStrategy.getItemElement(e);
    Ui(e) && (this._processSelectableItem(t, !1), w.triggerHandler(t, "stateChanged", !1));
  },
  _addSelection: function(e) {
    var t = this._editStrategy.getItemElement(e);
    Ui(e) && (this._processSelectableItem(t, !0), w.triggerHandler(t, "stateChanged", !0));
  },
  _isItemSelected: function(e) {
    var t = this._getKeyByIndex(e);
    return this._selection.isItemSelected(t, {
      checkPending: !0
    });
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "selectionMode":
        this._invalidate();
        break;
      case "dataSource":
        (!e.value || Array.isArray(e.value) && !e.value.length) && this.option("selectedItemKeys", []), this.callBase(e);
        break;
      case "selectedIndex":
      case "selectedItem":
      case "selectedItems":
      case "selectedItemKeys":
        this._syncSelectionOptions(e.name).done(() => this._normalizeSelectedItems());
        break;
      case "keyExpr":
        this._initKeyGetter();
        break;
      case "selectionRequired":
        this._normalizeSelectedItems();
        break;
      case "selectionByClick":
      case "onSelectionChanged":
      case "onItemDeleting":
      case "onItemDeleted":
      case "onItemReordered":
      case "maxFilterLengthInRequest":
        break;
      default:
        this.callBase(e);
    }
  },
  _clearSelectedItems: function() {
    this._setOptionWithoutOptionChange("selectedItems", []), this._syncSelectionOptions("selectedItems");
  },
  _waitDeletingPrepare: function(e) {
    if (e.data(Sp))
      return new U().resolve().promise();
    e.data(Sp, !0);
    var t = new U(), i = {
      cancel: !1
    }, n = this._itemEventHandler(e, "onItemDeleting", i, {
      excludeValidators: ["disabled", "readOnly"]
    });
    return ge(n).always(function(r) {
      var a = !n, o = !a && n.state() === "resolved", s = !!arguments.length, l = a || o && !s || o && r;
      ge(Nt(i.cancel)).always(function() {
        e.data(Sp, !1);
      }).done(function(u) {
        l && !u ? t.resolve() : t.reject();
      }).fail(t.reject);
    }.bind(this)), t.promise();
  },
  _deleteItemFromDS: function(e) {
    var t = this._dataController, i = new U(), n = this.option("disabled"), r = t.store();
    if (!r)
      return new U().resolve().promise();
    if (!r.remove)
      throw $e.Error("E1011");
    return this.option("disabled", !0), r.remove(t.keyOf(this._getItemData(e))).done(function(a) {
      a !== void 0 ? i.resolve() : i.reject();
    }).fail(function() {
      i.reject();
    }), i.always(function() {
      this.option("disabled", n);
    }.bind(this)), i;
  },
  _tryRefreshLastPage: function() {
    var e = new U();
    return this._isLastPage() || this.option("grouped") ? e.resolve() : this._refreshLastPage().done(function() {
      e.resolve();
    }), e.promise();
  },
  _refreshLastPage: function() {
    return this._expectLastItemLoading(), this._dataController.load();
  },
  _updateSelectionAfterDelete: function(e) {
    var t = this._getKeyByIndex(e);
    this._selection.deselect([t]);
  },
  _updateIndicesAfterIndex: function(e) {
    for (var t = this._itemElements(), i = e + 1; i < t.length; i++)
      g(t[i]).data(this._itemIndexKey(), i - 1);
  },
  _simulateOptionChange: function(e) {
    var t = this.option(e);
    t instanceof Jn || this._optionChangedAction({
      name: e,
      fullName: e,
      value: t
    });
  },
  isItemSelected: function(e) {
    return this._isItemSelected(this._editStrategy.getNormalizedIndex(e));
  },
  selectItem: function(e) {
    if (this.option("selectionMode") !== "none") {
      var t = this._editStrategy.getNormalizedIndex(e);
      if (Ui(t)) {
        var i = this._getKeyByIndex(t);
        if (!this._selection.isItemSelected(i)) {
          if (this.option("selectionMode") === "single")
            return this._selection.setSelection([i]);
          var n = this.option("selectedItemKeys") || [];
          return this._selection.setSelection([...n, i], [i]);
        }
      }
    }
  },
  unselectItem: function(e) {
    var t = this._editStrategy.getNormalizedIndex(e);
    if (Ui(t)) {
      var i = this._selection.getSelectedItemKeys();
      if (!(this.option("selectionRequired") && i.length <= 1)) {
        var n = this._getKeyByIndex(t);
        this._selection.isItemSelected(n, {
          checkPending: !0
        }) && this._selection.deselect([n]);
      }
    }
  },
  _deleteItemElementByIndex: function(e) {
    this._updateSelectionAfterDelete(e), this._updateIndicesAfterIndex(e), this._editStrategy.deleteItemAtIndex(e);
  },
  _afterItemElementDeleted: function(e, t) {
    var i = this._dataController.getDataSource() ? "dataSource" : "items";
    this._simulateOptionChange(i), this._itemEventHandler(e, "onItemDeleted", t, {
      beforeExecute: function() {
        e.remove();
      },
      excludeValidators: ["disabled", "readOnly"]
    }), this._renderEmptyMessage();
  },
  deleteItem: function(e) {
    var t = this, i = new U(), n = this._editStrategy.getItemElement(e), r = this._editStrategy.getNormalizedIndex(e), a = this._itemResponseWaitClass();
    return Ui(r) ? this._waitDeletingPrepare(n).done(function() {
      n.addClass(a);
      var o = t._extendActionArgs(n);
      t._deleteItemFromDS(n).done(function() {
        t._deleteItemElementByIndex(r), t._afterItemElementDeleted(n, o), t._tryRefreshLastPage().done(function() {
          i.resolveWith(t);
        });
      }).fail(function() {
        n.removeClass(a), i.rejectWith(t);
      });
    }).fail(function() {
      i.rejectWith(t);
    }) : i.rejectWith(t), i.promise();
  },
  reorderItem: function(e, t) {
    var i = new U(), n = this, r = this._editStrategy, a = r.getItemElement(e), o = r.getItemElement(t), s = r.getNormalizedIndex(e), l = r.getNormalizedIndex(t), u = this._dataController.getDataSource() ? "dataSource" : "items", d = Ui(s) && Ui(l) && s !== l;
    return d ? i.resolveWith(this) : i.rejectWith(this), i.promise().done(function() {
      o[r.itemPlacementFunc(s, l)](a), r.moveItemAtIndexToIndex(s, l), this._updateIndicesAfterIndex(s), n.option("selectedItems", n._getItemsByKeys(n._selection.getSelectedItemKeys(), n._selection.getSelectedItems())), u === "items" && n._simulateOptionChange(u), n._itemEventHandler(a, "onItemReordered", {
        fromIndex: r.getIndex(s),
        toIndex: r.getIndex(l)
      }, {
        excludeValidators: ["disabled", "readOnly"]
      });
    });
  }
}), FG = "dx-state-disabled", YD = Ha.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      keyExpr: "id",
      displayExpr: "text",
      selectedExpr: "selected",
      disabledExpr: "disabled",
      itemsExpr: "items",
      hoverStateEnabled: !0,
      parentIdExpr: "parentId",
      expandedExpr: "expanded"
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }]);
  },
  _init: function() {
    this.callBase(), this._initAccessors(), this._initDataAdapter(), this._initDynamicTemplates();
  },
  _initDataSource: function() {
    this.callBase(), this._dataSource && this._dataSource.paginate(!1);
  },
  _initDataAdapter: function() {
    var e = this._createDataAdapterAccessors();
    this._dataAdapter = new sG(T({
      dataAccessors: {
        getters: e.getters,
        setters: e.setters
      },
      items: this.option("items")
    }, this._getDataAdapterOptions()));
  },
  _getDataAdapterOptions: $,
  _initDynamicTemplates: function() {
    var e = this;
    this._templateManager.addDefaultTemplates({
      item: new $a(function(t, i) {
        t.html(i.html).append(this._getIconContainer(i)).append(this._getTextContainer(i)).append(this._getPopoutContainer(i)), e._addContentClasses(i, t.parent());
      }.bind(this), ["text", "html", "items", "icon"], this.option("integrationOptions.watchMethod"), {
        text: this._displayGetter,
        items: this._itemsGetter
      })
    });
  },
  _getIconContainer: function(e) {
    return e.icon ? wa(e.icon) : void 0;
  },
  _getTextContainer: function(e) {
    return g("<span>").text(e.text);
  },
  _getPopoutContainer: $,
  _addContentClasses: $,
  _initAccessors: function() {
    var e = this;
    B(this._getAccessors(), function(t, i) {
      e._compileAccessor(i);
    }), this._compileDisplayGetter();
  },
  _getAccessors: function() {
    return ["key", "selected", "items", "disabled", "parentId", "expanded"];
  },
  _getChildNodes: function(e) {
    var t = this, i = [];
    return B(e.internalFields.childrenKeys, function(n, r) {
      var a = t._dataAdapter.getNodeByKey(r);
      i.push(a);
    }), i;
  },
  _hasChildren: function(e) {
    return e && e.internalFields.childrenKeys.length;
  },
  _compileAccessor: function(e) {
    var t = "_" + e + "Getter", i = "_" + e + "Setter", n = this.option(e + "Expr");
    if (n) {
      if (ce(n)) {
        this[i] = function(r, a) {
          r[n()] = a;
        }, this[t] = function(r) {
          return r[n()];
        };
        return;
      }
    } else {
      this[t] = $, this[i] = $;
      return;
    }
    this[t] = tt(n), this[i] = h_(n);
  },
  _createDataAdapterAccessors: function() {
    var e = this, t = {
      getters: {},
      setters: {}
    };
    return B(this._getAccessors(), function(i, n) {
      var r = "_" + n + "Getter", a = "_" + n + "Setter", o = n === "parentId" ? "parentKey" : n;
      t.getters[o] = e[r], t.setters[o] = e[a];
    }), t.getters.display = this._displayGetter ? this._displayGetter : (i) => i.text, t;
  },
  _initMarkup: function() {
    this.callBase(), this._addWidgetClass();
  },
  _addWidgetClass: function() {
    this._focusTarget().addClass(this._widgetClass());
  },
  _widgetClass: $,
  _renderItemFrame: function(e, t) {
    var i = this.callBase.apply(this, arguments);
    return i.toggleClass(FG, !!this._disabledGetter(t)), i;
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "displayExpr":
      case "keyExpr":
        this._initAccessors(), this._initDynamicTemplates(), this.repaint();
        break;
      case "itemsExpr":
      case "selectedExpr":
      case "disabledExpr":
      case "expandedExpr":
      case "parentIdExpr":
        this._initAccessors(), this._initDataAdapter(), this.repaint();
        break;
      case "items":
        this._initDataAdapter(), this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  }
});
class PG extends Rv {
  _getPlainItems() {
    return wt(this._collectionWidget.option("items"), function t(i) {
      return i.items ? [i].concat(wt(i.items, t)) : i;
    });
  }
  _stringifyItem(t) {
    return JSON.stringify(t, (i, n) => i === "template" ? this._getTemplateString(n) : n);
  }
  _getTemplateString(t) {
    var i;
    return typeof t == "object" ? i = g(t).text() : i = t.toString(), i;
  }
}
var Gl = "dx-menu", MG = Gl + "-no-icons", LG = "dx-menu-base", Ni = Gl + "-item", VG = Ni + "-content", Ep = Ni + "-selected", e0 = Ni + "-wrapper", NG = Gl + "-items-container", $G = Ni + "-expanded", HG = Gl + "-separator", zG = Gl + "-last-group-item", WG = Ni + "-has-text", GG = Ni + "-has-icon", KG = Ni + "-has-submenu", ZD = Ni + "-popout", UG = ZD + "-container", jG = Ni + "-text", qG = "single", XG = {
  show: 50,
  hide: 300
};
class Bv extends YD {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      items: [],
      cssClass: "",
      activeStateEnabled: !0,
      showSubmenuMode: {
        name: "onHover",
        delay: {
          show: 50,
          hide: 300
        }
      },
      animation: {
        show: {
          type: "fade",
          from: 0,
          to: 1,
          duration: 100
        },
        hide: {
          type: "fade",
          from: 1,
          to: 0,
          duration: 100
        }
      },
      selectByClick: !1,
      focusOnSelectedItem: !1,
      keyExpr: null,
      _itemAttributes: {
        role: "menuitem"
      },
      useInkRipple: !1
    });
  }
  _itemDataKey() {
    return "dxMenuItemDataKey";
  }
  _itemClass() {
    return Ni;
  }
  _setAriaSelected() {
  }
  _selectedItemClass() {
    return Ep;
  }
  _widgetClass() {
    return LG;
  }
  _focusTarget() {
    return this._itemContainer();
  }
  _clean() {
    this.option("focusedElement", null), super._clean();
  }
  _supportedKeys() {
    return T(super._supportedKeys(), {
      space: () => {
        var t = g(this.option("focusedElement"));
        !t.length || !this._isSelectionEnabled() || this.selectItem(t[0]);
      },
      pageUp: $,
      pageDown: $
    });
  }
  _isSelectionEnabled() {
    return this.option("selectionMode") === qG;
  }
  _init() {
    this._activeStateUnit = ".".concat(Ni), super._init(), this._renderSelectedItem(), this._initActions();
  }
  _getTextContainer(t) {
    var i = t.text, n = g("<span>").addClass(jG), r = Me(t) ? i : String(t);
    return i && n.text(r);
  }
  _getPopoutContainer(t) {
    var i = t.items, n;
    if (i && i.length) {
      var r = g("<div>").addClass(ZD);
      n = g("<span>").addClass(UG).append(r);
    }
    return n;
  }
  _getDataAdapterOptions() {
    return {
      rootValue: 0,
      multipleSelection: !1,
      recursiveSelection: !1,
      recursiveExpansion: !1,
      searchValue: ""
    };
  }
  _selectByItem(t) {
    if (t) {
      var i = this._dataAdapter.getNodeByItem(t);
      this._dataAdapter.toggleSelection(i.internalFields.key, !0);
    }
  }
  _renderSelectedItem() {
    var t = this._dataAdapter.getSelectedNodesKeys(), i = t.length && t[0], n = this.option("selectedItem");
    if (!i) {
      this._selectByItem(n);
      return;
    }
    var r = this._dataAdapter.getNodeByKey(i);
    if (r.selectable !== !1) {
      if (!n) {
        this.option("selectedItem", r.internalFields.item);
        return;
      }
      n !== r.internalFields.item && (this._dataAdapter.toggleSelection(i, !1), this._selectByItem(n));
    }
  }
  _initActions() {
  }
  _initMarkup() {
    super._initMarkup(), this.option("useInkRipple") && this._renderInkRipple();
  }
  _renderInkRipple() {
    this._inkRipple = _v();
  }
  _toggleActiveState(t, i, n) {
    if (super._toggleActiveState.apply(this, arguments), !!this._inkRipple) {
      var r = {
        element: t,
        event: n
      };
      i ? this._inkRipple.showWave(r) : this._inkRipple.hideWave(r);
    }
  }
  _getShowSubmenuMode() {
    var t = this.option("showSubmenuMode");
    return t = De(t) ? t.name : t, this._isDesktopDevice() ? t : "onClick";
  }
  _initSelectedItems() {
  }
  _isDesktopDevice() {
    return ve.real().deviceType === "desktop";
  }
  _initEditStrategy() {
    var t = PG;
    this._editStrategy = new t(this);
  }
  _addCustomCssClass(t) {
    t.addClass(this.option("cssClass"));
  }
  _itemWrapperSelector() {
    return ".".concat(e0);
  }
  _hoverStartHandler(t) {
    var i = this._getItemElementByEventArgs(t);
    !i || this._isItemDisabled(i) || (t.stopPropagation(), this._getShowSubmenuMode() === "onHover" && (clearTimeout(this._showSubmenusTimeout), this._showSubmenusTimeout = setTimeout(this._showSubmenu.bind(this, i), this._getSubmenuDelay("show"))));
  }
  _getAvailableItems(t) {
    return super._getAvailableItems(t).filter(function() {
      return g(this).css("visibility") !== "hidden";
    });
  }
  _isItemDisabled(t) {
    return this._disabledGetter(t.data(this._itemDataKey()));
  }
  _showSubmenu(t) {
    this._addExpandedClass(t);
  }
  _addExpandedClass(t) {
    g(t).addClass($G);
  }
  _getSubmenuDelay(t) {
    var {
      delay: i
    } = this.option("showSubmenuMode");
    return x(i) ? De(i) ? i[t] : i : XG[t];
  }
  _getItemElementByEventArgs(t) {
    var i = g(t.target);
    if (i.hasClass(this._itemClass()) || i.get(0) === t.currentTarget)
      return i;
    for (; !i.hasClass(this._itemClass()); )
      if (i = i.parent(), i.hasClass("dx-submenu"))
        return null;
    return i;
  }
  _hoverEndHandler() {
    clearTimeout(this._showSubmenusTimeout);
  }
  _hasSubmenu(t) {
    return t && t.internalFields.childrenKeys.length;
  }
  _renderContentImpl() {
    this._renderItems(this._dataAdapter.getRootNodes());
  }
  _renderItems(t, i) {
    if (t.length) {
      this.hasIcons = !1;
      var n = this._renderContainer(this.$element(), i), r = -1, a = -1;
      B(t, (o, s) => {
        var l = s.visible !== !1;
        l && r < 0 && (r = o);
        var u = r < o && (s.beginGroup || o === a);
        u && (a = l ? o : o + 1), o === a && r < o && this._renderSeparator(n), this._renderItem(o, s, n);
      }), this.hasIcons || n.addClass(MG);
    }
  }
  _renderContainer(t) {
    var i = g("<ul>");
    return this.setAria("role", "none", i), i.appendTo(t).addClass(NG);
  }
  _createDOMElement(t) {
    var i = g("<li>");
    return this.setAria("role", "none", i), i.appendTo(t).addClass(e0);
  }
  _renderItem(t, i, n, r) {
    var a = this.option("items"), o = r || this._createDOMElement(n);
    a[t + 1] && a[t + 1].beginGroup && o.addClass(zG);
    var s = super._renderItem(t, i.internalFields.item, o);
    i.internalFields.item === this.option("selectedItem") && s.addClass(Ep), s.attr("tabIndex", -1), this._hasSubmenu(i) && this.setAria("haspopup", "true", s);
  }
  _renderItemFrame(t, i, n) {
    var r = n.children(".".concat(Ni));
    return r.length ? r : super._renderItemFrame.apply(this, arguments);
  }
  _refreshItem(t, i) {
    var n = this._dataAdapter.getNodeByItem(i), r = t.data(this._itemIndexKey()), a = t.closest("ul"), o = t.closest("li");
    this._renderItem(r, n, a, o);
  }
  _addContentClasses(t, i) {
    var n = t.text ? !!t.text.length : !1, r = !!t.icon, a = t.items ? !!t.items.length : !1;
    i.toggleClass(WG, n), i.toggleClass(GG, r), this.hasIcons || (this.hasIcons = r), i.toggleClass(KG, a);
  }
  _getItemContent(t) {
    var i = super._getItemContent(t);
    return i.length || (i = t.children(".".concat(VG))), i;
  }
  _postprocessRenderItem(t) {
    var i = g(t.itemElement), n = this._dataAdapter.getSelectedNodesKeys();
    if (!n.length || !this._selectedGetter(t.itemData) || !this._isItemSelectable(t.itemData)) {
      this._setAriaSelected(i, "false");
      return;
    }
    var r = this._dataAdapter.getNodeByItem(t.itemData);
    r.internalFields.key === n[0] ? (i.addClass(this._selectedItemClass()), this._setAriaSelected(i, "true")) : this._setAriaSelected(i, "false");
  }
  _isItemSelectable(t) {
    return t.selectable !== !1;
  }
  _renderSeparator(t) {
    g("<li>").appendTo(t).addClass(HG);
  }
  _itemClickHandler(t) {
    if (!t._skipHandling) {
      var i = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));
      this._itemDXEventHandler(t, "onItemClick", {}, {
        afterExecute: i.bind(this)
      }), t._skipHandling = !0;
    }
  }
  _updateSubmenuVisibilityOnClick(t) {
    this._updateSelectedItemOnClick(t), this._getShowSubmenuMode() === "onClick" && this._addExpandedClass(t.args[0].itemElement);
  }
  _updateSelectedItemOnClick(t) {
    var i = t.args ? t.args[0] : t;
    if (this._isItemSelectionAllowed(i.itemData)) {
      var n = this._dataAdapter.getSelectedNodesKeys(), r = n.length && this._dataAdapter.getNodeByKey(n[0]);
      r && this._toggleItemSelection(r, !1), !r || r.internalFields.item !== i.itemData ? this.selectItem(i.itemData) : (this._fireSelectionChangeEvent(null, this.option("selectedItem")), this._setOptionWithoutOptionChange("selectedItem", null));
    }
  }
  _isItemSelectionAllowed(t) {
    var i = this._isSelectionEnabled() && this.option("selectByClick");
    return !this._isContainerEmpty() && i && this._isItemSelectable(t) && !this._itemsGetter(t);
  }
  _isContainerEmpty() {
    return this._itemContainer().is(":empty");
  }
  _syncSelectionOptions() {
    return tw();
  }
  _optionChanged(t) {
    switch (t.name) {
      case "showSubmenuMode":
        break;
      case "selectedItem":
        var i = this._dataAdapter.getNodeByItem(t.value), n = this._dataAdapter.getSelectedNodesKeys()[0];
        if (i && i.internalFields.key !== n) {
          if (i.selectable === !1)
            break;
          n && this._toggleItemSelection(this._dataAdapter.getNodeByKey(n), !1), this._toggleItemSelection(i, !0), this._updateSelectedItems();
        }
        break;
      case "cssClass":
      case "position":
      case "selectByClick":
      case "animation":
      case "useInkRipple":
        this._invalidate();
        break;
      default:
        super._optionChanged(t);
    }
  }
  _toggleItemSelection(t, i) {
    var n = this._getElementByItem(t.internalFields.item);
    n && g(n).toggleClass(Ep), this._dataAdapter.toggleSelection(t.internalFields.key, i);
  }
  _getElementByItem(t) {
    var i;
    return B(this._itemElements(), (n, r) => g(r).data(this._itemDataKey()) !== t ? !0 : (i = r, !1)), i;
  }
  _updateSelectedItems(t, i) {
    (t || i) && this._fireSelectionChangeEvent(i, t);
  }
  _fireSelectionChangeEvent(t, i) {
    this._createActionByOption("onSelectionChanged", {
      excludeValidators: ["disabled", "readOnly"]
    })({
      addedItems: [t],
      removedItems: [i]
    });
  }
  selectItem(t) {
    var i = t.nodeType ? this._getItemData(t) : t, n = this._dataAdapter.getSelectedNodesKeys()[0], r = this.option("selectedItem"), a = this._dataAdapter.getNodeByItem(i);
    a.internalFields.key !== n && (n && this._toggleItemSelection(this._dataAdapter.getNodeByKey(n), !1), this._toggleItemSelection(a, !0), this._updateSelectedItems(r, i), this._setOptionWithoutOptionChange("selectedItem", i));
  }
  unselectItem(t) {
    var i = t.nodeType ? this._getItemData(t) : t, n = this._dataAdapter.getNodeByItem(i), r = this.option("selectedItem");
    n.internalFields.selected && (this._toggleItemSelection(n, !1), this._updateSelectedItems(r, null), this._setOptionWithoutOptionChange("selectedItem", null));
  }
}
Bv.ItemClass = Na;
var QD = "dx-menu", Ws = QD + "-item", io = Ws + "-expanded", YG = "dx-menu-phone-overlay", yu = QD + "-items-container", t0 = Ws + "-wrapper", hi = "dx-submenu", ZG = "dx-context-menu", QG = "dx-has-context-menu", JG = "dx-state-disabled", e2 = "dx-state-focused", i0 = "dx-state-hover", t2 = "dx-overlay-content", JD = "up", eA = "down", i2 = "left", n2 = "right", tA = "first", iA = "last", n0 = ["onShowing", "onShown", "onSubmenuCreated", "onHiding", "onHidden", "onPositioning", "onLeftFirstItem", "onLeftLastItem", "onCloseRootSubmenu", "onExpandLastSubmenu"], r2 = [JD, eA, tA, iA], r0 = "dxcontextmenu", a2 = ke();
class kv extends Bv {
  getShowEvent(t) {
    var i = null;
    return De(t) ? t.name !== null && (i = t.name || r0) : i = t, i;
  }
  getShowDelay(t) {
    return De(t) && t.delay;
  }
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      showEvent: r0,
      hideOnOutsideClick: !0,
      position: {
        at: "top left",
        my: "top left"
      },
      onShowing: null,
      onShown: null,
      onSubmenuCreated: null,
      onHiding: null,
      onHidden: null,
      onPositioning: null,
      submenuDirection: "auto",
      visible: !1,
      target: void 0,
      onLeftFirstItem: null,
      onLeftLastItem: null,
      onCloseRootSubmenu: null,
      onExpandLastSubmenu: null
    });
  }
  _defaultOptionsRules() {
    return super._defaultOptionsRules().concat([{
      device: () => !Re(),
      options: {
        animation: null
      }
    }]);
  }
  _setDeprecatedOptions() {
    super._setDeprecatedOptions(), T(this._deprecatedOptions, {
      closeOnOutsideClick: {
        since: "22.2",
        alias: "hideOnOutsideClick"
      }
    });
  }
  _initActions() {
    this._actions = {}, B(n0, (t, i) => {
      this._actions[i] = this._createActionByOption(i) || $;
    });
  }
  _setOptionsByReference() {
    super._setOptionsByReference(), T(this._optionsByReference, {
      animation: !0,
      selectedItem: !0
    });
  }
  _focusInHandler() {
  }
  _itemContainer() {
    return this._overlay ? this._overlay.$content() : g();
  }
  _eventBindingTarget() {
    return this._itemContainer();
  }
  itemsContainer() {
    return this._overlay ? this._overlay.$content() : void 0;
  }
  _supportedKeys() {
    return T(super._supportedKeys(), {
      space: () => {
        var t = g(this.option("focusedElement"));
        this.hide(), !(!t.length || !this._isSelectionEnabled()) && this.selectItem(t[0]);
      },
      escape: this.hide
    });
  }
  _getActiveItem() {
    var t = this._getAvailableItems(), i = t.filter(".".concat(e2)), n = t.filter(".".concat(i0)), r = n.closest(".".concat(yu));
    return r.find(".".concat(Ws)).index(i) >= 0 ? i : n.length ? n : super._getActiveItem();
  }
  _moveFocus(t) {
    var i = this._getItemsByLocation(t), n = this._getActiveItem(!0), r = this.itemsContainer().find(".".concat(i0)), a = g(this.option("focusedElement")), o = !!(a.length || r.length), s;
    switch (t) {
      case JD:
        s = o ? this._prevItem(i) : n, this._setFocusedElement(s), n.is(i.first()) && this._actions.onLeftFirstItem(n);
        break;
      case eA:
        s = o ? this._nextItem(i) : n, this._setFocusedElement(s), n.is(i.last()) && this._actions.onLeftLastItem(n);
        break;
      case n2:
        s = this.option("rtlEnabled") ? this._hideSubmenuHandler() : this._expandSubmenuHandler(i, t), this._setFocusedElement(s);
        break;
      case i2:
        s = this.option("rtlEnabled") ? this._expandSubmenuHandler(i, t) : this._hideSubmenuHandler(), this._setFocusedElement(s);
        break;
      case tA:
        s = i.first(), this._setFocusedElement(s);
        break;
      case iA:
        s = i.last(), this._setFocusedElement(s);
        break;
      default:
        return super._moveFocus(t);
    }
  }
  _setFocusedElement(t) {
    t && t.length !== 0 && this.option("focusedElement", Ie(t));
  }
  _getItemsByLocation(t) {
    var i = this._getActiveItem(!0), n;
    return r2.includes(t) && (n = i.closest(".".concat(yu)).children().children()), n = this._getAvailableItems(n), n;
  }
  _getAriaTarget() {
    return this.$element();
  }
  _refreshActiveDescendant() {
    if (x(this._overlay)) {
      var t = this._overlay.$content();
      super._refreshActiveDescendant(t);
    }
  }
  _hideSubmenuHandler() {
    var t = this._getActiveItem(!0), i = t.parents(".".concat(io)).first();
    return i.length ? (this._hideSubmenusOnSameLevel(i), this._hideSubmenu(t.closest(".".concat(hi))), i) : (this._actions.onCloseRootSubmenu(t), t);
  }
  _expandSubmenuHandler(t, i) {
    var n = this._getActiveItem(!0), r = this._getItemData(n), a = this._dataAdapter.getNodeByItem(r), o = this._hasSubmenu(a), s = n.children(".".concat(hi));
    if (o && !n.hasClass(JG))
      return (!s.length || s.css("visibility") === "hidden") && this._showSubmenu(n), this._nextItem(this._getItemsByLocation(i));
    this._actions.onExpandLastSubmenu(n);
  }
  _clean() {
    this._overlay && (this._overlay.$element().remove(), this._overlay = null), this._detachShowContextMenuEvents(this._getTarget()), super._clean();
  }
  _initMarkup() {
    this.$element().addClass(QG), super._initMarkup();
  }
  _render() {
    super._render(), this._renderVisibility(this.option("visible")), this._addWidgetClass();
  }
  _renderContentImpl() {
    this._detachShowContextMenuEvents(this._getTarget()), this._attachShowContextMenuEvents();
  }
  _attachKeyboardEvents() {
    !this._keyboardListenerId && this._focusTarget().length && super._attachKeyboardEvents();
  }
  _renderContextMenuOverlay() {
    if (!this._overlay) {
      var t = this._getOverlayOptions();
      this._overlay = this._createComponent(g("<div>").appendTo(this._$element), tn, t);
      var i = this._overlay.$content();
      i.addClass(ZG), this._addCustomCssClass(i), this._addPlatformDependentClass(i), this._attachContextMenuEvent();
    }
  }
  preventShowingDefaultContextMenuAboveOverlay() {
    var t = this._itemContainer(), i = oe(UD, this.NAME);
    w.off(t, i, ".".concat(hi)), w.on(t, i, ".".concat(hi), ((n) => {
      n.stopPropagation(), n.preventDefault(), w.off(t, i, ".".concat(hi));
    }).bind(this));
  }
  _itemContextMenuHandler(t) {
    super._itemContextMenuHandler(t), t.stopPropagation();
  }
  _addPlatformDependentClass(t) {
    ve.current().phone && t.addClass(YG);
  }
  _detachShowContextMenuEvents(t) {
    var i = this.getShowEvent(this.option("showEvent"));
    if (i) {
      var n = oe(i, this.NAME);
      this._showContextMenuEventHandler ? w.off(ee.getDocument(), n, t, this._showContextMenuEventHandler) : w.off(g(t), n);
    }
  }
  _attachShowContextMenuEvents() {
    var t = this._getTarget(), i = this.getShowEvent(this.option("showEvent"));
    if (i) {
      var n = oe(i, this.NAME), r = this._createAction((o) => {
        var s = this.getShowDelay(this.option("showEvent"));
        s ? setTimeout(() => this._show(o.event), s) : this._show(o.event);
      }, {
        validatingTargetName: "target"
      }), a = (o) => r({
        event: o,
        target: g(o.currentTarget)
      });
      r = this._createAction(r), wi(t) || t.nodeType || Ct(t) ? (this._showContextMenuEventHandler = void 0, w.on(t, n, a)) : (this._showContextMenuEventHandler = a, w.on(ee.getDocument(), n, t, this._showContextMenuEventHandler));
    }
  }
  _hoverEndHandler(t) {
    super._hoverEndHandler(t), t.stopPropagation();
  }
  _renderDimensions() {
  }
  _renderContainer(t, i) {
    var n = i || this._itemContainer();
    t = g("<div>"), t.appendTo(n).addClass(hi).css("visibility", i ? "hidden" : "visible"), t.parent().hasClass(t2) || this._addCustomCssClass(t);
    var r = super._renderContainer(t);
    return i ? r : this.option("width") ? r.css("minWidth", this.option("width")) : this.option("height") ? r.css("minHeight", this.option("height")) : r;
  }
  _renderSubmenuItems(t, i) {
    this._renderItems(this._getChildNodes(t), i), this._actions.onSubmenuCreated({
      itemElement: Ie(i),
      itemData: t.internalFields.item,
      submenuElement: Ie(i.children(".".concat(hi)))
    });
  }
  _getOverlayOptions() {
    var t = this.option("position"), i = {
      focusStateEnabled: this.option("focusStateEnabled"),
      animation: this.option("animation"),
      innerOverlay: !0,
      hideOnOutsideClick: (n) => this._hideOnOutsideClickHandler(n),
      propagateOutsideClick: !0,
      hideOnParentScroll: !0,
      deferRendering: !1,
      position: {
        at: t.at,
        my: t.my,
        of: this._getTarget(),
        collision: "flipfit"
      },
      shading: !1,
      showTitle: !1,
      height: "auto",
      width: "auto",
      onShown: this._overlayShownActionHandler.bind(this),
      onHiding: this._overlayHidingActionHandler.bind(this),
      onHidden: this._overlayHiddenActionHandler.bind(this),
      visualContainer: a2
    };
    return i;
  }
  _overlayShownActionHandler(t) {
    this._actions.onShown(t);
  }
  _overlayHidingActionHandler(t) {
    this._actions.onHiding(t), t.cancel || (this._hideAllShownSubmenus(), this._setOptionWithoutOptionChange("visible", !1));
  }
  _overlayHiddenActionHandler(t) {
    this._actions.onHidden(t);
  }
  _shouldHideOnOutsideClick(t) {
    var {
      closeOnOutsideClick: i,
      hideOnOutsideClick: n
    } = this.option();
    return ce(n) ? n(t) : ce(i) ? i(t) : n || i;
  }
  _hideOnOutsideClickHandler(t) {
    if (!this._shouldHideOnOutsideClick(t))
      return !1;
    if (ee.isDocument(t.target))
      return !0;
    var i = this._getActiveItemsContainer(t.target), n = this._getItemsContainers(), r = this._searchActiveItem(t.target), a = this.$element().parents(".".concat(Ws)), o = r[0] === a[0] && r.length && a.length, s = this._isIncludeOverlay(i, n) && r.length;
    return s || o ? (this._getShowSubmenuMode() === "onClick" && this._hideAllShownChildSubmenus(r), !1) : !0;
  }
  _getActiveItemsContainer(t) {
    return g(t).closest(".".concat(yu));
  }
  _getItemsContainers() {
    return this._overlay.$content().find(".".concat(yu));
  }
  _searchActiveItem(t) {
    return g(t).closest(".".concat(Ws)).eq(0);
  }
  _isIncludeOverlay(t, i) {
    var n = !1;
    return B(i, (r, a) => {
      t.is(a) && !n && (n = !0);
    }), n;
  }
  _hideAllShownChildSubmenus(t) {
    var i = t.find(".".concat(hi)), n = T([], this._shownSubmenus);
    i.length > 0 && B(n, (r, a) => {
      var o = this._searchActiveItem(a.context).parent();
      o.parent().is(t.parent().parent()) && !o.is(t.parent()) && this._hideSubmenu(a);
    });
  }
  _showSubmenu(t) {
    var i = this._dataAdapter.getNodeByItem(this._getItemData(t));
    if (this._hideSubmenusOnSameLevel(t), !!this._hasSubmenu(i)) {
      var n = t.children(".".concat(hi)), r = n.length;
      super._showSubmenu(t), r || this._renderSubmenuItems(i, t), this._isSubmenuVisible(n) || this._drawSubmenu(t);
    }
  }
  _hideSubmenusOnSameLevel(t) {
    var i = t.parent(".".concat(t0)).siblings().find(".".concat(io));
    i.length && (i.removeClass(io), this._hideSubmenu(i.find(".".concat(hi))));
  }
  _hideSubmenuGroup(t) {
    this._isSubmenuVisible(t) && this._hideSubmenuCore(t);
  }
  _isSubmenuVisible(t) {
    return t.css("visibility") === "visible";
  }
  _drawSubmenu(t) {
    var i = this.option("animation") ? this.option("animation").show : {}, n = t.children(".".concat(hi)), r = this._getSubmenuPosition(t);
    this._overlay && this._overlay.option("visible") && (x(this._shownSubmenus) || (this._shownSubmenus = []), this._shownSubmenus.includes(n) || this._shownSubmenus.push(n), i && ft.stop(n), en.setup(n, r), i && (Me(i.to) && (i.to.position = r), this._animate(n, i)), n.css("visibility", "visible"));
  }
  _animate(t, i) {
    ft.animate(t, i);
  }
  _getSubmenuPosition(t) {
    var i = this.option("submenuDirection").toLowerCase(), n = t.parent(".".concat(t0)), r = {
      collision: "flip",
      of: n,
      offset: {
        h: 0,
        v: -1
      }
    };
    switch (i) {
      case "left":
        r.at = "left top", r.my = "right top";
        break;
      case "right":
        r.at = "right top", r.my = "left top";
        break;
      default:
        this.option("rtlEnabled") ? (r.at = "left top", r.my = "right top") : (r.at = "right top", r.my = "left top");
    }
    return r;
  }
  _updateSubmenuVisibilityOnClick(t) {
    if (t.args.length) {
      var i = t.args[0].itemData, n = this._dataAdapter.getNodeByItem(i);
      if (n) {
        var r = g(t.args[0].itemElement), a = r.find(".".concat(hi)), o = this._hasSubmenu(n) && !a.length;
        if (o && (this._renderSubmenuItems(n, r), a = r.find(".".concat(hi))), !(r.context === a.context && a.css("visibility") === "visible")) {
          this._updateSelectedItemOnClick(t);
          var s = i && i.closeMenuOnClick === !1;
          if (!(!i || i.disabled || s))
            if (a.length === 0) {
              var l = g(r.parents(".".concat(hi))[0]);
              this._hideSubmenu(l), !t.canceled && this._overlay && this._overlay.option("visible") && this.option("visible", !1);
            } else
              this._shownSubmenus && this._shownSubmenus.length > 0 && this._shownSubmenus[0].is(a) && this._hideSubmenu(a), this._showSubmenu(r);
        }
      }
    }
  }
  _hideSubmenu(t) {
    var i = T([], this._shownSubmenus);
    B(i, (n, r) => {
      (t.is(r) || Hn(t[0], r[0])) && (r.parent().removeClass(io), this._hideSubmenuCore(r));
    });
  }
  _hideSubmenuCore(t) {
    var i = this._shownSubmenus.indexOf(t), n = this.option("animation") ? this.option("animation").hide : null;
    i >= 0 && this._shownSubmenus.splice(i, 1), this._stopAnimate(t), n && this._animate(t, n), t.css("visibility", "hidden");
  }
  _stopAnimate(t) {
    ft.stop(t, !0);
  }
  _hideAllShownSubmenus() {
    var t = T([], this._shownSubmenus), i = this._overlay.$content().find(".".concat(io));
    i.removeClass(io), B(t, (n, r) => {
      this._hideSubmenu(r);
    });
  }
  _visibilityChanged(t) {
    t && this._renderContentImpl();
  }
  _optionChanged(t) {
    if (n0.includes(t.name)) {
      this._initActions();
      return;
    }
    switch (t.name) {
      case "visible":
        this._renderVisibility(t.value);
        break;
      case "showEvent":
      case "position":
      case "submenuDirection":
        this._invalidate();
        break;
      case "target":
        t.previousValue && this._detachShowContextMenuEvents(t.previousValue), this._invalidate();
        break;
      case "closeOnOutsideClick":
      case "hideOnOutsideClick":
        break;
      default:
        super._optionChanged(t);
    }
  }
  _renderVisibility(t) {
    return t ? this._show() : this._hide();
  }
  _toggleVisibility() {
  }
  _show(t) {
    var i = {
      jQEvent: t
    }, n = new U().reject().promise();
    if (this._actions.onShowing(i), i.cancel)
      return n;
    var r = this._positionContextMenu(t);
    if (r) {
      var a;
      this._overlay || (this._renderContextMenuOverlay(), this._overlay.$content().addClass(this._widgetClass()), this._renderFocusState(), this._attachHoverEvents(), this._attachClickEvent(), this._renderItems(this._dataAdapter.getRootNodes())), this._setOptionWithoutOptionChange("visible", !0), this._overlay.option("position", r), n = this._overlay.show(), t && t.stopPropagation(), this._setAriaAttributes(), (t == null || (a = t.originalEvent) === null || a === void 0 ? void 0 : a.type) === Br.name && this.preventShowingDefaultContextMenuAboveOverlay();
    }
    return n;
  }
  _setAriaAttributes() {
    this._overlayContentId = "dx-".concat(new Ot()), this.setAria("owns", this._overlayContentId), this.setAria({
      id: this._overlayContentId,
      role: "menu"
    }, this._overlay.$content());
  }
  _cleanAriaAttributes() {
    this._overlay && this.setAria("id", null, this._overlay.$content()), this.setAria("owns", void 0);
  }
  _getTarget() {
    return this.option("target") || this.option("position").of || g(ee.getDocument());
  }
  _getContextMenuPosition() {
    return T({}, this.option("position"), {
      of: this._getTarget()
    });
  }
  _positionContextMenu(t) {
    var i = this._getContextMenuPosition(), n = this._isInitialOptionValue("position"), r = this._createActionByOption("onPositioning");
    t && t.preventDefault && n && (i.of = t);
    var a = {
      position: i,
      event: t
    };
    return r(a), a.cancel ? i = null : a.event && (a.event.cancel = !0, t.preventDefault()), i;
  }
  _refresh() {
    if (!Re())
      super._refresh();
    else if (this._overlay) {
      var t = this._overlay.option("position");
      super._refresh(), this._overlay && this._overlay.option("position", t);
    } else
      super._refresh();
  }
  _hide() {
    var t;
    return this._overlay && (t = this._overlay.hide(), this._setOptionWithoutOptionChange("visible", !1)), this._cleanAriaAttributes(), this.option("focusedElement", null), t || new U().reject().promise();
  }
  toggle(t) {
    var i = this.option("visible");
    return t = t === void 0 ? !i : t, this._renderVisibility(t);
  }
  show() {
    return this.toggle(!0);
  }
  hide() {
    return this.toggle(!1);
  }
}
We("dxContextMenu", kv);
const o2 = "dx-context-menu", s2 = {
  columnHeadersView: "header",
  rowsView: "content",
  footerView: "footer",
  headerPanel: "headerPanel"
}, l2 = ["columnHeadersView", "rowsView", "footerView", "headerPanel"], u2 = at.ViewController.inherit({
  init() {
    this.createAction("onContextMenuPreparing");
  },
  getContextMenuItems(e) {
    if (!e)
      return !1;
    const t = this, i = g(e.target);
    let n, r, a, o;
    return B(l2, function() {
      var s, l;
      const u = t.getView(this);
      if (n = u && u.element(), n && (n.is(i) || n.find(i).length)) {
        a = i.closest(".dx-row > td, .dx-row > tr"), r = a.parent();
        const d = u.getRowIndex(r), c = a[0] && a[0].cellIndex, h = r.data("options"), p = {
          event: e,
          targetElement: Ie(i),
          target: s2[this],
          rowIndex: d,
          row: u._getRows()[d],
          columnIndex: c,
          column: (l = (s = h == null ? void 0 : h.cells) === null || s === void 0 ? void 0 : s[c]) === null || l === void 0 ? void 0 : l.column
        };
        if (p.items = u.getContextMenuItems && u.getContextMenuItems(p), t.executeAction("onContextMenuPreparing", p), t._contextMenuPrepared(p), o = p.items, o)
          return !1;
      }
    }), o;
  },
  _contextMenuPrepared: $
}), d2 = at.View.inherit({
  _renderCore() {
    const e = this, t = e.element().addClass(o2);
    this.setAria("role", "presentation", t), this._createComponent(t, kv, {
      onPositioning(i) {
        const {
          event: n
        } = i, r = i.component, a = e.getController("contextMenu").getContextMenuItems(n);
        a ? (r.option("items", a), n.stopPropagation()) : i.cancel = !0;
      },
      onItemClick(i) {
        i.itemData.onItemClick && i.itemData.onItemClick(i);
      },
      cssClass: e.getWidgetContainerClass(),
      target: e.component.$element()
    });
  }
}), c2 = {
  defaultOptions: () => ({
    onContextMenuPreparing: null
  }),
  controllers: {
    contextMenu: u2
  },
  views: {
    contextMenuView: d2
  }
};
xe.registerModule("contextMenu", c2);
const h2 = at.ViewController.inherit({
  init() {
    this._columnHeadersView = this.getView("columnHeadersView"), this._rowsView = this.getView("rowsView");
  },
  _createErrorRow(e, t) {
    const i = this;
    let n, r;
    const a = this._renderErrorMessage(e);
    return t ? (n = g("<tr>").addClass("dx-error-row"), r = g("<div>").addClass("dx-closebutton").addClass(i.addWidgetPrefix("action")), w.on(r, Xe, i.createAction((o) => {
      const s = o.event;
      let l;
      const u = g(s.currentTarget).closest(".dx-error-row").index();
      s.stopPropagation(), B(t, (d, c) => {
        l = g(c).children("tbody").children("tr").eq(u), i.removeErrorRow(l);
      }), i.getController("resizing") && i.getController("resizing").fireContentReadyAction();
    })), g("<td>").attr({
      colSpan: i.getController("columns").getVisibleColumns().length,
      role: "presentation"
    }).prepend(r).append(a).appendTo(n), n) : a;
  },
  _renderErrorMessage(e) {
    const t = e.url ? e.message.replace(e.url, "") : e.message || e, i = g("<div>").addClass("dx-error-message").text(t);
    return e.url && g("<a>").attr("href", e.url).text(e.url).appendTo(i), i;
  },
  renderErrorRow(e, t, i) {
    const n = this;
    let r, a;
    if (i)
      return i.find(".dx-error-message").remove(), r = n._createErrorRow(e), i.prepend(r), r;
    const o = t >= 0 || !n._columnHeadersView.isVisible() ? n._rowsView : n._columnHeadersView, s = o.getTableElements();
    B(s, (u, d) => {
      if (r = n._createErrorRow(e, s), a = a || r, t >= 0) {
        const c = o._getRowElements(g(d)).eq(t);
        n.removeErrorRow(c.next()), r.insertAfter(c);
      } else {
        const c = g(d).children("tbody"), h = c.children("tr");
        n._columnHeadersView.isVisible() ? (n.removeErrorRow(h.last()), g(d).append(r)) : (n.removeErrorRow(h.first()), c.first().prepend(r));
      }
    });
    const l = n.getController("resizing");
    return l && l.fireContentReadyAction(), a;
  },
  removeErrorRow(e) {
    if (!e) {
      const t = this._columnHeadersView && this._columnHeadersView.element();
      if (e = t && t.find(".dx-error-row"), !e || !e.length) {
        const i = this._rowsView.element();
        e = i && i.find(".dx-error-row");
      }
    }
    e && e.hasClass("dx-error-row") && e.remove();
  },
  optionChanged(e) {
    const t = this;
    switch (e.name) {
      case "errorRowEnabled":
        e.handled = !0;
        break;
      default:
        t.callBase(e);
    }
  }
}), p2 = {
  defaultOptions: () => ({
    errorRowEnabled: !0
  }),
  controllers: {
    errorHandling: h2
  },
  extenders: {
    controllers: {
      data: {
        init() {
          const e = this, t = e.getController("errorHandling");
          e.callBase(), e.dataErrorOccurred.add((i, n) => {
            e.option("errorRowEnabled") && t.renderErrorRow(i, void 0, n);
          }), e.changed.add((i) => {
            if (i && i.changeType === "loadError")
              return;
            const n = e.getController("errorHandling"), r = e.getController("editing");
            r && !r.hasChanges() && n && n.removeErrorRow();
          });
        }
      }
    }
  }
};
xe.registerModule("errorHandling", p2);
var a0 = "borders", f2 = "table-fixed", g2 = "important-margin", nA = "dx-gridbase-container", _2 = "tr.dx-group-row", bu = "adaptiveHidden", Fv = ["columnsSeparatorView", "blockSeparatorView", "trackerView", "headerPanel", "columnHeadersView", "rowsView", "footerView", "columnChooserView", "filterPanelView", "pagerView", "draggingHeaderView", "contextMenuView", "errorView", "headerFilterView", "filterBuilderView"], ls = function(e) {
  return Te(e) && e.slice(-1) === "%";
}, v2 = function(e) {
  return Te(e) && e.slice(-2) === "px";
}, rA = function(e, t) {
  var i = e._rowsView.contentWidth(), n = e._getTotalWidth(t, i);
  return i - n;
}, m2 = function(e, t, i, n) {
  return rA(e, n.map(function(r, a) {
    return a === t ? i : r;
  }));
}, C2 = function(e, t) {
  n$(e), ae.setSelectionRange(e, t);
}, x2 = {
  _initPostRenderHandlers: function() {
    var e = this._dataController;
    this._refreshSizesHandler || (this._refreshSizesHandler = (t) => {
      e.changed.remove(this._refreshSizesHandler), this._refreshSizes(t);
    }, e.changed.add(() => {
      e.changed.add(this._refreshSizesHandler);
    }));
  },
  _refreshSizes: function(e) {
    var t, i = this, n = e && e.changeType, r = e && e.isDelayed, a = i._dataController.items();
    if (!e || n === "refresh" || n === "prepend" || n === "append")
      r || (t = i.resize());
    else if (n === "update") {
      var o;
      if (((o = e.changeTypes) === null || o === void 0 ? void 0 : o.length) === 0)
        return;
      (a.length > 1 || e.changeTypes[0] !== "insert") && !(a.length === 0 && e.changeTypes[0] === "remove") && !e.needUpdateDimensions ? (t = new U(), this._waitAsyncTemplates().done(() => {
        oi(() => Bt(() => oi(() => {
          i._setScrollerSpacing(), i._rowsView.resize(), t.resolve();
        })));
      }).fail(t.reject)) : t = i.resize();
    }
    n && n !== "updateSelection" && n !== "updateFocusedRow" && n !== "pageIndex" && !r && ge(t).done(function() {
      i._setAriaRowColCount(), i.fireContentReadyAction();
    });
  },
  fireContentReadyAction: function() {
    this.component._fireContentReadyAction();
  },
  _setAriaRowColCount: function() {
    var e = this.component;
    e.setAria({
      rowCount: this._dataController.totalItemsCount(),
      colCount: e.columnCount()
    }, e.$element().children("." + nA));
  },
  _getBestFitWidths: function() {
    var e, t = this._rowsView, i = this._columnHeadersView, n = t.getColumnWidths();
    if (!((e = n) !== null && e !== void 0 && e.length)) {
      var r, a = i.getTableElement();
      i.setTableElement((r = t.getTableElement()) === null || r === void 0 ? void 0 : r.children(".dx-header")), n = i.getColumnWidths(), i.setTableElement(a);
    }
    return n;
  },
  _setVisibleWidths: function(e, t) {
    var i = this._columnsController;
    i.beginUpdate(), B(e, function(n, r) {
      var a = i.getColumnId(r);
      i.columnOption(a, "visibleWidth", t[n]);
    }), i.endUpdate();
  },
  _toggleBestFitModeForView: function(e, t, i) {
    if (!(!e || !e.isVisible())) {
      var n = this._rowsView.getTableElements(), r = e.getTableElements();
      B(n, (a, o) => {
        var s, l = g(o), u = r.eq(a);
        u && u.length && (i ? s = u.children("tbody").appendTo(l) : s = l.children("." + t).appendTo(u), s.toggleClass(t, i), s.toggleClass(this.addWidgetPrefix("best-fit"), i));
      });
    }
  },
  _toggleBestFitMode: function(e) {
    var t = this._rowsView.getTableElement(), i = this._rowsView.getTableElements().eq(1);
    t && (t.css("tableLayout", e ? "auto" : "fixed"), t.children("colgroup").css("display", e ? "none" : ""), B(i.find(_2), (n, r) => {
      g(r).css("display", e ? "none" : "");
    }), i.toggleClass(this.addWidgetPrefix(f2), !e), this._toggleBestFitModeForView(this._columnHeadersView, "dx-header", e), this._toggleBestFitModeForView(this._footerView, "dx-footer", e), this._needStretch() && (t.get(0).style.width = e ? "auto" : ""));
  },
  _toggleContentMinHeight: function(e) {
    var t = this._rowsView.getScrollable(), i = this._rowsView._findContentElement();
    (t == null ? void 0 : t.option("useNative")) === !1 && i.css({
      minHeight: e ? ae.getContentHeightLimit(lt) : ""
    });
  },
  _synchronizeColumns: function() {
    var e = this._columnsController, t = e.getVisibleColumns(), i = this.option("columnAutoWidth"), n = this.option("wordWrapEnabled"), r = this._needBestFit(), a = !1, o, s = !1, l = [], u, d;
    !r && B(t, function(h, p) {
      if (p.width === "auto")
        return r = !0, !1;
    }), B(t, function(h, p) {
      if (p.minWidth)
        return a = !0, !1;
    }), this._setVisibleWidths(t, []);
    var c = this.component.$element();
    r && (u = ee.getActiveElement(c.get(0)), d = ae.getSelectionRange(u), this._toggleBestFitMode(!0), o = !0), this._toggleContentMinHeight(n), c && c.get(0) && this._maxWidth && (delete this._maxWidth, c[0].style.maxWidth = ""), oi(() => {
      if (r ? (l = this._getBestFitWidths(), B(t, function(p, f) {
        var v = e.getColumnId(f);
        e.columnOption(v, "bestFitWidth", l[p], !0);
      })) : a && (l = this._getBestFitWidths()), B(t, function(p) {
        var f = this.width;
        f !== "auto" && (x(f) ? l[p] = rt(f) || v2(f) ? parseFloat(f) : f : i || (l[p] = void 0));
      }), o && (this._toggleBestFitMode(!1), o = !1, u && u !== ee.getActiveElement())) {
        var h = Et(u).bottom < 0;
        h || C2(u, d);
      }
      s = this._correctColumnWidths(l, t), i && (function() {
        var p;
        B(t, function(f, v) {
          v.type === "groupExpand" && (p = l[f]);
        }), B(t, function(f, v) {
          v.type === "groupExpand" && p && (l[f] = p);
        });
      }(), this._needStretch() && this._processStretch(l, t)), Bt(() => {
        (r || s) && this._setVisibleWidths(t, l), n && this._toggleContentMinHeight(!1);
      });
    });
  },
  _needBestFit: function() {
    return this.option("columnAutoWidth");
  },
  _needStretch: function() {
    return this._columnsController.getVisibleColumns().some((e) => e.width === "auto" && !e.command);
  },
  _getAverageColumnsWidth: function(e) {
    var t = rA(this, e), i = e.filter(function(n) {
      return n === void 0;
    }).length;
    return t / i;
  },
  _correctColumnWidths: function(e, t) {
    var i = this, n, r = !1, a = !1, o = !1, s = i.component.$element(), l = i._hasWidth, u = function() {
      var m = n, C = t[m], b = e[m] === bu, A = e[m], R = C.minWidth;
      if (R) {
        if (A === void 0) {
          var k = i._getAverageColumnsWidth(e);
          A = k;
        } else if (ls(A)) {
          var H = m2(i, m, R, e);
          H < 0 && (A = -1);
        }
      }
      var K = i._getRealColumnWidth(m, e.map(function(j, z) {
        return m === z ? A : j;
      }));
      R && !b && K < R && (e[m] = R, o = !0, n = -1), x(C.width) || (a = !0), ls(C.width) && (r = !0);
    };
    for (n = 0; n < t.length; n++)
      u();
    if (!a && e.length) {
      var d = i._rowsView.element(), c = i._rowsView.contentWidth(), h = i._rowsView.getScrollbarWidth(), p = i._getTotalWidth(e, c);
      if (p < c) {
        var f = ae.getLastResizableColumnIndex(t, e);
        if (f >= 0 && (e[f] = "auto", o = !0, l === !1 && !r)) {
          var v = i.option("showBorders") ? Math.ceil(Ge(d) - Wf(d)) : 0;
          i._maxWidth = p + h + v, s.css("maxWidth", i._maxWidth);
        }
      }
    }
    return o;
  },
  _processStretch: function(e, t) {
    var i = this._rowsView.contentWidth(), n = this._getTotalWidth(e, i), r = {
      length: 0
    };
    if (e.length) {
      B(t, function(u) {
        (this.width || e[u] === bu) && (r[u] = !0, r.length++);
      });
      var a = i - n, o = Math.floor(a / (e.length - r.length)), s = a - o * (e.length - r.length);
      if (a >= 0)
        for (var l = 0; l < e.length; l++)
          r[l] || (e[l] += o, s > 0 && (s < 1 ? (e[l] += s, s = 0) : (e[l]++, s--)));
    }
  },
  _getRealColumnWidth: function(e, t, i) {
    var n = 1, r = t[e];
    if (!ls(r))
      return parseFloat(r);
    var a = t.reduce((u, d, c) => ls(d) ? u + parseFloat(d) : u, 0), o = t.reduce((u, d) => !d || d === bu || ls(d) ? u : u + parseFloat(d), 0);
    i = i || this._rowsView.contentWidth();
    var s = i - o, l = a * i / 100;
    return o > 0 && l + o >= i && (n = l > s ? s / l : 1), parseFloat(r) * i * n / 100;
  },
  _getTotalWidth: function(e, t) {
    for (var i = 0, n = 0; n < e.length; n++) {
      var r = e[n];
      r && r !== bu && (i += this._getRealColumnWidth(n, e, t));
    }
    return Math.ceil(i);
  },
  _getGroupElement: function() {
    return this.component.$element().children().get(0);
  },
  updateSize: function(e) {
    var t = g(e), i = this.addWidgetPrefix(g2);
    if (this._hasHeight === void 0 && t && t.is(":visible") && Ae(t)) {
      var n = t.children("." + this.getWidgetContainerClass());
      n.length && n.detach(), this._hasHeight = !!Fe(t);
      var r = Ae(t);
      t.addClass(i), this._hasWidth = Ae(t) === r, t.removeClass(i), n.length && n.appendTo(t);
    }
  },
  publicMethods: function() {
    return ["resize", "updateDimensions"];
  },
  _waitAsyncTemplates: function() {
    var e, t, i;
    return ge((e = this._columnHeadersView) === null || e === void 0 ? void 0 : e.waitAsyncTemplates(), (t = this._rowsView) === null || t === void 0 ? void 0 : t.waitAsyncTemplates(), (i = this._footerView) === null || i === void 0 ? void 0 : i.waitAsyncTemplates());
  },
  resize: function() {
    if (!this.component._requireResize) {
      var e = new U();
      return this._waitAsyncTemplates().done(() => {
        ge(this.updateDimensions()).done(e.resolve).fail(e.reject);
      }).fail(e.reject), e.promise();
    }
  },
  updateDimensions: function(e) {
    var t = this;
    if (t._initPostRenderHandlers(), !!t._checkSize(e)) {
      var i = t._resizeDeferred, n = t._resizeDeferred = new U();
      return ge(i).always(function() {
        Bt(function() {
          t._dataController.isLoaded() && t._synchronizeColumns(), t._resetGroupElementHeight(), oi(function() {
            Bt(function() {
              oi(function() {
                t._updateDimensionsCore();
              });
            });
          });
        }).done(n.resolve).fail(n.reject);
      }), n.promise();
    }
  },
  _resetGroupElementHeight: function() {
    var e = this._getGroupElement(), t = this._rowsView.getScrollable();
    e && e.style.height && (!t || !t.scrollTop()) && (e.style.height = "");
  },
  _checkSize: function(e) {
    var t = this.component.$element();
    return !(e && (this._lastWidth === Ae(t) && this._lastHeight === Fe(t) && this._devicePixelRatio === ke().devicePixelRatio || !t.is(":visible")));
  },
  _setScrollerSpacingCore: function() {
    var e = this, t = e._rowsView.getScrollbarWidth(), i = e._rowsView.getScrollbarWidth(!0);
    Bt(function() {
      e._columnHeadersView && e._columnHeadersView.setScrollerSpacing(t), e._footerView && e._footerView.setScrollerSpacing(t), e._rowsView.setScrollerSpacing(t, i);
    });
  },
  _setScrollerSpacing: function() {
    var e = this._rowsView.getScrollable(), t = this.option("scrolling.useNative") === !0;
    !e || t ? Bt(() => {
      oi(() => {
        this._setScrollerSpacingCore();
      });
    }) : this._setScrollerSpacingCore();
  },
  _updateDimensionsCore: function() {
    var e = this, t = e._dataController, i = e.getController("editorFactory"), n = e._rowsView, r = e.component.$element(), a = this._getGroupElement(), o = Fe(r), s = e.option("height") || r.get(0).style.height, l = !!s && s !== "auto", u = parseInt(r.css("maxHeight")), d = u && o >= u, c = a && a.scrollHeight === a.offsetHeight;
    e.updateSize(r), Bt(function() {
      var h = e._hasHeight || !!u || l;
      if (n.hasHeight(h), d && !c && g(a).css("height", u), !t.isLoaded()) {
        n.setLoading(t.isLoading());
        return;
      }
      oi(function() {
        e._updateLastSizes(r), e._setScrollerSpacing(), B(Fv, function(p, f) {
          var v = e.getView(f);
          v && v.resize();
        }), i && i.resize();
      });
    });
  },
  _updateLastSizes: function(e) {
    this._lastWidth = Ae(e), this._lastHeight = Fe(e), this._devicePixelRatio = ke().devicePixelRatio;
  },
  optionChanged: function(e) {
    switch (e.name) {
      case "width":
      case "height":
        this.component._renderDimensions(), this.resize();
      case "renderAsync":
        e.handled = !0;
        return;
      default:
        this.callBase(e);
    }
  },
  init: function() {
    this._dataController = this.getController("data"), this._columnsController = this.getController("columns"), this._columnHeadersView = this.getView("columnHeadersView"), this._footerView = this.getView("footerView"), this._rowsView = this.getView("rowsView");
  }
}, y2 = at.ViewController.inherit(x2), b2 = at.ViewController.inherit({
  _scrollChangedHandler: function(e, t, i) {
    for (var n = 0; n < e.length; n++)
      e[n] && e[n].name !== i && e[n].scrollTo({
        left: t.left,
        top: t.top
      });
  },
  init: function() {
    for (var e = [this.getView("columnHeadersView"), this.getView("footerView"), this.getView("rowsView")], t = 0; t < e.length; t++) {
      var i = e[t];
      i && i.scrollChanged.add(this._scrollChangedHandler.bind(this, e));
    }
  }
}), S2 = at.View.inherit({
  _endUpdateCore: function() {
    this.component._requireResize && (this.component._requireResize = !1, this._resizingController.resize());
  },
  _getWidgetAriaLabel: function() {
    return "dxDataGrid-ariaDataGrid";
  },
  init: function() {
    this._resizingController = this.getController("resizing"), this._dataController = this.getController("data");
  },
  getView: function(e) {
    return this.component._views[e];
  },
  element: function() {
    return this._groupElement;
  },
  optionChanged: function(e) {
    x(this._groupElement) && e.name === "showBorders" ? (this._groupElement.toggleClass(this.addWidgetPrefix(a0), !!e.value), e.handled = !0) : this.callBase(e);
  },
  _renderViews: function(e) {
    var t = this;
    B(Fv, function(i, n) {
      var r = t.getView(n);
      r && r.render(e);
    });
  },
  _getTableRoleName: function() {
    return "grid";
  },
  render: function(e) {
    var t = !this._groupElement, i = this._groupElement || g("<div>").addClass(this.getWidgetContainerClass());
    i.addClass(nA), i.toggleClass(this.addWidgetPrefix(a0), !!this.option("showBorders")), this.setAria("role", "presentation", e), this.component.setAria({
      role: this._getTableRoleName(),
      label: q.format(this._getWidgetAriaLabel())
    }, i), this._rootElement = e || this._rootElement, t && (this._groupElement = i, Re() && this.getController("resizing").updateSize(e), i.appendTo(e)), this._renderViews(i);
  },
  update: function() {
    var e = this._rootElement, t = this._groupElement, i = this.getController("resizing");
    e && t && (i.resize(), this._dataController.isLoaded() && this._resizingController.fireContentReadyAction());
  }
}), E2 = {
  defaultOptions: function() {
    return {
      showBorders: !1,
      renderAsync: !1
    };
  },
  controllers: {
    resizing: y2,
    synchronizeScrolling: b2
  },
  views: {
    gridView: S2
  },
  VIEW_NAMES: Fv
};
xe.registerModule("gridView", E2);
var w2 = Ha.inherit({
  _initMarkup() {
    this._deferredItems = [], this.callBase();
  },
  _renderItemContent(e) {
    var t = new U(), i = new U();
    this._deferredItems[e.index] = i;
    var n = this.callBase.call(this, e);
    return i.done(() => {
      t.resolve(n);
    }), t.promise();
  },
  _onItemTemplateRendered: function(e, t) {
    return () => {
      this._deferredItems[t.index].resolve();
    };
  },
  _postProcessRenderItems: $,
  _renderItemsAsync() {
    var e = new U();
    return ge.apply(this, this._deferredItems).done(() => {
      this._postProcessRenderItems(), e.resolve();
    }), e.promise();
  },
  _clean() {
    this.callBase(), this._deferredItems = [];
  }
}), aA = "dx-toolbar", wp = "dx-toolbar-before", I2 = "dx-toolbar-center", o0 = "dx-toolbar-after", T2 = "dx-toolbar-mini", D2 = "dx-toolbar-item", us = "dx-toolbar-label", A2 = "dx-toolbar-button", O2 = "dx-toolbar-items-container", R2 = "dx-toolbar-group", s0 = "dx-toolbar-compact", l0 = "text", B2 = "default", k2 = "contained", F2 = "dxToolbarItemDataKey", P2 = 15;
class oA extends w2 {
  _getSynchronizableOptionsForCreateComponent() {
    return super._getSynchronizableOptionsForCreateComponent().filter((t) => t !== "disabled");
  }
  _initTemplates() {
    super._initTemplates();
    var t = new $a(function(i, n, r) {
      if (Me(n)) {
        var {
          text: a,
          html: o,
          widget: s
        } = n;
        if (a && i.text(a).wrapInner("<div>"), o && i.html(o), s === "dxDropDownButton") {
          var l;
          n.options = (l = n.options) !== null && l !== void 0 ? l : {}, x(n.options.stylingMode) || (n.options.stylingMode = this.option("useFlatButtons") ? l0 : k2);
        }
        if (s === "dxButton") {
          if (this.option("useFlatButtons")) {
            var u, d;
            n.options = (u = n.options) !== null && u !== void 0 ? u : {}, n.options.stylingMode = (d = n.options.stylingMode) !== null && d !== void 0 ? d : l0;
          }
          if (this.option("useDefaultButtons")) {
            var c, h;
            n.options = (c = n.options) !== null && c !== void 0 ? c : {}, n.options.type = (h = n.options.type) !== null && h !== void 0 ? h : B2;
          }
        }
      } else
        i.text(String(n));
      this._getTemplate("dx-polymorph-widget").render({
        container: i,
        model: r,
        parent: this
      });
    }.bind(this), ["text", "html", "widget", "options"], this.option("integrationOptions.watchMethod"));
    this._templateManager.addDefaultTemplates({
      item: t,
      menuItem: t
    });
  }
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      renderAs: "topToolbar",
      grouped: !1,
      useFlatButtons: !1,
      useDefaultButtons: !1
    });
  }
  _defaultOptionsRules() {
    return super._defaultOptionsRules().concat([{
      device: function() {
        return St();
      },
      options: {
        useFlatButtons: !0
      }
    }]);
  }
  _itemContainer() {
    return this._$toolbarItemsContainer.find([".".concat(wp), ".".concat(I2), ".".concat(o0)].join(","));
  }
  _itemClass() {
    return D2;
  }
  _itemDataKey() {
    return F2;
  }
  _dimensionChanged() {
    this._disposed || (this._arrangeItems(), this._applyCompactMode());
  }
  _initMarkup() {
    this._renderToolbar(), this._renderSections(), super._initMarkup();
  }
  _render() {
    super._render(), this._renderItemsAsync(), this._updateDimensionsInMaterial();
  }
  _postProcessRenderItems() {
    this._arrangeItems();
  }
  _renderToolbar() {
    this.$element().addClass(aA), this._$toolbarItemsContainer = g("<div>").addClass(O2).appendTo(this.$element()), this.setAria("role", "toolbar");
  }
  _renderSections() {
    var t = this._$toolbarItemsContainer;
    B(["before", "center", "after"], (i, n) => {
      var r = "dx-toolbar-".concat(n), a = t.find(".".concat(r));
      a.length || (this["_$".concat(n, "Section")] = g("<div>").addClass(r).appendTo(t));
    });
  }
  _arrangeItems(t) {
    var i;
    t = (i = t) !== null && i !== void 0 ? i : Ae(this.$element()), this._$centerSection.css({
      margin: "0 auto",
      float: "none"
    });
    var n = Et(this._$beforeSection.get(0)), r = Et(this._$afterSection.get(0));
    this._alignCenterSection(n, r, t);
    var a = this._$toolbarItemsContainer.find(".".concat(us)).eq(0), o = a.parent();
    if (a.length) {
      var s = n.width ? n.width : a.position().left, l = o.hasClass(wp) ? 0 : s, u = o.hasClass(o0) ? 0 : r.width, d = 0;
      o.children().not(".".concat(us)).each(function() {
        d += Ge(this);
      });
      var c = t - d, h = Math.max(c - l - u, 0);
      if (o.hasClass(wp))
        this._alignSection(this._$beforeSection, h);
      else {
        var p = Ge(a) - Ae(a);
        a.css("maxWidth", h - p);
      }
    }
  }
  _alignCenterSection(t, i, n) {
    this._alignSection(this._$centerSection, n - t.width - i.width);
    var r = this.option("rtlEnabled"), a = r ? i : t, o = r ? t : i, s = Et(this._$centerSection.get(0));
    (a.right > s.left || s.right > o.left) && this._$centerSection.css({
      marginLeft: a.width,
      marginRight: o.width,
      float: a.width > o.width ? "none" : "right"
    });
  }
  _alignSection(t, i) {
    var n = t.find(".".concat(us)), r = n.toArray();
    i -= this._getCurrentLabelsPaddings(r);
    var a = this._getCurrentLabelsWidth(r), o = Math.abs(a - i);
    i < a ? (r = r.reverse(), this._alignSectionLabels(r, o, !1)) : this._alignSectionLabels(r, o, !0);
  }
  _alignSectionLabels(t, i, n) {
    for (var r = function(d) {
      return Et(d).width;
    }, a = 0; a < t.length; a++) {
      var o = g(t[a]), s = Math.ceil(r(t[a])), l = void 0;
      n && o.css("maxWidth", "inherit");
      var u = Math.ceil(n ? r(t[a]) : s);
      if (u < i)
        l = n ? u : 0, i -= u;
      else {
        l = n ? s + i : s - i, o.css("maxWidth", l);
        break;
      }
      o.css("maxWidth", l);
    }
  }
  _applyCompactMode() {
    var t = this.$element();
    t.removeClass(s0), this.option("compactMode") && this._getSummaryItemsWidth(this.itemElements(), !0) > Ae(t) && t.addClass(s0);
  }
  _getCurrentLabelsWidth(t) {
    var i = 0;
    return t.forEach(function(n, r) {
      i += Ge(n);
    }), i;
  }
  _getCurrentLabelsPaddings(t) {
    var i = 0;
    return t.forEach(function(n, r) {
      i += Ge(n) - Ae(n);
    }), i;
  }
  _renderItem(t, i, n, r) {
    var a, o, s = (a = i.location) !== null && a !== void 0 ? a : "center", l = n ?? this["_$".concat(s, "Section")], u = !!((o = i.text) !== null && o !== void 0 ? o : i.html), d = super._renderItem(t, i, l, r);
    return d.toggleClass(A2, !u).toggleClass(us, u).addClass(i.cssClass), d;
  }
  _renderGroupedItems() {
    B(this.option("items"), (t, i) => {
      var n, r = i.items, a = g("<div>").addClass(R2), o = (n = i.location) !== null && n !== void 0 ? n : "center";
      !r || !r.length || (B(r, (s, l) => {
        this._renderItem(s, l, a, null);
      }), this._$toolbarItemsContainer.find(".dx-toolbar-".concat(o)).append(a));
    });
  }
  _renderItems(t) {
    var i = this.option("grouped") && t.length && t[0].items;
    i ? this._renderGroupedItems() : super._renderItems(t);
  }
  _getToolbarItems() {
    var t;
    return (t = this.option("items")) !== null && t !== void 0 ? t : [];
  }
  _renderContentImpl() {
    var t = this._getToolbarItems();
    this.$element().toggleClass(T2, t.length === 0), this._renderedItemsCount ? this._renderItems(t.slice(this._renderedItemsCount)) : this._renderItems(t), this._applyCompactMode();
  }
  _renderEmptyMessage() {
  }
  _clean() {
    this._$toolbarItemsContainer.children().empty(), this.$element().empty(), delete this._$beforeSection, delete this._$centerSection, delete this._$afterSection;
  }
  _visibilityChanged(t) {
    t && this._arrangeItems();
  }
  _isVisible() {
    return Ae(this.$element()) > 0 && Fe(this.$element()) > 0;
  }
  _getIndexByItem(t) {
    return this._getToolbarItems().indexOf(t);
  }
  _itemOptionChanged(t, i, n) {
    super._itemOptionChanged.apply(this, [t, i, n]), this._arrangeItems();
  }
  _optionChanged(t) {
    var {
      name: i,
      value: n
    } = t;
    switch (i) {
      case "width":
        super._optionChanged.apply(this, arguments), this._dimensionChanged();
        break;
      case "renderAs":
      case "useFlatButtons":
      case "useDefaultButtons":
        this._invalidate();
        break;
      case "compactMode":
        this._applyCompactMode();
        break;
      case "grouped":
        break;
      default:
        super._optionChanged.apply(this, arguments);
    }
  }
  _dispose() {
    super._dispose(), clearTimeout(this._waitParentAnimationTimeout);
  }
  _updateDimensionsInMaterial() {
    St() && Promise.all([(() => new Promise((t) => {
      var i = () => {
        var r = !0;
        return this.$element().parents().each((a, o) => {
          if (ft.isAnimating(g(o)))
            return r = !1, !1;
        }), r && t(), r;
      }, n = () => {
        clearTimeout(this._waitParentAnimationTimeout), this._waitParentAnimationTimeout = setTimeout(() => i() || n(), P2);
      };
      n();
    }))(), (() => {
      var t = this.$element().find(".".concat(us)), i = [];
      return t.each((n, r) => {
        var a = g(r).text(), o = g(r).css("fontWeight");
        i.push(oM(a, o));
      }), Promise.all(i);
    })()]).then(() => {
      this._dimensionChanged();
    });
  }
}
We("dxToolbarBase", oA);
var M2 = "dx-buttongroup", L2 = ["dxAutocomplete", "dxButton", "dxCheckBox", "dxDateBox", "dxMenu", "dxSelectBox", "dxTabs", "dxTextBox", "dxButtonGroup", "dxDropDownButton"], V2 = function(e) {
  var t = e.data && e.data(), i = t && t.dxComponents, n = i && i[0];
  return n && t[n];
};
function jd(e, t) {
  var i;
  if (e) {
    var n = e._findItemElementByItem(t);
    if (n.length) {
      var r = e._getItemData(n), a = !!((i = r.options) !== null && i !== void 0 && i.disabled || r.disabled || e.option("disabled")), {
        widget: o
      } = r;
      if (o && L2.indexOf(o) !== -1) {
        var s = n.find(o.toLowerCase().replace("dx", ".dx-"));
        if (s.length) {
          var l, u, d = V2(s);
          if (!d)
            return;
          var c = (l = d._focusTarget) === null || l === void 0 ? void 0 : l.call(d);
          if (o === "dxDropDownButton")
            c = c && c.find(".".concat(M2));
          else {
            var h;
            c = (h = c) !== null && h !== void 0 ? h : g(d.element());
          }
          var p = (u = r.options) === null || u === void 0 ? void 0 : u.tabIndex;
          a ? c.attr("tabIndex", -1) : c.attr("tabIndex", p ?? 0);
        }
      }
    }
  }
}
var N2 = "dx-toolbar-label";
class $2 {
  constructor(t) {
    this._toolbar = t;
  }
  _initMarkup() {
  }
  _updateMenuVisibility() {
  }
  _renderMenuItems() {
  }
  _renderItem() {
  }
  _getMenuItems() {
  }
  _getToolbarItems() {
    var t;
    return (t = this._toolbar.option("items")) !== null && t !== void 0 ? t : [];
  }
  _getItemsWidth() {
    return this._toolbar._getSummaryItemsWidth(this._toolbar.itemElements(), !0);
  }
  _arrangeItems() {
    var t = this._toolbar._$toolbarItemsContainer.find(".".concat(N2)).eq(0);
    if (t.length) {
      var i = Ae(this._toolbar.$element()), n = Ge(t) - Ae(t);
      t.css("maxWidth", i - n);
    }
  }
  _hideOverflowItems() {
  }
  _dimensionChanged() {
  }
  _itemOptionChanged() {
  }
  _optionChanged() {
  }
}
var $c = "dxswipestart", Hc = "dxswipe", Kl = "dxswipeend", H2 = {
  defaultItemSizeFunc: function() {
    return Ae(this.getElement());
  },
  getBounds: function() {
    return [this._maxLeftOffset, this._maxRightOffset];
  },
  calcOffsetRatio: function(e) {
    var t = _t(e);
    return (t.x - (this._savedEventData && this._savedEventData.x || 0)) / this._itemSizeFunc().call(this, e);
  },
  isFastSwipe: function(e) {
    var t = _t(e);
    return this.FAST_SWIPE_SPEED_LIMIT * Math.abs(t.x - this._tickData.x) >= t.time - this._tickData.time;
  }
}, z2 = {
  defaultItemSizeFunc: function() {
    return Fe(this.getElement());
  },
  getBounds: function() {
    return [this._maxTopOffset, this._maxBottomOffset];
  },
  calcOffsetRatio: function(e) {
    var t = _t(e);
    return (t.y - (this._savedEventData && this._savedEventData.y || 0)) / this._itemSizeFunc().call(this, e);
  },
  isFastSwipe: function(e) {
    var t = _t(e);
    return this.FAST_SWIPE_SPEED_LIMIT * Math.abs(t.y - this._tickData.y) >= t.time - this._tickData.time;
  }
}, W2 = {
  horizontal: H2,
  vertical: z2
}, G2 = Al.inherit({
  TICK_INTERVAL: 300,
  FAST_SWIPE_SPEED_LIMIT: 10,
  ctor: function(e) {
    this.callBase(e), this.direction = "horizontal", this.elastic = !0;
  },
  _getStrategy: function() {
    return W2[this.direction];
  },
  _defaultItemSizeFunc: function() {
    return this._getStrategy().defaultItemSizeFunc.call(this);
  },
  _itemSizeFunc: function() {
    return this.itemSizeFunc || this._defaultItemSizeFunc;
  },
  _init: function(e) {
    this._tickData = _t(e);
  },
  _start: function(e) {
    this._savedEventData = _t(e), e = this._fireEvent($c, e), e.cancel || (this._maxLeftOffset = e.maxLeftOffset, this._maxRightOffset = e.maxRightOffset, this._maxTopOffset = e.maxTopOffset, this._maxBottomOffset = e.maxBottomOffset);
  },
  _move: function(e) {
    var t = this._getStrategy(), i = _t(e), n = t.calcOffsetRatio.call(this, e);
    n = this._fitOffset(n, this.elastic), i.time - this._tickData.time > this.TICK_INTERVAL && (this._tickData = i), this._fireEvent(Hc, e, {
      offset: n
    }), e.cancelable !== !1 && e.preventDefault();
  },
  _end: function(e) {
    var t = this._getStrategy(), i = t.calcOffsetRatio.call(this, e), n = t.isFastSwipe.call(this, e), r = i, a = this._calcTargetOffset(i, n);
    r = this._fitOffset(r, this.elastic), a = this._fitOffset(a, !1), this._fireEvent(Kl, e, {
      offset: r,
      targetOffset: a
    });
  },
  _fitOffset: function(e, t) {
    var i = this._getStrategy(), n = i.getBounds.call(this);
    return e < -n[0] ? t ? (-2 * n[0] + e) / 3 : -n[0] : e > n[1] ? t ? (2 * n[1] + e) / 3 : n[1] : e;
  },
  _calcTargetOffset: function(e, t) {
    var i;
    return t ? (i = Math.ceil(Math.abs(e)), e < 0 && (i = -i)) : i = Math.round(e), i;
  }
});
Ko({
  emitter: G2,
  events: [$c, Hc, Kl]
});
var u0 = "dx-list-item-badge-container", K2 = "dx-list-item-badge", U2 = "dx-badge", Ip = "dx-list-item-chevron-container", j2 = "dx-list-item-chevron", q2 = Na.inherit({
  _renderWatchers: function() {
    this.callBase(), this._startWatcher("badge", this._renderBadge.bind(this)), this._startWatcher("showChevron", this._renderShowChevron.bind(this));
  },
  _renderBadge: function(e) {
    if (this._$element.children("." + u0).remove(), !!e) {
      var t = g("<div>").addClass(u0).append(g("<div>").addClass(K2).addClass(U2).text(e)), i = this._$element.children("." + Ip).first();
      i.length > 0 ? t.insertBefore(i) : t.appendTo(this._$element);
    }
  },
  _renderShowChevron: function(e) {
    if (this._$element.children("." + Ip).remove(), !!e) {
      var t = g("<div>").addClass(Ip), i = g("<div>").addClass(j2);
      t.append(i).appendTo(this._$element);
    }
  }
}), d0 = "dx-scrollview-pull-down-loading", Tp = "dx-scrollview-pull-down-ready", X2 = "dx-scrollview-pull-down-image", Y2 = "dx-scrollview-pull-down-indicator", Z2 = "dx-scrollview-pull-down-text", Q2 = "dx-scrollview-pull-down-text-visible", Su = 0, ds = 1, Eu = 2, Dp = 3, J2 = 400, eK = gv.inherit({
  _init: function(e) {
    this.callBase(e), this._$topPocket = e._$topPocket, this._$pullDown = e._$pullDown, this._$refreshingText = e._$refreshingText, this._$scrollViewContent = g(e.content()), this._$container = g(e.container()), this._initCallbacks();
  },
  _initCallbacks: function() {
    this.pullDownCallbacks = qe(), this.releaseCallbacks = qe(), this.reachBottomCallbacks = qe();
  },
  render: function() {
    this.callBase(), this._renderPullDown(), this._releaseState();
  },
  _renderPullDown: function() {
    var e = g("<div>").addClass(X2), t = g("<div>").addClass(Y2), i = new bi(g("<div>")).$element(), n = this._$pullDownText = g("<div>").addClass(Z2);
    this._$pullingDownText = g("<div>").text(this.option("pullingDownText")).appendTo(n), this._$pulledDownText = g("<div>").text(this.option("pulledDownText")).appendTo(n), this._$refreshingText = g("<div>").text(this.option("refreshingText")).appendTo(n), this._$pullDown.empty().append(e).append(t.append(i)).append(n);
  },
  _releaseState: function() {
    this._state = Su, this._refreshPullDownText();
  },
  _refreshPullDownText: function() {
    var e = this, t = [{
      element: this._$pullingDownText,
      visibleState: Su
    }, {
      element: this._$pulledDownText,
      visibleState: ds
    }, {
      element: this._$refreshingText,
      visibleState: Eu
    }];
    B(t, function(i, n) {
      var r = e._state === n.visibleState ? "addClass" : "removeClass";
      n.element[r](Q2);
    });
  },
  update: function() {
    this.callBase(), this._setTopPocketOffset();
  },
  _updateDimensions: function() {
    this.callBase(), this._topPocketSize = this._$topPocket.get(0).clientHeight;
    var e = this._$scrollViewContent.get(0), t = this._$container.get(0);
    this._bottomBoundary = Math.max(e.clientHeight - t.clientHeight, 0);
  },
  _allowedDirections: function() {
    var e = this.callBase();
    return e.vertical = e.vertical || this._pullDownEnabled, e;
  },
  _setTopPocketOffset: function() {
    this._$topPocket.css({
      top: -this._topPocketSize
    });
  },
  handleEnd: function() {
    this.callBase(), this._complete();
  },
  handleStop: function() {
    this.callBase(), this._complete();
  },
  _complete: function() {
    this._state === ds && (this._setPullDownOffset(this._topPocketSize), clearTimeout(this._pullDownRefreshTimeout), this._pullDownRefreshTimeout = setTimeout(function() {
      this._pullDownRefreshing();
    }.bind(this), 400));
  },
  _setPullDownOffset: function(e) {
    kt(this._$topPocket, {
      top: e
    }), kt(this._$scrollViewContent, {
      top: e
    });
  },
  handleScroll: function(e) {
    if (this.callBase(e), this._state !== Eu) {
      var t = this.location().top, i = (this._location || 0) - t;
      this._location = t, this._isPullDown() ? this._pullDownReady() : i > 0 && this._isReachBottom() ? this._reachBottom() : this._stateReleased();
    }
  },
  _isPullDown: function() {
    return this._pullDownEnabled && this._location >= this._topPocketSize;
  },
  _isReachBottom: function() {
    return this._reachBottomEnabled && Math.round(this._bottomBoundary + Math.floor(this._location)) <= 1;
  },
  _reachBottom: function() {
    this._state !== Dp && (this._state = Dp, this.reachBottomCallbacks.fire());
  },
  _pullDownReady: function() {
    this._state !== ds && (this._state = ds, this._$pullDown.addClass(Tp), this._refreshPullDownText());
  },
  _stateReleased: function() {
    this._state !== Su && (this._$pullDown.removeClass(d0).removeClass(Tp), this._releaseState());
  },
  _pullDownRefreshing: function() {
    this._state !== Eu && (this._state = Eu, this._$pullDown.addClass(d0).removeClass(Tp), this._refreshPullDownText(), this.pullDownCallbacks.fire());
  },
  pullDownEnable: function(e) {
    e && (this._updateDimensions(), this._setTopPocketOffset()), this._pullDownEnabled = e;
  },
  reachBottomEnable: function(e) {
    this._reachBottomEnabled = e;
  },
  pendingRelease: function() {
    this._state = ds;
  },
  release: function() {
    var e = new U();
    return this._updateDimensions(), clearTimeout(this._releaseTimeout), this._state === Dp && (this._state = Su), this._releaseTimeout = setTimeout(function() {
      this._setPullDownOffset(0), this._stateReleased(), this.releaseCallbacks.fire(), this._updateAction(), e.resolve();
    }.bind(this), J2), e.promise();
  },
  dispose: function() {
    clearTimeout(this._pullDownRefreshTimeout), clearTimeout(this._releaseTimeout), this.callBase();
  }
}), c0 = "dx-scrollview-pull-down-loading", tK = "dx-scrollview-pull-down-indicator", iK = "dx-scrollview-pull-down-refreshing", nK = "dx-icon-pulldown", Ap = 0, rK = 1, h0 = 2, Op = 4, wu = 5, aK = gv.inherit({
  _init: function(e) {
    this.callBase(e), this._$topPocket = e._$topPocket, this._$pullDown = e._$pullDown, this._$scrollViewContent = g(e.content()), this._$container = g(e.container()), this._initCallbacks(), this._location = 0;
  },
  _initCallbacks: function() {
    this.pullDownCallbacks = qe(), this.releaseCallbacks = qe(), this.reachBottomCallbacks = qe();
  },
  render: function() {
    this.callBase(), this._renderPullDown(), this._releaseState();
  },
  _renderPullDown: function() {
    var e = g("<div>").addClass(tK), t = new bi(g("<div>")).$element();
    this._$icon = g("<div>").addClass(nK), this._$pullDown.empty().append(this._$icon).append(e.append(t));
  },
  _releaseState: function() {
    this._state = Ap, this._releasePullDown(), this._updateDimensions();
  },
  _releasePullDown: function() {
    this._$pullDown.css({
      opacity: 0
    });
  },
  _updateDimensions: function() {
    this.callBase(), this._topPocketSize = this._$topPocket.get(0).clientHeight;
    var e = this._$scrollViewContent.get(0), t = this._$container.get(0);
    this._bottomBoundary = Math.max(e.clientHeight - t.clientHeight, 0);
  },
  _allowedDirections: function() {
    var e = this.callBase();
    return e.vertical = e.vertical || this._pullDownEnabled, e;
  },
  handleInit: function(e) {
    this.callBase(e), this._state === Ap && this._location === 0 && (this._startClientY = _t(e.originalEvent).y, this._state = Op);
  },
  handleMove: function(e) {
    this.callBase(e), this._deltaY = _t(e.originalEvent).y - this._startClientY, this._state === Op && (this._pullDownEnabled && this._deltaY > 0 ? this._state = wu : this._complete()), this._state === wu && (e.preventDefault(), this._movePullDown());
  },
  _movePullDown: function() {
    var e = this._getPullDownHeight(), t = Math.min(3 * e, this._deltaY + this._getPullDownStartPosition()), i = 180 * t / e / 3;
    this._$pullDown.css({
      opacity: 1
    }).toggleClass(iK, t < e), kt(this._$pullDown, {
      top: t
    }), this._$icon.css({
      transform: "rotate(" + i + "deg)"
    });
  },
  _isPullDown: function() {
    return this._pullDownEnabled && this._state === wu && this._deltaY >= this._getPullDownHeight() - this._getPullDownStartPosition();
  },
  _getPullDownHeight: function() {
    return Math.round(0.05 * Ne(this._$element));
  },
  _getPullDownStartPosition: function() {
    return -Math.round(1.5 * Ne(this._$pullDown));
  },
  handleEnd: function() {
    this._isPullDown() && this._pullDownRefreshing(), this._complete();
  },
  handleStop: function() {
    this._complete();
  },
  _complete: function() {
    (this._state === Op || this._state === wu) && this._releaseState();
  },
  handleScroll: function(e) {
    if (this.callBase(e), this._state !== h0) {
      var t = this.location().top, i = this._location - t;
      this._location = t, i > 0 && this._isReachBottom() ? this._reachBottom() : this._stateReleased();
    }
  },
  _isReachBottom: function() {
    return this._reachBottomEnabled && Math.round(this._bottomBoundary + Math.floor(this._location)) <= 1;
  },
  _reachBottom: function() {
    this.reachBottomCallbacks.fire();
  },
  _stateReleased: function() {
    this._state !== Ap && (this._$pullDown.removeClass(c0), this._releaseState());
  },
  _pullDownRefreshing: function() {
    this._state = h0, this._pullDownRefreshHandler();
  },
  _pullDownRefreshHandler: function() {
    this._refreshPullDown(), this.pullDownCallbacks.fire();
  },
  _refreshPullDown: function() {
    this._$pullDown.addClass(c0), kt(this._$pullDown, {
      top: this._getPullDownHeight()
    });
  },
  pullDownEnable: function(e) {
    this._$topPocket.toggle(e), this._pullDownEnabled = e;
  },
  reachBottomEnable: function(e) {
    this._reachBottomEnabled = e;
  },
  pendingRelease: function() {
    this._state = rK;
  },
  release: function() {
    var e = new U();
    return this._updateDimensions(), clearTimeout(this._releaseTimeout), this._releaseTimeout = setTimeout(function() {
      this._stateReleased(), this.releaseCallbacks.fire(), this._updateAction(), e.resolve();
    }.bind(this), 800), e.promise();
  },
  dispose: function() {
    clearTimeout(this._pullDownRefreshTimeout), clearTimeout(this._releaseTimeout), this.callBase();
  }
}), oK = Math, p0 = "dx-scrollview-pull-down-loading", Rp = "dx-scrollview-pull-down-ready", sK = "dx-scrollview-pull-down-image", lK = "dx-scrollview-pull-down-indicator", uK = "dx-scrollview-pull-down-text", dK = "dx-scrollview-pull-down-text-visible", cs = 0, hs = 1, Bp = 2, kp = 3, cK = HT.inherit({
  ctor: function() {
    this._topPocketSize = 0, this._bottomPocketSize = 0, this.callBase.apply(this, arguments), this._initCallbacks(), this._releaseState();
  },
  _releaseState: function() {
    this._state = cs, this._refreshPullDownText();
  },
  _refreshPullDownText: function() {
    var e = this, t = [{
      element: this._$pullingDownText,
      visibleState: cs
    }, {
      element: this._$pulledDownText,
      visibleState: hs
    }, {
      element: this._$refreshingText,
      visibleState: Bp
    }];
    B(t, function(i, n) {
      var r = e._state === n.visibleState ? "addClass" : "removeClass";
      n.element[r](dK);
    });
  },
  _initCallbacks: function() {
    this.pullDownCallbacks = qe(), this.releaseCallbacks = qe(), this.reachBottomCallbacks = qe();
  },
  _updateBounds: function() {
    var e = this._direction !== "horizontal";
    if (e) {
      this._topPocketSize = this._$topPocket.get(0).clientHeight, this._bottomPocketSize = this._$bottomPocket.get(0).clientHeight;
      var t = this._$container.get(0), i = this._$content.get(0);
      this._bottomBoundary = Math.max(i.clientHeight - this._bottomPocketSize - t.clientHeight, 0);
    }
    this.callBase();
  },
  _updateScrollbar: function() {
    this._scrollbar.option({
      containerSize: this._containerSize(),
      contentSize: this._contentSize() - this._topPocketSize - this._bottomPocketSize,
      scaleRatio: this._getScaleRatio()
    });
  },
  _moveContent: function() {
    this.callBase(), this._isPullDown() ? this._pullDownReady() : this._isReachBottom() ? this._reachBottomReady() : this._state !== cs && this._stateReleased();
  },
  _moveScrollbar: function() {
    this._scrollbar.moveTo(this._topPocketSize + this._location);
  },
  _isPullDown: function() {
    return this._pullDownEnabled && this._location >= 0;
  },
  _isReachBottom: function() {
    var e = this._$container.get(0);
    return this._reachBottomEnabled && Math.round(this._bottomBoundary - Math.ceil(e.scrollTop)) <= 1;
  },
  _scrollComplete: function() {
    this._inBounds() && this._state === hs ? this._pullDownRefreshing() : this._inBounds() && this._state === kp ? this._reachBottomLoading() : this.callBase();
  },
  _reachBottomReady: function() {
    this._state !== kp && (this._state = kp, this._minOffset = this._getMinOffset());
  },
  _getMaxOffset: function() {
    return -this._topPocketSize;
  },
  _getMinOffset: function() {
    return oK.min(this.callBase(), -this._topPocketSize);
  },
  _reachBottomLoading: function() {
    this.reachBottomCallbacks.fire();
  },
  _pullDownReady: function() {
    this._state !== hs && (this._state = hs, this._maxOffset = 0, this._$pullDown.addClass(Rp), this._refreshPullDownText());
  },
  _stateReleased: function() {
    this._state !== cs && (this._releaseState(), this._updateBounds(), this._$pullDown.removeClass(p0).removeClass(Rp), this.releaseCallbacks.fire());
  },
  _pullDownRefreshing: function() {
    this._state !== Bp && (this._state = Bp, this._$pullDown.addClass(p0).removeClass(Rp), this._refreshPullDownText(), this.pullDownCallbacks.fire());
  },
  _releaseHandler: function() {
    return this._state === cs && this._moveToBounds(), this._update(), this._releaseTask && this._releaseTask.abort(), this._releaseTask = p_(this._release.bind(this)), this._releaseTask.promise;
  },
  _release: function() {
    this._stateReleased(), this._scrollComplete();
  },
  _reachBottomEnablingHandler: function(e) {
    this._reachBottomEnabled !== e && (this._reachBottomEnabled = e, this._updateBounds());
  },
  _pullDownEnablingHandler: function(e) {
    this._pullDownEnabled !== e && (this._pullDownEnabled = e, this._considerTopPocketChange(), this._updateHandler());
  },
  _considerTopPocketChange: function() {
    this._location -= Fe(this._$topPocket) || -this._topPocketSize, this._maxOffset = 0, this._move();
  },
  _pendingReleaseHandler: function() {
    this._state = hs;
  },
  dispose: function() {
    this._releaseTask && this._releaseTask.abort(), this.callBase();
  }
}), hK = zT.inherit({
  _init: function(e) {
    this.callBase(e), this._$pullDown = e._$pullDown, this._$topPocket = e._$topPocket, this._$bottomPocket = e._$bottomPocket, this._initCallbacks();
  },
  _initCallbacks: function() {
    this.pullDownCallbacks = qe(), this.releaseCallbacks = qe(), this.reachBottomCallbacks = qe();
  },
  render: function() {
    this._renderPullDown(), this.callBase();
  },
  _renderPullDown: function() {
    var e = g("<div>").addClass(sK), t = g("<div>").addClass(lK), i = new bi(g("<div>")).$element(), n = this._$pullDownText = g("<div>").addClass(uK);
    this._$pullingDownText = g("<div>").text(this.option("pullingDownText")).appendTo(n), this._$pulledDownText = g("<div>").text(this.option("pulledDownText")).appendTo(n), this._$refreshingText = g("<div>").text(this.option("refreshingText")).appendTo(n), this._$pullDown.empty().append(e).append(t.append(i)).append(n);
  },
  pullDownEnable: function(e) {
    this._eventHandler("pullDownEnabling", e);
  },
  reachBottomEnable: function(e) {
    this._eventHandler("reachBottomEnabling", e);
  },
  _createScroller: function(e) {
    var t = this, i = t._scrollers[e] = new cK(t._scrollerOptions(e));
    i.pullDownCallbacks.add(function() {
      t.pullDownCallbacks.fire();
    }), i.releaseCallbacks.add(function() {
      t.releaseCallbacks.fire();
    }), i.reachBottomCallbacks.add(function() {
      t.reachBottomCallbacks.fire();
    });
  },
  _scrollerOptions: function(e) {
    return T(this.callBase(e), {
      $topPocket: this._$topPocket,
      $bottomPocket: this._$bottomPocket,
      $pullDown: this._$pullDown,
      $pullDownText: this._$pullDownText,
      $pullingDownText: this._$pullingDownText,
      $pulledDownText: this._$pulledDownText,
      $refreshingText: this._$refreshingText
    });
  },
  pendingRelease: function() {
    this._eventHandler("pendingRelease");
  },
  release: function() {
    return this._eventHandler("release").done(this._updateAction);
  },
  location: function() {
    var e = this.callBase();
    return e.top += Fe(this._$topPocket), e;
  },
  dispose: function() {
    B(this._scrollers, function() {
      this.dispose();
    }), this.callBase();
  }
}), za = "dx-scrollview", pK = za + "-content", fK = za + "-top-pocket", gK = za + "-bottom-pocket", _K = za + "-pull-down", Pv = za + "-scrollbottom", vK = Pv + "-indicator", mK = Pv + "-text", CK = za + "-loadpanel", xK = {
  pullDown: eK,
  swipeDown: aK,
  simulated: hK
}, yK = !Re(), bK = {
  finishLoading: $,
  release: $,
  refresh: $,
  scrollOffset: () => ({
    top: 0,
    left: 0
  }),
  _optionChanged: function(e) {
    if (e.name !== "onUpdated")
      return this.callBase.apply(this, arguments);
  }
}, Mv = Si.inherit(yK ? bK : {
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      pullingDownText: q.format("dxScrollView-pullingDownText"),
      pulledDownText: q.format("dxScrollView-pulledDownText"),
      refreshingText: q.format("dxScrollView-refreshingText"),
      reachBottomText: q.format("dxScrollView-reachBottomText"),
      onPullDown: null,
      onReachBottom: null,
      refreshStrategy: "pullDown"
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        var e = ve.real();
        return e.platform === "android";
      },
      options: {
        refreshStrategy: "swipeDown"
      }
    }, {
      device: function() {
        return St();
      },
      options: {
        pullingDownText: "",
        pulledDownText: "",
        refreshingText: "",
        reachBottomText: ""
      }
    }]);
  },
  _init: function() {
    this.callBase(), this._loadingIndicatorEnabled = !0;
  },
  _initScrollableMarkup: function() {
    this.callBase(), this.$element().addClass(za), this._initContent(), this._initTopPocket(), this._initBottomPocket(), this._initLoadPanel();
  },
  _initContent: function() {
    var e = g("<div>").addClass(pK);
    this._$content.wrapInner(e);
  },
  _initTopPocket: function() {
    var e = this._$topPocket = g("<div>").addClass(fK), t = this._$pullDown = g("<div>").addClass(_K);
    e.append(t), this._$content.prepend(e);
  },
  _initBottomPocket: function() {
    var e = this._$bottomPocket = g("<div>").addClass(gK), t = this._$reachBottom = g("<div>").addClass(Pv), i = g("<div>").addClass(vK), n = new bi(g("<div>")).$element(), r = this._$reachBottomText = g("<div>").addClass(mK);
    this._updateReachBottomText(), t.append(i.append(n)).append(r), e.append(t), this._$content.append(e);
  },
  _initLoadPanel: function() {
    var e = g("<div>").addClass(CK).appendTo(this.$element()), t = {
      shading: !1,
      delay: 400,
      message: this.option("refreshingText"),
      position: {
        of: this.$element()
      }
    };
    this._loadPanel = this._createComponent(e, av, t);
  },
  _updateReachBottomText: function() {
    this._$reachBottomText.text(this.option("reachBottomText"));
  },
  _createStrategy: function() {
    var e = this.option("useNative") ? this.option("refreshStrategy") : "simulated", t = xK[e];
    this._strategy = new t(this), this._strategy.pullDownCallbacks.add(this._pullDownHandler.bind(this)), this._strategy.releaseCallbacks.add(this._releaseHandler.bind(this)), this._strategy.reachBottomCallbacks.add(this._reachBottomHandler.bind(this));
  },
  _createActions: function() {
    this.callBase(), this._pullDownAction = this._createActionByOption("onPullDown"), this._reachBottomAction = this._createActionByOption("onReachBottom"), this._tryRefreshPocketState();
  },
  _tryRefreshPocketState: function() {
    this._pullDownEnable(this.hasActionSubscription("onPullDown")), this._reachBottomEnable(this.hasActionSubscription("onReachBottom"));
  },
  on: function(e) {
    var t = this.callBase.apply(this, arguments);
    return (e === "pullDown" || e === "reachBottom") && this._tryRefreshPocketState(), t;
  },
  _pullDownEnable: function(e) {
    if (arguments.length === 0)
      return this._pullDownEnabled;
    this._$pullDown && this._strategy && (this._$pullDown.toggle(e), this._strategy.pullDownEnable(e), this._pullDownEnabled = e);
  },
  _reachBottomEnable: function(e) {
    if (arguments.length === 0)
      return this._reachBottomEnabled;
    this._$reachBottom && this._strategy && (this._$reachBottom.toggle(e), this._strategy.reachBottomEnable(e), this._reachBottomEnabled = e);
  },
  _pullDownHandler: function() {
    this._loadingIndicator(!1), this._pullDownLoading();
  },
  _loadingIndicator: function(e) {
    if (arguments.length < 1)
      return this._loadingIndicatorEnabled;
    this._loadingIndicatorEnabled = e;
  },
  _pullDownLoading: function() {
    this.startLoading(), this._pullDownAction();
  },
  _reachBottomHandler: function() {
    this._loadingIndicator(!1), this._reachBottomLoading();
  },
  _reachBottomLoading: function() {
    this.startLoading(), this._reachBottomAction();
  },
  _releaseHandler: function() {
    this.finishLoading(), this._loadingIndicator(!0);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "onPullDown":
      case "onReachBottom":
        this._createActions();
        break;
      case "pullingDownText":
      case "pulledDownText":
      case "refreshingText":
      case "refreshStrategy":
        this._invalidate();
        break;
      case "reachBottomText":
        this._updateReachBottomText();
        break;
      default:
        this.callBase(e);
    }
  },
  content: function() {
    return Ie(this._$content.children().eq(1));
  },
  release: function(e) {
    return e !== void 0 && this.toggleLoading(!e), this._strategy.release();
  },
  toggleLoading: function(e) {
    this._reachBottomEnable(e);
  },
  refresh: function() {
    this.hasActionSubscription("onPullDown") && (this._strategy.pendingRelease(), this._pullDownLoading());
  },
  startLoading: function() {
    this._loadingIndicator() && this.$element().is(":visible") && this._loadPanel.show(), this._lock();
  },
  finishLoading: function() {
    this._loadPanel.hide(), this._unlock();
  },
  _dispose: function() {
    this._strategy.dispose(), this.callBase(), this._loadPanel && this._loadPanel.$element().remove();
  }
});
We("dxScrollView", Mv);
var Iu = "__dx_key__";
const Lv = Ha.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      repaintChangesOnly: !1
    });
  },
  ctor: function() {
    var e;
    this.callBase.apply(this, arguments), this._customizeStoreLoadOptions = (t) => {
      var i = this._dataController;
      i.getDataSource() && !this._dataController.isLoaded() && (this._correctionIndex = 0), this._correctionIndex && t.storeLoadOptions && (t.storeLoadOptions.skip += this._correctionIndex);
    }, (e = this._dataController) === null || e === void 0 || e.on("customizeStoreLoadOptions", this._customizeStoreLoadOptions);
  },
  reload: function() {
    this._correctionIndex = 0;
  },
  _init: function() {
    this.callBase(), this._refreshItemsCache(), this._correctionIndex = 0;
  },
  _findItemElementByKey: function(e) {
    var t = g(), i = this.key();
    return this.itemElements().each((n, r) => {
      var a = g(r), o = this._getItemData(a);
      if (i ? bl(i, this.keyOf(o), e) : this._isItemEquals(o, e))
        return t = a, !1;
    }), t;
  },
  _dataSourceChangedHandler: function(e, t) {
    t != null && t.changes ? this._modifyByChanges(t.changes) : (this.callBase(e, t), this._refreshItemsCache());
  },
  _isItemEquals: function(e, t) {
    e && e[Iu] && (e = e.data);
    try {
      return JSON.stringify(e) === JSON.stringify(t);
    } catch {
      return e === t;
    }
  },
  _isItemStrictEquals: function(e, t) {
    return this._isItemEquals(e, t);
  },
  _shouldAddNewGroup: function(e, t) {
    var i = !1;
    return this.option("grouped") && (e.length || (i = !0), B(e, (n, r) => {
      r.type === "insert" && (i = !0, B(t, (a, o) => {
        if (r.data.key !== void 0 && r.data.key === o.key)
          return i = !1, !1;
      }));
    })), i;
  },
  _partialRefresh: function() {
    if (this.option("repaintChangesOnly")) {
      var e = DT(this._itemsCache, this._editStrategy.itemsGetter(), (t) => t && t[Iu] !== void 0 ? t[Iu] : this.keyOf(t), this._isItemStrictEquals.bind(this));
      if (e && this._itemsCache.length && !this._shouldAddNewGroup(e, this._itemsCache))
        return this._modifyByChanges(e, !0), this._renderEmptyMessage(), !0;
      this._refreshItemsCache();
    }
    return !1;
  },
  _refreshItemsCache: function() {
    if (this.option("repaintChangesOnly")) {
      var e = this._editStrategy.itemsGetter();
      try {
        this._itemsCache = T(!0, [], e), this.key() || (this._itemsCache = this._itemsCache.map((t, i) => ({
          [Iu]: e[i],
          data: t
        })));
      } catch {
        this._itemsCache = T([], e);
      }
    }
  },
  _dispose: function() {
    this._dataController.off("customizeStoreLoadOptions", this._customizeStoreLoadOptions), this.callBase();
  },
  _updateByChange: function(e, t, i, n) {
    if (n)
      this._renderItem(i.index, i.data, null, this._findItemElementByKey(i.key));
    else {
      var r = t[ba(e, t, i.key)];
      r && U_(e, t, i.key, i.data).done(() => {
        this._renderItem(t.indexOf(r), r, null, this._findItemElementByKey(i.key));
      });
    }
  },
  _insertByChange: function(e, t, i, n) {
    ge(n || j_(e, t, i.data, i.index)).done(() => {
      var r;
      this._beforeItemElementInserted(i);
      var a = this._getItemContainer(i.data);
      this._renderItem((r = i.index) !== null && r !== void 0 ? r : t.length, i.data, a), this._afterItemElementInserted(), this._correctionIndex++;
    });
  },
  _getItemContainer: function(e) {
    return this._itemContainer();
  },
  _updateSelectionAfterRemoveByChange: function(e) {
    var t = this.option("selectedIndex");
    t > e ? this.option("selectedIndex", t - 1) : t === e && this.option("selectedItems").length === 1 ? this.option("selectedItems", []) : this._normalizeSelectedItems();
  },
  _beforeItemElementInserted: function(e) {
    var t = this.option("selectedIndex");
    e.index <= t && this.option("selectedIndex", t + 1);
  },
  _afterItemElementInserted: $,
  _removeByChange: function(e, t, i, n) {
    var r = n ? i.index : ba(e, t, i.key), a = n ? i.oldItem : t[r];
    if (a) {
      var o = this._findItemElementByKey(i.key), s = this._extendActionArgs(o);
      this._waitDeletingPrepare(o).done(() => {
        n ? (this._updateIndicesAfterIndex(r - 1), this._afterItemElementDeleted(o, s), this._updateSelectionAfterRemoveByChange(r)) : (this._deleteItemElementByIndex(r), this._afterItemElementDeleted(o, s));
      }), this._correctionIndex--;
    }
  },
  _modifyByChanges: function(e, t) {
    var i = this._editStrategy.itemsGetter(), n = {
      key: this.key.bind(this),
      keyOf: this.keyOf.bind(this)
    }, r = this._dataController, a = r.paginate(), o = r.group();
    (a || o) && (e = e.filter((s) => s.type !== "insert" || s.index !== void 0)), e.forEach((s) => this["_".concat(s.type, "ByChange")](n, i, s, t)), this._renderedItemsCount = i.length, this._refreshItemsCache(), this._fireContentReadyAction();
  },
  _appendItemToContainer: function(e, t, i) {
    var n = e.children(this._itemSelector()).get(i);
    ee.insertElement(e.get(0), t.get(0), n);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "items":
        var t = this._partialRefresh(e.value);
        t || this.callBase(e);
        break;
      case "dataSource":
        (!this.option("repaintChangesOnly") || !e.value) && this.option("items", []), this.callBase(e);
        break;
      case "repaintChangesOnly":
        break;
      default:
        this.callBase(e);
    }
  }
});
var SK = (e) => Array.isArray(e) && e.every((t) => {
  var i = Object.keys(t).length === 2, n = "key" in t && "items" in t;
  return i && n && Array.isArray(t.items);
});
const sA = {
  _getSpecificDataSourceOption: function() {
    var e = this.option("dataSource"), t = !1, i = {};
    return this._getGroupedOption() && SK(e) && (i = e.reduce((n, r) => {
      var a = r.items.map((o) => (De(o) || (o = {
        text: o
      }, t = !0), "key" in o || (o.key = r.key), o));
      return n.concat(a);
    }, []), e = {
      store: {
        type: "array",
        data: i
      },
      group: {
        selector: "key",
        keepInitialKeyOrder: !0
      }
    }, t && (e.searchExpr = "text")), e;
  }
};
function lA(e) {
  return e ? Number(e.replace("px", "")) : 0;
}
function EK(e) {
  var t, i;
  return e && Re() ? (t = (i = ke()).getComputedStyle) === null || t === void 0 ? void 0 : t.call(i, e) : null;
}
function wK(e, t) {
  var i = EK(e);
  return i ? lA(i["margin".concat(Js(t))]) : 0;
}
var IK = "dx-list", hd = "dx-list-item", TK = "." + hd, DK = "dx-list-item-icon-container", AK = "dx-list-item-icon", no = "dx-list-group", Fp = "dx-list-group-header", Tu = "dx-list-group-body", OK = "dx-list-collapsible-groups", f0 = "dx-list-group-collapsed", RK = "dx-list-group-header-indicator", BK = "dx-has-next", kK = "dx-list-next-button", g0 = "dx-wrap-item-text", FK = ".dx-list-select-all", PK = "dxListItemData", _0 = 70, MK = tt("items"), Vv = Lv.inherit({
  _activeStateUnit: [TK, FK].join(","),
  _supportedKeys: function() {
    var e = this, t = function(n) {
      var r = i(n), a = r.is(e.option("focusedElement"));
      a && (function(o, s) {
        var l = o.position().top;
        s === "prev" && (l = o.position().top - Fe(e.$element()) + Ne(o)), e.scrollTo(l);
      }(r, n), r = i(n)), e.option("focusedElement", Ie(r)), e.scrollToItem(r);
    };
    function i(n) {
      var r = e.scrollTop(), a = Fe(e.$element()), o = g(e.option("focusedElement")), s = !0;
      if (!o.length)
        return g();
      for (; s; ) {
        var l = o[n]();
        if (!l.length)
          break;
        var u = l.position().top + Ne(l) / 2;
        s = u < a + r && u > r, s && (o = l);
      }
      return o;
    }
    return T(this.callBase(), {
      leftArrow: $,
      rightArrow: $,
      pageUp: function() {
        return t("prev"), !1;
      },
      pageDown: function() {
        return t("next"), !1;
      }
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      hoverStateEnabled: !0,
      pullRefreshEnabled: !1,
      scrollingEnabled: !0,
      showScrollbar: "onScroll",
      useNativeScrolling: !0,
      bounceEnabled: !0,
      scrollByContent: !0,
      scrollByThumb: !1,
      pullingDownText: q.format("dxList-pullingDownText"),
      pulledDownText: q.format("dxList-pulledDownText"),
      refreshingText: q.format("dxList-refreshingText"),
      pageLoadingText: q.format("dxList-pageLoadingText"),
      onScroll: null,
      onPullRefresh: null,
      onPageLoading: null,
      pageLoadMode: "scrollBottom",
      nextButtonText: q.format("dxList-nextButtonText"),
      onItemSwipe: null,
      grouped: !1,
      onGroupRendered: null,
      collapsibleGroups: !1,
      groupTemplate: "group",
      indicateLoading: !0,
      activeStateEnabled: !0,
      _itemAttributes: {
        role: "option"
      },
      _listAttributes: {
        role: "listbox"
      },
      useInkRipple: !1,
      wrapItemText: !1,
      _swipeEnabled: !0,
      showChevronExpr: function(e) {
        return e ? e.showChevron : void 0;
      },
      badgeExpr: function(e) {
        return e ? e.badge : void 0;
      }
    });
  },
  _defaultOptionsRules: function() {
    var e = rn();
    return this.callBase().concat(WT(), [{
      device: function() {
        return !ya;
      },
      options: {
        useNativeScrolling: !1
      }
    }, {
      device: function(t) {
        return !ya && !ve.isSimulator() && ve.real().deviceType === "desktop" && t.platform === "generic";
      },
      options: {
        showScrollbar: "onHover",
        pageLoadMode: "nextButton"
      }
    }, {
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }, {
      device: function() {
        return St(e);
      },
      options: {
        pullingDownText: "",
        pulledDownText: "",
        refreshingText: "",
        pageLoadingText: "",
        useInkRipple: !0
      }
    }]);
  },
  _visibilityChanged: function(e) {
    e && this._updateLoadingState(!0);
  },
  _itemClass: function() {
    return hd;
  },
  _itemDataKey: function() {
    return PK;
  },
  _itemContainer: function() {
    return this._$container;
  },
  _saveSelectionChangeEvent: function(e) {
    this._selectionChangeEventInstance = e;
  },
  _getSelectionChangeEvent: function() {
    return this._selectionChangeEventInstance;
  },
  _refreshItemElements: function() {
    this.option("grouped") ? this._itemElementsCache = this._itemContainer().children("." + no).children("." + Tu).children(this._itemSelector()) : this._itemElementsCache = this._itemContainer().children(this._itemSelector());
  },
  _modifyByChanges: function() {
    this.callBase.apply(this, arguments), this._refreshItemElements(), this._updateLoadingState(!0);
  },
  reorderItem: function(e, t) {
    var i = this.callBase(e, t);
    return i.done(function() {
      this._refreshItemElements();
    });
  },
  deleteItem: function(e) {
    var t = this.callBase(e);
    return t.done(function() {
      this._refreshItemElements();
    });
  },
  _itemElements: function() {
    return this._itemElementsCache;
  },
  _itemSelectHandler: function(e) {
    if (!(this.option("selectionMode") === "single" && this.isItemSelected(e.currentTarget)))
      return this.callBase(e);
  },
  _allowDynamicItemsAppend: function() {
    return !0;
  },
  _init: function() {
    this.callBase(), this._dataController.resetDataSourcePageIndex(), this._$container = this.$element(), this._initScrollView(), this._feedbackShowTimeout = _0, this._createGroupRenderAction();
  },
  _scrollBottomMode: function() {
    return this.option("pageLoadMode") === "scrollBottom";
  },
  _nextButtonMode: function() {
    return this.option("pageLoadMode") === "nextButton";
  },
  _dataSourceOptions: function() {
    var e = this._scrollBottomMode(), t = this._nextButtonMode();
    return T(this.callBase(), {
      paginate: ct(e || t, !0)
    });
  },
  _getGroupedOption: function() {
    return this.option("grouped");
  },
  _getGroupContainerByIndex: function(e) {
    return this._itemContainer().find(".".concat(no)).eq(e).find(".".concat(Tu));
  },
  _dataSourceFromUrlLoadMode: function() {
    return "raw";
  },
  _initScrollView: function() {
    var e = this.option("scrollingEnabled"), t = e && this.option("pullRefreshEnabled"), i = e && this._scrollBottomMode() && !!this._dataController.getDataSource();
    this._scrollView = this._createComponent(this.$element(), LK(), {
      height: this.option("height"),
      width: this.option("width"),
      disabled: this.option("disabled") || !e,
      onScroll: this._scrollHandler.bind(this),
      onPullDown: t ? this._pullDownHandler.bind(this) : null,
      onReachBottom: i ? this._scrollBottomHandler.bind(this) : null,
      showScrollbar: this.option("showScrollbar"),
      useNative: this.option("useNativeScrolling"),
      bounceEnabled: this.option("bounceEnabled"),
      scrollByContent: this.option("scrollByContent"),
      scrollByThumb: this.option("scrollByThumb"),
      pullingDownText: this.option("pullingDownText"),
      pulledDownText: this.option("pulledDownText"),
      refreshingText: this.option("refreshingText"),
      reachBottomText: this.option("pageLoadingText"),
      useKeyboard: !1
    }), this._$container = g(this._scrollView.content()), this.option("wrapItemText") && this._$container.addClass(g0), this._createScrollViewActions();
  },
  _createScrollViewActions: function() {
    this._scrollAction = this._createActionByOption("onScroll"), this._pullRefreshAction = this._createActionByOption("onPullRefresh"), this._pageLoadingAction = this._createActionByOption("onPageLoading");
  },
  _scrollHandler: function(e) {
    this._scrollAction && this._scrollAction(e);
  },
  _initTemplates: function() {
    this._templateManager.addDefaultTemplates({
      group: new $a(function(e, t) {
        Me(t) ? t.key && e.text(t.key) : e.text(String(t));
      }, ["key"], this.option("integrationOptions.watchMethod"))
    }), this.callBase();
  },
  _prepareDefaultItemTemplate: function(e, t) {
    if (this.callBase(e, t), e.icon) {
      var i = wa(e.icon).addClass(AK), n = g("<div>").addClass(DK);
      n.append(i), t.prepend(n);
    }
  },
  _getBindableFields: function() {
    return ["text", "html", "icon"];
  },
  _updateLoadingState: function(e) {
    var t = this._dataController, i = this._scrollBottomMode() && e && !t.isLoading() && !this._isLastPage();
    this._shouldContinueLoading(i) ? this._infiniteDataLoading() : (this._scrollView.release(!i && !t.isLoading()), this._toggleNextButton(this._shouldRenderNextButton() && !this._isLastPage()), this._loadIndicationSuppressed(!1));
  },
  _shouldRenderNextButton: function() {
    return this._nextButtonMode() && this._dataController.isLoaded();
  },
  _isDataSourceFirstLoadCompleted: function(e) {
    return x(e) && (this._isFirstLoadCompleted = e), this._isFirstLoadCompleted;
  },
  _dataSourceLoadingChangedHandler: function(e) {
    this._loadIndicationSuppressed() || (e && this.option("indicateLoading") ? this._showLoadingIndicatorTimer = setTimeout(function() {
      var t = !this._itemElements().length, i = !t || this._isDataSourceFirstLoadCompleted();
      if (i) {
        var n;
        (n = this._scrollView) === null || n === void 0 || n.startLoading();
      }
    }.bind(this)) : (clearTimeout(this._showLoadingIndicatorTimer), this._scrollView && this._scrollView.finishLoading()), e || this._isDataSourceFirstLoadCompleted(!1));
  },
  _dataSourceChangedHandler: function() {
    !this._shouldAppendItems() && Re() && this._scrollView && this._scrollView.scrollTo(0), this.callBase.apply(this, arguments), this._isDataSourceFirstLoadCompleted(!0);
  },
  _refreshContent: function() {
    this._prepareContent(), this._fireContentReadyAction();
  },
  _hideLoadingIfLoadIndicationOff: function() {
    this.option("indicateLoading") || this._dataSourceLoadingChangedHandler(!1);
  },
  _loadIndicationSuppressed: function(e) {
    if (!arguments.length)
      return this._isLoadIndicationSuppressed;
    this._isLoadIndicationSuppressed = e;
  },
  _scrollViewIsFull: function() {
    var e = this._scrollView;
    return !e || Fe(e.content()) > Fe(e.container());
  },
  _pullDownHandler: function(e) {
    this._pullRefreshAction(e);
    var t = this._dataController;
    t.getDataSource() && !t.isLoading() ? (this._clearSelectedItems(), t.pageIndex(0), t.reload()) : this._updateLoadingState();
  },
  _shouldContinueLoading: function(e) {
    var t, i, n = Fe(this._scrollView.content()) - Fe(this._scrollView.container()) < ((t = (i = this._scrollView.scrollOffset()) === null || i === void 0 ? void 0 : i.top) !== null && t !== void 0 ? t : 0);
    return e && (!this._scrollViewIsFull() || n);
  },
  _infiniteDataLoading: function() {
    var e = this.$element().is(":visible");
    e && (clearTimeout(this._loadNextPageTimer), this._loadNextPageTimer = setTimeout(() => {
      this._loadNextPage();
    }));
  },
  _scrollBottomHandler: function(e) {
    this._pageLoadingAction(e);
    var t = this._dataController;
    !t.isLoading() && !this._isLastPage() ? this._loadNextPage() : this._updateLoadingState();
  },
  _renderItems: function(e) {
    this.option("grouped") ? (B(e, this._renderGroup.bind(this)), this._attachGroupCollapseEvent(), this._renderEmptyMessage(), St() && this.attachGroupHeaderInkRippleEvents()) : this.callBase.apply(this, arguments), this._refreshItemElements(), this._updateLoadingState(!0);
  },
  _attachGroupCollapseEvent: function() {
    var e = oe(Xe, this.NAME), t = "." + Fp, i = this.$element(), n = this.option("collapsibleGroups");
    i.toggleClass(OK, n), w.off(i, e, t), n && w.on(i, e, t, function(r) {
      this._createAction(function(a) {
        var o = g(a.event.currentTarget).parent();
        this._collapseGroupHandler(o), this.option("focusStateEnabled") && this.option("focusedElement", Ie(o.find("." + hd).eq(0)));
      }.bind(this), {
        validatingTargetName: "element"
      })({
        event: r
      });
    }.bind(this));
  },
  _collapseGroupHandler: function(e, t) {
    var i = new U();
    if (e.hasClass(f0) === t)
      return i.resolve();
    var n = e.children("." + Tu), r = Ne(n), a = 0;
    return r === 0 && (Dr(n, "auto"), a = Ne(n)), e.toggleClass(f0, t), ft.animate(n, {
      type: "custom",
      from: {
        height: r
      },
      to: {
        height: a
      },
      duration: 200,
      complete: function() {
        this.updateDimensions(), this._updateLoadingState(), i.resolve();
      }.bind(this)
    }), i.promise();
  },
  _dataSourceLoadErrorHandler: function() {
    this._forgetNextPageLoading(), this._initialized && (this._renderEmptyMessage(), this._updateLoadingState());
  },
  _initMarkup: function() {
    this._itemElementsCache = g(), this.$element().addClass(IK), this.callBase(), this.option("useInkRipple") && this._renderInkRipple(), this.setAria("role", this.option("_listAttributes").role);
  },
  _renderInkRipple: function() {
    this._inkRipple = _v();
  },
  _toggleActiveState: function(e, t, i) {
    this.callBase.apply(this, arguments);
    var n = this;
    if (this._inkRipple) {
      var r = {
        element: e,
        event: i
      };
      t ? St() ? this._inkRippleTimer = setTimeout(function() {
        n._inkRipple.showWave(r);
      }, _0 / 2) : n._inkRipple.showWave(r) : (clearTimeout(this._inkRippleTimer), this._inkRipple.hideWave(r));
    }
  },
  _postprocessRenderItem: function(e) {
    this._refreshItemElements(), this.callBase.apply(this, arguments), this.option("_swipeEnabled") && this._attachSwipeEvent(g(e.itemElement));
  },
  _attachSwipeEvent: function(e) {
    var t = oe(Kl, this.NAME);
    w.on(e, t, this._itemSwipeEndHandler.bind(this));
  },
  _itemSwipeEndHandler: function(e) {
    this._itemDXEventHandler(e, "onItemSwipe", {
      direction: e.offset < 0 ? "left" : "right"
    });
  },
  _nextButtonHandler: function(e) {
    this._pageLoadingAction(e);
    var t = this._dataController;
    t.getDataSource() && !t.isLoading() && (this._scrollView.toggleLoading(!0), this._$nextButton.detach(), this._loadIndicationSuppressed(!0), this._loadNextPage());
  },
  _renderGroup: function(e, t) {
    var i = g("<div>").addClass(no).appendTo(this._itemContainer()), n = g("<div>").addClass(Fp).appendTo(i), r = this.option("groupTemplate"), a = this._getTemplate(t.template || r, t, e, n), o = {
      index: e,
      itemData: t,
      container: Ie(n)
    };
    this._createItemByTemplate(a, o), St() && g("<div>").addClass(RK).prependTo(n), this._renderingGroupIndex = e;
    var s = g("<div>").addClass(Tu).appendTo(i);
    B(MK(t) || [], function(l, u) {
      this._renderItem({
        group: e,
        item: l
      }, u, s);
    }.bind(this)), this._groupRenderAction({
      groupElement: Ie(i),
      groupIndex: e,
      groupData: t
    });
  },
  downInkRippleHandler: function(e) {
    this._toggleActiveState(g(e.currentTarget), !0, e);
  },
  upInkRippleHandler: function(e) {
    this._toggleActiveState(g(e.currentTarget), !1);
  },
  attachGroupHeaderInkRippleEvents: function() {
    var e = "." + Fp, t = this.$element();
    this._downInkRippleHandler = this._downInkRippleHandler || this.downInkRippleHandler.bind(this), this._upInkRippleHandler = this._upInkRippleHandler || this.upInkRippleHandler.bind(this);
    var i = [t, "dxpointerdown", e, this._downInkRippleHandler], n = [t, "dxpointerup dxpointerout", e, this._upInkRippleHandler];
    w.off(...i), w.on(...i), w.off(...n), w.on(...n);
  },
  _createGroupRenderAction: function() {
    this._groupRenderAction = this._createActionByOption("onGroupRendered");
  },
  _clean: function() {
    clearTimeout(this._inkRippleTimer), this._$nextButton && (this._$nextButton.remove(), this._$nextButton = null), this.callBase.apply(this, arguments);
  },
  _dispose: function() {
    this._isDataSourceFirstLoadCompleted(!1), clearTimeout(this._holdTimer), clearTimeout(this._loadNextPageTimer), clearTimeout(this._showLoadingIndicatorTimer), this.callBase();
  },
  _toggleDisabledState: function(e) {
    this.callBase(e), this._scrollView.option("disabled", e || !this.option("scrollingEnabled"));
  },
  _toggleNextButton: function(e) {
    var t = this._dataController, i = this._getNextButton();
    this.$element().toggleClass(BK, e), e && t.isLoaded() && i.appendTo(this._itemContainer()), e || i.detach();
  },
  _getNextButton: function() {
    return this._$nextButton || (this._$nextButton = this._createNextButton()), this._$nextButton;
  },
  _createNextButton: function() {
    var e = g("<div>").addClass(kK), t = g("<div>").appendTo(e);
    return this._createComponent(t, Gt, {
      text: this.option("nextButtonText"),
      onClick: this._nextButtonHandler.bind(this),
      type: St() ? "default" : void 0,
      integrationOptions: {}
    }), e;
  },
  _moveFocus: function() {
    this.callBase.apply(this, arguments), this.scrollToItem(this.option("focusedElement"));
  },
  _refresh: function() {
    if (!Re())
      this.callBase();
    else {
      var e = this._scrollView.scrollTop();
      this.callBase(), e && this._scrollView.scrollTo(e);
    }
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "pageLoadMode":
        this._toggleNextButton(e.value), this._initScrollView();
        break;
      case "dataSource":
        this.callBase(e), this._initScrollView(), this._isDataSourceFirstLoadCompleted(!1);
        break;
      case "items":
        this.callBase(e), this._isDataSourceFirstLoadCompleted(!1);
        break;
      case "pullingDownText":
      case "pulledDownText":
      case "refreshingText":
      case "pageLoadingText":
      case "showScrollbar":
      case "bounceEnabled":
      case "scrollByContent":
      case "scrollByThumb":
      case "useNativeScrolling":
      case "scrollingEnabled":
      case "pullRefreshEnabled":
        this._initScrollView(), this._updateLoadingState();
        break;
      case "nextButtonText":
      case "onItemSwipe":
      case "useInkRipple":
        this._invalidate();
        break;
      case "onScroll":
      case "onPullRefresh":
      case "onPageLoading":
        this._createScrollViewActions();
        break;
      case "grouped":
      case "collapsibleGroups":
      case "groupTemplate":
        this._invalidate();
        break;
      case "wrapItemText":
        this._$container.toggleClass(g0, e.value);
        break;
      case "onGroupRendered":
        this._createGroupRenderAction();
        break;
      case "width":
      case "height":
        this.callBase(e), this._scrollView.option(e.name, e.value), this._scrollView.update();
        break;
      case "indicateLoading":
        this._hideLoadingIfLoadIndicationOff();
        break;
      case "visible":
        this.callBase(e), this._scrollView.update();
        break;
      case "rtlEnabled":
        this._initScrollView(), this.callBase(e);
        break;
      case "showChevronExpr":
      case "badgeExpr":
        this._invalidate();
        break;
      case "_swipeEnabled":
      case "_listAttributes":
        break;
      default:
        this.callBase(e);
    }
  },
  _extendActionArgs: function(e) {
    if (!this.option("grouped"))
      return this.callBase(e);
    var t = e.closest("." + no), i = t.find("." + hd);
    return T(this.callBase(e), {
      itemIndex: {
        group: t.index(),
        item: i.index(e)
      }
    });
  },
  expandGroup: function(e) {
    var t = new U(), i = this._itemContainer().find("." + no).eq(e);
    return this._collapseGroupHandler(i, !1).done(function() {
      t.resolveWith(this);
    }.bind(this)), t.promise();
  },
  collapseGroup: function(e) {
    var t = new U(), i = this._itemContainer().find("." + no).eq(e);
    return this._collapseGroupHandler(i, !0).done(function() {
      t.resolveWith(this);
    }.bind(this)), t;
  },
  updateDimensions: function() {
    var e = this, t = new U();
    return e._scrollView ? e._scrollView.update().done(function() {
      !e._scrollViewIsFull() && e._updateLoadingState(!0), t.resolveWith(e);
    }) : t.resolveWith(e), t.promise();
  },
  reload: function() {
    this.callBase(), this.scrollTo(0), this._pullDownHandler();
  },
  repaint: function() {
    this.scrollTo(0), this.callBase();
  },
  scrollTop: function() {
    return this._scrollView.scrollOffset().top;
  },
  clientHeight: function() {
    return this._scrollView.clientHeight();
  },
  scrollHeight: function() {
    return this._scrollView.scrollHeight();
  },
  scrollBy: function(e) {
    this._scrollView.scrollBy(e);
  },
  scrollTo: function(e) {
    this._scrollView.scrollTo(e);
  },
  scrollToItem: function(e) {
    var t = this._editStrategy.getItemElement(e), i = t == null ? void 0 : t.get(0);
    this._scrollView.scrollToElement(i, {
      bottom: wK(i, "bottom")
    });
  },
  _dimensionChanged: function() {
    this.updateDimensions();
  }
}).include(sA);
Vv.ItemClass = q2;
function LK() {
  return Mv;
}
var Pp = "dx-toolbar-menu-action", VK = "dx-toolbar-hidden-button", v0 = "dx-toolbar-hidden-button-group", m0 = "dx-toolbar-menu-section", NK = "dx-toolbar-menu-custom", C0 = "dx-toolbar-menu-last-section";
class $K extends Vv {
  _init() {
    super._init(), this._activeStateUnit = ".".concat(Pp, ":not(.").concat(v0, ")");
  }
  _initMarkup() {
    this._renderSections(), super._initMarkup();
  }
  _getSections() {
    return this._itemContainer().children();
  }
  _itemElements() {
    return this._getSections().children(this._itemSelector());
  }
  _renderSections() {
    var t = this._itemContainer();
    B(["before", "center", "after", "menu"], (i, n) => {
      var r = "_$".concat(n, "Section");
      this[r] || (this[r] = g("<div>").addClass(m0)), this[r].appendTo(t);
    });
  }
  _renderItems() {
    super._renderItems.apply(this, arguments), this._updateSections();
  }
  _updateSections() {
    var t = this.$element().find(".".concat(m0));
    t.removeClass(C0), t.not(":empty").eq(-1).addClass(C0);
  }
  _renderItem(t, i, n, r) {
    var a, o = (a = i.location) !== null && a !== void 0 ? a : "menu", s = this["_$".concat(o, "Section")], l = super._renderItem(t, i, s, r);
    return this._getItemTemplateName({
      itemData: i
    }) && l.addClass(NK), (o === "menu" || i.widget === "dxButton" || i.widget === "dxButtonGroup" || i.isAction) && l.addClass(Pp), i.widget === "dxButton" && l.addClass(VK), i.widget === "dxButtonGroup" && l.addClass(v0), l.addClass(i.cssClass), l;
  }
  _getItemTemplateName(t) {
    var i = super._getItemTemplateName(t), n = t.itemData, r = n && n.menuItemTemplate;
    return r || i;
  }
  _dataSourceOptions() {
    return {
      paginate: !1
    };
  }
  _itemClickHandler(t, i, n) {
    g(t.target).closest(".".concat(Pp)).length && super._itemClickHandler(t, i, n);
  }
  _getAriaTarget() {
    var t;
    return (t = this.option("_areaTarget")) !== null && t !== void 0 ? t : super._getAriaTarget();
  }
  _clean() {
    this._getSections().empty(), super._clean();
  }
}
var Du = 5;
class HK {
  constructor(t) {
    this.init(t);
  }
  init(t) {
    var {
      dragEnabled: i,
      handle: n,
      draggableElement: r,
      positionController: a
    } = t;
    this._positionController = a, this._draggableElement = r, this._handle = n, this._dragEnabled = i, this.unsubscribe(), i && this.subscribe();
  }
  moveDown(t) {
    this._moveTo(Du, 0, t);
  }
  moveUp(t) {
    this._moveTo(-Du, 0, t);
  }
  moveLeft(t) {
    this._moveTo(0, -Du, t);
  }
  moveRight(t) {
    this._moveTo(0, Du, t);
  }
  subscribe() {
    var t = this._getEventNames();
    w.on(this._handle, t.startEventName, (i) => {
      this._dragStartHandler(i);
    }), w.on(this._handle, t.updateEventName, (i) => {
      this._dragUpdateHandler(i);
    }), w.on(this._handle, t.endEventName, (i) => {
      this._dragEndHandler(i);
    });
  }
  unsubscribe() {
    var t = this._getEventNames();
    w.off(this._handle, t.startEventName), w.off(this._handle, t.updateEventName), w.off(this._handle, t.endEventName);
  }
  _getEventNames() {
    var t = oe(Sa, "overlayDrag"), i = oe(Rr, "overlayDrag"), n = oe(Ea, "overlayDrag");
    return {
      startEventName: t,
      updateEventName: i,
      endEventName: n
    };
  }
  _dragStartHandler(t) {
    var i = this._getAllowedOffsets();
    this._prevOffset = {
      x: 0,
      y: 0
    }, t.targetElements = [], t.maxTopOffset = i.top, t.maxBottomOffset = i.bottom, t.maxLeftOffset = i.left, t.maxRightOffset = i.right;
  }
  _dragUpdateHandler(t) {
    var i = {
      top: t.offset.y - this._prevOffset.y,
      left: t.offset.x - this._prevOffset.x
    };
    this._moveByOffset(i), this._prevOffset = t.offset;
  }
  _dragEndHandler(t) {
    this._positionController.dragHandled(), this._positionController.detectVisualPositionChange(t);
  }
  _moveTo(t, i, n) {
    if (this._dragEnabled) {
      n.preventDefault(), n.stopPropagation();
      var r = this._fitOffsetIntoAllowedRange(t, i);
      this._moveByOffset(r), this._dragEndHandler(n);
    }
  }
  _fitOffsetIntoAllowedRange(t, i) {
    var n = this._getAllowedOffsets();
    return {
      top: Zt(t, -n.top, n.bottom),
      left: Zt(i, -n.left, n.right)
    };
  }
  _getContainerDimensions() {
    var t = ee.getDocument(), i = this._positionController.$dragResizeContainer.get(0), n = Ge(i), r = Ne(i);
    return Ct(i) && (r = Math.max(t.body.clientHeight, r), n = Math.max(t.body.clientWidth, n)), {
      width: n,
      height: r
    };
  }
  _getContainerPosition() {
    var t = this._positionController.$dragResizeContainer.get(0);
    return Ct(t) ? {
      top: 0,
      left: 0
    } : Gf(t);
  }
  _getElementPosition() {
    return Gf(this._draggableElement);
  }
  _getInnerDelta() {
    var t = this._getContainerDimensions(), i = this._getElementDimensions();
    return {
      x: t.width - i.width,
      y: t.height - i.height
    };
  }
  _getOuterDelta() {
    var {
      width: t,
      height: i
    } = this._getElementDimensions(), n = this._positionController.outsideDragFactor;
    return {
      x: t * n,
      y: i * n
    };
  }
  _getFullDelta() {
    var t = this._getInnerDelta(), i = this._getOuterDelta();
    return {
      x: t.x + i.x,
      y: t.y + i.y
    };
  }
  _getElementDimensions() {
    return {
      width: this._draggableElement.offsetWidth,
      height: this._draggableElement.offsetHeight
    };
  }
  _getAllowedOffsets() {
    var t = this._getFullDelta(), i = t.y >= 0 && t.x >= 0;
    if (!i)
      return {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
      };
    var n = this._getElementPosition(), r = this._getContainerPosition(), a = this._getOuterDelta();
    return {
      top: n.top - r.top + a.y,
      bottom: -n.top + r.top + t.y,
      left: n.left - r.left + a.x,
      right: -n.left + r.left + t.x
    };
  }
  _moveByOffset(t) {
    var i = Mi(this._draggableElement), n = {
      left: i.left + t.left,
      top: i.top + t.top
    };
    kt(this._draggableElement, n);
  }
}
var zc = "dxResizable", zK = "dx-resizable", WK = "dx-resizable-resizing", Au = "dx-resizable-handle", GK = "dx-resizable-handle-top", KK = "dx-resizable-handle-bottom", UK = "dx-resizable-handle-left", jK = "dx-resizable-handle-right", Ou = "dx-resizable-handle-corner", qK = oe(Sa, zc), XK = oe(Rr, zc), YK = oe(Ea, zc), ZK = {
  left: "borderLeftWidth",
  top: "borderTopWidth",
  right: "borderRightWidth",
  bottom: "borderBottomWidth"
}, uA = wn.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      handles: "all",
      step: "1",
      stepPrecision: "simple",
      area: void 0,
      minWidth: 30,
      maxWidth: 1 / 0,
      minHeight: 30,
      maxHeight: 1 / 0,
      onResizeStart: null,
      onResize: null,
      onResizeEnd: null,
      roundStepValue: !0,
      keepAspectRatio: !0
    });
  },
  _init: function() {
    this.callBase(), this.$element().addClass(zK);
  },
  _initMarkup: function() {
    this.callBase(), this._renderHandles();
  },
  _render: function() {
    this.callBase(), this._renderActions();
  },
  _renderActions: function() {
    this._resizeStartAction = this._createActionByOption("onResizeStart"), this._resizeEndAction = this._createActionByOption("onResizeEnd"), this._resizeAction = this._createActionByOption("onResize");
  },
  _renderHandles: function() {
    this._handles = [];
    var e = this.option("handles");
    if (!(e === "none" || !e)) {
      var t = e === "all" ? ["top", "bottom", "left", "right"] : e.split(" "), i = {};
      B(t, (n, r) => {
        i[r] = !0, this._renderHandle(r);
      }), i.bottom && i.right && this._renderHandle("corner-bottom-right"), i.bottom && i.left && this._renderHandle("corner-bottom-left"), i.top && i.right && this._renderHandle("corner-top-right"), i.top && i.left && this._renderHandle("corner-top-left"), this._attachEventHandlers();
    }
  },
  _renderHandle: function(e) {
    var t = g("<div>").addClass(Au).addClass(Au + "-" + e).appendTo(this.$element());
    this._handles.push(t);
  },
  _attachEventHandlers: function() {
    if (!this.option("disabled")) {
      var e = {};
      e[qK] = this._dragStartHandler.bind(this), e[XK] = this._dragHandler.bind(this), e[YK] = this._dragEndHandler.bind(this), this._handles.forEach((t) => {
        w.on(t, e, {
          direction: "both",
          immediate: !0
        });
      });
    }
  },
  _detachEventHandlers: function() {
    this._handles.forEach((e) => {
      w.off(e);
    });
  },
  _toggleEventHandlers: function(e) {
    e ? this._attachEventHandlers() : this._detachEventHandlers();
  },
  _getElementSize: function() {
    var e = this.$element();
    return e.css("boxSizing") === "border-box" ? {
      width: Ge(e),
      height: Ne(e)
    } : {
      width: Ae(e),
      height: Fe(e)
    };
  },
  _dragStartHandler: function(e) {
    var t = this.$element();
    if (t.is(".dx-state-disabled, .dx-state-disabled *")) {
      e.cancel = !0;
      return;
    }
    this._toggleResizingClass(!0), this._movingSides = this._getMovingSides(e), this._elementLocation = Mi(t), this._elementSize = this._getElementSize(), this._renderDragOffsets(e), this._resizeStartAction({
      event: e,
      width: this._elementSize.width,
      height: this._elementSize.height,
      handles: this._movingSides
    }), e.targetElements = null;
  },
  _toggleResizingClass: function(e) {
    this.$element().toggleClass(WK, e);
  },
  _renderDragOffsets: function(e) {
    var t = this._getArea();
    if (t) {
      var i = g(e.target).closest("." + Au), n = Ge(i), r = Ne(i), a = i.offset(), o = t.offset, s = this._getAreaScrollOffset();
      e.maxLeftOffset = this._leftMaxOffset = a.left - o.left - s.scrollX, e.maxRightOffset = this._rightMaxOffset = o.left + t.width - a.left - n + s.scrollX, e.maxTopOffset = this._topMaxOffset = a.top - o.top - s.scrollY, e.maxBottomOffset = this._bottomMaxOffset = o.top + t.height - a.top - r + s.scrollY;
    }
  },
  _getBorderWidth: function(e, t) {
    if (Ct(e.get(0)))
      return 0;
    var i = e.css(ZK[t]);
    return parseInt(i) || 0;
  },
  _proportionate: function(e, t) {
    var i = this._elementSize, n = e === "x" ? i.width / i.height : i.height / i.width;
    return t * n;
  },
  _getProportionalDelta: function(e) {
    var {
      x: t,
      y: i
    } = e, n = this._proportionate("y", t);
    if (n >= i)
      return {
        x: t,
        y: n
      };
    var r = this._proportionate("x", i);
    return r >= t ? {
      x: r,
      y: i
    } : {
      x: 0,
      y: 0
    };
  },
  _getDirectionName: function(e) {
    var t = this._movingSides;
    return e === "x" ? t.left ? "left" : "right" : t.top ? "top" : "bottom";
  },
  _fitIntoArea: function(e, t) {
    var i, n = this._getDirectionName(e);
    return Math.min(t, (i = this["_".concat(n, "MaxOffset")]) !== null && i !== void 0 ? i : 1 / 0);
  },
  _fitDeltaProportionally: function(e) {
    var t = ue({}, e), i = this._elementSize, {
      minWidth: n,
      minHeight: r,
      maxWidth: a,
      maxHeight: o
    } = this.option(), s = () => i.width + t.x, l = () => i.height + t.y, u = (f) => t[f] === this._fitIntoArea(f, t[f]), d = () => Gn(s(), n, a) && u("x"), c = () => Gn(l(), r, o) && u("y");
    if (!d()) {
      var h = this._fitIntoArea("x", Zt(s(), n, a) - i.width);
      t = {
        x: h,
        y: this._proportionate("y", h)
      };
    }
    if (!c()) {
      var p = this._fitIntoArea("y", Zt(l(), r, o) - i.height);
      t = {
        x: this._proportionate("x", p),
        y: p
      };
    }
    return d() && c() ? t : {
      x: 0,
      y: 0
    };
  },
  _fitDelta: function(e) {
    var {
      x: t,
      y: i
    } = e, n = this._elementSize, {
      minWidth: r,
      minHeight: a,
      maxWidth: o,
      maxHeight: s
    } = this.option();
    return {
      x: Zt(n.width + t, r, o) - n.width,
      y: Zt(n.height + i, a, s) - n.height
    };
  },
  _getDeltaByOffset: function(e) {
    var t = this._movingSides, i = this._isCornerHandler(t) && this.option("keepAspectRatio"), n = {
      x: e.x * (t.left ? -1 : 1),
      y: e.y * (t.top ? -1 : 1)
    };
    if (i) {
      var r = this._getProportionalDelta(n), a = this._fitDeltaProportionally(r);
      n = a;
    } else {
      var o = this._fitDelta(n), s = this._roundByStep(o);
      n = s;
    }
    return n;
  },
  _updatePosition: function(e, t) {
    var {
      width: i,
      height: n
    } = t, r = this._elementLocation, a = this._movingSides, o = this.$element(), s = this._getElementSize(), l = e.y * (a.top ? -1 : 1) - ((s.height || n) - n), u = e.x * (a.left ? -1 : 1) - ((s.width || i) - i);
    kt(o, {
      top: r.top + (a.top ? l : 0),
      left: r.left + (a.left ? u : 0)
    });
  },
  _dragHandler: function(e) {
    var t = this._getOffset(e), i = this._getDeltaByOffset(t), n = this._updateDimensions(i);
    this._updatePosition(i, n), this._triggerResizeAction(e, n);
  },
  _updateDimensions: function(e) {
    var t = (u) => u.substring(u.length - 2) === "px", i = this.option("stepPrecision") === "strict", n = this._elementSize, r = n.width + e.x, a = n.height + e.y, o = this.$element().get(0).style, s = e.x || i || t(o.width), l = e.y || i || t(o.height);
    return s && this.option({
      width: r
    }), l && this.option({
      height: a
    }), {
      width: s ? r : n.width,
      height: l ? a : n.height
    };
  },
  _triggerResizeAction: function(e, t) {
    var {
      width: i,
      height: n
    } = t;
    this._resizeAction({
      event: e,
      width: this.option("width") || i,
      height: this.option("height") || n,
      handles: this._movingSides
    }), _n(this.$element());
  },
  _isCornerHandler: (e) => Object.values(e).reduce((t, i) => t ^ i, 0) === 0,
  _getOffset: function(e) {
    var t = e.offset, i = this._movingSides;
    return !i.left && !i.right && (t.x = 0), !i.top && !i.bottom && (t.y = 0), t;
  },
  _roundByStep: function(e) {
    return this.option("stepPrecision") === "strict" ? this._roundStrict(e) : this._roundNotStrict(e);
  },
  _getSteps: function() {
    return ew(this.option("step"), !this.option("roundStepValue"));
  },
  _roundNotStrict: function(e) {
    var t = this._getSteps();
    return {
      x: e.x - e.x % t.h,
      y: e.y - e.y % t.v
    };
  },
  _roundStrict: function(e) {
    var t = this._movingSides, i = {
      x: e.x * (t.left ? -1 : 1),
      y: e.y * (t.top ? -1 : 1)
    }, n = this._getSteps(), r = this._elementLocation, a = this._elementSize, o = t.left ? r.left : r.left + a.width, s = t.top ? r.top : r.top + a.height, l = (o + i.x) % n.h, u = (s + i.y) % n.v, d = Math.sign || ((C) => (C = +C, C === 0 || isNaN(C) ? C : C > 0 ? 1 : -1)), c = (C, b) => (1 + 0.2 * d(b)) % 1 * C, h = (C, b) => Math.abs(C) < 0.2 * b, p = i.x - l, f = i.y - u;
    l > c(n.h, i.x) && (p += n.h), u > c(n.v, i.y) && (f += n.v);
    var v = (t.left || t.right) && !h(i.x, n.h) ? p : 0, m = (t.top || t.bottom) && !h(i.y, n.v) ? f : 0;
    return {
      x: v * (t.left ? -1 : 1),
      y: m * (t.top ? -1 : 1)
    };
  },
  _getMovingSides: function(e) {
    var t = g(e.target), i = t.hasClass(Ou + "-top-left"), n = t.hasClass(Ou + "-top-right"), r = t.hasClass(Ou + "-bottom-left"), a = t.hasClass(Ou + "-bottom-right");
    return {
      top: t.hasClass(GK) || i || n,
      left: t.hasClass(UK) || i || r,
      bottom: t.hasClass(KK) || r || a,
      right: t.hasClass(jK) || n || a
    };
  },
  _getArea: function() {
    var e = this.option("area");
    return ce(e) && (e = e.call(this)), Me(e) ? this._getAreaFromObject(e) : this._getAreaFromElement(e);
  },
  _getAreaScrollOffset: function() {
    var e = this.option("area"), t = !ce(e) && !Me(e), i = {
      scrollY: 0,
      scrollX: 0
    };
    if (t) {
      var n = g(e)[0];
      Ct(n) && (i.scrollX = n.pageXOffset, i.scrollY = n.pageYOffset);
    }
    return i;
  },
  _getAreaFromObject: function(e) {
    var t = {
      width: e.right - e.left,
      height: e.bottom - e.top,
      offset: {
        left: e.left,
        top: e.top
      }
    };
    return this._correctAreaGeometry(t), t;
  },
  _getAreaFromElement: function(e) {
    var t = g(e), i;
    return t.length && (i = {
      width: Wf(t),
      height: Dd(t),
      offset: T({
        top: 0,
        left: 0
      }, Ct(t[0]) ? {} : t.offset())
    }, this._correctAreaGeometry(i, t)), i;
  },
  _correctAreaGeometry: function(e, t) {
    var i = t ? this._getBorderWidth(t, "left") : 0, n = t ? this._getBorderWidth(t, "top") : 0;
    e.offset.left += i + this._getBorderWidth(this.$element(), "left"), e.offset.top += n + this._getBorderWidth(this.$element(), "top"), e.width -= Ge(this.$element()) - Wf(this.$element()), e.height -= Ne(this.$element()) - Dd(this.$element());
  },
  _dragEndHandler: function(e) {
    var t = this.$element();
    this._resizeEndAction({
      event: e,
      width: Ge(t),
      height: Ne(t),
      handles: this._movingSides
    }), this._toggleResizingClass(!1);
  },
  _renderWidth: function(e) {
    this.option("width", Zt(e, this.option("minWidth"), this.option("maxWidth")));
  },
  _renderHeight: function(e) {
    this.option("height", Zt(e, this.option("minHeight"), this.option("maxHeight")));
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "disabled":
        this._toggleEventHandlers(!e.value), this.callBase(e);
        break;
      case "handles":
        this._invalidate();
        break;
      case "minWidth":
      case "maxWidth":
        Re() && this._renderWidth(Ge(this.$element()));
        break;
      case "minHeight":
      case "maxHeight":
        Re() && this._renderHeight(Ne(this.$element()));
        break;
      case "onResize":
      case "onResizeStart":
      case "onResizeEnd":
        this._renderActions();
        break;
      case "area":
      case "stepPrecision":
      case "step":
      case "roundStepValue":
      case "keepAspectRatio":
        break;
      default:
        this.callBase(e);
    }
  },
  _clean: function() {
    this.$element().find("." + Au).remove();
  },
  _useTemplates: function() {
    return !1;
  }
});
We(zc, uA);
var QK = ["fullScreen", "forceApplyBindings", "dragOutsideBoundary", "dragAndResizeArea", "outsideDragFactor"], Mp = ke();
class JK extends lT {
  constructor(t) {
    var {
      fullScreen: i,
      forceApplyBindings: n,
      dragOutsideBoundary: r,
      dragAndResizeArea: a,
      outsideDragFactor: o
    } = t, s = pt(t, QK);
    super(s), this._props = ue({}, this._props, {
      fullScreen: i,
      forceApplyBindings: n,
      dragOutsideBoundary: r,
      dragAndResizeArea: a,
      outsideDragFactor: o
    }), this._$dragResizeContainer = void 0, this._outsideDragFactor = void 0, this._lastPositionBeforeFullScreen = void 0, this._updateDragResizeContainer(), this._updateOutsideDragFactor();
  }
  set fullScreen(t) {
    this._props.fullScreen = t, t ? this._fullScreenEnabled() : this._fullScreenDisabled();
  }
  get $dragResizeContainer() {
    return this._$dragResizeContainer;
  }
  get outsideDragFactor() {
    return this._outsideDragFactor;
  }
  set dragAndResizeArea(t) {
    this._props.dragAndResizeArea = t, this._updateDragResizeContainer();
  }
  set dragOutsideBoundary(t) {
    this._props.dragOutsideBoundary = t, this._updateDragResizeContainer(), this._updateOutsideDragFactor();
  }
  set outsideDragFactor(t) {
    this._props.outsideDragFactor = t, this._updateOutsideDragFactor();
  }
  updateContainer(t) {
    super.updateContainer(t), this._updateDragResizeContainer();
  }
  dragHandled() {
    this.restorePositionOnNextRender(!1);
  }
  resizeHandled() {
    this.restorePositionOnNextRender(!1);
  }
  positionContent() {
    if (this._props.fullScreen)
      kt(this._$content, {
        top: 0,
        left: 0
      }), this.detectVisualPositionChange();
    else {
      var t, i;
      (t = (i = this._props).forceApplyBindings) === null || t === void 0 || t.call(i), !this._shouldRenderContentInitialPosition && this._lastPositionBeforeFullScreen ? (kt(this._$content, this._lastPositionBeforeFullScreen), this._lastPositionBeforeFullScreen = void 0, this.detectVisualPositionChange()) : super.positionContent();
    }
  }
  _updateOutsideDragFactor() {
    this._outsideDragFactor = this._getOutsideDragFactor();
  }
  _getOutsideDragFactor() {
    return this._props.dragOutsideBoundary ? 1 : this._props.outsideDragFactor;
  }
  _updateDragResizeContainer() {
    this._$dragResizeContainer = this._getDragResizeContainer();
  }
  _getDragResizeContainer() {
    if (this._props.dragOutsideBoundary)
      return g(Mp);
    if (this._props.dragAndResizeArea)
      return g(this._props.dragAndResizeArea);
    var t = Tw().get(0) || this._props.container;
    return t ? this._$markupContainer : g(Mp);
  }
  _getVisualContainer() {
    return this._props.fullScreen ? g(Mp) : super._getVisualContainer();
  }
  _fullScreenEnabled() {
    this.restorePositionOnNextRender(!1), this._lastPositionBeforeFullScreen = this._visualPosition;
  }
  _fullScreenDisabled() {
    this.restorePositionOnNextRender(!1);
  }
}
var eU = ke(), Lp = "dx-popup", x0 = "dx-popup-wrapper", tU = "dx-popup-fullscreen", iU = "dx-popup-fullscreen-width", nU = "dx-popup-normal", rU = "dx-popup-content", aU = "dx-state-disabled", oU = "dx-popup-draggable", y0 = "dx-popup-title", sU = "dx-closebutton", b0 = "dx-popup-bottom", lU = "dx-has-close-button", uU = "dx-template-wrapper", dU = "dx-popup-flex-height", cU = "dx-popup-inherit-height", S0 = ["cancel", "clear", "done"], hU = "default", pU = "normal", fU = "text", gU = "contained", _U = lt.safari && Lw(lt.version, [11]) < 0, ar = {
  static: "",
  inherit: cU,
  flex: dU
}, vU = (e) => {
  var t = ve.current(), i = t.platform, n = "bottom", r = "before";
  if (i === "ios")
    switch (e) {
      case "cancel":
        n = "top";
        break;
      case "clear":
        n = "top", r = "after";
        break;
      case "done":
        r = "after";
    }
  else if (i === "android")
    switch (e) {
      case "cancel":
      case "done":
        r = "after";
    }
  return {
    toolbar: n,
    location: r
  };
}, an = tn.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), {
      upArrow: (e) => {
        var t;
        (t = this._drag) === null || t === void 0 || t.moveUp(e);
      },
      downArrow: (e) => {
        var t;
        (t = this._drag) === null || t === void 0 || t.moveDown(e);
      },
      leftArrow: (e) => {
        var t;
        (t = this._drag) === null || t === void 0 || t.moveLeft(e);
      },
      rightArrow: (e) => {
        var t;
        (t = this._drag) === null || t === void 0 || t.moveRight(e);
      }
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      fullScreen: !1,
      title: "",
      showTitle: !0,
      titleTemplate: "title",
      onTitleRendered: null,
      dragOutsideBoundary: !1,
      dragEnabled: !1,
      dragAndResizeArea: void 0,
      outsideDragFactor: 0,
      onResizeStart: null,
      onResize: null,
      onResizeEnd: null,
      resizeEnabled: !1,
      toolbarItems: [],
      showCloseButton: !1,
      bottomTemplate: "bottom",
      useDefaultToolbarButtons: !1,
      useFlatToolbarButtons: !1,
      autoResizeEnabled: !0
    });
  },
  _defaultOptionsRules: function() {
    var e = rn();
    return this.callBase().concat([{
      device: {
        platform: "ios"
      },
      options: {
        animation: this._iosAnimation
      }
    }, {
      device: {
        platform: "android"
      },
      options: {
        animation: this._androidAnimation
      }
    }, {
      device: {
        platform: "generic"
      },
      options: {
        showCloseButton: !0
      }
    }, {
      device: function(t) {
        return ve.real().deviceType === "desktop" && t.platform === "generic";
      },
      options: {
        dragEnabled: !0
      }
    }, {
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }, {
      device: function() {
        return St(e);
      },
      options: {
        useDefaultToolbarButtons: !0,
        useFlatToolbarButtons: !0,
        showCloseButton: !1
      }
    }]);
  },
  _iosAnimation: {
    show: {
      type: "slide",
      duration: 400,
      from: {
        position: {
          my: "top",
          at: "bottom"
        }
      },
      to: {
        position: {
          my: "center",
          at: "center"
        }
      }
    },
    hide: {
      type: "slide",
      duration: 400,
      from: {
        opacity: 1,
        position: {
          my: "center",
          at: "center"
        }
      },
      to: {
        opacity: 1,
        position: {
          my: "top",
          at: "bottom"
        }
      }
    }
  },
  _androidAnimation: function() {
    return this.option("fullScreen") ? {
      show: {
        type: "slide",
        duration: 300,
        from: {
          top: "30%",
          opacity: 0
        },
        to: {
          top: 0,
          opacity: 1
        }
      },
      hide: {
        type: "slide",
        duration: 300,
        from: {
          top: 0,
          opacity: 1
        },
        to: {
          top: "30%",
          opacity: 0
        }
      }
    } : {
      show: {
        type: "fade",
        duration: 400,
        from: 0,
        to: 1
      },
      hide: {
        type: "fade",
        duration: 400,
        from: 1,
        to: 0
      }
    };
  },
  _init: function() {
    var e = this.option("_wrapperClassExternal"), t = e ? "".concat(x0, " ").concat(e) : x0;
    this.callBase(), this._updateResizeCallbackSkipCondition(), this.$element().addClass(Lp), this.$wrapper().addClass(t), this._$popupContent = this._$content.wrapInner(g("<div>").addClass(rU)).children().eq(0);
  },
  _render: function() {
    var e = this.option("fullScreen");
    this._toggleFullScreenClass(e), this.callBase();
  },
  _toggleFullScreenClass: function(e) {
    this.$overlayContent().toggleClass(tU, e).toggleClass(nU, !e);
  },
  _initTemplates: function() {
    this.callBase(), this._templateManager.addDefaultTemplates({
      title: new da(),
      bottom: new da()
    });
  },
  _getActionsList: function() {
    return this.callBase().concat(["onResizeStart", "onResize", "onResizeEnd"]);
  },
  _contentResizeHandler: function(e) {
    this._shouldSkipContentResize(e) || this._renderGeometry({
      shouldOnlyReposition: !0
    });
  },
  _doesShowAnimationChangeDimensions: function() {
    var e = this.option("animation");
    return ["to", "from"].some((t) => {
      var i, n = e == null || (i = e.show) === null || i === void 0 ? void 0 : i[t];
      return De(n) && ("width" in n || "height" in n);
    });
  },
  _updateResizeCallbackSkipCondition() {
    var e = this._doesShowAnimationChangeDimensions();
    this._shouldSkipContentResize = (t) => e && this._showAnimationProcessing || this._areContentDimensionsRendered(t);
  },
  _observeContentResize: function(e) {
    if (this.option("useResizeObserver")) {
      var t = this._$content.get(0);
      e ? fa.observe(t, (i) => {
        this._contentResizeHandler(i);
      }) : fa.unobserve(t);
    }
  },
  _areContentDimensionsRendered: function(e) {
    var t, i, n, r = (t = e.contentBoxSize) === null || t === void 0 ? void 0 : t[0];
    if (r) {
      var a, o;
      return parseInt(r.inlineSize, 10) === ((a = this._renderedDimensions) === null || a === void 0 ? void 0 : a.width) && parseInt(r.blockSize, 10) === ((o = this._renderedDimensions) === null || o === void 0 ? void 0 : o.height);
    }
    var s = e.contentRect;
    return parseInt(s.width, 10) === ((i = this._renderedDimensions) === null || i === void 0 ? void 0 : i.width) && parseInt(s.height, 10) === ((n = this._renderedDimensions) === null || n === void 0 ? void 0 : n.height);
  },
  _renderContent() {
    this.callBase(), this._observeContentResize(!0);
  },
  _renderContentImpl: function() {
    this._renderTitle(), this.callBase(), this._renderResize(), this._renderBottom();
  },
  _renderTitle: function() {
    var e = this._getToolbarItems("top"), t = this.option("title"), i = this.option("showTitle");
    if (i && t && e.unshift({
      location: ve.current().ios ? "center" : "before",
      text: t
    }), i || e.length > 0) {
      this._$title && this._$title.remove();
      var n = g("<div>").addClass(y0).insertBefore(this.$content());
      this._$title = this._renderTemplateByType("titleTemplate", e, n).addClass(y0), this._renderDrag(), this._executeTitleRenderAction(this._$title), this._$title.toggleClass(lU, this._hasCloseButton());
    } else
      this._$title && this._$title.detach();
  },
  _renderTemplateByType: function(e, t, i, n) {
    var {
      rtlEnabled: r,
      useDefaultToolbarButtons: a,
      useFlatToolbarButtons: o,
      disabled: s
    } = this.option(), l = this._getTemplateByOption(e), u = l instanceof da;
    if (u) {
      var d = T({}, this.option("integrationOptions"), {
        skipTemplates: ["content", "title"]
      }), c = T(n, {
        items: t,
        rtlEnabled: r,
        useDefaultButtons: a,
        useFlatButtons: o,
        disabled: s,
        integrationOptions: d
      });
      this._getTemplate("dx-polymorph-widget").render({
        container: i,
        model: {
          widget: this._getToolbarName(),
          options: c
        }
      });
      var h = i.children("div");
      return i.replaceWith(h), h;
    } else {
      var p = g(l.render({
        container: Ie(i)
      }));
      return p.hasClass(uU) && (i.replaceWith(p), i = p), i;
    }
  },
  _getToolbarName: function() {
    return "dxToolbarBase";
  },
  _renderVisibilityAnimate: function(e) {
    return this.callBase(e);
  },
  _hide() {
    return this._observeContentResize(!1), this.callBase();
  },
  _executeTitleRenderAction: function(e) {
    this._getTitleRenderAction()({
      titleElement: Ie(e)
    });
  },
  _getTitleRenderAction: function() {
    return this._titleRenderAction || this._createTitleRenderAction();
  },
  _createTitleRenderAction: function() {
    return this._titleRenderAction = this._createActionByOption("onTitleRendered", {
      element: this.element(),
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _getCloseButton: function() {
    return {
      toolbar: "top",
      location: "after",
      template: this._getCloseButtonRenderer()
    };
  },
  _getCloseButtonRenderer: function() {
    return (e, t, i) => {
      var n = g("<div>").addClass(sU);
      this._createComponent(n, Gt, {
        icon: "close",
        onClick: this._createToolbarItemAction(void 0),
        stylingMode: "text",
        integrationOptions: {}
      }), g(i).append(n);
    };
  },
  _getToolbarItems: function(e) {
    var t = this.option("toolbarItems"), i = [];
    this._toolbarItemClasses = [];
    var n = ve.current().platform, r = 0;
    return B(t, (a, o) => {
      var s = x(o.shortcut), l = s ? vU(o.shortcut) : o;
      if (s && n === "ios" && r < 2 && (l.toolbar = "top", r++), l.toolbar = o.toolbar || l.toolbar || "top", l && l.toolbar === e) {
        s && T(l, {
          location: o.location
        }, this._getToolbarItemByAlias(o));
        var u = n === "generic";
        o.shortcut === "done" && u || o.shortcut === "cancel" && !u ? i.unshift(l) : i.push(l);
      }
    }), e === "top" && this._hasCloseButton() && i.push(this._getCloseButton()), i;
  },
  _hasCloseButton() {
    return this.option("showCloseButton") && this.option("showTitle");
  },
  _getLocalizationKey: (e) => e.toLowerCase() === "done" ? "OK" : Qs(e, !0),
  _getToolbarItemByAlias: function(e) {
    var t = this, i = e.shortcut;
    if (!S0.includes(i))
      return !1;
    var n = T({
      text: q.format(this._getLocalizationKey(i)),
      onClick: this._createToolbarItemAction(e.onClick),
      integrationOptions: {},
      type: t.option("useDefaultToolbarButtons") ? hU : pU,
      stylingMode: t.option("useFlatToolbarButtons") ? fU : gU
    }, e.options || {}), r = Lp + "-" + i;
    return this._toolbarItemClasses.push(r), {
      template: function(a, o, s) {
        var l = g("<div>").addClass(r).appendTo(s);
        t._createComponent(l, Gt, n);
      }
    };
  },
  _createToolbarItemAction: function(e) {
    return this._createAction(e, {
      afterExecute: function(t) {
        t.component.hide();
      }
    });
  },
  _renderBottom: function() {
    var e = this._getToolbarItems("bottom");
    if (e.length) {
      this._$bottom && this._$bottom.remove();
      var t = g("<div>").addClass(b0).insertAfter(this.$content());
      this._$bottom = this._renderTemplateByType("bottomTemplate", e, t, {
        compactMode: !0
      }).addClass(b0), this._toggleClasses();
    } else
      this._$bottom && this._$bottom.detach();
  },
  _toggleDisabledState: function(e) {
    this.callBase(...arguments), this.$content().toggleClass(aU, !!e);
  },
  _toggleClasses: function() {
    var e = S0;
    B(e, (t, i) => {
      var n = Lp + "-" + i;
      this._toolbarItemClasses.includes(n) ? (this.$wrapper().addClass(n + "-visible"), this._$bottom.addClass(n)) : (this.$wrapper().removeClass(n + "-visible"), this._$bottom.removeClass(n));
    });
  },
  _toggleFocusClass(e, t) {
    if (this.callBase(e, t), e && !rN(this._zIndex)) {
      var i = aT(this._zIndexInitValue());
      bg(this._zIndex), this._zIndex = i, this._$wrapper.css("zIndex", i), this._$content.css("zIndex", i);
    }
  },
  _getPositionControllerConfig() {
    var {
      fullScreen: e,
      forceApplyBindings: t,
      dragOutsideBoundary: i,
      dragAndResizeArea: n,
      outsideDragFactor: r
    } = this.option();
    return T({}, this.callBase(), {
      fullScreen: e,
      forceApplyBindings: t,
      dragOutsideBoundary: i,
      dragAndResizeArea: n,
      outsideDragFactor: r
    });
  },
  _initPositionController() {
    this._positionController = new JK(this._getPositionControllerConfig());
  },
  _getDragTarget: function() {
    return this.topToolbar();
  },
  _renderGeometry: function(e) {
    var {
      visible: t,
      useResizeObserver: i
    } = this.option();
    if (t && Re()) {
      var n = this._showAnimationProcessing, r = n && !(e != null && e.forceStopAnimation) && i;
      this._isAnimationPaused = r || void 0, this._stopAnimation(), e != null && e.shouldOnlyReposition ? this._renderPosition(!1) : this._renderGeometryImpl(e == null ? void 0 : e.isDimensionChange), r && (this._animateShowing(), this._isAnimationPaused = void 0);
    }
  },
  _cacheDimensions: function() {
    this.option("useResizeObserver") && (this._renderedDimensions = {
      width: parseInt(Ae(this._$content), 10),
      height: parseInt(Fe(this._$content), 10)
    });
  },
  _renderGeometryImpl: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    e || this._resetContentHeight(), this.callBase(), this._cacheDimensions(), this._setContentHeight();
  },
  _resetContentHeight: function() {
    var e = this._getOptionValue("height");
    e === "auto" && this.$content().css({
      height: "auto",
      maxHeight: "none"
    });
  },
  _renderDrag: function() {
    var e = this._getDragTarget(), t = this.option("dragEnabled");
    if (e) {
      var i = {
        dragEnabled: t,
        handle: e.get(0),
        draggableElement: this._$content.get(0),
        positionController: this._positionController
      };
      this._drag ? this._drag.init(i) : this._drag = new HK(i), this.$overlayContent().toggleClass(oU, t);
    }
  },
  _renderResize: function() {
    this._resizable = this._createComponent(this._$content, uA, {
      handles: this.option("resizeEnabled") ? "all" : "none",
      onResizeEnd: (e) => {
        this._resizeEndHandler(e), this._observeContentResize(!0);
      },
      onResize: (e) => {
        this._setContentHeight(), this._actions.onResize(e);
      },
      onResizeStart: (e) => {
        this._observeContentResize(!1), this._actions.onResizeStart(e);
      },
      minHeight: 100,
      minWidth: 100,
      area: this._positionController.$dragResizeContainer,
      keepAspectRatio: !1
    });
  },
  _resizeEndHandler: function(e) {
    var t = this._resizable.option("width"), i = this._resizable.option("height");
    t && this._setOptionWithoutOptionChange("width", t), i && this._setOptionWithoutOptionChange("height", i), this._cacheDimensions(), this._positionController.resizeHandled(), this._positionController.detectVisualPositionChange(e.event), this._actions.onResizeEnd(e);
  },
  _setContentHeight: function() {
    (this.option("forceApplyBindings") || $)();
    var e = this.$overlayContent().get(0), t = this._chooseHeightStrategy(e);
    this.$content().css(this._getHeightCssStyles(t, e)), this._setHeightClasses(this.$overlayContent(), t);
  },
  _heightStrategyChangeOffset: function(e, t) {
    return e === ar.flex ? -t : 0;
  },
  _chooseHeightStrategy: function(e) {
    var t = e.style.width === "auto" || e.style.width === "", i = ar.static;
    return this._isAutoHeight() && this.option("autoResizeEnabled") && (t || _U ? i = ar.inherit : i = ar.flex), i;
  },
  _getHeightCssStyles: function(e, t) {
    var i = {}, n = this._getOptionValue("maxHeight", t), r = this._getOptionValue("minHeight", t), a = this._splitPopupHeight(), o = a.header + a.footer + a.contentVerticalOffsets + a.popupVerticalOffsets + this._heightStrategyChangeOffset(e, a.popupVerticalPaddings);
    if (e === ar.static) {
      if (!this._isAutoHeight() || n || r) {
        var s = this.option("fullScreen") ? Math.min(Et(t).height, ke().innerHeight) : Et(t).height, l = s - o;
        i = {
          height: Math.max(0, l),
          minHeight: "auto",
          maxHeight: "auto"
        };
      }
    } else {
      var u = g(this._positionController.$visualContainer).get(0), d = hF(n, -o, u), c = pF(r, -o, u);
      i = {
        height: "auto",
        minHeight: c,
        maxHeight: d
      };
    }
    return i;
  },
  _setHeightClasses: function(e, t) {
    var i = "";
    for (var n in ar)
      ar[n] !== t && (i += " " + ar[n]);
    e.removeClass(i).addClass(t);
  },
  _isAutoHeight: function() {
    return this.$overlayContent().get(0).style.height === "auto";
  },
  _splitPopupHeight: function() {
    var e = this.topToolbar(), t = this.bottomToolbar();
    return {
      header: Xm(e && e.get(0)),
      footer: Xm(t && t.get(0)),
      contentVerticalOffsets: wh(this.$overlayContent().get(0), !0),
      popupVerticalOffsets: wh(this.$content().get(0), !0),
      popupVerticalPaddings: wh(this.$content().get(0), !1)
    };
  },
  _isAllWindowCovered: function() {
    return this.callBase() || this.option("fullScreen");
  },
  _renderDimensions: function() {
    this.option("fullScreen") ? this.$overlayContent().css({
      width: "100%",
      height: "100%",
      minWidth: "",
      maxWidth: "",
      minHeight: "",
      maxHeight: ""
    }) : this.callBase(), Re() && this._renderFullscreenWidthClass();
  },
  _dimensionChanged: function() {
    this._renderGeometry({
      isDimensionChange: !0
    });
  },
  _clean: function() {
    this.callBase(), this._observeContentResize(!1);
  },
  _renderFullscreenWidthClass: function() {
    this.$overlayContent().toggleClass(iU, Ge(this.$overlayContent()) === Ae(eU));
  },
  refreshPosition: function() {
    this._renderPosition();
  },
  _optionChanged: function(e) {
    var t, i = e.value;
    switch (e.name) {
      case "disabled":
        this.callBase(e), this._renderTitle(), this._renderBottom();
        break;
      case "animation":
        this._updateResizeCallbackSkipCondition();
        break;
      case "showTitle":
      case "title":
      case "titleTemplate":
        this._renderTitle(), this._renderGeometry(), _n(this.$overlayContent());
        break;
      case "bottomTemplate":
        this._renderBottom(), this._renderGeometry(), _n(this.$overlayContent());
        break;
      case "container":
        if (this.callBase(e), this.option("resizeEnabled")) {
          var n;
          (n = this._resizable) === null || n === void 0 || n.option("area", this._positionController.$dragResizeContainer);
        }
        break;
      case "width":
      case "height":
        this.callBase(e), (t = this._resizable) === null || t === void 0 || t.option(e.name, e.value);
        break;
      case "onTitleRendered":
        this._createTitleRenderAction(e.value);
        break;
      case "toolbarItems":
      case "useDefaultToolbarButtons":
      case "useFlatToolbarButtons":
        var r = !e.fullName.match(/^toolbarItems((\[\d+\])(\.(options|visible).*)?)?$/);
        this._renderTitle(), this._renderBottom(), r && (this._renderGeometry(), _n(this.$overlayContent()));
        break;
      case "dragEnabled":
        this._renderDrag();
        break;
      case "dragAndResizeArea":
        this._positionController.dragAndResizeArea = i, this.option("resizeEnabled") && this._resizable.option("area", this._positionController.$dragResizeContainer), this._positionController.positionContent();
        break;
      case "dragOutsideBoundary":
        this._positionController.dragOutsideBoundary = i, this.option("resizeEnabled") && this._resizable.option("area", this._positionController.$dragResizeContainer);
        break;
      case "outsideDragFactor":
        this._positionController.outsideDragFactor = i;
        break;
      case "resizeEnabled":
        this._renderResize(), this._renderGeometry();
        break;
      case "autoResizeEnabled":
        this._renderGeometry(), _n(this.$overlayContent());
        break;
      case "fullScreen":
        this._positionController.fullScreen = e.value, this._toggleFullScreenClass(e.value), this._toggleSafariScrolling(), this._renderGeometry(), _n(this.$overlayContent());
        break;
      case "showCloseButton":
        this._renderTitle();
        break;
      default:
        this.callBase(e);
    }
  },
  bottomToolbar: function() {
    return this._$bottom;
  },
  topToolbar: function() {
    return this._$title;
  },
  $content: function() {
    return this._$popupContent;
  },
  content: function() {
    return Ie(this.$content());
  },
  $overlayContent: function() {
    return this._$content;
  }
});
We("dxPopup", an);
class dA extends an {
  _getToolbarName() {
    return "dxToolbar";
  }
}
dA.defaultOptions = function(e) {
  an.defaultOptions(e);
};
We("dxPopup", dA);
var mU = "dx-dropdownmenu", CU = "dx-dropdownmenu-popup", xU = "dx-dropdownmenu-popup-wrapper", yU = "dx-dropdownmenu-list", bU = "dx-dropdownmenu-button", SU = 10, E0 = 3;
class EU extends Mt {
  _supportedKeys() {
    var t = {};
    return (!this.option("opened") || !this._list.option("focusedElement")) && (t = this._button._supportedKeys()), T(super._supportedKeys(), t, {
      tab: function() {
        this._popup && this._popup.hide();
      }
    });
  }
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      items: [],
      onItemClick: null,
      dataSource: null,
      itemTemplate: "item",
      onButtonClick: null,
      activeStateEnabled: !0,
      hoverStateEnabled: !0,
      opened: !1,
      onItemRendered: null,
      closeOnClick: !0,
      useInkRipple: !1,
      container: void 0,
      animation: {
        show: {
          type: "fade",
          from: 0,
          to: 1
        },
        hide: {
          type: "fade",
          to: 0
        }
      }
    });
  }
  _defaultOptionsRules() {
    return super._defaultOptionsRules().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }, {
      device: function() {
        return St();
      },
      options: {
        useInkRipple: !0,
        animation: {
          show: {
            type: "pop",
            duration: 200,
            from: {
              scale: 0
            },
            to: {
              scale: 1
            }
          },
          hide: {
            type: "pop",
            duration: 200,
            from: {
              scale: 1
            },
            to: {
              scale: 0
            }
          }
        }
      }
    }]);
  }
  _init() {
    super._init(), this.$element().addClass(mU), this._initItemClickAction(), this._initButtonClickAction();
  }
  _initItemClickAction() {
    this._itemClickAction = this._createActionByOption("onItemClick");
  }
  _initButtonClickAction() {
    this._buttonClickAction = this._createActionByOption("onButtonClick");
  }
  _initTemplates() {
    this._templateManager.addDefaultTemplates({
      content: new O_("content")
    }), super._initTemplates();
  }
  _initMarkup() {
    this._renderButton(), super._initMarkup();
  }
  _render() {
    super._render(), this.setAria({
      role: "menubar",
      haspopup: !0,
      expanded: this.option("opened")
    });
  }
  _renderContentImpl() {
    this.option("opened") && this._renderPopup();
  }
  _clean() {
    this._cleanFocusState(), this._list && this._list.$element().remove(), this._popup && this._popup.$element().remove(), delete this._list, delete this._popup;
  }
  _renderButton() {
    var t = this.$element().addClass(bU);
    this._button = this._createComponent(t, Gt, {
      icon: "overflow",
      template: "content",
      useInkRipple: this.option("useInkRipple"),
      hoverStateEnabled: !1,
      focusStateEnabled: !1,
      onClick: (i) => {
        this.option("opened", !this.option("opened")), this._buttonClickAction(i);
      }
    });
  }
  _toggleActiveState(t, i, n) {
    this._button._toggleActiveState(t, i, n);
  }
  _toggleMenuVisibility(t) {
    var i = t ?? !this._popup.option("visible");
    t && this._renderPopup(), this._popup.toggle(i), this.setAria("expanded", i);
  }
  _renderPopup() {
    if (!this._$popup) {
      this._$popup = g("<div>").appendTo(this.$element());
      var {
        rtlEnabled: t,
        container: i,
        animation: n
      } = this.option();
      this._popup = this._createComponent(this._$popup, "dxPopup", {
        onInitialized(r) {
          var {
            component: a
          } = r;
          a.$wrapper().addClass(xU).addClass(CU);
        },
        deferRendering: !1,
        contentTemplate: (r) => this._renderList(r),
        _ignoreFunctionValueDeprecation: !0,
        maxHeight: () => this._getMaxHeight(),
        position: {
          my: "top ".concat(t ? "left" : "right"),
          at: "bottom ".concat(t ? "left" : "right"),
          collision: "fit flip",
          offset: {
            v: E0
          },
          of: this.$element()
        },
        animation: n,
        onOptionChanged: (r) => {
          var {
            name: a,
            value: o
          } = r;
          a === "visible" && this.option("opened", o);
        },
        container: i,
        autoResizeEnabled: !1,
        height: "auto",
        width: "auto",
        hideOnOutsideClick: (r) => this._closeOutsideDropDownHandler(r),
        hideOnParentScroll: !0,
        shading: !1,
        dragEnabled: !1,
        showTitle: !1,
        fullScreen: !1,
        _fixWrapperPosition: !0
      });
    }
  }
  _getMaxHeight() {
    var t = this.$element(), i = t.offset().top, n = Ne(ke()), r = Math.max(i, n - i - Ne(t));
    return Math.min(n, r - E0 - SU);
  }
  _closeOutsideDropDownHandler(t) {
    var i = !g(t.target).closest(this.$element()).length;
    return i;
  }
  _renderList(t) {
    var i = g(t);
    i.addClass(yU), this._list = this._createComponent(i, $K, {
      dataSource: this._getListDataSource(),
      pageLoadMode: "scrollBottom",
      indicateLoading: !1,
      noDataText: "",
      itemTemplate: this.option("itemTemplate"),
      onItemClick: (n) => {
        this.option("closeOnClick") && this.option("opened", !1), this._itemClickAction(n);
      },
      tabIndex: -1,
      focusStateEnabled: !1,
      activeStateEnabled: !0,
      onItemRendered: this.option("onItemRendered"),
      _areaTarget: this.$element(),
      _itemAttributes: {
        role: "menuitem"
      }
    });
  }
  _itemOptionChanged(t, i, n) {
    var r;
    (r = this._list) === null || r === void 0 || r._itemOptionChanged(t, i, n), jd(this._list, t);
  }
  _getListDataSource() {
    var t;
    return (t = this.option("dataSource")) !== null && t !== void 0 ? t : this.option("items");
  }
  _setListDataSource() {
    var t;
    (t = this._list) === null || t === void 0 || t.option("dataSource", this._getListDataSource()), delete this._deferRendering;
  }
  _getKeyboardListeners() {
    return super._getKeyboardListeners().concat([this._list]);
  }
  _toggleVisibility(t) {
    super._toggleVisibility(t), this._button.option("visible", t);
  }
  _optionChanged(t) {
    var i, n, r, {
      name: a,
      value: o
    } = t;
    switch (a) {
      case "items":
      case "dataSource":
        this.option("opened") ? this._setListDataSource() : this._deferRendering = !0;
        break;
      case "itemTemplate":
        (i = this._list) === null || i === void 0 || i.option(a, this._getTemplate(o));
        break;
      case "onItemClick":
        this._initItemClickAction();
        break;
      case "onButtonClick":
        this._buttonClickAction();
        break;
      case "useInkRipple":
        this._invalidate();
        break;
      case "focusStateEnabled":
        (n = this._list) === null || n === void 0 || n.option(a, o), super._optionChanged(t);
        break;
      case "onItemRendered":
        (r = this._list) === null || r === void 0 || r.option(a, o);
        break;
      case "opened":
        this._deferRendering && this._setListDataSource(), this._toggleMenuVisibility(o), this._updateFocusableItemsTabIndex();
        break;
      case "closeOnClick":
        break;
      case "container":
        this._popup && this._popup.option(a, o);
        break;
      case "disabled":
        this._list && this._updateFocusableItemsTabIndex();
        break;
      default:
        super._optionChanged(t);
    }
  }
  _updateFocusableItemsTabIndex() {
    this.option("items").forEach((t) => jd(this._list, t));
  }
}
var w0 = "dx-state-invisible", wU = "dx-toolbar-menu-container", IU = "dx-toolbar-button", Ru = "dx-toolbar-item-auto-hide", Vp = "dx-toolbar-item-invisible";
class TU {
  constructor(t) {
    this._toolbar = t;
  }
  _initMarkup() {
    Bt(() => {
      this._renderOverflowMenu(), this._renderMenuItems();
    });
  }
  _renderOverflowMenu() {
    if (this._hasVisibleMenuItems()) {
      this._renderMenuButtonContainer();
      var t = g("<div>").appendTo(this._overflowMenuContainer()), i = this._toolbar._createActionByOption("onItemClick"), n = this._toolbar._getTemplateByOption("menuItemTemplate");
      this._menu = this._toolbar._createComponent(t, EU, {
        disabled: this._toolbar.option("disabled"),
        itemTemplate: () => n,
        onItemClick: (r) => {
          i(r);
        },
        container: this._toolbar.option("menuContainer"),
        onOptionChanged: (r) => {
          var {
            name: a,
            value: o
          } = r;
          a === "opened" && this._toolbar.option("overflowMenuVisible", o), a === "items" && this._updateMenuVisibility(o);
        }
      });
    }
  }
  renderMenuItems() {
    this._menu || this._renderOverflowMenu(), this._menu && this._menu.option("items", this._getMenuItems()), this._menu && !this._menu.option("items").length && this._menu.option("opened", !1);
  }
  _renderMenuButtonContainer() {
    this._$overflowMenuContainer = g("<div>").appendTo(this._toolbar._$afterSection).addClass(IU).addClass(wU);
  }
  _overflowMenuContainer() {
    return this._$overflowMenuContainer;
  }
  _updateMenuVisibility(t) {
    var i = t ?? this._getMenuItems(), n = i.length && this._hasVisibleMenuItems(i);
    this._toggleMenuVisibility(n);
  }
  _toggleMenuVisibility(t) {
    this._overflowMenuContainer() && this._overflowMenuContainer().toggleClass(w0, !t);
  }
  _renderMenuItems() {
    Bt(() => {
      this.renderMenuItems();
    });
  }
  _dimensionChanged() {
    this.renderMenuItems();
  }
  _getToolbarItems() {
    var t;
    return li((t = this._toolbar.option("items")) !== null && t !== void 0 ? t : [], (i) => !this._toolbar._isMenuItem(i));
  }
  _getMenuItems() {
    var t, i, n = li((t = this._toolbar.option("items")) !== null && t !== void 0 ? t : [], (o) => this._toolbar._isMenuItem(o)), r = this._toolbar._itemContainer().children(".".concat(Ru, ".").concat(Vp)).not(".".concat(w0));
    this._restoreItems = (i = this._restoreItems) !== null && i !== void 0 ? i : [];
    var a = [].slice.call(r).map((o) => {
      var s = this._toolbar._getItemData(o), l = g(o), u = l.children();
      return T({
        menuItemTemplate: () => {
          this._restoreItems.push({
            container: l,
            item: u
          });
          var d = g("<div>").addClass(Ru);
          return d.append(u);
        }
      }, s);
    });
    return [...a, ...n];
  }
  _hasVisibleMenuItems(t) {
    var i = t ?? this._toolbar.option("items"), n = !1, r = tt("visible"), a = tt("locateInMenu");
    return B(i, function(o, s) {
      var l = r(s, {
        functionsAsIs: !0
      }), u = a(s, {
        functionsAsIs: !0
      });
      (l !== !1 && (u === "auto" || u === "always") || s.location === "menu") && (n = !0);
    }), n;
  }
  _arrangeItems() {
    var t;
    this._toolbar._$centerSection.css({
      margin: "0 auto",
      float: "none"
    }), B((t = this._restoreItems) !== null && t !== void 0 ? t : [], function(n, r) {
      g(r.container).append(r.item);
    }), this._restoreItems = [];
    var i = Ae(this._toolbar.$element());
    return this._hideOverflowItems(i), i;
  }
  _hideOverflowItems(t) {
    var i, n = this._toolbar.$element().find(".".concat(Ru));
    if (n.length) {
      t = (i = t) !== null && i !== void 0 ? i : Ae(this._toolbar.$element()), g(n).removeClass(Vp);
      for (var r = this._getItemsWidth(); n.length && t < r; ) {
        var a = n.eq(-1);
        r -= Ge(a), a.addClass(Vp), n.splice(-1, 1);
      }
    }
  }
  _getItemsWidth() {
    return this._toolbar._getSummaryItemsWidth([this._toolbar._$beforeSection, this._toolbar._$centerSection, this._toolbar._$afterSection]);
  }
  _itemOptionChanged(t, i, n) {
    if (this._toolbar._isMenuItem(t) && (i === "disabled" || i === "options.disabled")) {
      var r;
      (r = this._menu) === null || r === void 0 || r._itemOptionChanged(t, i, n);
      return;
    }
    this.renderMenuItems();
  }
  _renderItem(t, i) {
    t.locateInMenu === "auto" && i.addClass(Ru);
  }
  _optionChanged(t, i) {
    var n, r, a, o, s;
    switch (t) {
      case "disabled":
        (n = this._menu) === null || n === void 0 || n.option(t, i);
        break;
      case "overflowMenuVisible":
        (r = this._menu) === null || r === void 0 || r.option("opened", i);
        break;
      case "onItemClick":
        (a = this._menu) === null || a === void 0 || a.option(t, i);
        break;
      case "menuContainer":
        (o = this._menu) === null || o === void 0 || o.option("container", i);
        break;
      case "menuItemTemplate":
        (s = this._menu) === null || s === void 0 || s.option("itemTemplate", i);
    }
  }
}
var DU = "dx-toolbar-multiline", AU = "dx-toolbar-text-auto-hide";
class cA extends oA {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      menuItemTemplate: "menuItem",
      menuContainer: void 0,
      overflowMenuVisible: !1,
      multiline: !1
    });
  }
  _isMultiline() {
    return this.option("multiline");
  }
  _dimensionChanged(t) {
    t !== "height" && (super._dimensionChanged(), this._layoutStrategy._dimensionChanged());
  }
  _initMarkup() {
    super._initMarkup(), this._updateFocusableItemsTabIndex(), this._layoutStrategy._initMarkup();
  }
  _renderToolbar() {
    super._renderToolbar(), this._renderLayoutStrategy();
  }
  _itemContainer() {
    return this._isMultiline() ? this._$toolbarItemsContainer : super._itemContainer();
  }
  _renderLayoutStrategy() {
    this.$element().toggleClass(DU, this._isMultiline()), this._layoutStrategy = this._isMultiline() ? new $2(this) : new TU(this);
  }
  _renderSections() {
    if (!this._isMultiline())
      return super._renderSections();
  }
  _postProcessRenderItems() {
    this._layoutStrategy._hideOverflowItems(), this._layoutStrategy._updateMenuVisibility(), super._postProcessRenderItems(), this._layoutStrategy._renderMenuItems();
  }
  _renderItem(t, i, n, r) {
    var a = super._renderItem(t, i, n, r);
    this._layoutStrategy._renderItem(i, a);
    var {
      widget: o,
      showText: s
    } = i;
    return o === "dxButton" && s === "inMenu" && a.toggleClass(AU), a;
  }
  _getItemsWidth() {
    return this._layoutStrategy._getItemsWidth();
  }
  _getMenuItems() {
    return this._layoutStrategy._getMenuItems();
  }
  _getToolbarItems() {
    return this._layoutStrategy._getToolbarItems();
  }
  _arrangeItems() {
    if (!this.$element().is(":hidden")) {
      var t = this._layoutStrategy._arrangeItems();
      this._isMultiline() || super._arrangeItems(t);
    }
  }
  _itemOptionChanged(t, i, n) {
    this._layoutStrategy._itemOptionChanged(t, i, n), this._isMenuItem(t) || super._itemOptionChanged(t, i, n), (i === "disabled" || i === "options.disabled") && jd(this, t), i === "location" && this.repaint();
  }
  _updateFocusableItemsTabIndex() {
    this._getToolbarItems().forEach((t) => jd(this, t));
  }
  _isMenuItem(t) {
    return t.location === "menu" || t.locateInMenu === "always";
  }
  _isToolbarItem(t) {
    return t.location === void 0 || t.locateInMenu === "never";
  }
  _optionChanged(t) {
    var {
      name: i,
      value: n
    } = t;
    switch (this._layoutStrategy._optionChanged(i, n), i) {
      case "menuContainer":
      case "menuItemTemplate":
      case "overflowMenuVisible":
        break;
      case "multiline":
        this._invalidate();
        break;
      case "disabled":
        super._optionChanged.apply(this, arguments), this._updateFocusableItemsTabIndex();
        break;
      default:
        super._optionChanged.apply(this, arguments);
    }
  }
  updateDimensions() {
    this._dimensionChanged();
  }
}
We("dxToolbar", cA);
var OU = "header-panel", I0 = "toolbar-button", RU = "-ariaToolbar", T0 = ["addRowButton", "applyFilterButton", "columnChooserButton", "exportButton", "groupPanel", "revertButton", "saveButton", "searchPanel"], BU = {
  _getToolbarItems: function() {
    return [];
  },
  _getButtonContainer: function() {
    return g("<div>").addClass(this.addWidgetPrefix(I0));
  },
  _getToolbarButtonClass: function(e) {
    var t = e ? " " + e : "";
    return this.addWidgetPrefix(I0) + t;
  },
  _getToolbarOptions: function() {
    var e = this.option("toolbar"), t = {
      toolbarOptions: {
        items: this._getToolbarItems(),
        visible: e == null ? void 0 : e.visible,
        disabled: e == null ? void 0 : e.disabled,
        onItemRendered: function(r) {
          var a = r.itemData.onItemRendered;
          a && a(r);
        }
      }
    }, i = e == null ? void 0 : e.items;
    if (t.toolbarOptions.items = this._normalizeToolbarItems(t.toolbarOptions.items, i), this.executeAction("onToolbarPreparing", t), t.toolbarOptions && !x(t.toolbarOptions.visible)) {
      var n = t.toolbarOptions.items;
      t.toolbarOptions.visible = !!(n != null && n.length);
    }
    return t.toolbarOptions;
  },
  _normalizeToolbarItems: function(e, t) {
    e.forEach((o) => {
      if (!T0.includes(o.name))
        throw new Error("Default toolbar item '".concat(o.name, "' is not added to DEFAULT_TOOLBAR_ITEM_NAMES"));
    });
    var i = {
      location: "after"
    }, n = Array.isArray(t);
    if (!x(t))
      return e;
    n || (t = [t]);
    var r = {};
    e.forEach((o) => {
      r[o.name] = o;
    });
    var a = t.map((o) => (Te(o) && (o = {
      name: o
    }), x(o.name) && (x(r[o.name]) ? o = T(!0, {}, r[o.name], o) : T0.includes(o.name) && (o = ue({}, o, {
      visible: !1
    }))), T(!0, {}, i, o)));
    return n ? a : a[0];
  },
  _renderCore: function() {
    if (this._toolbar)
      this._toolbar.option(this._toolbarOptions);
    else {
      var e = this.element();
      e.addClass(this.addWidgetPrefix(OU));
      var t = q.format(this.component.NAME + RU), i = g("<div>").attr("aria-label", t).appendTo(e);
      this._toolbar = this._createComponent(i, cA, this._toolbarOptions);
    }
  },
  _columnOptionChanged: $,
  _handleDataChanged: function() {
    this._requireReady && this.render();
  },
  init: function() {
    this.callBase(), this.createAction("onToolbarPreparing", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  render: function() {
    this._toolbarOptions = this._getToolbarOptions(), this.callBase.apply(this, arguments);
  },
  setToolbarItemDisabled: function(e, t) {
    var i = this._toolbar;
    if (i) {
      var n = i.option("items") || [], r = n.indexOf(n.filter(function(o) {
        return o.name === e;
      })[0]);
      if (r >= 0) {
        var a = "items[" + r + "]";
        i.option(a + ".options") ? i.option(a + ".options.disabled", t) : i.option(a + ".disabled", t);
      }
    }
  },
  updateToolbarDimensions: function() {
    var e;
    (e = this._toolbar) === null || e === void 0 || e.updateDimensions();
  },
  getHeaderPanel: function() {
    return this.element();
  },
  getHeight: function() {
    return this.getElementHeight();
  },
  optionChanged: function(e) {
    if (e.name === "onToolbarPreparing" && (this._invalidate(), e.handled = !0), e.name === "toolbar" && (e.handled = !0, this._toolbar)) {
      var t = ka(e.fullName), i = e.fullName.replace(/^toolbar\./, "");
      if (t.length === 1) {
        var n = this._getToolbarOptions();
        this._toolbar.option(n);
      } else if (t[1] === "items")
        if (t.length === 2) {
          var r = this._getToolbarOptions();
          this._toolbar.option("items", r.items);
        } else if (t.length === 3) {
          var a = this._normalizeToolbarItems(this._getToolbarItems(), e.value);
          this._toolbar.option(i, a);
        } else
          t.length >= 4 && this._toolbar.option(i, e.value);
      else
        this._toolbar.option(i, e.value);
    }
    this.callBase(e);
  },
  isVisible: function() {
    return !!(this._toolbarOptions && this._toolbarOptions.visible);
  },
  allowDragging: $
}, kU = Rl.inherit(BU), hA = {
  defaultOptions: function() {
    return {};
  },
  views: {
    headerPanel: kU
  },
  extenders: {
    controllers: {
      resizing: {
        _updateDimensionsCore: function() {
          this.callBase.apply(this, arguments), this.getView("headerPanel").updateToolbarDimensions();
        }
      }
    }
  }
};
hA.views.headerPanel;
xe.registerModule("headerPanel", hA);
const FU = "Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.";
xe.registerModulesOrder(["stateStoring", "columns", "selection", "editorFactory", "columnChooser", "grouping", "editing", "editingRowBased", "editingFormBased", "editingCellBased", "masterDetail", "validating", "adaptivity", "data", "virtualScrolling", "columnHeaders", "filterRow", "headerPanel", "headerFilter", "sorting", "search", "rows", "pager", "columnsResizingReordering", "contextMenu", "keyboardNavigation", "errorHandling", "summary", "columnFixing", "export", "gridView"]);
const Nv = Mt.inherit({
  _activeStateUnit: ".dx-row",
  _getDefaultOptions() {
    const e = this.callBase();
    return B(xe.modules, function() {
      ce(this.defaultOptions) && T(!0, e, this.defaultOptions());
    }), e;
  },
  _setDeprecatedOptions() {
    this.callBase(), T(this._deprecatedOptions, {
      useKeyboard: {
        since: "19.2",
        alias: "keyboardNavigation.enabled"
      },
      rowTemplate: {
        since: "21.2",
        message: 'Use the "dataRowTemplate" option instead'
      }
    });
  },
  _defaultOptionsRules() {
    return this.callBase().concat([{
      device: {
        platform: "ios"
      },
      options: {
        showRowLines: !0
      }
    }, {
      device: () => St(),
      options: {
        showRowLines: !0,
        showColumnLines: !1,
        headerFilter: {
          height: 315
        },
        editing: {
          useIcons: !0
        },
        selection: {
          showCheckBoxesMode: "always"
        }
      }
    }, {
      device: () => lt.webkit,
      options: {
        loadingTimeout: 30,
        loadPanel: {
          animation: {
            show: {
              easing: "cubic-bezier(1, 0, 1, 0)",
              duration: 500,
              from: {
                opacity: 0
              },
              to: {
                opacity: 1
              }
            }
          }
        }
      }
    }, {
      device: (e) => e.deviceType !== "desktop",
      options: {
        grouping: {
          expandMode: "rowClick"
        }
      }
    }]);
  },
  _init() {
    this.callBase(), xe.processModules(this, xe), xe.callModuleItemsMethod(this, "init");
  },
  _clean: $,
  _optionChanged(e) {
    const t = this;
    xe.callModuleItemsMethod(t, "optionChanged", [e]), e.handled || t.callBase(e);
  },
  _dimensionChanged() {
    this.updateDimensions(!0);
  },
  _visibilityChanged(e) {
    e && this.updateDimensions();
  },
  _initMarkup() {
    this.callBase.apply(this, arguments), this.getView("gridView").render(this.$element());
  },
  _renderContentImpl() {
    this.getView("gridView").update();
  },
  _renderContent() {
    const e = this;
    Bt(() => {
      e._renderContentImpl();
    });
  },
  _getTemplate(e) {
    let t = e;
    return Te(t) && t.startsWith("#") && (t = g(e), gl.warn(FU)), this.callBase(t);
  },
  _dispose() {
    this.callBase(), xe.callModuleItemsMethod(this, "dispose");
  },
  isReady() {
    return this.getController("data").isReady();
  },
  beginUpdate() {
    this.callBase(), xe.callModuleItemsMethod(this, "beginUpdate");
  },
  endUpdate() {
    xe.callModuleItemsMethod(this, "endUpdate"), this.callBase();
  },
  getController(e) {
    return this._controllers[e];
  },
  getView(e) {
    return this._views[e];
  },
  focus(e) {
    this.getController("keyboardNavigation").focus(e);
  }
});
Nv.registerModule = xe.registerModule.bind(xe);
We("dxDataGrid", Nv);
const PU = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/, pA = function(e) {
  e && B(e, (t, i) => {
    if (Me(i) || Array.isArray(i))
      pA(i);
    else if (typeof i == "string") {
      const n = PU.exec(i);
      n && (e[t] = new Date(Date.UTC(+n[1], +n[2] - 1, +n[3], +n[4], +n[5], +n[6])));
    }
  });
}, MU = at.ViewController.inherit(function() {
  const e = function(i) {
    const n = i.type === "sessionStorage" ? ww() : ke().localStorage;
    if (!n)
      throw new Error("E1007");
    return n;
  }, t = function(i) {
    return x(i.storageKey) ? i.storageKey : "storage";
  };
  return {
    _loadState() {
      const i = this.option("stateStoring");
      if (i.type === "custom")
        return i.customLoad && i.customLoad();
      try {
        return JSON.parse(e(i).getItem(t(i)));
      } catch (n) {
        $e.log(n.message);
      }
    },
    _saveState(i) {
      const n = this.option("stateStoring");
      if (n.type === "custom") {
        n.customSave && n.customSave(i);
        return;
      }
      try {
        e(n).setItem(t(n), JSON.stringify(i));
      } catch (r) {
        $e.log(r.message);
      }
    },
    publicMethods: () => ["state"],
    isEnabled() {
      return this.option("stateStoring.enabled");
    },
    init() {
      const i = this;
      return i._state = {}, i._isLoaded = !1, i._isLoading = !1, i._windowUnloadHandler = function() {
        i._savingTimeoutID !== void 0 && i._saveState(i.state());
      }, w.on(ke(), "unload", i._windowUnloadHandler), i;
    },
    isLoaded() {
      return this._isLoaded;
    },
    isLoading() {
      return this._isLoading;
    },
    load() {
      this._isLoading = !0;
      const i = Nt(this._loadState());
      return i.always(() => {
        this._isLoaded = !0, this._isLoading = !1;
      }).done((n) => {
        n !== null && !$i(n) && this.state(n);
      }), i;
    },
    state(i) {
      const n = this;
      if (!arguments.length)
        return T(!0, {}, n._state);
      n._state = T({}, i), pA(n._state);
    },
    save() {
      const i = this;
      clearTimeout(i._savingTimeoutID), i._savingTimeoutID = setTimeout(() => {
        i._saveState(i.state()), i._savingTimeoutID = void 0;
      }, i.option("stateStoring.savingTimeout"));
    },
    optionChanged(i) {
      const n = this;
      switch (i.name) {
        case "stateStoring":
          n.isEnabled() && !n.isLoading() && n.load(), i.handled = !0;
          break;
        default:
          n.callBase(i);
      }
    },
    dispose() {
      clearTimeout(this._savingTimeoutID), w.off(ke(), "unload", this._windowUnloadHandler);
    }
  };
}()), LU = {
  StateStoringController: MU
}, VU = (e) => {
  const t = e.getView("pagerView"), i = e.getController("data"), n = {
    allowedPageSizes: t ? t.getPageSizes() : void 0,
    filterPanel: {
      filterEnabled: e.option("filterPanel.filterEnabled")
    },
    filterValue: e.option("filterValue"),
    focusedRowKey: e.option("focusedRowEnabled") ? e.option("focusedRowKey") : void 0
  };
  return T(n, i.getUserState());
}, NU = (e) => {
  const t = e.getController("columns"), i = e.getController("selection"), n = e.getController("export"), r = e.getController("data");
  t && t.columnsChanged.add(() => {
    e.updateState({
      columns: t.getUserState()
    });
  }), i && i.selectionChanged.add((a) => {
    e.updateState({
      selectedRowKeys: a.selectedRowKeys,
      selectionFilter: a.selectionFilter
    });
  }), r && (e._initialPageSize = e.option("paging.pageSize"), e._initialFilterValue = e.option("filterValue"), r.changed.add(() => {
    const a = VU(e);
    e.updateState(a);
  })), n && n.selectionOnlyChanged.add(() => {
    e.updateState({
      exportSelectionOnly: n.selectionOnly()
    });
  });
}, $U = (e, t) => {
  const i = e.getController("filterSync"), n = e.getController("columns"), r = t.columns || t.filterValue !== void 0;
  return i ? r ? t.filterValue || i.getFilterValueFromColumns(t.columns) : e._initialFilterValue || i.getFilterValueFromColumns(n.getColumns()) : null;
}, HU = {
  defaultOptions: () => ({
    stateStoring: {
      enabled: !1,
      storageKey: null,
      type: "localStorage",
      customLoad: null,
      customSave: null,
      savingTimeout: 2e3
    }
  }),
  controllers: {
    stateStoring: LU.StateStoringController
  },
  extenders: {
    views: {
      rowsView: {
        init() {
          const e = this, t = e.getController("data");
          e.callBase(), t.stateLoaded.add(() => {
            if (t.isLoaded() && !t.getDataSource()) {
              e.setLoading(!1), e.renderNoDataText();
              const i = e.component.getView("columnHeadersView");
              i && i.render(), e.component._fireContentReadyAction();
            }
          });
        }
      }
    },
    controllers: {
      stateStoring: {
        init() {
          this.callBase.apply(this, arguments), NU(this);
        },
        isLoading() {
          return this.callBase() || this.getController("data").isStateLoading();
        },
        state(e) {
          const t = this.callBase.apply(this, arguments);
          return e !== void 0 && this.applyState(T(!0, {}, e)), t;
        },
        updateState(e) {
          if (this.isEnabled()) {
            const t = this.state(), i = T({}, t, e), n = xn(t), r = xn(i);
            et(n, r) || (e = T(!0, {}, e), T(this._state, e), this.save());
          } else
            T(this._state, e);
        },
        applyState(e) {
          var t;
          const {
            allowedPageSizes: i
          } = e, {
            searchText: n
          } = e, {
            selectedRowKeys: r
          } = e, {
            selectionFilter: a
          } = e, o = this.getController("export"), s = this.getController("columns"), l = this.getController("data"), u = this.option("scrolling.mode"), d = u === "virtual" || u === "infinite", c = this.option("pager.visible") === !0 && this.option("pager.showPageSizeSelector"), h = (t = this.getView("rowsView")) === null || t === void 0 ? void 0 : t.hasHeight();
          this.component.beginUpdate(), s && s.setUserState(e.columns), o && o.selectionOnly(e.exportSelectionOnly), this.option("selection.deferred") || this.option("selectedRowKeys", r || []), this.option("selectionFilter", a), i && this.option("pager.allowedPageSizes") === "auto" && (this.option("pager").allowedPageSizes = i), this.option("focusedRowEnabled") && (this.option("focusedRowIndex", -1), this.option("focusedRowKey", e.focusedRowKey || null)), this.component.endUpdate(), this.option("searchPanel.text", n || ""), this.option("filterValue", $U(this, e)), this.option("filterPanel.filterEnabled", e.filterPanel ? e.filterPanel.filterEnabled : !0), this.option("paging.pageIndex", (!d || h) && e.pageIndex || 0), this.option("paging.pageSize", (!d || c) && x(e.pageSize) ? e.pageSize : this._initialPageSize), l && l.reset();
        }
      },
      columns: {
        _shouldReturnVisibleColumns() {
          const e = this.callBase.apply(this, arguments), t = this.getController("stateStoring");
          return e && (!t.isEnabled() || t.isLoaded());
        }
      },
      data: {
        callbackNames() {
          return this.callBase().concat(["stateLoaded"]);
        },
        _refreshDataSource() {
          const {
            callBase: e
          } = this, t = this.getController("stateStoring");
          if (t.isEnabled() && !t.isLoaded()) {
            clearTimeout(this._restoreStateTimeoutID);
            const i = new U();
            return this._restoreStateTimeoutID = setTimeout(() => {
              t.load().always(() => {
                this._restoreStateTimeoutID = null;
              }).done(() => {
                e.call(this), this.stateLoaded.fire(), i.resolve();
              }).fail((n) => {
                this.stateLoaded.fire(), this._handleLoadError(n || "Unknown error"), i.reject();
              });
            }), i.promise();
          }
          this.isStateLoading() || e.call(this);
        },
        isLoading() {
          const e = this.getController("stateStoring");
          return this.callBase() || e.isLoading();
        },
        isStateLoading() {
          return x(this._restoreStateTimeoutID);
        },
        isLoaded() {
          return this.callBase() && !this.isStateLoading();
        },
        dispose() {
          clearTimeout(this._restoreStateTimeoutID), this.callBase();
        }
      },
      selection: {
        _fireSelectionChanged(e) {
          const t = this.getController("stateStoring"), i = this.option("selection.deferred");
          t.isLoading() && i || this.callBase.apply(this, arguments);
        }
      }
    }
  }
};
xe.registerModule("stateStoring", HU);
const zU = "dx-select-checkboxes-hidden", vn = "selection.showCheckBoxesMode", Gs = "selection.mode", D0 = function(e, t) {
  const i = e.getController("selection"), n = e.getView("rowsView"), r = g(t.target).closest(".dx-data-row"), a = n.getRowIndex(r);
  a < 0 || (e.option(vn) === "onLongTap" ? i.isSelectionWithCheckboxes() ? i.stopSelectionWithCheckboxes() : i.startSelectionWithCheckboxes() : (e.option(vn) === "onClick" && i.startSelectionWithCheckboxes(), e.option(vn) !== "always" && i.changeItemSelection(a, {
    control: !0
  })));
}, WU = at.Controller.inherit(function() {
  const e = (i, n) => {
    const {
      component: r
    } = n, a = r.getView("rowsView");
    r.option("renderAsync") && !r.option("selection.deferred") && (n.value = r.isRowSelected(n.row.key)), a.renderSelectCheckBoxContainer(g(i), n);
  }, t = (i, n) => {
    const {
      column: r
    } = n, a = g(i), o = n.component.getView("columnHeadersView");
    a.addClass("dx-editor-cell"), o._renderSelectAllCheckBox(a, r), o._attachSelectAllCheckBoxClickEvent(a);
  };
  return {
    init() {
      const {
        deferred: i,
        selectAllMode: n,
        mode: r
      } = this.option("selection") || {};
      this.option("scrolling.mode") === "infinite" && !i && r === "multiple" && n === "allPages" && $e.log("W1018"), this._dataController = this.getController("data"), this._selectionMode = r, this._isSelectionWithCheckboxes = !1, this._selection = this._createSelection(), this._updateSelectColumn(), this.createAction("onSelectionChanged", {
        excludeValidators: ["disabled", "readOnly"]
      }), this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this));
    },
    _handleDataPushed(i) {
      let n = i.filter((r) => r.type === "remove").map((r) => r.key);
      if (this.option("selection.deferred")) {
        const r = this._dataController.items().filter((a) => a.isSelected).map((a) => a.key);
        n = n.filter((a) => r.find((o) => et(o, a)));
      }
      n.length && this.deselectRows(n);
    },
    _getSelectionConfig() {
      const i = this._dataController, n = this.getController("columns"), r = this.option("selection") || {}, {
        deferred: a
      } = r, o = this.option("scrolling.mode"), s = o === "virtual" || o === "infinite", l = this.option("selection.allowSelectAll"), u = this.option("scrolling.legacyMode");
      return {
        selectedKeys: this.option("selectedRowKeys"),
        mode: this._selectionMode,
        deferred: a,
        maxFilterLengthInRequest: r.maxFilterLengthInRequest,
        selectionFilter: this.option("selectionFilter"),
        ignoreDisabledItems: !0,
        allowLoadByRange() {
          const d = n.getGroupColumns().length > 0;
          return s && !u && !d && l && !a;
        },
        key: () => i == null ? void 0 : i.key(),
        keyOf: (d) => i == null ? void 0 : i.keyOf(d),
        dataFields() {
          var d;
          return (d = i.dataSource()) === null || d === void 0 ? void 0 : d.select();
        },
        load(d) {
          var c;
          return ((c = i.dataSource()) === null || c === void 0 ? void 0 : c.load(d)) || new U().resolve([]);
        },
        plainItems: () => i.items(!0),
        isItemSelected: (d) => d.selected,
        isSelectableItem: (d) => (d == null ? void 0 : d.rowType) === "data" && !d.isNewRow,
        getItemData: (d) => x(d == null ? void 0 : d.rowType) ? (d == null ? void 0 : d.oldData) || (d == null ? void 0 : d.data) : d,
        filter: () => i.getCombinedFilter(a),
        totalCount: () => i.totalCount(),
        getLoadOptions(d, c, h) {
          var p, f;
          const {
            sort: v,
            filter: m
          } = (f = (p = i.dataSource()) === null || p === void 0 ? void 0 : p.lastLoadOptions()) !== null && f !== void 0 ? f : {};
          let C = Math.min(d, c), b = Math.max(d, c);
          x(h) && (C = Math.min(h, C), b = Math.max(h, b));
          const A = b - C + 1;
          return {
            skip: C,
            take: A,
            filter: m,
            sort: v
          };
        },
        onSelectionChanged: this._updateSelectedItems.bind(this)
      };
    },
    _updateSelectColumn() {
      const i = this.getController("columns"), n = this.isSelectColumnVisible();
      i.addCommandColumn({
        type: "selection",
        command: "select",
        visible: n,
        visibleIndex: -1,
        dataType: "boolean",
        alignment: "center",
        cssClass: "dx-command-select",
        width: "auto",
        cellTemplate: e,
        headerCellTemplate: t
      }), i.columnOption("command:select", "visible", n);
    },
    _createSelection() {
      const i = this._getSelectionConfig();
      return new XD(i);
    },
    _fireSelectionChanged(i) {
      const n = this.option("selection.deferred") ? {
        selectionFilter: this.option("selectionFilter")
      } : {
        selectedRowKeys: this.option("selectedRowKeys")
      };
      this.selectionChanged.fire(n), i && this.executeAction("onSelectionChanged", i);
    },
    _updateCheckboxesState(i) {
      const {
        isDeferredMode: n
      } = i, {
        selectionFilter: r
      } = i, {
        selectedItemKeys: a
      } = i, {
        removedItemKeys: o
      } = i;
      this.option(vn) === "onClick" && ((n ? r && function(s, l) {
        let u = 0;
        const d = s._dataController.store(), c = d && d.key(), h = Array.isArray(c);
        if (!l.length)
          return !1;
        if (h && Array.isArray(l[0]) && l[1] === "and") {
          for (let p = 0; p < l.length; p++)
            if (Array.isArray(l[p])) {
              if (l[p][0] !== c[u] || l[p][1] !== "=")
                return !0;
              u++;
            }
          return !1;
        }
        return c !== l[0];
      }(this, r) : a.length > 1) ? this.startSelectionWithCheckboxes() : (n ? r && !r.length : a.length === 0 && o.length) && this.stopSelectionWithCheckboxes());
    },
    _updateSelectedItems(i) {
      const n = this;
      let r;
      const a = n.option("selection.deferred"), o = n._selection.selectionFilter(), s = n._dataController, l = s.items(!0), u = s.items();
      if (!l)
        return;
      const d = n.isSelectionWithCheckboxes(), c = n.getChangedItemIndexes(l), h = n.getChangedItemIndexes(u);
      n._updateCheckboxesState({
        selectedItemKeys: i.selectedItemKeys,
        removedItemKeys: i.removedItemKeys,
        selectionFilter: o,
        isDeferredMode: a
      }), (c.length || d !== n.isSelectionWithCheckboxes()) && s.updateItems({
        changeType: "updateSelection",
        itemIndexes: h
      }), a ? (n.option("selectionFilter", o), r = {}) : (i.addedItemKeys.length || i.removedItemKeys.length) && (n._selectedItemsInternalChange = !0, n.option("selectedRowKeys", i.selectedItemKeys.slice(0)), n._selectedItemsInternalChange = !1, r = {
        selectedRowsData: i.selectedItems.slice(0),
        selectedRowKeys: i.selectedItemKeys.slice(0),
        currentSelectedRowKeys: i.addedItemKeys.slice(0),
        currentDeselectedRowKeys: i.removedItemKeys.slice(0)
      }), n._fireSelectionChanged(r);
    },
    getChangedItemIndexes(i) {
      const n = this, r = [], a = this.option("selection.deferred");
      for (let o = 0, {
        length: s
      } = i; o < s; o++) {
        const l = i[o], u = n.isRowSelected(a ? l.data : l.key);
        n._selection.isDataItem(l) && l.isSelected !== u && r.push(o);
      }
      return r;
    },
    callbackNames: () => ["selectionChanged"],
    optionChanged(i) {
      switch (this.callBase(i), i.name) {
        case "selection": {
          const n = this._selectionMode;
          if (this.init(), i.fullName !== "selection.showCheckBoxesMode") {
            const r = this._selectionMode;
            let a = this.option("selectedRowKeys");
            n !== r && (r === "single" ? a.length > 1 && (a = [a[0]]) : r !== "multiple" && (a = [])), this.selectRows(a).always(() => {
              this._fireSelectionChanged();
            });
          }
          this.getController("columns").updateColumns(), i.handled = !0;
          break;
        }
        case "selectionFilter":
          this._selection.selectionFilter(i.value), i.handled = !0;
          break;
        case "selectedRowKeys": {
          const n = i.value || [];
          Array.isArray(n) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !n.length) && this.selectRows(n), i.handled = !0;
          break;
        }
      }
    },
    publicMethods: () => ["selectRows", "deselectRows", "selectRowsByIndexes", "getSelectedRowKeys", "getSelectedRowsData", "clearSelection", "selectAll", "deselectAll", "startSelectionWithCheckboxes", "stopSelectionWithCheckboxes", "isRowSelected"],
    isRowSelected(i) {
      return this._selection.isItemSelected(i);
    },
    isSelectColumnVisible() {
      return this.option(Gs) === "multiple" && (this.option(vn) === "always" || this.option(vn) === "onClick" || this._isSelectionWithCheckboxes);
    },
    _isOnePageSelectAll() {
      return this.option("selection.selectAllMode") === "page";
    },
    isSelectAll() {
      return this._selection.getSelectAllState(this._isOnePageSelectAll());
    },
    selectAll() {
      return this.option(vn) === "onClick" && this.startSelectionWithCheckboxes(), this._selection.selectAll(this._isOnePageSelectAll());
    },
    deselectAll() {
      return this._selection.deselectAll(this._isOnePageSelectAll());
    },
    clearSelection() {
      return this.selectedItemKeys([]);
    },
    refresh() {
      const i = this.option("selectedRowKeys") || [];
      return !this.option("selection.deferred") && i.length ? this.selectedItemKeys(i) : new U().resolve().promise();
    },
    selectedItemKeys(i, n, r, a) {
      return this._selection.selectedItemKeys(i, n, r, a);
    },
    getSelectedRowKeys() {
      return this._selection.getSelectedItemKeys();
    },
    selectRows(i, n) {
      return this.selectedItemKeys(i, n);
    },
    deselectRows(i) {
      return this.selectedItemKeys(i, !0, !0);
    },
    selectRowsByIndexes(i) {
      const n = this._dataController.items(), r = [];
      return Array.isArray(i) || (i = Array.prototype.slice.call(arguments, 0)), B(i, function() {
        const a = n[this];
        a && a.rowType === "data" && r.push(a.key);
      }), this.selectRows(r);
    },
    getSelectedRowsData() {
      return this._selection.getSelectedItems();
    },
    changeItemSelection(i, n, r) {
      n = n || {}, this.isSelectionWithCheckboxes() && (n.control = !0);
      const a = i + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(!0);
      return this._selection.changeItemSelection(a, n, r);
    },
    focusedItemIndex(i) {
      const n = this;
      if (x(i))
        n._selection._focusedItemIndex = i;
      else
        return n._selection._focusedItemIndex;
    },
    isSelectionWithCheckboxes() {
      return this.option(Gs) === "multiple" && (this.option(vn) === "always" || this._isSelectionWithCheckboxes);
    },
    startSelectionWithCheckboxes() {
      const i = this;
      return i.option(Gs) === "multiple" && !i.isSelectionWithCheckboxes() ? (i._isSelectionWithCheckboxes = !0, i._updateSelectColumn(), !0) : !1;
    },
    stopSelectionWithCheckboxes() {
      const i = this;
      return i._isSelectionWithCheckboxes ? (i._isSelectionWithCheckboxes = !1, i._updateSelectColumn(), !0) : !1;
    }
  };
}()), GU = {
  defaultOptions: () => ({
    selection: {
      mode: "none",
      showCheckBoxesMode: "onClick",
      allowSelectAll: !0,
      selectAllMode: "allPages",
      maxFilterLengthInRequest: 1500,
      deferred: !1
    },
    selectionFilter: [],
    selectedRowKeys: []
  }),
  controllers: {
    selection: WU
  },
  extenders: {
    controllers: {
      data: {
        init() {
          const e = this.getController("selection"), t = this.option("selection.deferred");
          this.callBase.apply(this, arguments), t && e._updateCheckboxesState({
            isDeferredMode: !0,
            selectionFilter: this.option("selectionFilter")
          });
        },
        _loadDataSource() {
          const e = this;
          return e.callBase().always(() => {
            e.getController("selection").refresh();
          });
        },
        _processDataItem(e, t) {
          const i = this.getController("selection"), n = i.isSelectColumnVisible(), r = t.isDeferredSelection = t.isDeferredSelection === void 0 ? this.option("selection.deferred") : t.isDeferredSelection, a = this.callBase.apply(this, arguments);
          if (a.isSelected = i.isRowSelected(r ? a.data : a.key), n && a.values) {
            for (let o = 0; o < t.visibleColumns.length; o++)
              if (t.visibleColumns[o].command === "select") {
                a.values[o] = a.isSelected;
                break;
              }
          }
          return a;
        },
        refresh(e) {
          const t = this, i = new U();
          return this.callBase.apply(this, arguments).done(() => {
            !e || e.selection ? t.getController("selection").refresh().done(i.resolve).fail(i.reject) : i.resolve();
          }).fail(i.reject), i.promise();
        },
        _handleDataChanged(e) {
          this.callBase.apply(this, arguments), (!e || e.changeType === "refresh") && !this._repaintChangesOnly && this.getController("selection").focusedItemIndex(-1);
        },
        _applyChange(e) {
          if (e && e.changeType === "updateSelection") {
            e.items.forEach((t, i) => {
              const n = this._items[i];
              n && (n.isSelected = t.isSelected, n.values = t.values);
            });
            return;
          }
          return this.callBase.apply(this, arguments);
        },
        _endUpdateCore() {
          const e = this._changes;
          if (e.length > 1 && e.every((i) => i.changeType === "updateSelection")) {
            const i = e.map((n) => n.itemIndexes || []).reduce((n, r) => n.concat(r));
            this._changes = [{
              changeType: "updateSelection",
              itemIndexes: i
            }];
          }
          this.callBase.apply(this, arguments);
        }
      },
      contextMenu: {
        _contextMenuPrepared(e) {
          const t = e.event;
          t.originalEvent && t.originalEvent.type !== "dxhold" || e.items && e.items.length > 0 || D0(this, t);
        }
      }
    },
    views: {
      columnHeadersView: {
        init() {
          this.callBase(), this.getController("selection").selectionChanged.add(this._updateSelectAllValue.bind(this));
        },
        _updateSelectAllValue() {
          const e = this, t = e.element(), i = t && t.find(".dx-select-checkbox");
          if (t && i.length && e.option("selection.mode") === "multiple") {
            const n = e.getController("selection").isSelectAll(), r = n !== !1, a = e.option("selection.allowSelectAll") ? !e.getController("data").isEmpty() : r;
            i.dxCheckBox("instance").option({
              visible: a,
              value: n
            });
          }
        },
        _handleDataChanged(e) {
          this.callBase(e), (!e || e.changeType === "refresh" || e.repaintChangesOnly && e.changeType === "update") && this.waitAsyncTemplates().done(() => {
            this._updateSelectAllValue();
          });
        },
        _renderSelectAllCheckBox(e, t) {
          const i = this, n = i.getController("selection"), r = i.getController("data").isEmpty(), a = g("<div>").appendTo(e).addClass("dx-select-checkbox");
          return i.setAria("label", q.format("dxDataGrid-ariaSelectAll"), a), i.getController("editorFactory").createEditor(a, T({}, t, {
            parentType: "headerRow",
            dataType: "boolean",
            value: n.isSelectAll(),
            editorOptions: {
              visible: !r && (i.option("selection.allowSelectAll") || n.isSelectAll() !== !1)
            },
            tabIndex: i.option("useLegacyKeyboardNavigation") ? -1 : i.option("tabIndex") || 0,
            setValue(o, s) {
              const l = i.option("selection.allowSelectAll");
              s.component.option("visible", l || s.component.option("value") !== !1), !(!s.event || n.isSelectAll() === o) && (s.value && !l ? s.component.option("value", !1) : s.value ? n.selectAll() : n.deselectAll(), s.event.preventDefault());
            }
          })), a;
        },
        _attachSelectAllCheckBoxClickEvent(e) {
          w.on(e, Xe, this.createAction((t) => {
            const {
              event: i
            } = t;
            g(i.target).closest(".dx-select-checkbox").length || w.trigger(g(i.currentTarget).children(".dx-select-checkbox"), Xe), i.preventDefault();
          }));
        }
      },
      rowsView: {
        renderSelectCheckBoxContainer(e, t) {
          t.rowType === "data" && !t.row.isNewRow ? (e.addClass("dx-editor-cell"), this._attachCheckBoxClickEvent(e), this._renderSelectCheckBox(e, t)) : ae.setEmptyText(e);
        },
        _renderSelectCheckBox(e, t) {
          const i = g("<div>").addClass("dx-select-checkbox").appendTo(e);
          return this.setAria("label", q.format("dxDataGrid-ariaSelectRow"), i), this.getController("editorFactory").createEditor(i, T({}, t.column, {
            parentType: "dataRow",
            dataType: "boolean",
            lookup: null,
            value: t.value,
            setValue(n, r) {
              var a;
              ((a = r == null ? void 0 : r.event) === null || a === void 0 ? void 0 : a.type) === "keydown" && w.trigger(r.element, Xe, r);
            },
            row: t.row
          })), i;
        },
        _attachCheckBoxClickEvent(e) {
          w.on(e, Xe, this.createAction(function(t) {
            const i = this.getController("selection"), {
              event: n
            } = t, r = this.getRowIndex(g(n.currentTarget).closest(".dx-row"));
            r >= 0 && (i.startSelectionWithCheckboxes(), i.changeItemSelection(r, {
              shift: n.shiftKey
            }), g(n.target).closest(".dx-select-checkbox").length && this.getController("data").updateItems({
              changeType: "updateSelection",
              itemIndexes: [r]
            }));
          }));
        },
        _update(e) {
          const t = this, i = t.getTableElements();
          e.changeType === "updateSelection" ? i.length > 0 && (B(i, (n, r) => {
            B(e.itemIndexes || [], (a, o) => {
              let s;
              if (e.items[o] && (s = t._getRowElements(g(r)).eq(o), s.length)) {
                const {
                  isSelected: l
                } = e.items[o];
                s.toggleClass("dx-selection", l === void 0 ? !1 : l).find(".dx-select-checkbox").dxCheckBox("option", "value", l), t.setAria("selected", l, s);
              }
            });
          }), t._updateCheckboxesClass()) : t.callBase(e);
        },
        _createTable() {
          const e = this, t = e.option("selection.mode"), i = e.callBase.apply(e, arguments);
          return t !== "none" && ((e.option(vn) === "onLongTap" || !xa) && w.on(i, oe(Br.name, "dxDataGridRowsView"), ".dx-data-row", e.createAction((n) => {
            D0(e.component, n.event), n.event.stopPropagation();
          })), w.on(i, "mousedown selectstart", e.createAction((n) => {
            const {
              event: r
            } = n;
            r.shiftKey && r.preventDefault();
          }))), i;
        },
        _createRow(e) {
          const t = this.callBase.apply(this, arguments);
          if (e) {
            const {
              isSelected: i
            } = e;
            i && t.addClass("dx-selection"), this.option(Gs) !== "none" && this.setAria("selected", i, t);
          }
          return t;
        },
        _rowClick(e) {
          const t = this, i = e.event, n = g(i.target).closest(".dx-selection-disabled").length;
          t.isClickableElement(g(i.target)) || (!n && (t.option(Gs) !== "multiple" || t.option(vn) !== "always") && t.getController("selection").changeItemSelection(e.rowIndex, {
            control: Pt(i),
            shift: i.shiftKey
          }) && (i.preventDefault(), e.handled = !0), t.callBase(e));
        },
        isClickableElement(e) {
          return !!e.closest(".dx-command-select").length;
        },
        _renderCore(e) {
          const t = this.callBase(e);
          return this._updateCheckboxesClass(), t;
        },
        _updateCheckboxesClass() {
          const e = this.getTableElements(), t = this.getController("selection"), i = t.isSelectColumnVisible() && !t.isSelectionWithCheckboxes();
          B(e, (n, r) => {
            g(r).toggleClass(zU, i);
          });
        }
      }
    }
  }
};
xe.registerModule("selection", GU);
function KU(e, t) {
  var i, n, r = (i = (n = e.getRootNode) === null || n === void 0 ? void 0 : n.call(e)) !== null && i !== void 0 ? i : document;
  return r.querySelector(t);
}
var A0 = "dx-invalid-message-auto", O0 = "dx-validation-target";
let $v = class extends zl {
  getProps() {
    var t = super.getProps();
    return t.onFocusIn = () => {
      var i = this.option("validationMessageMode") === "auto";
      if (i) {
        var n = g(KU(this.element(), ".dx-invalid-message.dx-overlay-wrapper"));
        n == null || n.removeClass(A0), this.showValidationMessageTimeout && clearTimeout(this.showValidationMessageTimeout), this.showValidationMessageTimeout = setTimeout(() => {
          n == null || n.addClass(A0);
        }, 150);
      }
    }, t.saveValueChangeEvent = (i) => {
      this._valueChangeEventInstance = i;
    }, t;
  }
  _createElement(t) {
    super._createElement(t), this.showValidationMessageTimeout = void 0, this.validationRequest = qe(), dt(this.$element()[0], O0, this);
  }
  _render() {
    var t;
    (t = this.option("_onMarkupRendered")) === null || t === void 0 || t();
  }
  _initializeComponent() {
    super._initializeComponent(), this._valueChangeAction = this._createActionByOption("onValueChanged", {
      excludeValidators: ["disabled", "readOnly"]
    });
  }
  _initOptions(t) {
    super._initOptions(t), this.option(Ze.initValidationOptions(t));
  }
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      validationMessageOffset: {
        h: 0,
        v: 0
      },
      validationTooltipOptions: {}
    });
  }
  _bindInnerWidgetOptions(t, i) {
    var n = T({}, t.option()), r = () => this._silent(i, n);
    r(), t.on("optionChanged", r);
  }
  _raiseValidation(t, i) {
    var n = !x(t) && !x(i);
    t !== i && !n && this.validationRequest.fire({
      value: t,
      editor: this
    });
  }
  _raiseValueChangeAction(t, i) {
    var n;
    (n = this._valueChangeAction) === null || n === void 0 || n.call(this, {
      element: this.$element(),
      previousValue: i,
      value: t,
      event: this._valueChangeEventInstance
    }), this._valueChangeEventInstance = void 0;
  }
  _optionChanged(t) {
    var {
      name: i,
      previousValue: n,
      value: r
    } = t;
    switch (i && this._getActionConfigs()[i] !== void 0 && this._addAction(i), i) {
      case "value":
        this._raiseValidation(r, n), this._raiseValueChangeAction(r, n);
        break;
      case "onValueChanged":
        this._valueChangeAction = this._createActionByOption("onValueChanged", {
          excludeValidators: ["disabled", "readOnly"]
        });
        break;
      case "isValid":
      case "validationError":
      case "validationErrors":
      case "validationStatus":
        this.option(Ze.synchronizeValidationOptions(t, this.option()));
    }
    super._optionChanged(t);
  }
  reset() {
    var {
      value: t
    } = this._getDefaultOptions();
    this.option({
      value: t
    });
  }
  _dispose() {
    super._dispose(), dt(this.element(), O0, null), this.showValidationMessageTimeout && clearTimeout(this.showValidationMessageTimeout);
  }
};
var UU = nn.isEditor, fA = (e) => UU(e) || e instanceof $v;
$v.isEditor = fA;
nn.isEditor = fA;
let jU = class extends $v {
  _useTemplates() {
    return !1;
  }
  _isFocused() {
    var t = this.$element()[0];
    return t.classList.contains("dx-state-focused");
  }
  getSupportedKeyNames() {
    return ["space"];
  }
  getProps() {
    var t = super.getProps();
    return t.value !== null && (t.value = !!t.value), t;
  }
};
var qU = ["dataSource", "selectedRowKeys"], XU = {
  integrationOptions: !0
};
function ps(e, t, i) {
  return {
    path: e,
    value: t,
    previousValue: i
  };
}
function R0(e, t, i, n, r, a) {
  if (!XU[n]) {
    var o = Ei(t), s = Ei(i);
    if (t !== i)
      if (o !== s)
        e.push(ps(n, i, t));
      else if (o === "object")
        if (!Me(i))
          e.push(ps(n, i, t));
        else {
          var l = B0(t, i, r, a);
          e.push(...l.map((c) => ue({}, c, {
            path: "".concat(n, ".").concat(c.path)
          })));
        }
      else if (o === "array") {
        var u = a.some((c) => r.includes(c));
        if (u && t !== i)
          e.push(ps(n, i, t));
        else if (t.length !== i.length)
          e.push(ps(n, i, t));
        else {
          var d = B0(t, i, r, a);
          [].push.apply(e, d.map((c) => ue({}, c, {
            path: "".concat(n).concat(c.path)
          })));
        }
      } else
        e.push(ps(n, i, t));
  }
}
var gA = (e) => (t, i, n, r) => {
  var a = [], o = Array.isArray(t) ? (s) => {
    R0(a, t[s], i[s], "[".concat(s, "]"), "".concat(n, ".").concat(s), r);
  } : (s) => {
    R0(a, t[s], i[s], s, "".concat(n, ".").concat(s), r);
  };
  return e(t).forEach(o), Object.keys(i).filter((s) => !Object.prototype.hasOwnProperty.call(t, s) && t[s] !== i[s]).forEach((s) => {
    a.push({
      path: s,
      value: i[s],
      previousValue: t[s]
    });
  }), a;
}, B0 = gA((e) => Object.keys(e)), YU = {
  key: !0,
  ref: !0,
  children: !0,
  style: !0
}, ZU = gA((e) => Object.keys(e).filter((t) => !YU[t]));
function QU(e, t) {
  var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : qU;
  return ZU(e, t, "", i);
}
var JU = ["valueChange"], e3 = ["componentProps", "componentType", "templateNames"], _A = (e) => Object.keys(e).reduce((t, i) => (e[i] !== void 0 && (t[i] = e[i]), t), {}), t3 = (e) => {
  var {
    props: {
      componentProps: {
        className: t
      }
    },
    restAttributes: i,
    widgetRef: n
  } = e;
  return _A(yt(1, "div", t, null, 1, ue({}, i), null, n));
}, i3 = {};
class Wc extends In {
  constructor(t) {
    super(t), this.state = {}, this.widgetRef = zt(), this.getInstance = this.getInstance.bind(this), this.setupWidget = this.setupWidget.bind(this), this.updateWidget = this.updateWidget.bind(this);
  }
  get config() {
    return this.context[Xt.id] ? this.context[Xt.id] : Xt.defaultValue;
  }
  createEffects() {
    return [new ut(this.setupWidget, []), new ut(this.updateWidget, [this.props.componentProps, this.config, this.props.templateNames])];
  }
  updateEffects() {
    var t;
    (t = this._effects[1]) === null || t === void 0 || t.update([this.props.componentProps, this.config, this.props.templateNames]);
  }
  setupWidget() {
    var t = new this.props.componentType(this.widgetRef.current, this.properties);
    return this.instance = t, () => {
      t.dispose(), this.instance = null;
    };
  }
  updateWidget() {
    var t = this.getInstance();
    if (t) {
      var i = QU(this.prevProps || {}, this.properties);
      i.length && (t.beginUpdate(), i.forEach((n) => {
        var {
          path: r,
          value: a
        } = n;
        t.option(r, a);
      }), t.endUpdate()), this.prevProps = this.properties;
    }
  }
  get properties() {
    var t, i = _A(this.props.componentProps), {
      valueChange: n
    } = i, r = pt(i, JU), a = ue({
      rtlEnabled: !!((t = this.config) !== null && t !== void 0 && t.rtlEnabled),
      isRenovated: !0
    }, r);
    n && (a.onValueChanged = (s) => {
      var {
        value: l
      } = s;
      return n(l);
    });
    var o = this.props.templateNames;
    return o.forEach((s) => {
      FW(s, a) && (a[s] = (l, u, d) => {
        kW(this.props.componentProps[s], {
          item: l,
          index: u,
          container: d
        });
      });
    }), a;
  }
  get restAttributes() {
    var t = this.props, i = pt(t, e3);
    return i;
  }
  getInstance() {
    return this.instance;
  }
  render() {
    var t = this.props;
    return t3({
      props: ue({}, t),
      widgetRef: this.widgetRef,
      config: this.config,
      properties: this.properties,
      restAttributes: this.restAttributes
    });
  }
}
Wc.defaultProps = i3;
var n3 = ["accessKey", "activeStateEnabled", "boundary", "className", "contentId", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "mode", "offset", "onClick", "onKeyDown", "positionSide", "rtlEnabled", "tabIndex", "target", "validationErrors", "visible", "visualContainer", "width"], r3 = (e) => {
  var {
    componentProps: t,
    restAttributes: i
  } = e;
  return vi(ot(2, Wc, ue({
    componentType: vv,
    componentProps: t,
    templateNames: []
  }, i)));
}, a3 = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Vc), Object.getOwnPropertyDescriptors({
  mode: "auto",
  positionSide: "top",
  offset: Object.freeze({
    h: 0,
    v: 0
  }),
  isReactComponentWrapper: !0
})));
class vA extends Gi {
  constructor(t) {
    super(t), this.state = {};
  }
  get componentProps() {
    return this.props;
  }
  get restAttributes() {
    var t = this.props, i = pt(t, n3);
    return i;
  }
  render() {
    var t = this.props;
    return r3({
      props: ue({}, t),
      componentProps: this.componentProps,
      restAttributes: this.restAttributes
    });
  }
}
vA.defaultProps = a3;
var o3 = ["accessKey", "activeStateEnabled", "aria", "children", "className", "classes", "defaultValue", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "isValid", "name", "onClick", "onFocusIn", "onKeyDown", "readOnly", "rtlEnabled", "tabIndex", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "valueChange", "visible", "width"], s3 = (e) => {
  var {
    classes: t,
    isValid: i,
    readOnly: n
  } = e, r = {
    "dx-state-readonly": !!n,
    "dx-invalid": !i,
    ["".concat(t)]: !!t
  };
  return Li(r);
}, l3 = (e) => {
  var {
    aria: t,
    cssClasses: i,
    isValidationMessageVisible: n,
    onFocusIn: r,
    props: {
      accessKey: a,
      activeStateEnabled: o,
      children: s,
      className: l,
      disabled: u,
      focusStateEnabled: d,
      height: c,
      hint: h,
      hoverStateEnabled: p,
      onClick: f,
      onKeyDown: v,
      rtlEnabled: m,
      tabIndex: C,
      validationMessageMode: b,
      validationMessagePosition: A,
      visible: R,
      width: k
    },
    restAttributes: H,
    rootElementRef: K,
    validationErrors: j,
    validationMessageGuid: z,
    validationMessageTarget: re,
    widgetRef: he
  } = e;
  return vi(ot(2, Nc, ue({
    rootElementRef: K,
    aria: t,
    classes: i,
    activeStateEnabled: o,
    focusStateEnabled: d,
    hoverStateEnabled: p,
    accessKey: a,
    className: l,
    rtlEnabled: m,
    hint: h,
    disabled: u,
    height: c,
    width: k,
    onFocusIn: r,
    onClick: f,
    onKeyDown: v,
    tabIndex: C,
    visible: R
  }, H, {
    children: nr([s, n && ot(2, vA, {
      validationErrors: j,
      mode: b,
      positionSide: A,
      rtlEnabled: m,
      target: re,
      boundary: re,
      visualContainer: re,
      contentId: z
    })], 0)
  }), null, he));
}, Ft = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Vc), Object.getOwnPropertyDescriptors({
  readOnly: !1,
  name: "",
  validationError: null,
  validationErrors: null,
  validationMessageMode: "auto",
  validationMessagePosition: "bottom",
  validationStatus: "valid",
  isValid: !0,
  defaultValue: null,
  valueChange: () => {
  }
}))), u3 = {
  get readOnly() {
    return Ft.readOnly;
  },
  get name() {
    return Ft.name;
  },
  get validationError() {
    return Ft.validationError;
  },
  get validationErrors() {
    return Ft.validationErrors;
  },
  get validationMessageMode() {
    return Ft.validationMessageMode;
  },
  get validationMessagePosition() {
    return Ft.validationMessagePosition;
  },
  get validationStatus() {
    return Ft.validationStatus;
  },
  get isValid() {
    return Ft.isValid;
  },
  get defaultValue() {
    return Ft.defaultValue;
  },
  get valueChange() {
    return Ft.valueChange;
  },
  get className() {
    return Ft.className;
  },
  get activeStateEnabled() {
    return Ft.activeStateEnabled;
  },
  get disabled() {
    return Ft.disabled;
  },
  get focusStateEnabled() {
    return Ft.focusStateEnabled;
  },
  get hoverStateEnabled() {
    return Ft.hoverStateEnabled;
  },
  get tabIndex() {
    return Ft.tabIndex;
  },
  get visible() {
    return Ft.visible;
  },
  get aria() {
    return Kd.aria;
  },
  get classes() {
    return Kd.classes;
  }
};
class mA extends $l {
  constructor(t) {
    super(t), this.widgetRef = zt(), this.rootElementRef = zt(), this.__getterCache = {}, this.state = {
      validationMessageGuid: "dx-".concat(new Ot()),
      isValidationMessageVisible: !1,
      value: this.props.value !== void 0 ? this.props.value : this.props.defaultValue
    }, this.updateValidationMessageVisibility = this.updateValidationMessageVisibility.bind(this), this.focus = this.focus.bind(this), this.blur = this.blur.bind(this), this.onFocusIn = this.onFocusIn.bind(this);
  }
  createEffects() {
    return [new ut(this.updateValidationMessageVisibility, [this.props.isValid, this.props.validationStatus, this.props.validationError, this.props.validationErrors]), Hl()];
  }
  updateEffects() {
    var t;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.props.isValid, this.props.validationStatus, this.props.validationError, this.props.validationErrors]);
  }
  updateValidationMessageVisibility() {
    this.setState((t) => ({
      isValidationMessageVisible: this.shouldShowValidationMessage
    }));
  }
  onFocusIn(t) {
    var {
      onFocusIn: i
    } = this.props;
    i == null || i(t);
  }
  get cssClasses() {
    return "".concat(s3(ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    })));
  }
  get shouldShowValidationMessage() {
    var t, {
      isValid: i,
      validationStatus: n
    } = this.props, r = (t = this.validationErrors) !== null && t !== void 0 ? t : [], a = i && n !== "invalid";
    return !a && r.length > 0;
  }
  get aria() {
    var {
      isValid: t,
      readOnly: i
    } = this.props, n = {
      readonly: i ? "true" : "false",
      invalid: t ? "false" : "true"
    };
    return this.shouldShowValidationMessage && (n.describedBy = this.state.validationMessageGuid), ue({}, n, this.props.aria);
  }
  get validationErrors() {
    return this.__getterCache.validationErrors !== void 0 ? this.__getterCache.validationErrors : this.__getterCache.validationErrors = (() => {
      var {
        validationError: t,
        validationErrors: i
      } = this.props, n = i && [...i];
      return !n && t && (n = [ue({}, t)]), n;
    })();
  }
  get validationMessageTarget() {
    var t;
    return (t = this.rootElementRef) === null || t === void 0 ? void 0 : t.current;
  }
  get restAttributes() {
    var t = ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    }), i = pt(t, o3);
    return i;
  }
  focus() {
    this.widgetRef.current.focus();
  }
  blur() {
    this.widgetRef.current.blur();
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), (this.props.validationError !== t.validationError || this.props.validationErrors !== t.validationErrors) && (this.__getterCache.validationErrors = void 0);
  }
  render() {
    var t = this.props;
    return l3({
      props: ue({}, t, {
        value: this.props.value !== void 0 ? this.props.value : this.state.value
      }),
      validationMessageGuid: this.state.validationMessageGuid,
      isValidationMessageVisible: this.state.isValidationMessageVisible,
      rootElementRef: this.rootElementRef,
      widgetRef: this.widgetRef,
      onFocusIn: this.onFocusIn,
      cssClasses: this.cssClasses,
      shouldShowValidationMessage: this.shouldShowValidationMessage,
      aria: this.aria,
      validationErrors: this.validationErrors,
      validationMessageTarget: this.validationMessageTarget,
      restAttributes: this.restAttributes
    });
  }
}
mA.defaultProps = u3;
function CA(e) {
  var t, i = ke();
  return e ? (t = i.getComputedStyle) === null || t === void 0 ? void 0 : t.call(i, e) : null;
}
var d3 = [
  [22, 16],
  [18, 16]
], c3 = [
  [
    [12, 8],
    [20, 18]
  ],
  [
    [16, 10],
    [16, 14]
  ]
];
function xA() {
  var e = rn();
  return {
    isMaterialTheme: St(e),
    isCompactTheme: rM(e)
  };
}
function h3() {
  var {
    isCompactTheme: e,
    isMaterialTheme: t
  } = xA();
  return d3[+t][+e];
}
function p3(e) {
  var {
    isCompactTheme: t,
    isMaterialTheme: i
  } = xA();
  return c3[+e][+i][+t];
}
function f3(e, t) {
  var i = p3(t), n = h3(), r = i / n;
  return Math.ceil(r * e);
}
var g3 = ["isChecked", "size"], _3 = (e) => {
  var {
    cssStyles: t,
    elementRef: i
  } = e;
  return yt(1, "span", "dx-checkbox-icon", null, 1, {
    style: Iv(t)
  }, null, i);
}, v3 = {
  isChecked: !1
};
class yA extends In {
  constructor(t) {
    super(t), this.state = {}, this.elementRef = zt(), this.__getterCache = {}, this.updateFontSize = this.updateFontSize.bind(this), this.setIconFontSize = this.setIconFontSize.bind(this), this.getIconSize = this.getIconSize.bind(this), this.getComputedIconSize = this.getComputedIconSize.bind(this);
  }
  createEffects() {
    return [new ut(this.updateFontSize, [this.props.isChecked, this.props.size])];
  }
  updateEffects() {
    var t;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.props.isChecked, this.props.size]);
  }
  updateFontSize() {
    var {
      isChecked: t,
      size: i
    } = this.props;
    if (Re() && i) {
      var n = this.getIconSize(i), r = f3(n, t);
      this.setIconFontSize(r);
    }
  }
  setIconFontSize(t) {
    var i = this.elementRef.current;
    i.style.fontSize = "".concat(t, "px");
  }
  getIconSize(t) {
    return rt(t) ? t : t.endsWith("px") ? parseInt(t, 10) : this.getComputedIconSize();
  }
  getComputedIconSize() {
    var t = this.elementRef.current, i = CA(t), n = parseInt(i == null ? void 0 : i.width, 10);
    return n;
  }
  get cssStyles() {
    return this.__getterCache.cssStyles !== void 0 ? this.__getterCache.cssStyles : this.__getterCache.cssStyles = (() => {
      var {
        size: t
      } = this.props, i = Oo("width", t), n = Oo("height", t);
      return {
        height: n,
        width: i
      };
    })();
  }
  get restAttributes() {
    var t = this.props, i = pt(t, g3);
    return i;
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), this.props.size !== t.size && (this.__getterCache.cssStyles = void 0);
  }
  render() {
    var t = this.props;
    return _3({
      props: ue({}, t),
      elementRef: this.elementRef,
      setIconFontSize: this.setIconFontSize,
      getIconSize: this.getIconSize,
      getComputedIconSize: this.getComputedIconSize,
      cssStyles: this.cssStyles,
      restAttributes: this.restAttributes
    });
  }
}
yA.defaultProps = v3;
var m3 = ["accessKey", "activeStateEnabled", "aria", "className", "defaultValue", "disabled", "enableThreeStateBehavior", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "iconSize", "isValid", "name", "onClick", "onFocusIn", "onKeyDown", "readOnly", "rtlEnabled", "saveValueChangeEvent", "tabIndex", "text", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "valueChange", "visible", "width"], C3 = (e) => {
  var {
    text: t,
    value: i
  } = e, n = i, r = n === null, a = {
    "dx-checkbox": !0,
    "dx-checkbox-checked": n === !0,
    "dx-checkbox-has-text": !!t,
    "dx-checkbox-indeterminate": r
  };
  return Li(a);
}, x3 = (e) => {
  var {
    aria: t,
    cssClasses: i,
    editorRef: n,
    keyDown: r,
    onWidgetClick: a,
    props: {
      accessKey: o,
      activeStateEnabled: s,
      className: l,
      disabled: u,
      focusStateEnabled: d,
      height: c,
      hint: h,
      hoverStateEnabled: p,
      iconSize: f,
      isValid: v,
      name: m,
      onFocusIn: C,
      readOnly: b,
      rtlEnabled: A,
      tabIndex: R,
      text: k,
      validationError: H,
      validationErrors: K,
      validationMessageMode: j,
      validationMessagePosition: z,
      validationStatus: re,
      value: he,
      visible: P,
      width: V
    },
    restAttributes: E
  } = e;
  return vi(ot(2, mA, ue({
    aria: t,
    classes: i,
    onClick: a,
    onKeyDown: r,
    accessKey: o,
    activeStateEnabled: s,
    focusStateEnabled: d,
    hoverStateEnabled: p,
    className: l,
    disabled: u,
    readOnly: b,
    hint: h,
    height: c,
    width: V,
    rtlEnabled: A,
    tabIndex: R,
    visible: P,
    validationError: H,
    validationErrors: K,
    validationMessageMode: j,
    validationMessagePosition: z,
    validationStatus: re,
    isValid: v,
    onFocusIn: C
  }, E, {
    children: nr([vi(yt(64, "input", null, null, 1, ue({
      type: "hidden",
      value: "".concat(he)
    }, m && {
      name: m
    }))), yt(1, "div", "dx-checkbox-container", [ot(2, yA, {
      size: f,
      isChecked: he === !0
    }), k && yt(1, "span", "dx-checkbox-text", k, 0)], 0)], 4)
  }), null, n));
}, Lt = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Ft), Object.getOwnPropertyDescriptors({
  text: "",
  enableThreeStateBehavior: !1,
  activeStateEnabled: !0,
  hoverStateEnabled: !0,
  get focusStateEnabled() {
    return ve.real().deviceType === "desktop" && !ve.isSimulator();
  },
  defaultValue: !1,
  valueChange: () => {
  }
}))), y3 = {
  get text() {
    return Lt.text;
  },
  get enableThreeStateBehavior() {
    return Lt.enableThreeStateBehavior;
  },
  get activeStateEnabled() {
    return Lt.activeStateEnabled;
  },
  get hoverStateEnabled() {
    return Lt.hoverStateEnabled;
  },
  get focusStateEnabled() {
    return Lt.focusStateEnabled;
  },
  get defaultValue() {
    return Lt.defaultValue;
  },
  get valueChange() {
    return Lt.valueChange;
  },
  get readOnly() {
    return Lt.readOnly;
  },
  get name() {
    return Lt.name;
  },
  get validationError() {
    return Lt.validationError;
  },
  get validationErrors() {
    return Lt.validationErrors;
  },
  get validationMessageMode() {
    return Lt.validationMessageMode;
  },
  get validationMessagePosition() {
    return Lt.validationMessagePosition;
  },
  get validationStatus() {
    return Lt.validationStatus;
  },
  get isValid() {
    return Lt.isValid;
  },
  get className() {
    return Lt.className;
  },
  get disabled() {
    return Lt.disabled;
  },
  get tabIndex() {
    return Lt.tabIndex;
  },
  get visible() {
    return Lt.visible;
  },
  get aria() {
    return Kd.aria;
  }
};
let qd = class extends $l {
  constructor(t) {
    super(t), this.editorRef = zt(), this.state = {
      value: this.props.value !== void 0 ? this.props.value : this.props.defaultValue
    }, this.focus = this.focus.bind(this), this.blur = this.blur.bind(this), this.onWidgetClick = this.onWidgetClick.bind(this), this.keyDown = this.keyDown.bind(this);
  }
  createEffects() {
    return [Hl()];
  }
  onWidgetClick(t) {
    var {
      enableThreeStateBehavior: i,
      readOnly: n,
      saveValueChangeEvent: r
    } = this.props;
    if (!n)
      if (r == null || r(t), i) {
        var a;
        this.setState((s) => (a = (this.props.value !== void 0 ? this.props.value : s.value) === null || ((this.props.value !== void 0 ? this.props.value : s.value) ? !1 : null), {
          value: a
        })), this.props.valueChange(a);
      } else {
        var o;
        this.setState((s) => {
          var l;
          return o = !((l = this.props.value !== void 0 ? this.props.value : s.value) !== null && l !== void 0 && l), {
            value: o
          };
        }), this.props.valueChange(o);
      }
  }
  keyDown(t) {
    var {
      onKeyDown: i
    } = this.props, {
      keyName: n,
      originalEvent: r,
      which: a
    } = t, o = i == null ? void 0 : i(t);
    if (o != null && o.cancel)
      return o;
    (n === "space" || a === "space") && (r.preventDefault(), this.onWidgetClick(r));
  }
  get cssClasses() {
    return C3(ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    }));
  }
  get aria() {
    var t = (this.props.value !== void 0 ? this.props.value : this.state.value) === !0, i = (this.props.value !== void 0 ? this.props.value : this.state.value) === null, n = {
      role: "checkbox",
      checked: i ? "mixed" : "".concat(t)
    };
    return ue({}, n, this.props.aria);
  }
  get restAttributes() {
    var t = ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    }), i = pt(t, m3);
    return i;
  }
  focus() {
    this.editorRef.current.focus();
  }
  blur() {
    this.editorRef.current.blur();
  }
  render() {
    var t = this.props;
    return x3({
      props: ue({}, t, {
        value: this.props.value !== void 0 ? this.props.value : this.state.value
      }),
      editorRef: this.editorRef,
      onWidgetClick: this.onWidgetClick,
      keyDown: this.keyDown,
      cssClasses: this.cssClasses,
      aria: this.aria,
      restAttributes: this.restAttributes
    });
  }
};
function b3(e) {
  var t = ["value"];
  return Object.keys(e).reduce((i, n) => {
    var r = e[n], a = t.some((o) => o === n) ? "default" + n.charAt(0).toUpperCase() + n.slice(1) : n;
    return i[a] = r, i;
  }, {});
}
qd.defaultProps = y3;
var k0 = [];
function S3(e) {
  k0.push(e), qd.defaultProps = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(qd.defaultProps), Object.getOwnPropertyDescriptors(b3(Ro(k0)))));
}
class Ta extends jU {
  getProps() {
    var t = super.getProps();
    return t.onKeyDown = this._wrapKeyDownHandler(t.onKeyDown), t;
  }
  focus() {
    var t;
    return (t = this.viewRef) === null || t === void 0 ? void 0 : t.focus(...arguments);
  }
  blur() {
    var t;
    return (t = this.viewRef) === null || t === void 0 ? void 0 : t.blur(...arguments);
  }
  _getActionConfigs() {
    return {
      onFocusIn: {},
      onClick: {}
    };
  }
  get _propsInfo() {
    return {
      twoWay: [
        ["value", "defaultValue", "valueChange"]
      ],
      allowNull: ["defaultValue", "validationError", "validationErrors", "value"],
      elements: [],
      templates: [],
      props: ["text", "iconSize", "enableThreeStateBehavior", "activeStateEnabled", "hoverStateEnabled", "focusStateEnabled", "saveValueChangeEvent", "defaultValue", "valueChange", "readOnly", "name", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "isValid", "onFocusIn", "className", "accessKey", "disabled", "height", "hint", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width", "aria", "value"]
    };
  }
  get _viewComponent() {
    return qd;
  }
}
We("dxCheckBox", Ta);
Ta.defaultOptions = S3;
var Wr = "dx-treeview", ai = "".concat(Wr, "-node"), Bn = "".concat(ai, "-container"), Np = "".concat(ai, "-loadindicator"), qr = "".concat(ai, "-container-opened"), fs = "".concat(ai, "-is-leaf"), jt = "".concat(Wr, "-item"), E3 = "".concat(jt, "-with-checkbox"), w3 = "".concat(jt, "-without-checkbox"), I3 = "".concat(jt, "-data"), gs = "".concat(Wr, "-toggle-item-visibility"), T3 = "".concat(Wr, "-loadindicator"), D3 = "".concat(Wr, "-loadindicator-wrapper"), $p = "".concat(Wr, "-toggle-item-visibility-opened"), Bu = "".concat(Wr, "-select-all-item"), F0 = "dx-state-invisible", _s = "dx-state-disabled", A3 = "dx-state-selected", Hp = "dxTreeView_expand", ku = "data-item-id", O3 = YD.inherit({
  _supportedKeys: function(e) {
    var t = (r) => {
      var a = g(this.option("focusedElement"));
      if (a.length) {
        r.target = a, r.currentTarget = a, this._itemClickHandler(r, a.children("." + jt));
        var o = this._getEventNameByOption(this.option("expandEvent")), s = o === oe(Xe, Hp);
        s && this._expandEventHandler(r);
      }
    }, i = (r) => {
      r.preventDefault();
      var a = g(this.option("focusedElement")), o = this._getCheckBoxInstance(a);
      if (!o.option("disabled")) {
        var s = o.option("value");
        this._updateItemSelection(!s, a.find("." + jt).get(0), !0);
      }
    }, n = function(r, a) {
      if (this.option("expandAllEnabled")) {
        a.preventDefault();
        var o = g(this.option("focusedElement"));
        if (o.length) {
          var s = this._getItemData(o.find(".".concat(jt)));
          this._toggleExpandedNestedItems([s], r);
        }
      }
    };
    return T(this.callBase(), {
      enter: this._showCheckboxes() ? i : t,
      space: this._showCheckboxes() ? i : t,
      asterisk: n.bind(this, !0),
      minus: n.bind(this, !1)
    });
  },
  _toggleExpandedNestedItems: function(e, t) {
    if (e)
      for (var i = 0, n = e.length; i < n; i++) {
        var r = e[i], a = this._dataAdapter.getNodeByItem(r);
        this._toggleExpandedState(a, t), this._toggleExpandedNestedItems(r.items, t);
      }
  },
  _getNodeElement: function(e, t) {
    var i = this._encodeString(e.internalFields.key);
    if (t)
      return t.$nodeByKey || (t.$nodeByKey = {}, this.$element().find(".".concat(ai)).each(function() {
        var r = g(this), a = r.attr(ku);
        t.$nodeByKey[a] = r;
      })), t.$nodeByKey[i] || g();
    var n = this.$element().get(0).querySelector("[".concat(ku, '="').concat(i, '"]'));
    return g(n);
  },
  _activeStateUnit: "." + jt,
  _widgetClass: function() {
    return Wr;
  },
  _getDefaultOptions: function() {
    var e = T(this.callBase(), {
      animationEnabled: !0,
      dataStructure: "tree",
      deferRendering: !0,
      expandAllEnabled: !1,
      hasItemsExpr: "hasItems",
      selectNodesRecursive: !0,
      expandNodesRecursive: !0,
      showCheckBoxesMode: "none",
      selectAllText: q.format("dxList-selectAll"),
      onItemSelectionChanged: null,
      onItemExpanded: null,
      onItemCollapsed: null,
      scrollDirection: "vertical",
      useNativeScrolling: !0,
      virtualModeEnabled: !1,
      rootValue: 0,
      focusStateEnabled: !1,
      selectionMode: "multiple",
      expandEvent: "dblclick",
      selectByClick: !1,
      createChildren: null,
      onSelectAllValueChanged: null
    });
    return T(!0, e, {
      integrationOptions: {
        useDeferUpdateForTemplates: !1
      }
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return !ya;
      },
      options: {
        useNativeScrolling: !1
      }
    }]);
  },
  _initSelectedItems: $,
  _syncSelectionOptions: tw,
  _fireSelectionChanged: function() {
    var e = this._selectionChangePromise;
    ge(e).done(function() {
      this._createActionByOption("onSelectionChanged", {
        excludeValidators: ["disabled", "readOnly"]
      })();
    }.bind(this));
  },
  _createSelectAllValueChangedAction: function() {
    this._selectAllValueChangedAction = this._createActionByOption("onSelectAllValueChanged", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _fireSelectAllValueChanged: function(e) {
    this._selectAllValueChangedAction({
      value: e
    });
  },
  _checkBoxModeChange: function(e, t) {
    if (t === "none" || e === "none") {
      this.repaint();
      return;
    }
    var i = this._$selectAllItem && this._$selectAllItem.length;
    switch (e) {
      case "selectAll":
        i || (this._createSelectAllValueChangedAction(), this._renderSelectAllItem());
        break;
      case "normal":
        i && (this._$selectAllItem.remove(), delete this._$selectAllItem);
    }
  },
  _removeSelection: function() {
    var e = this;
    B(this._dataAdapter.getFullData(), function(t, i) {
      e._hasChildren(i) && e._dataAdapter.toggleSelection(i.internalFields.key, !1, !0);
    });
  },
  _optionChanged: function(e) {
    var {
      name: t,
      value: i,
      previousValue: n
    } = e;
    switch (t) {
      case "selectAllText":
        this._$selectAllItem && this._$selectAllItem.dxCheckBox("instance").option("text", i);
        break;
      case "showCheckBoxesMode":
        this._checkBoxModeChange(i, n);
        break;
      case "scrollDirection":
        this.getScrollable().option("direction", i);
        break;
      case "useNativeScrolling":
        this.getScrollable().option("useNative", i);
        break;
      case "items":
        delete this._$selectAllItem, this.callBase(e);
        break;
      case "dataSource":
        this.callBase(e), this._initDataAdapter(), this._filter = {};
        break;
      case "hasItemsExpr":
        this._initAccessors(), this.repaint();
        break;
      case "expandEvent":
        this._initExpandEvent();
        break;
      case "deferRendering":
      case "dataStructure":
      case "rootValue":
      case "createChildren":
      case "expandNodesRecursive":
      case "onItemSelectionChanged":
      case "onItemExpanded":
      case "onItemCollapsed":
      case "expandAllEnabled":
      case "animationEnabled":
      case "virtualModeEnabled":
      case "selectByClick":
        break;
      case "selectionMode":
        this._initDataAdapter(), this.callBase(e);
        break;
      case "onSelectAllValueChanged":
        this._createSelectAllValueChangedAction();
        break;
      case "selectNodesRecursive":
        this._dataAdapter.setOption("recursiveSelection", e.value), this.repaint();
        break;
      default:
        this.callBase(e);
    }
  },
  _initDataSource: function() {
    this._useCustomChildrenLoader() ? this._loadChildrenByCustomLoader(null).done(function(e) {
      e && e.length && this.option("items", e);
    }.bind(this)) : (this.callBase(), this._isVirtualMode() && this._initVirtualMode());
  },
  _initVirtualMode: function() {
    var e = this._filter;
    e.custom || (e.custom = this._dataSource.filter()), e.internal || (e.internal = [this.option("parentIdExpr"), this.option("rootValue")]);
  },
  _useCustomChildrenLoader: function() {
    return ce(this.option("createChildren")) && this._isDataStructurePlain();
  },
  _loadChildrenByCustomLoader: function(e) {
    var t = this.option("createChildren").call(this, e);
    return Array.isArray(t) ? new U().resolve(t).promise() : t && ce(t.then) ? Nt(t) : new U().resolve([]).promise();
  },
  _combineFilter: function() {
    return !this._filter.custom || !this._filter.custom.length ? this._filter.internal : [this._filter.custom, this._filter.internal];
  },
  _dataSourceLoadErrorHandler: function() {
    this._renderEmptyMessage();
  },
  _init: function() {
    this._filter = {}, this.callBase(), this._initStoreChangeHandlers();
  },
  _dataSourceChangedHandler: function(e) {
    var t = this.option("items");
    this._initialized && this._isVirtualMode() && t.length || this.option("items", e);
  },
  _removeTreeViewLoadIndicator: function() {
    this._treeViewLoadIndicator && (this._treeViewLoadIndicator.remove(), this._treeViewLoadIndicator = null);
  },
  _createTreeViewLoadIndicator: function() {
    return this._treeViewLoadIndicator = g("<div>").addClass(T3), this._createComponent(this._treeViewLoadIndicator, bi, {}), this._treeViewLoadIndicator;
  },
  _dataSourceLoadingChangedHandler: function(e) {
    var t;
    if (this._isVirtualMode() && (t = this._combineFilter(), this._dataSource.filter(t)), e && !this._dataSource.isLoaded()) {
      this.option("items", []);
      var i = g("<div>").addClass(D3);
      this._createTreeViewLoadIndicator().appendTo(i), this.itemsContainer().append(i), this._isVirtualMode() && this._dataSource.filter() !== t && this._dataSource.filter([]);
    } else
      this._removeTreeViewLoadIndicator();
  },
  _initStoreChangeHandlers: function() {
    this.option("dataStructure") === "plain" && this._dataSource && this._dataSource.store().on("inserted", (e) => {
      this.option().items = this.option("items").concat(e), this._dataAdapter.addItem(e), this._dataAdapter.isFiltered(e) && this._updateLevel(this._parentIdGetter(e));
    }).on("removed", (e) => {
      var t = this._dataAdapter.getNodeByKey(e);
      x(t) && (this.option("items")[this._dataAdapter.getIndexByKey(t.internalFields.key)] = 0, this._markChildrenItemsToRemove(t), this._removeItems(), this._dataAdapter.removeItem(e), this._updateLevel(this._parentIdGetter(t)));
    });
  },
  _markChildrenItemsToRemove: function(e) {
    var t = e.internalFields.childrenKeys;
    B(t, (i, n) => {
      this.option("items")[this._dataAdapter.getIndexByKey(n)] = 0, this._markChildrenItemsToRemove(this._dataAdapter.getNodeByKey(n));
    });
  },
  _removeItems: function() {
    var e = T(!0, [], this.option("items")), t = 0;
    B(e, (i, n) => {
      n || (this.option("items").splice(i - t, 1), t++);
    });
  },
  _updateLevel: function(e) {
    var t = this._getContainerByParentKey(e);
    this._renderItems(t, this._dataAdapter.getChildrenNodes(e));
  },
  _getOldContainer: function(e) {
    if (e.length)
      return e.children(".".concat(Bn));
    var t = this.getScrollable();
    return t ? g(t.content()).children() : g();
  },
  _getContainerByParentKey: function(e) {
    var t = this._dataAdapter.getNodeByKey(e), i = t ? this._getNodeElement(t) : [];
    this._getOldContainer(i).remove();
    var n = this._renderNodeContainer(i);
    if (this._isRootLevel(e)) {
      var r = this.getScrollable();
      r || this._renderScrollableContainer(), g(r.content()).append(n);
    }
    return n;
  },
  _isRootLevel: function(e) {
    return e === this.option("rootValue");
  },
  _getAccessors: function() {
    var e = this.callBase();
    return e.push("hasItems"), e;
  },
  _getDataAdapterOptions: function() {
    return {
      rootValue: this.option("rootValue"),
      multipleSelection: !this._isSingleSelection(),
      recursiveSelection: this._isRecursiveSelection(),
      recursiveExpansion: this.option("expandNodesRecursive"),
      selectionRequired: this.option("selectionRequired"),
      dataType: this.option("dataStructure"),
      sort: this._dataSource && this._dataSource.sort()
    };
  },
  _initMarkup: function() {
    this._renderScrollableContainer(), this._renderEmptyMessage(this._dataAdapter.getRootNodes()), this.callBase(), this.setAria("role", "tree");
  },
  _renderContentImpl: function() {
    var e = this._renderNodeContainer();
    g(this.getScrollable().content()).append(e), !(!this.option("items") || !this.option("items").length) && (this._renderItems(e, this._dataAdapter.getRootNodes()), this._initExpandEvent(), this._selectAllEnabled() && (this._createSelectAllValueChangedAction(), this._renderSelectAllItem(e)));
  },
  _isVirtualMode: function() {
    return this.option("virtualModeEnabled") && this._isDataStructurePlain() && !!this.option("dataSource");
  },
  _isDataStructurePlain: function() {
    return this.option("dataStructure") === "plain";
  },
  _fireContentReadyAction: function() {
    var e = this.getDataSource(), t = e && !e.isLoaded() || this._skipContentReadyAndItemExpanded, i = this.getScrollable();
    i && Re() && i.update(), t || this.callBase(), i && Re() && i.update();
  },
  _renderScrollableContainer: function() {
    this._scrollable = this._createComponent(g("<div>").appendTo(this.$element()), Si, {
      useNative: this.option("useNativeScrolling"),
      direction: this.option("scrollDirection"),
      useKeyboard: !1
    });
  },
  _renderNodeContainer: function(e) {
    var t = g("<ul>").addClass(Bn);
    if (this.setAria("role", "group", t), e && e.length) {
      var i = this._getItemData(e.children("." + jt));
      this._expandedGetter(i) && t.addClass(qr), t.appendTo(e);
    }
    return t;
  },
  _createDOMElement: function(e, t) {
    var i = g("<li>").addClass(ai).attr(ku, this._encodeString(t.internalFields.key)).prependTo(e);
    return this.setAria({
      role: "treeitem",
      label: this._displayGetter(t.internalFields.item) || "",
      expanded: t.internalFields.expanded || !1,
      level: this._getLevel(e)
    }, i), i;
  },
  _getLevel: function(e) {
    var t = e.parent();
    return t.hasClass("dx-scrollable-content") ? 1 : parseInt(t.attr("aria-level")) + 1;
  },
  _showCheckboxes: function() {
    return this.option("showCheckBoxesMode") !== "none";
  },
  _selectAllEnabled: function() {
    return this.option("showCheckBoxesMode") === "selectAll" && !this._isSingleSelection();
  },
  _renderItems: function(e, t) {
    for (var i = t.length - 1, n = i; n >= 0; n--)
      this._renderItem(n, t[n], e);
    this._renderedItemsCount += t.length;
  },
  _renderItem: function(e, t, i) {
    var n = this._createDOMElement(i, t), r = t.internalFields, a = this._showCheckboxes();
    n.addClass(a ? E3 : w3), n.toggleClass(F0, r.item.visible === !1), a && this._renderCheckBox(n, t), this.setAria("selected", r.selected, n), this._toggleSelectedClass(n, r.selected), this.callBase(this._renderedItemsCount + e, r.item, n), r.item.visible !== !1 && this._renderChildren(n, t);
  },
  _setAriaSelected: function() {
  },
  _renderChildren: function(e, t) {
    if (!this._hasChildren(t)) {
      this._addLeafClass(e);
      return;
    }
    this._renderToggleItemVisibilityIcon(e, t), !(this.option("deferRendering") && !t.internalFields.expanded) && this._loadSublevel(t).done((i) => {
      this._renderSublevel(e, this._getActualNode(t), i);
    });
  },
  _getActualNode: function(e) {
    return this._dataAdapter.getNodeByKey(e.internalFields.key);
  },
  _hasChildren: function(e) {
    return this._isVirtualMode() || this._useCustomChildrenLoader() ? this._hasItemsGetter(e.internalFields.item) !== !1 : this.callBase(e);
  },
  _loadSublevel: function(e) {
    var t = new U(), i = this._getChildNodes(e);
    return i.length ? t.resolve(i) : this._loadNestedItems(e).done((n) => {
      t.resolve(this._dataAdapter.getNodesByItems(n));
    }), t.promise();
  },
  _renderSublevel: function(e, t, i) {
    var n = this._renderNodeContainer(e, t), r = i.filter((o) => t.internalFields.childrenKeys.indexOf(o.internalFields.key) !== -1);
    if (this._renderItems(n, r), r.length && !t.internalFields.selected) {
      var a = r[0];
      this._updateParentsState(a, this._getNodeElement(a));
    }
    this._normalizeIconState(e, r.length), t.internalFields.expanded && n.addClass(qr);
  },
  _executeItemRenderAction: function(e, t, i) {
    var n = this._getNode(i);
    this._getItemRenderAction()({
      itemElement: i,
      itemIndex: e,
      itemData: t,
      node: this._dataAdapter.getPublicNode(n)
    });
  },
  _addLeafClass: function(e) {
    e.addClass(fs);
  },
  _expandEventHandler: function(e) {
    var t = g(e.currentTarget.parentNode);
    t.hasClass(fs) || this._toggleExpandedState(e.currentTarget, void 0, e);
  },
  _initExpandEvent: function() {
    var e = this._getEventNameByOption(this.option("expandEvent")), t = this._itemContainer(), i = this._itemSelector();
    w.off(t, "." + Hp, i), w.on(t, e, i, this._expandEventHandler.bind(this));
  },
  _getEventNameByOption: function(e) {
    var t = e === "click" ? Xe : Ol;
    return oe(t, Hp);
  },
  _getNode: function(e) {
    if (!x(e))
      return null;
    if (e.internalFields)
      return e;
    if (Ps(e))
      return this._dataAdapter.getNodeByKey(e);
    var t = g(e).get(0);
    return t ? ee.isElementNode(t) ? this._getNodeByElement(t) : this._dataAdapter.getNodeByItem(t) : null;
  },
  _getNodeByElement: function(e) {
    var t = g(e).closest("." + ai), i = this._decodeString(t.attr(ku));
    return this._dataAdapter.getNodeByKey(i);
  },
  _toggleExpandedState: function(e, t, i) {
    var n = this._getNode(e);
    if (!n)
      return new U().reject().promise();
    if (n.internalFields.disabled)
      return new U().reject().promise();
    var r = n.internalFields.expanded;
    if (r === t)
      return new U().resolve().promise();
    if (this._hasChildren(n)) {
      var a = this._getNodeElement(n);
      if (a.find(".".concat(Np, ":not(.").concat(F0, ")")).length)
        return new U().reject().promise();
      this._createLoadIndicator(a);
    }
    return x(t) || (t = !r), this._dataAdapter.toggleExpansion(n.internalFields.key, t), this._updateExpandedItemsUI(n, t, i);
  },
  _createLoadIndicator: function(e) {
    var t = e.children("." + gs), i = e.children(".".concat(Bn));
    t.hasClass($p) || i.not(":empty").length || (this._createComponent(g("<div>").addClass(Np), bi, {}).$element().appendTo(e), t.hide());
  },
  _renderToggleItemVisibilityIcon: function(e, t) {
    var i = g("<div>").addClass(gs).appendTo(e);
    t.internalFields.expanded && (i.addClass($p), e.parent().addClass(qr)), t.internalFields.disabled && i.addClass(_s), this._renderToggleItemVisibilityIconClick(i, t);
  },
  _renderToggleItemVisibilityIconClick: function(e, t) {
    var i = oe(Xe, this.NAME);
    w.off(e, i), w.on(e, i, (n) => {
      this._toggleExpandedState(t.internalFields.key, void 0, n);
    });
  },
  _updateExpandedItemsUI: function(e, t, i) {
    var n = this._getNodeElement(e), r = !n.length || t && n.is(":hidden");
    if (this.option("expandNodesRecursive") && r) {
      var a = this._getNode(e.internalFields.parentKey);
      a && this._updateExpandedItemsUI(a, t, i);
    }
    var o = n.children("." + gs), s = n.children(".".concat(Bn));
    o.toggleClass($p, t);
    var l = s.length > 0, u = new U();
    return !t || l && !s.is(":empty") ? (this._animateNodeContainer(e, t, i, u), u.promise()) : e.internalFields.childrenKeys.length === 0 && (this._isVirtualMode() || this._useCustomChildrenLoader()) ? (this._loadNestedItemsWithUpdate(e, t, i, u), u.promise()) : (this._renderSublevel(n, e, this._getChildNodes(e)), this._fireContentReadyAction(), this._animateNodeContainer(e, t, i, u), u.promise());
  },
  _loadNestedItemsWithUpdate: function(e, t, i, n) {
    var r = this._getNodeElement(e);
    this._loadNestedItems(e).done((a) => {
      var o = this._getActualNode(e);
      if (this._renderSublevel(r, o, this._dataAdapter.getNodesByItems(a)), !a || !a.length) {
        n.resolve();
        return;
      }
      this._fireContentReadyAction(), this._animateNodeContainer(o, t, i, n);
    });
  },
  _loadNestedItems: function(e) {
    if (this._useCustomChildrenLoader()) {
      var t = this._dataAdapter.getPublicNode(e);
      return this._loadChildrenByCustomLoader(t).done((i) => {
        this._areNodesExists(i) || this._appendItems(i);
      });
    }
    return this._isVirtualMode() ? (this._filter.internal = [this.option("parentIdExpr"), e.internalFields.key], this._dataSource.filter(this._combineFilter()), this._dataSource.load().done((i) => {
      this._areNodesExists(i) || this._appendItems(i);
    })) : new U().resolve([]).promise();
  },
  _areNodesExists: function(e, t) {
    var i = this.keyOf(e[0]), n = this._dataAdapter.getFullData();
    return !!this._dataAdapter.getNodeByKey(i, n);
  },
  _appendItems: function(e) {
    this.option().items = this.option("items").concat(e), this._initDataAdapter();
  },
  _animateNodeContainer: function(e, t, i, n) {
    var r = this._getNodeElement(e), a = r.children(".".concat(Bn));
    e && n && a.length === 0 && n.resolve(), a.addClass(qr);
    var o = Fe(a);
    ft.stop(a, !0), ft.animate(a, {
      type: "custom",
      duration: this.option("animationEnabled") ? 400 : 0,
      from: {
        maxHeight: t ? 0 : o
      },
      to: {
        maxHeight: t ? o : 0
      },
      complete: function() {
        a.css("maxHeight", "none"), a.toggleClass(qr, t), this.setAria("expanded", t, r), this.getScrollable().update(), this._fireExpandedStateUpdatedEvent(t, e, i), n && n.resolve();
      }.bind(this)
    });
  },
  _fireExpandedStateUpdatedEvent: function(e, t, i) {
    if (!(!this._hasChildren(t) || this._skipContentReadyAndItemExpanded)) {
      var n = e ? "onItemExpanded" : "onItemCollapsed";
      if (x(i))
        this._itemDXEventHandler(i, n, {
          node: this._dataAdapter.getPublicNode(t)
        });
      else {
        var r = this._getNodeElement(t);
        this._itemEventHandler(r, n, {
          event: i,
          node: this._dataAdapter.getPublicNode(t)
        });
      }
    }
  },
  _normalizeIconState: function(e, t) {
    var i = e.find(".".concat(Np));
    if (i.length) {
      var n;
      (n = bi.getInstance(i)) === null || n === void 0 || n.option("visible", !1);
    }
    var r = e.find(".".concat(gs));
    if (t) {
      r.show();
      return;
    }
    r.removeClass(gs), e.addClass(fs);
  },
  _emptyMessageContainer: function() {
    var e = this.getScrollable();
    return e ? g(e.content()) : this.callBase();
  },
  _renderContent: function() {
    var e = this.option("items");
    e && e.length && (this._contentAlreadyRendered = !0), this.callBase();
  },
  _renderSelectAllItem: function(e) {
    e = e || this.$element().find(".".concat(Bn)).first(), this._$selectAllItem = g("<div>").addClass(Bu);
    var t = this._dataAdapter.isAllSelected();
    this._createComponent(this._$selectAllItem, Ta, {
      value: t,
      tabIndex: 1,
      text: this.option("selectAllText"),
      onValueChanged: this._onSelectAllCheckboxValueChanged.bind(this)
    }), this._toggleSelectedClass(this._$selectAllItem, t), e.before(this._$selectAllItem);
  },
  _onSelectAllCheckboxValueChanged: function(e) {
    this._toggleSelectAll(e), this._fireSelectAllValueChanged(e.value);
  },
  _toggleSelectAll: function(e) {
    this._dataAdapter.toggleSelectAll(e.value), this._updateItemsUI(), this._fireSelectionChanged();
  },
  _renderCheckBox: function(e, t) {
    var i = g("<div>").appendTo(e);
    this._createComponent(i, Ta, {
      value: t.internalFields.selected,
      onValueChanged: this._changeCheckboxValue.bind(this),
      focusStateEnabled: !1,
      disabled: this._disabledGetter(t)
    });
  },
  _toggleSelectedClass: function(e, t) {
    e.toggleClass(A3, !!t);
  },
  _toggleNodeDisabledState: function(e, t) {
    var i = this._getNodeElement(e), n = i.find("." + jt).eq(0);
    if (this._dataAdapter.toggleNodeDisabledState(e.internalFields.key, t), n.toggleClass(_s, !!t), this._showCheckboxes()) {
      var r = this._getCheckBoxInstance(i);
      r.option("disabled", !!t);
    }
  },
  _itemOptionChanged: function(e, t, i) {
    var n = this._dataAdapter.getNodeByItem(e);
    t === this.option("disabledExpr") && this._toggleNodeDisabledState(n, i);
  },
  _changeCheckboxValue: function(e) {
    var t = g(e.element).parent("." + ai), i = t.children("." + jt), n = this._getItemData(i), r = this._getNodeByElement(i), a = e.value;
    r && r.internalFields.selected === a || this._updateItemSelection(a, n, e.event);
  },
  _isSingleSelection: function() {
    return this.option("selectionMode") === "single";
  },
  _isRecursiveSelection: function() {
    return this.option("selectNodesRecursive") && this.option("selectionMode") !== "single";
  },
  _isLastSelectedBranch: function(e, t, i) {
    var n = t.indexOf(e.key);
    return n >= 0 && t.splice(n, 1), i && B(e.children, function(r, a) {
      this._isLastSelectedBranch(a, t, !0);
    }.bind(this)), e.parent && this._isLastSelectedBranch(e.parent, t), t.length === 0;
  },
  _isLastRequired: function(e) {
    var t = this.option("selectionRequired"), i = this._isSingleSelection(), n = this.getSelectedNodeKeys();
    if (t)
      return i ? n.length === 1 : this._isLastSelectedBranch(e.internalFields.publicNode, n.slice(), !0);
  },
  _updateItemSelection: function(e, t, i) {
    var n = this._getNode(t);
    if (!n || n.visible === !1)
      return !1;
    if (n.internalFields.selected === e)
      return !0;
    if (!e && this._isLastRequired(n)) {
      if (this._showCheckboxes()) {
        var r = this._getNodeElement(n);
        this._getCheckBoxInstance(r).option("value", !0);
      }
      return !1;
    }
    if (e && this._isSingleSelection()) {
      var a = this.getSelectedNodeKeys();
      B(a, (l, u) => {
        this._dataAdapter.toggleSelection(u, !1), this._updateItemsUI(), this._fireItemSelectionChanged(this._getNode(u));
      });
    }
    this._dataAdapter.toggleSelection(n.internalFields.key, e);
    var o = this._dataAdapter.isAllSelected(), s = this._selectAllEnabled() && this._$selectAllItem.dxCheckBox("instance").option("value") !== o;
    return this._updateItemsUI(), this._fireItemSelectionChanged(n, i), this._fireSelectionChanged(), s && this._fireSelectAllValueChanged(o), !0;
  },
  _fireItemSelectionChanged: function(e, t) {
    var i = t || this._findItemElementByItem(e.internalFields.item), n = t ? this._itemDXEventHandler : this._itemEventHandler;
    n.call(this, i, "onItemSelectionChanged", {
      node: this._dataAdapter.getPublicNode(e),
      itemData: e.internalFields.item
    });
  },
  _getCheckBoxInstance: function(e) {
    return e.children(".dx-checkbox").dxCheckBox("instance");
  },
  _updateItemsUI: function() {
    var e = {};
    if (B(this._dataAdapter.getData(), (i, n) => {
      var r = this._getNodeElement(n, e), a = n.internalFields.selected;
      r.length && (this._toggleSelectedClass(r, a), this.setAria("selected", a, r), this._showCheckboxes() && this._getCheckBoxInstance(r).option("value", a));
    }), this._selectAllEnabled()) {
      var t = this._$selectAllItem.dxCheckBox("instance");
      t.option("onValueChanged", void 0), t.option("value", this._dataAdapter.isAllSelected()), t.option("onValueChanged", this._onSelectAllCheckboxValueChanged.bind(this));
    }
  },
  _updateParentsState: function(e, t) {
    if (t) {
      var i = this._dataAdapter.getNodeByKey(e.internalFields.parentKey), n = g(t.parents("." + ai)[0]);
      if (this._showCheckboxes()) {
        var r = i.internalFields.selected;
        this._getCheckBoxInstance(n).option("value", r), this._toggleSelectedClass(n, r);
      }
      i.internalFields.parentKey !== this.option("rootValue") && this._updateParentsState(i, n);
    }
  },
  _itemEventHandlerImpl: function(e, t, i) {
    var n = g(e).closest("." + ai).children("." + jt);
    return t(T(this._extendActionArgs(n), i));
  },
  _itemContextMenuHandler: function(e) {
    this._createEventHandler("onItemContextMenu", e);
  },
  _itemHoldHandler: function(e) {
    this._createEventHandler("onItemHold", e);
  },
  _createEventHandler: function(e, t) {
    var i = this._getNodeByElement(t.currentTarget);
    this._itemDXEventHandler(t, e, {
      node: this._dataAdapter.getPublicNode(i)
    });
  },
  _itemClass: function() {
    return jt;
  },
  _itemDataKey: function() {
    return I3;
  },
  _attachClickEvent: function() {
    var e = "." + this._itemClass(), t = "." + ai + ", ." + Bu, i = oe(Xe, this.NAME), n = oe(je.down, this.NAME), r = this._itemContainer(), a = this;
    w.off(r, i, e), w.off(r, n, t), w.on(r, i, e, function(o) {
      a._itemClickHandler(o, g(this));
    }), w.on(r, n, t, function(o) {
      a._itemPointerDownHandler(o);
    });
  },
  _itemClickHandler: function(e, t) {
    var i = this._getItemData(t), n = this._getNodeByElement(t);
    this._itemDXEventHandler(e, "onItemClick", {
      node: this._dataAdapter.getPublicNode(n)
    }), this.option("selectByClick") && !e.isDefaultPrevented() && this._updateItemSelection(!n.internalFields.selected, i, e);
  },
  _updateSelectionToFirstItem: function(e, t) {
    for (var i = t; i >= 0; ) {
      var n = g(e[i]);
      this._updateItemSelection(!0, n.find("." + jt).get(0)), i--;
    }
  },
  _updateSelectionToLastItem: function(e, t) {
    for (var i = e.length, n = t; n < i; ) {
      var r = g(e[n]);
      this._updateItemSelection(!0, r.find("." + jt).get(0)), n++;
    }
  },
  _focusInHandler: function(e) {
    this._updateFocusState(e, !0);
    var t = g(e.target).hasClass(Bu);
    if (t || this.option("focusedElement")) {
      clearTimeout(this._setFocusedItemTimeout);
      var i = t ? Ie(this._$selectAllItem) : g(this.option("focusedElement"));
      this._setFocusedItemTimeout = setTimeout(() => {
        this._setFocusedItem(i);
      });
      return;
    }
    var n = this._getActiveItem();
    this.option("focusedElement", Ie(n.closest("." + ai)));
  },
  _setFocusedItem: function(e) {
    !e || !e.length || e.children().hasClass(_s) || this.callBase(e);
  },
  _itemPointerDownHandler: function(e) {
    if (this.option("focusStateEnabled")) {
      var t = g(e.target).closest("." + ai + ", ." + Bu);
      if (t.length) {
        var i = t.hasClass(_s) ? null : t;
        this.option("focusedElement", Ie(i));
      }
    }
  },
  _findNonDisabledNodes: function(e) {
    return e.not(function() {
      return g(this).children("." + jt).hasClass(_s);
    });
  },
  _moveFocus: function(e, t) {
    var i = "up", n = "down", r = "first", a = "last", o = this.option("rtlEnabled") ? "right" : "left", s = this.option("rtlEnabled") ? "left" : "right";
    this.$element().find(".".concat(Bn)).each(function() {
      ft.stop(this, !0);
    });
    var l = this._findNonDisabledNodes(this._nodeElements());
    if (!(!l || !l.length))
      switch (e) {
        case i:
          var u = this._prevItem(l);
          this.option("focusedElement", Ie(u));
          var d = this._getNodeItemElement(u);
          this.getScrollable().scrollToElement(d), t.shiftKey && this._showCheckboxes() && this._updateItemSelection(!0, d);
          break;
        case n:
          var c = this._nextItem(l);
          this.option("focusedElement", Ie(c));
          var h = this._getNodeItemElement(c);
          this.getScrollable().scrollToElement(h), t.shiftKey && this._showCheckboxes() && this._updateItemSelection(!0, h);
          break;
        case r:
          var p = l.first();
          t.shiftKey && this._showCheckboxes() && this._updateSelectionToFirstItem(l, l.index(this._prevItem(l))), this.option("focusedElement", Ie(p)), this.getScrollable().scrollToElement(this._getNodeItemElement(p));
          break;
        case a:
          var f = l.last();
          t.shiftKey && this._showCheckboxes() && this._updateSelectionToLastItem(l, l.index(this._nextItem(l))), this.option("focusedElement", Ie(f)), this.getScrollable().scrollToElement(this._getNodeItemElement(f));
          break;
        case s:
          this._expandFocusedContainer();
          break;
        case o:
          this._collapseFocusedContainer();
          break;
        default:
          this.callBase.apply(this, arguments);
          return;
      }
  },
  _getNodeItemElement: function(e) {
    return e.find("." + jt).get(0);
  },
  _nodeElements: function() {
    return this.$element().find("." + ai).not(":hidden");
  },
  _expandFocusedContainer: function() {
    var e = g(this.option("focusedElement"));
    if (!(!e.length || e.hasClass(fs))) {
      var t = e.find(".".concat(Bn)).eq(0);
      if (t.hasClass(qr)) {
        var i = this._nextItem(this._findNonDisabledNodes(this._nodeElements()));
        this.option("focusedElement", Ie(i)), this.getScrollable().scrollToElement(this._getNodeItemElement(i));
        return;
      }
      var n = this._getNodeByElement(e.children("." + jt));
      this._toggleExpandedState(n, !0);
    }
  },
  _getClosestNonDisabledNode: function(e) {
    do
      e = e.parent().closest("." + ai);
    while (e.children(".dx-treeview-item.dx-state-disabled").length);
    return e;
  },
  _collapseFocusedContainer: function() {
    var e = g(this.option("focusedElement"));
    if (e.length) {
      var t = e.find(".".concat(Bn)).eq(0);
      if (!e.hasClass(fs) && t.hasClass(qr)) {
        var i = this._getNodeByElement(e.children("." + jt));
        this._toggleExpandedState(i, !1);
      } else {
        var n = this._getClosestNonDisabledNode(e);
        n.length && this.option("focusedElement", Ie(n)), this.getScrollable().scrollToElement(this._getNodeItemElement(n));
      }
    }
  },
  _encodeString: function(e) {
    return Te(e) ? encodeURI(e) : e;
  },
  _decodeString: function(e) {
    return Te(e) ? decodeURI(e) : e;
  },
  getScrollable: function() {
    return this._scrollable;
  },
  updateDimensions: function() {
    var e = new U(), t = this.getScrollable();
    return t ? t.update().done(() => {
      e.resolveWith(this);
    }) : e.resolveWith(this), e.promise();
  },
  selectItem: function(e) {
    return this._updateItemSelection(!0, e);
  },
  unselectItem: function(e) {
    return this._updateItemSelection(!1, e);
  },
  expandItem: function(e) {
    return this._toggleExpandedState(e, !0);
  },
  collapseItem: function(e) {
    return this._toggleExpandedState(e, !1);
  },
  getNodes: function() {
    return this._dataAdapter.getTreeNodes();
  },
  getSelectedNodes: function() {
    return this.getSelectedNodeKeys().map((e) => {
      var t = this._dataAdapter.getNodeByKey(e);
      return this._dataAdapter.getPublicNode(t);
    });
  },
  getSelectedNodeKeys: function() {
    return this._dataAdapter.getSelectedNodesKeys();
  },
  selectAll: function() {
    this._selectAllEnabled() ? this._$selectAllItem.dxCheckBox("instance").option("value", !0) : this._toggleSelectAll({
      value: !0
    });
  },
  unselectAll: function() {
    this._selectAllEnabled() ? this._$selectAllItem.dxCheckBox("instance").option("value", !1) : this._toggleSelectAll({
      value: !1
    });
  },
  _allItemsExpandedHandler: function() {
    this._skipContentReadyAndItemExpanded = !1, this._fireContentReadyAction();
  },
  expandAll: function() {
    var e = this._dataAdapter.getData(), t = [];
    this._skipContentReadyAndItemExpanded = !0, e.forEach((i) => t.push(this._toggleExpandedState(i.internalFields.key, !0))), Promise.allSettled(t).then(() => {
      var i;
      return (i = this._allItemsExpanded) === null || i === void 0 ? void 0 : i.call(this);
    });
  },
  collapseAll: function() {
    B(this._dataAdapter.getExpandedNodesKeys(), function(e, t) {
      this._toggleExpandedState(t, !1);
    }.bind(this));
  },
  scrollToItem: function(e) {
    var t = this._getNode(e);
    if (!t)
      return new U().reject().promise();
    for (var i = [], n = t.internalFields.publicNode.parent; n != null; )
      n.expanded || i.push(n.key), n = n.parent;
    var r = new U();
    return this._expandNodes(i.reverse()).always(() => {
      var a = this._getNodeElement(t);
      a && a.length ? (this.scrollToElementTopLeft(a.get(0)), r.resolve()) : r.reject();
    }), r.promise();
  },
  scrollToElementTopLeft: function(e) {
    var t = this.getScrollable(), {
      scrollDirection: i,
      rtlEnabled: n
    } = this.option(), r = {
      top: 0,
      left: 0
    }, a = GT(UT, e);
    if (i !== zd) {
      var o = g(t.container()).get(0);
      r.left = n ? a.left + e.offsetWidth - o.clientWidth : a.left;
    }
    i !== KT && (r.top = a.top), t.scrollTo(r);
  },
  _expandNodes: function(e) {
    if (!e || e.length === 0)
      return new U().resolve().promise();
    var t = new U(), i = e.map((n) => this.expandItem(n));
    return ge.apply(g, i).done(() => t.resolve()).fail(() => t.reject()), t.promise();
  },
  _dispose: function() {
    this.callBase(), clearTimeout(this._setFocusedItemTimeout), this._allItemsExpandedHandler = null;
  }
});
Ia.setEditorClass(Wl);
var bA = "dx-treeview", R3 = "".concat(bA, "-node-container"), Ul = O3.inherit(Ia).inherit({
  _addWidgetPrefix: function(e) {
    return "".concat(bA, "-").concat(e);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "searchValue":
        this._showCheckboxes() && this._isRecursiveSelection() && this._removeSelection(), this._initDataAdapter(), this._updateSearch(), this._repaintContainer(), this.option("focusedElement", null);
        break;
      case "searchExpr":
        this._initDataAdapter(), this.repaint();
        break;
      case "searchMode":
        this.option("expandNodesRecursive") ? this._updateDataAdapter() : this._initDataAdapter(), this.repaint();
        break;
      default:
        this.callBase(e);
    }
  },
  _updateDataAdapter: function() {
    this._setOptionWithoutOptionChange("expandNodesRecursive", !1), this._initDataAdapter(), this._setOptionWithoutOptionChange("expandNodesRecursive", !0);
  },
  _getDataAdapterOptions: function() {
    return T(this.callBase(), {
      searchValue: this.option("searchValue"),
      searchMode: this.option("searchMode") || "contains",
      searchExpr: this.option("searchExpr")
    });
  },
  _updateSearch: function() {
    if (this._searchEditor) {
      var e = this._getSearchEditorOptions();
      this._searchEditor.option(e);
    }
  },
  _repaintContainer: function() {
    var e = this.$element().find(".".concat(R3)).first(), t;
    e.length && (e.empty(), t = this._dataAdapter.getRootNodes(), this._renderEmptyMessage(t), this._renderItems(e, t), this._fireContentReadyAction());
  },
  _itemContainer: function(e) {
    return this._scrollable && e ? g(this._scrollable.content()) : this.callBase();
  },
  _addWidgetClass: function() {
    this.$element().addClass(this._widgetClass());
  },
  _clean: function() {
    this.callBase(), this._removeSearchBox();
  }
});
We("dxTreeView", Ul);
var B3 = "column-chooser", SA = "column-chooser-button", P0 = "notouch-action", k3 = "column-chooser-list", F3 = "column-chooser-plain", P3 = "column-chooser-mode-drag", M3 = "column-chooser-mode-select", EA = "column-chooser", M0 = "dx-column-chooser-item", L3 = ".dx-treeview-node", V3 = ".dx-checkbox", N3 = 300, L0 = function(e, t) {
  var i = [], n = e.option("columnChooser.mode") === "select";
  return t.length && B(t, function(r, a) {
    var o = {
      text: a.caption,
      cssClass: a.cssClass,
      allowHiding: a.allowHiding,
      expanded: !0,
      id: a.index,
      disabled: !1,
      disableCheckBox: a.allowHiding === !1,
      parentId: x(a.ownerBand) ? a.ownerBand : null
    };
    n && (o.selected = a.visible), i.push(o);
  }), i;
}, $3 = {
  renderShowColumnChooserButton: function(e) {
    var t = this, i = t.addWidgetPrefix(SA), n = t.option("columnChooser.enabled"), r = e.find("." + i), a;
    n ? r.length ? r.show() : (a = g("<div>").addClass(i).appendTo(e), t._createComponent(a, Gt, {
      icon: EA,
      onClick: function() {
        t.getView("columnChooserView").showColumnChooser();
      },
      hint: t.option("columnChooser.title"),
      integrationOptions: {}
    })) : r.hide();
  },
  getPosition: function() {
    var e = this.getView("rowsView");
    return {
      my: "right bottom",
      at: "right bottom",
      of: e && e.element(),
      collision: "fit",
      offset: "-2 -2",
      boundaryOffset: "2 2"
    };
  }
}, H3 = at.ViewController.inherit($3), z3 = {
  _resizeCore: $,
  _isWinDevice: function() {
    return !!ve.real().win;
  },
  _updateList: function(e) {
    var t, i = this._popupContainer.$content(), n = this.option("columnChooser.mode") === "select", r = this._columnChooserList, a = this._columnsController.getChooserColumns(n);
    if (this._popupContainer.setAria({
      role: "dialog",
      label: q.format("dxDataGrid-columnChooserTitle")
    }), n && r && e && e.changeType === "selection") {
      t = L0(this, a);
      for (var o = 0; o < t.length; o++) {
        var s = t[o].selected, l = t[o].id;
        l === e.columnIndex && (s ? r.selectItem(l, s) : r.unselectItem(l, s));
      }
    } else
      (!n || !r || e === "full") && (this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(P3), !n).toggleClass(this.addWidgetPrefix(M3), n), t = L0(this, a), this._renderTreeView(i, t));
  },
  _initializePopupContainer: function() {
    var e = this, t = e.addWidgetPrefix(B3), i = e.element().addClass(t), n = e.option("columnChooser"), r = rn(), a = oI(r), o = St(r), s = {
      visible: !1,
      shading: !1,
      showCloseButton: !1,
      dragEnabled: !0,
      resizeEnabled: !0,
      wrapperAttr: {
        class: t
      },
      toolbarItems: [{
        text: n.title,
        toolbar: "top",
        location: a || o ? "before" : "center"
      }],
      position: e.getController("columnChooser").getPosition(),
      width: n.width,
      height: n.height,
      rtlEnabled: e.option("rtlEnabled"),
      onHidden: function() {
        e._isWinDevice() && g("body").removeClass(e.addWidgetPrefix(P0));
      },
      container: n.container
    };
    a || o ? T(s, {
      showCloseButton: !0
    }) : s.toolbarItems[s.toolbarItems.length] = {
      shortcut: "cancel"
    }, x(this._popupContainer) ? this._popupContainer.option(s) : (e._popupContainer = e._createComponent(i, an, s), e._popupContainer.on("optionChanged", function(l) {
      l.name === "visible" && e.renderCompleted.fire();
    }));
  },
  _renderCore: function(e) {
    this._popupContainer && this._updateList(e);
  },
  _renderTreeView: function(e, t) {
    var i = this, n = this.option("columnChooser"), r = n.mode === "select", a = {
      items: t,
      dataStructure: "plain",
      activeStateEnabled: !0,
      focusStateEnabled: !0,
      hoverStateEnabled: !0,
      itemTemplate: "item",
      showCheckBoxesMode: "none",
      rootValue: null,
      searchEnabled: n.allowSearch,
      searchTimeout: n.searchTimeout,
      onItemRendered: function(l) {
        if (l.itemData.disableCheckBox) {
          var u = g(l.itemElement).closest(L3), d;
          if (u.length && (d = u.find(V3), d.length)) {
            var c = d.data("dxCheckBox");
            c && c.option("disabled", !0);
          }
        }
      }
    }, o = e.find(".dx-scrollable").data("dxScrollable"), s = o && o.scrollTop();
    r && !this._columnsController.isBandColumnsUsed() && e.addClass(this.addWidgetPrefix(F3)), a.onContentReady = function(l) {
      oi(function() {
        if (s) {
          var u = g(l.element).find(".dx-scrollable").data("dxScrollable");
          u && u.scrollTo({
            y: s
          });
        }
        i.renderCompleted.fire();
      });
    }, this._isWinDevice() && (a.useNativeScrolling = !1), T(a, r ? this._prepareSelectModeConfig() : this._prepareDragModeConfig()), this._columnChooserList ? (a.searchEnabled || (a.searchValue = ""), this._columnChooserList.option(a)) : (this._columnChooserList = this._createComponent(e, Ul, a), e.addClass(this.addWidgetPrefix(k3)));
  },
  _prepareDragModeConfig: function() {
    var e = this.option("columnChooser");
    return {
      noDataText: e.emptyPanelText,
      activeStateEnabled: !1,
      focusStateEnabled: !1,
      hoverStateEnabled: !1,
      itemTemplate: function(t, i, n) {
        g(n).text(t.text).parent().addClass(t.cssClass).addClass(M0);
      }
    };
  },
  _prepareSelectModeConfig: function() {
    var e = this;
    return {
      selectNodesRecursive: !1,
      showCheckBoxesMode: "normal",
      onItemSelectionChanged: function(t) {
        var i = e._columnsController.getVisibleColumns().filter(function(r) {
          return !r.command;
        }), n = i.length === 1 && !t.itemData.selected;
        n ? t.component.selectItem(t.itemElement) : setTimeout(function() {
          e._columnsController.columnOption(t.itemData.id, "visible", t.itemData.selected);
        }, N3);
      }
    };
  },
  _columnOptionChanged: function(e) {
    var t = e.changeTypes, i = e.optionNames, n = this.option("columnChooser.mode") === "select";
    if (this.callBase(e), n) {
      var r = i.visible && i.length === 1 && e.columnIndex !== void 0, a = i.showInColumnChooser || i.caption || i.visible || t.columns && i.all;
      r ? this.render(null, {
        changeType: "selection",
        columnIndex: e.columnIndex
      }) : a && this.render(null, "full");
    }
  },
  optionChanged: function(e) {
    switch (e.name) {
      case "columnChooser":
        this._initializePopupContainer(), this.render(null, "full");
        break;
      default:
        this.callBase(e);
    }
  },
  getColumnElements: function() {
    var e = [], t, i = this.option("columnChooser.mode") === "select", n = this._columnsController.getChooserColumns(i), r = this._popupContainer && this._popupContainer.$content(), a = r && r.find(".dx-treeview-node");
    return a && n.forEach(function(o) {
      t = a.filter("[data-item-id = '" + o.index + "']");
      var s = t.length ? t.children("." + M0).get(0) : null;
      e.push(s);
    }), g(e);
  },
  getName: function() {
    return "columnChooser";
  },
  getColumns: function() {
    return this._columnsController.getChooserColumns();
  },
  allowDragging: function(e, t) {
    var i = e && e.allowHiding && (t !== "columnChooser" || !e.visible && this._columnsController.isParentColumnVisible(e.index));
    return this.isColumnChooserVisible() && i;
  },
  getBoundingRect: function() {
    var e = this._popupContainer && this._popupContainer.$overlayContent();
    if (e && e.is(":visible")) {
      var t = e.offset();
      return {
        left: t.left,
        top: t.top,
        right: t.left + Ge(e),
        bottom: t.top + Ne(e)
      };
    }
    return null;
  },
  showColumnChooser: function() {
    this._popupContainer || (this._initializePopupContainer(), this.render()), this._popupContainer.show(), this._isWinDevice() && g("body").addClass(this.addWidgetPrefix(P0));
  },
  hideColumnChooser: function() {
    this._popupContainer && this._popupContainer.hide();
  },
  isColumnChooserVisible: function() {
    var e = this._popupContainer;
    return e && e.option("visible");
  },
  publicMethods: function() {
    return ["showColumnChooser", "hideColumnChooser"];
  }
}, W3 = Rl.inherit(z3), Hv = {
  defaultOptions: function() {
    return {
      columnChooser: {
        enabled: !1,
        allowSearch: !1,
        searchTimeout: 500,
        mode: "dragAndDrop",
        width: 250,
        height: 260,
        title: q.format("dxDataGrid-columnChooserTitle"),
        emptyPanelText: q.format("dxDataGrid-columnChooserEmptyText"),
        container: void 0
      }
    };
  },
  controllers: {
    columnChooser: H3
  },
  views: {
    columnChooserView: W3
  },
  extenders: {
    views: {
      headerPanel: {
        _getToolbarItems: function() {
          var e = this.callBase();
          return this._appendColumnChooserItem(e);
        },
        _appendColumnChooserItem: function(e) {
          var t = this, i = t.option("columnChooser.enabled");
          if (i) {
            var n = t.option("columnChooser.title"), r = {
              widget: "dxButton",
              options: {
                icon: EA,
                onClick: function() {
                  t.component.getView("columnChooserView").showColumnChooser();
                },
                hint: n,
                text: n,
                onInitialized: function(a) {
                  g(a.element).addClass(t._getToolbarButtonClass(t.addWidgetPrefix(SA)));
                },
                elementAttr: {
                  "aria-haspopup": "dialog"
                }
              },
              showText: "inMenu",
              location: "after",
              name: "columnChooserButton",
              locateInMenu: "auto",
              sortIndex: 40
            };
            e.push(r);
          }
          return e;
        },
        optionChanged: function(e) {
          switch (e.name) {
            case "columnChooser":
              this._invalidate(), e.handled = !0;
              break;
            default:
              this.callBase(e);
          }
        },
        isVisible: function() {
          var e = this.option("columnChooser.enabled");
          return this.callBase() || e;
        }
      }
    },
    controllers: {
      columns: {
        allowMoveColumn: function(e, t, i, n) {
          var r = this.option("columnChooser.mode"), a = r === "select" && n === "columnChooser";
          return a ? !1 : this.callBase(e, t, i, n);
        }
      }
    }
  }
};
Hv.controllers.columnChooser;
Hv.views.columnChooserView;
xe.registerModule("columnChooser", Hv);
function wA(e, t, i) {
  const n = Zn(t.group);
  let r = [];
  for (let a = i ? e.length - 1 : 0; a < e.length; a++) {
    const o = [];
    for (let s = 0; s <= a; s++) {
      const {
        selector: l
      } = n[s];
      if (a === s && (e[s] === null || e[s] === !1 || e[s] === !0))
        e[s] === !1 ? o.push([l, "=", n[s].desc ? !0 : null]) : (e[s] ? !n[s].desc : n[s].desc) ? o.push([l, "<>", e[s]]) : (o.push([l, "<>", null]), o.push([l, "=", null]));
      else {
        const u = [l, a === s ? n[s].desc ? ">" : "<" : "=", e[s]];
        u[1] === "<" ? o.push([u, "or", [l, "=", null]]) : o.push(u);
      }
    }
    r.push(xe.combineFilters(o));
  }
  return r = xe.combineFilters(r, "or"), xe.combineFilters([r, t.filter]);
}
const IA = ze.inherit(function() {
  const e = function(r, a) {
    const {
      hash: o
    } = r;
    return o && o[JSON.stringify(a)];
  }, t = function(r, a) {
    let o = 0, s = r.length - 1;
    if (!r.length)
      return 0;
    do {
      const u = s + o >> 1;
      r[u].offset > a ? s = u : o = u;
    } while (s - o > 1);
    let l;
    for (l = o; l <= s && !(r[l].offset > a); l++)
      ;
    return l;
  }, i = function(r, a, o) {
    for (let s = 0; s < r.length; s++)
      a + 1 >= o ? r[s].children = [] : i(r[s].children, a + 1, o);
  }, n = function(r, a, o) {
    let s = 0;
    if (a)
      if (!o)
        s = a.length;
      else
        for (let l = 0; l < a.length; l++)
          r.isGroupItemCountable(a[l]) && s++, s += n(r, a[l].items, o - 1);
    return s;
  };
  return {
    ctor(r) {
      this._dataSource = r, this.reset();
    },
    reset() {
      this._groupsInfo = [], this._totalCountCorrection = 0;
    },
    totalCountCorrection() {
      return this._totalCountCorrection;
    },
    updateTotalItemsCount(r) {
      this._totalCountCorrection = r || 0;
    },
    isGroupItemCountable(r) {
      return !this._isVirtualPaging() || !r.isContinuation;
    },
    _isVirtualPaging() {
      const r = this._dataSource.option("scrolling.mode");
      return r === "virtual" || r === "infinite";
    },
    itemsCount() {
      const a = this._dataSource._dataSource, o = xe.normalizeSortingInfo(a.group() || []).length;
      return n(this, a.items(), o);
    },
    foreachGroups(r, a, o, s, l) {
      const u = this;
      return function d(c, h, p, f) {
        const v = [];
        function m(b, A, R, k) {
          const H = A && b(A, R);
          return H && k.push(H), H;
        }
        for (let b = 0; b < c.length; b++) {
          if (f.push(c[b].data), !p && m(h, c[b].data, f, v) === !1)
            return !1;
          if (!c[b].data || c[b].data.isExpanded || o) {
            const {
              children: A
            } = c[b], R = A.length && d(A, h, p, f);
            if (R && v.push(R), R === !1)
              return !1;
          }
          if (p && m(h, c[b].data, f, v) === !1)
            return !1;
          (!c[b].data || c[b].data.offset !== c[b].offset) && (s = !0), f.pop();
        }
        const C = l && f.slice(0);
        return s && ge.apply(g, v).always(() => {
          u._updateGroupInfoOffsets(c, C);
        });
      }(u._groupsInfo, r, a, []);
    },
    _updateGroupInfoOffsets(r, a) {
      a = a || [];
      for (let o = 0; o < r.length; o++) {
        const s = r[o];
        if (s.data && s.data.offset !== s.offset) {
          s.offset = s.data.offset;
          for (let l = 0; l < a.length; l++)
            a[l].offset = s.offset;
        }
      }
      r.sort((o, s) => o.offset - s.offset);
    },
    findGroupInfo(r) {
      let a, o = this._groupsInfo;
      for (let s = 0; o && s < r.length; s++)
        a = e(o, r[s]), o = a && a.children;
      return a && a.data;
    },
    addGroupInfo(r) {
      const a = this;
      let o;
      const {
        path: s
      } = r;
      let l = a._groupsInfo;
      for (let u = 0; u < s.length; u++) {
        if (o = e(l, s[u]), !o) {
          o = {
            key: s[u],
            offset: r.offset,
            data: {
              offset: r.offset,
              isExpanded: !0,
              path: s.slice(0, u + 1)
            },
            children: []
          };
          const d = t(l, r.offset);
          l.splice(d, 0, o), l.hash = l.hash || {}, l.hash[JSON.stringify(o.key)] = o;
        }
        u === s.length - 1 && (o.data = r, o.offset !== r.offset && a._updateGroupInfoOffsets(l)), l = o.children;
      }
    },
    allowCollapseAll: () => !0,
    refresh(r) {
      const a = this, {
        storeLoadOptions: o
      } = r, s = Zn(o.group || []), l = "_group" in a ? Zn(a._group || []) : s;
      let u = Math.min(l.length, s.length);
      a._group = o.group;
      for (let d = 0; d < u; d++)
        if (l[d].selector !== s[d].selector) {
          u = d;
          break;
        }
      u ? i(a._groupsInfo, 0, u) : a.reset();
    },
    handleDataLoading() {
    },
    handleDataLoaded(r, a) {
      a(r);
    },
    handleDataLoadedCore(r, a) {
      a(r);
    }
  };
}());
function oa(e, t) {
  const i = Zn(t.group), n = [];
  for (let r = 0; r < e.length; r++)
    n.push([i[r].selector, "=", e[r]]);
  return t.filter && n.push(t.filter), ae.combineFilters(n);
}
function zp(e, t, i, n) {
  if (n = n || 0, t > 1 && i > 0) {
    let r = e - Math.floor(e / t) * t || t;
    return r += i - n - 2, r < 0 && (r += t), Math.floor(r / (t - n - 1));
  }
  return 0;
}
const V0 = IA.inherit(function() {
  const e = function(c, h, p) {
    return c.foreachGroups((f, v) => {
      if (f.isExpanded)
        return h(f, v);
    }, !0, !1, p, p);
  }, t = function(c, h, p, f, v, m, C) {
    let b;
    if (f.items = f.items || [], f.paths = f.paths || [], f.count = f.count || 0, f.lastCount = f.lastCount || 0, !!p)
      for (let A = 0; A < h.length; A++) {
        const R = h[A];
        if (R.items !== void 0) {
          if (v.push(R.key), m)
            b = !0;
          else {
            const k = c.findGroupInfo(v);
            b = k && k.isExpanded;
          }
          b ? R.items ? t(c, R.items, p - 1, f, v, m, C) : p === 1 && R.count && (!m || C) && (f.items.push(R), f.paths.push(v.slice(0)), f.count += f.lastCount, f.lastCount = R.count) : (R.collapsedItems = R.items, R.items = null), v.pop();
        }
      }
  }, i = function(c, h, p, f, v) {
    const m = c.findGroupInfo(f);
    let C;
    m ? (p ? m.count = h.count > 0 ? h.count : h.items && h.items.length || 0 : h.count = m.count || h.count, m.offset = v) : (p && (C = h.count > 0 ? h.count : h.items.length), c.addGroupInfo({
      isExpanded: c._isGroupExpanded(f.length - 1),
      path: f.slice(0),
      offset: v,
      count: C || 0
    }));
  }, n = function(c, h, p, f, v, m, C) {
    const A = (h.group ? h.group.length : 0) === f, R = h.remoteOperations.paging;
    let k = 0, H = 0, K;
    if (v = v || 0, m = m || [], R && !C && (k = v === 0 ? h.skip || 0 : h.skips[v - 1] || 0), v >= f)
      return p.length;
    for (let j = 0; j < p.length; j++) {
      const z = p[j];
      if (z) {
        if (m.push(z.key), !z.count && !z.items || z.items === void 0 || (i(c, z, A, m, k + j), K = z.items ? n(c, h, z.items, f, v + 1, m, j) : z.count || -1, K < 0))
          return -1;
        H += K, m.pop();
      }
    }
    return H;
  }, r = function(c, h) {
    return c && c.length && c[h] && !!c[h].isExpanded;
  }, a = function(c, h, p) {
    let f, v = p;
    for (let m = 0; m < c.length; m++)
      f = c[m].offset + 1, m > 0 && (f += c[m - 1].childrenTotalCount, h && (f += zp(v, h, f, m - 1) * m)), v += f;
    return v;
  };
  function o(c, h, p, f) {
    const v = h.items[f], m = c.skips && c.skips[p], C = c.takes && c.takes[p], b = f === h.items.length - 1, A = f === 0, R = A && m || 0, k = v.count > C + R;
    A && m !== void 0 && (v.isContinuation = !0), b && C !== void 0 && k && (v.isContinuationOnNextPage = !0);
  }
  function s(c) {
    return !Array.isArray(c);
  }
  function l(c) {
    s(c.data) || (c.data = new U());
  }
  function u(c, h, p, f, v, m) {
    h.isCustomLoading || (f = {}, t(c, m, p, f, []), function(b, A, R) {
      const k = R - 1, H = b.group ? b.group.length : 0;
      A.skip = b.skips && b.skips[k], b.takes && b.takes[k] !== void 0 && (H === R ? A.take = A.count ? A.count - (A.skip || 0) : 0 : A.take = 0, A.take += b.takes[k]);
    }(h, f, p));
    const C = h.group ? h.group.length : 0;
    f.paths.length && C - p > 0 ? (l(h), function(b, A, R, k, H, K) {
      const j = A.group || [], z = j[H + 1], re = [];
      B(R.paths, (he) => {
        const P = {
          requireTotalCount: !1,
          requireGroupCount: !0,
          group: [z],
          groupSummary: A.storeLoadOptions.groupSummary,
          filter: oa(R.paths[he], {
            filter: A.storeLoadOptions.filter,
            group: j
          }),
          select: A.storeLoadOptions.select
        };
        he === 0 && (P.skip = R.skip || 0), he === R.paths.length - 1 && (P.take = R.take);
        const V = P.take === 0 ? [] : b._dataSource.loadFromStore(P);
        ge(V).done((E) => {
          const J = R.items[he];
          o(A, R, H, he), J.items = E;
        }), re.push(V);
      }), ge.apply(null, re).done(() => {
        n(b, A, K, k + 1), u(b, A, k + 1, R, H + 1, K);
      });
    }(c, h, f, p, v, m)) : f.paths.length && h.storeLoadOptions.group ? (l(h), function(b, A, R, k) {
      const H = [], K = A.group || [];
      B(R.paths, (he, P) => {
        H.push(oa(P, {
          group: A.isCustomLoading ? A.storeLoadOptions.group : K
        }));
      });
      let {
        filter: j
      } = A.storeLoadOptions;
      A.storeLoadOptions.isLoadingAll || (j = xe.combineFilters([j, xe.combineFilters(H, "or")]));
      const z = T({}, A.storeLoadOptions, {
        requireTotalCount: !1,
        requireGroupCount: !1,
        group: null,
        sort: K.concat(xe.normalizeSortingInfo(A.storeLoadOptions.sort || [])),
        filter: j
      }), re = b._dataSource.isLastLevelGroupItemsPagingLocal();
      re || (z.skip = R.skip, z.take = R.take), ge(R.take === 0 ? [] : b._dataSource.loadFromStore(z)).done((he) => {
        re && (he = b._dataSource.sortLastLevelGroupItems(he, K, R.paths), he = R.skip ? he.slice(R.skip) : he, he = R.take ? he.slice(0, R.take) : he), B(R.items, (P, V) => {
          const E = V.count - (P === 0 && R.skip || 0), J = he.splice(0, E);
          o(A, R, K.length - 1, P), V.items = J;
        }), A.data.resolve(k);
      }).fail(A.data.reject);
    }(c, h, f, m)) : s(h.data) && h.data.resolve(m);
  }
  const d = function(c, h) {
    const p = new U(), f = !!(h.group && h.group.length), v = T({
      skip: 0,
      take: 1,
      requireGroupCount: f,
      requireTotalCount: !f
    }, h, {
      group: f ? h.group : null
    });
    return c.load(v).done((m, C) => {
      const b = C && (f ? C.groupCount : C.totalCount);
      if (!isFinite(b)) {
        p.reject(At.Error(f ? "E4022" : "E4021"));
        return;
      }
      p.resolve(b);
    }).fail(p.reject.bind(p)), p;
  };
  return {
    updateTotalItemsCount(c) {
      let h = 0;
      const p = c.extra && c.extra.totalCount || 0, f = c.extra && c.extra.groupCount || 0, v = this._dataSource.pageSize(), m = this._isVirtualPaging();
      e(this, (C) => {
        C.childrenTotalCount = 0;
      }), e(this, (C, b) => {
        const A = a(b, m ? 0 : v, h);
        let R = C.count + C.childrenTotalCount;
        m || (R += zp(A, v, R, b.length - 1)), b[b.length - 2] ? b[b.length - 2].childrenTotalCount += R : h += R;
      }), this.callBase(h - p + f);
    },
    _isGroupExpanded(c) {
      const h = this._dataSource.group();
      return r(h, c);
    },
    _updatePagingOptions(c, h) {
      const p = this, f = p._isVirtualPaging(), v = p._dataSource.pageSize(), m = [], C = [];
      let b = 0, A = 0;
      c.take && (e(this, (R) => {
        R.childrenTotalCount = 0, R.skipChildrenTotalCount = 0;
      }), e(p, (R, k) => {
        let H, K = 0, j = 0;
        const z = a(k, f ? 0 : v, A);
        let re = 0, he = 0, P = R.count + R.childrenTotalCount, V = P;
        h && h(R, z);
        const E = c.skip - z;
        z <= c.skip + c.take && P && (H = c.take, f || (re = zp(z, v, P, k.length - 1), P += re * k.length, V += re, v && E >= 0 && (K = k.length, j = k.length - 1, he = Math.floor(E / v))), E >= 0 ? (z + P > c.skip && m.unshift(E - he * K - R.skipChildrenTotalCount), z + P >= c.skip + H && C.unshift(H - K - R.childrenTotalCount + R.skipChildrenTotalCount)) : z + P >= c.skip + H && C.unshift(H + E - R.childrenTotalCount)), z <= c.skip && (k[k.length - 2] ? k[k.length - 2].skipChildrenTotalCount += Math.min(V, E + 1 - he * j) : b += Math.min(V, E + 1)), z <= c.skip + H && (P = Math.min(V, E + H - (he + 1) * j), k[k.length - 2] ? k[k.length - 2].childrenTotalCount += P : A += P);
      }), c.skip -= b, c.take -= A - b), c.skips = m, c.takes = C;
    },
    changeRowExpand(c) {
      const h = this.findGroupInfo(c), p = this._dataSource, f = p.remoteOperations().groupPaging, v = xe.normalizeSortingInfo(p.group());
      return h ? (h.isExpanded = !h.isExpanded, f && h.isExpanded && c.length < v.length ? d(p, {
        filter: oa(c, {
          filter: p.lastLoadOptions().filter,
          group: p.group()
        }),
        group: [v[c.length]],
        select: p.select()
      }).done((m) => {
        h.count = m;
      }) : new U().resolve()) : new U().reject();
    },
    handleDataLoading(c) {
      const h = this, {
        storeLoadOptions: p
      } = c, f = xe.normalizeSortingInfo(p.group || c.loadOptions.group);
      if (!(c.isCustomLoading || !f.length)) {
        if (c.remoteOperations.grouping) {
          const v = h._dataSource.remoteOperations().paging;
          p.group = xe.normalizeSortingInfo(p.group), p.group.forEach((m, C) => {
            const b = C === p.group.length - 1;
            m.isExpanded = !v || !b;
          });
        }
        c.group = c.group || f, c.remoteOperations.paging ? (c.skip = p.skip, c.take = p.take, p.requireGroupCount = !0, p.group = f.slice(0, 1), h._updatePagingOptions(c), p.skip = c.skip, p.take = c.take) : (c.skip = c.loadOptions.skip, c.take = c.loadOptions.take, h._updatePagingOptions(c));
      }
    },
    handleDataLoadedCore(c, h) {
      const p = this, f = xe.normalizeSortingInfo(c.storeLoadOptions.group || c.loadOptions.group).length, v = c.group ? c.group.length : 0;
      let m;
      const C = {};
      if (c.isCustomLoading)
        h(c), t(p, c.data, f, C, [], c.isCustomLoading, c.storeLoadOptions.isLoadingAll);
      else {
        if (c.remoteOperations.paging || p.foreachGroups((b) => {
          b.count = 0;
        }), m = n(p, c, c.data, f), m < 0) {
          c.data = new U().reject($e.Error("E1037"));
          return;
        }
        if (c.remoteOperations.paging || f && c.extra && c.loadOptions.requireTotalCount && (c.extra.totalCount = m, c.extra.groupCount = c.data.length), v && c.storeLoadOptions.requireGroupCount && !isFinite(c.extra.groupCount)) {
          c.data = new U().reject(At.Error("E4022"));
          return;
        }
        p.updateTotalItemsCount(c), c.remoteOperations.paging || p._updatePagingOptions(c), h(c), c.remoteOperations.paging || p._processPaging(c, f);
      }
      u(p, c, f, C, 0, c.data);
    },
    _processSkips(c, h, p) {
      if (!p)
        return;
      const f = c[0], v = h[0], m = f && f.items;
      v !== void 0 && (f.isContinuation = !0, m && (f.items = m.slice(v), this._processSkips(f.items, h.slice(1), p - 1)));
    },
    _processTakes(c, h, p, f, v) {
      if (!f || !c)
        return;
      v = v || [];
      const m = c[c.length - 1];
      let C = m && m.items;
      const b = p[0], A = h[0];
      if (m) {
        const R = m.count - (m.isContinuation && A || 0) || C.length;
        b !== void 0 && R > b && (m.isContinuationOnNextPage = !0, v.forEach((k) => {
          k.isContinuationOnNextPage = !0;
        }), C && (C = C.slice(0, b), m.items = C)), v.push(m), this._processTakes(C, h.slice(1), p.slice(1), f - 1, v);
      }
    },
    _processPaging(c, h) {
      this._processSkips(c.data, c.skips, h), this._processTakes(c.data, c.skips, c.takes, h);
    },
    isLastLevelGroupItemsPagingLocal: () => !1,
    sortLastLevelGroupItems: (c) => c,
    refresh(c, h) {
      const p = this, f = p._dataSource, {
        storeLoadOptions: v
      } = c, m = c.group || c.storeLoadOptions.group, C = xe.normalizeSortingInfo(p._group);
      let b, A;
      function R(k, H) {
        H.length === A + 1 && (k.isExpanded = b);
      }
      for (A = 0; A < C.length; A++)
        b = r(m, A), r(p._group, A) !== b && p.foreachGroups(R);
      if (p.callBase.apply(this, arguments), m && c.remoteOperations.paging && h.reload)
        return e(p, (k) => {
          const H = d(f, {
            filter: oa(k.path, {
              filter: v.filter,
              group: m
            }),
            group: m.slice(k.path.length),
            select: v.select
          }), K = d(f, {
            filter: wA(k.path, {
              filter: v.filter,
              group: m
            }, !0),
            group: m.slice(k.path.length - 1, k.path.length),
            select: v.select
          });
          return ge(K, H).done((j, z) => {
            j = parseInt(j.length ? j[0] : j), z = parseInt(z.length ? z[0] : z), k.offset = j, k.count !== z && (k.count = z, p.updateTotalItemsCount(c));
          });
        }, !0);
    }
  };
}()), Wp = function(e, t) {
  const i = new U(), n = T({
    skip: 0,
    take: 1,
    requireTotalCount: !0
  }, t);
  return e.load(n).done((r, a) => {
    i.resolve(a && a.totalCount);
  }).fail(i.reject.bind(i)), i;
}, N0 = IA.inherit(function() {
  const e = function(o, s, l) {
    return o.foreachGroups((u) => {
      if (!u.isExpanded)
        return s(u);
    }, !1, !1, l, !0);
  }, t = function(o, s) {
    let l = 0, u = s || 0;
    return s && (e(o, (d) => {
      if (d.offset - l >= s)
        return !1;
      l += d.count - 1;
    }), u += l), u;
  }, i = function(o, s, l, u, d, c) {
    let h = 0, p = !1;
    for (let f = 0; f < s.length; f++) {
      const v = s[f];
      if (v.items !== void 0) {
        l.push(v.key);
        const m = o.findGroupInfo(l);
        if (m && !m.isExpanded)
          v.collapsedItems = v.items, v.items = null, u += m.count, c--, c < 0 && h++, d && (p = !0);
        else if (v.items) {
          const C = i(o, v.items, l, u, d, c);
          d && (C.offset - u > 1 ? v.isContinuation = !0 : p = !0), u = C.offset, c = C.take, c < 0 && (v.items.length ? v.isContinuationOnNextPage = !0 : h++);
        }
        l.pop();
      } else
        d && (p = !0), u++, c--, c < 0 && h++;
      d = !1;
    }
    return p && s.splice(0, 1), h && s.splice(-h, h), {
      offset: u,
      take: c
    };
  }, n = function(o, s) {
    if (o.length !== s.length)
      return !1;
    for (let l = 0; l < o.length; l++)
      if (!bl(null, o[l], s[l]))
        return !1;
    return !0;
  }, r = function(o, s, l, u, d) {
    if (s) {
      for (let c = 0; c < s.length; c++) {
        const h = s[c];
        if ("key" in h && h.items !== void 0) {
          l.push(h.key), d && n(d.path, l) && !h.isContinuation && (d.offset = u);
          const p = o.findGroupInfo(l);
          p && !h.isContinuation && (p.offset = u), p && !p.isExpanded ? u += p.count : u = r(o, h.items, l, u, d), l.pop();
        } else
          u++;
      }
      return u;
    }
  }, a = function(o, s) {
    let l = o.count || o.items.length;
    if (!o.count && s > 1) {
      l = 0;
      for (let u = 0; u < o.items.length; u++)
        l += a(o.items[u], s - 1);
    }
    return l;
  };
  return {
    handleDataLoading(o) {
      const {
        storeLoadOptions: s
      } = o, l = [];
      let u = 0, d = !1, c;
      const {
        group: h
      } = o.loadOptions;
      let p = 0;
      if (function(v, m) {
        if (m.group) {
          const C = xe.normalizeSortingInfo(m.group), b = xe.normalizeSortingInfo(v.sort);
          v.sort = Qn.arrangeSortingInfo(C, b), delete m.group;
        }
      }(s, o.loadOptions), o.group = o.group || h, o.isCustomLoading)
        return;
      const f = T({}, s);
      f.skip = t(this, s.skip), f.skip && f.take && h && (f.skip--, f.take++, d = !0), f.take && h && (c = f.take, f.take++), e(this, (v) => {
        if (v.offset >= f.skip + f.take + p)
          return !1;
        v.offset >= f.skip + p && v.count && (p += v.count - 1, l.push(v), u += v.count);
      }), B(l, function() {
        f.filter = function(v, m, C) {
          const b = xe.normalizeSortingInfo(C || m.group);
          let A = [];
          for (let R = 0; R < v.length; R++) {
            const k = [];
            for (let H = 0; H <= R; H++)
              k.push([b[H].selector, R === H ? "<>" : "=", v[H]]);
            A.push(xe.combineFilters(k));
          }
          return A = xe.combineFilters(A, "or"), xe.combineFilters([A, m.filter]);
        }(this.path, f, h);
      }), o.storeLoadOptions = f, o.collapsedGroups = l, o.collapsedItemsCount = u, o.skip = f.skip || 0, o.skipFirstItem = d, o.take = c;
    },
    handleDataLoaded(o, s) {
      const l = this, {
        collapsedGroups: u
      } = o, d = xe.normalizeSortingInfo(o.group), c = d.length;
      function h(p, f, v, m, C) {
        if (!p || !f.length || !v.length)
          return;
        let b, A;
        const R = bt(f[0], !0);
        for (A = 0; A < p.length && (b = bt(p[A].key, !0), !(C >= m.offset || R === b)); A++)
          C += a(p[A], v.length);
        (!p.length || R !== b) && p.splice(A, 0, {
          key: f[0],
          items: [],
          count: f.length === 1 ? m.count : void 0
        }), h(p[A].items, f.slice(1), v.slice(1), m, C);
      }
      if (o.collapsedItemsCount && o.extra && o.extra.totalCount >= 0 && (o.extra._totalCountWasIncreasedByCollapsedItems || (o.extra.totalCount += o.collapsedItemsCount, o.extra._totalCountWasIncreasedByCollapsedItems = !0)), s(o), c) {
        let {
          data: p
        } = o;
        const f = ui(p);
        if (Qn.multiLevelGroup(f, d).enumerate().done((v) => {
          p = v;
        }), u)
          for (let v = 0; v < u.length; v++)
            h(p, u[v].path, d, u[v], o.skip);
        o.isCustomLoading || i(l, p, [], o.skip, o.skipFirstItem, o.take), o.data = p;
      }
    },
    isGroupItemCountable: (o) => o.items === null,
    updateTotalItemsCount() {
      let o = 0;
      e(this, (s) => {
        s.count && (o -= s.count - 1);
      }), this.callBase(o);
    },
    changeRowExpand(o) {
      const s = this, l = s._dataSource, u = l.beginPageIndex ? l.beginPageIndex() : l.pageIndex(), d = l.items(), c = t(s, u * l.pageSize());
      let h = s.findGroupInfo(o), p;
      return h && !h.isExpanded ? p = new U().resolve(h.count) : p = Wp(l, {
        filter: oa(o, {
          filter: l.filter(),
          group: l.group()
        })
      }), ge(p).done((f) => {
        f = parseInt(f.length ? f[0] : f), h ? (r(s, d, [], c), h.isExpanded = !h.isExpanded, h.count = f) : (h = {
          offset: -1,
          count: f,
          path: o,
          isExpanded: !1
        }, r(s, d, [], c, h), h.offset >= 0 && s.addGroupInfo(h)), s.updateTotalItemsCount();
      }).fail(function() {
        l._eventsStrategy.fireEvent("loadError", arguments);
      });
    },
    allowCollapseAll: () => !1,
    refresh(o, s) {
      const l = this, {
        storeLoadOptions: u
      } = o, d = l._dataSource;
      if (this.callBase.apply(this, arguments), s.reload)
        return e(l, (c) => {
          const h = Wp(d, {
            filter: oa(c.path, u)
          }), p = Wp(d, {
            filter: wA(c.path, u)
          });
          return ge(p, h).done((f, v) => {
            f = parseInt(f.length ? f[0] : f), v = parseInt(v.length ? v[0] : v), c.offset = f, c.count !== v && (c.count = v, l.updateTotalItemsCount());
          });
        }, !0);
    }
  };
}()), G3 = {
  init() {
    this.callBase.apply(this, arguments), this._initGroupingHelper();
  },
  _initGroupingHelper(e) {
    const t = this._grouping, i = this.option("grouping.autoExpandAll"), n = this.option("focusedRowEnabled"), r = e ? e.remoteOperations : this.remoteOperations();
    r.filtering && r.sorting && r.paging && !r.grouping && (i || !n) ? (!t || t instanceof V0) && (this._grouping = new N0(this)) : (!t || t instanceof N0) && (this._grouping = new V0(this));
  },
  totalItemsCount() {
    const e = this.callBase();
    return e > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? e + this._grouping.totalCountCorrection() : e;
  },
  itemsCount() {
    return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments);
  },
  allowCollapseAll() {
    return this._grouping.allowCollapseAll();
  },
  isGroupItemCountable(e) {
    return this._grouping.isGroupItemCountable(e);
  },
  isRowExpanded(e) {
    const t = this._grouping.findGroupInfo(e);
    return t ? t.isExpanded : !this._grouping.allowCollapseAll();
  },
  collapseAll(e) {
    return this._collapseExpandAll(e, !1);
  },
  expandAll(e) {
    return this._collapseExpandAll(e, !0);
  },
  _collapseExpandAll(e, t) {
    const i = this, n = i._dataSource, r = n.group(), a = xe.normalizeSortingInfo(r || []);
    if (a.length) {
      for (let o = 0; o < a.length; o++)
        e === void 0 || e === o ? a[o].isExpanded = t : r && r[o] && (a[o].isExpanded = r[o].isExpanded);
      n.group(a), i._grouping.foreachGroups((o, s) => {
        (e === void 0 || e === s.length - 1) && (o.isExpanded = t);
      }, !1, !0), i.resetPagesCache();
    }
    return !0;
  },
  refresh() {
    return this.callBase.apply(this, arguments), this._grouping.refresh.apply(this._grouping, arguments);
  },
  changeRowExpand(e) {
    const t = this, i = t._dataSource;
    if (i.group())
      return i.beginLoading(), t._lastLoadOptions && (t._lastLoadOptions.groupExpand = !0), t._changeRowExpandCore(e).always(() => {
        i.endLoading();
      });
  },
  _changeRowExpandCore(e) {
    return this._grouping.changeRowExpand(e);
  },
  getGroupsInfo() {
    return this._grouping._groupsInfo;
  },
  _hasGroupLevelsExpandState(e, t) {
    if (e && Array.isArray(e)) {
      for (let i = 0; i < e.length; i++)
        if (e[i].isExpanded === t)
          return !0;
    }
  },
  _customizeRemoteOperations(e, t) {
    const {
      remoteOperations: i
    } = e;
    e.storeLoadOptions.group ? (i.grouping && !e.isCustomLoading && (!i.groupPaging || this._hasGroupLevelsExpandState(e.storeLoadOptions.group, !0)) && (i.paging = !1), !i.grouping && (!i.sorting || !i.filtering || e.isCustomLoading || this._hasGroupLevelsExpandState(e.storeLoadOptions.group, !1)) && (i.paging = !1)) : !e.isCustomLoading && i.paging && t.grouping && this.resetCache(), this.callBase.apply(this, arguments);
  },
  _handleDataLoading(e) {
    return this.callBase(e), this._initGroupingHelper(e), this._grouping.handleDataLoading(e);
  },
  _handleDataLoaded(e) {
    return this._grouping.handleDataLoaded(e, this.callBase.bind(this));
  },
  _handleDataLoadedCore(e) {
    return this._grouping.handleDataLoadedCore(e, this.callBase.bind(this));
  }
};
Bl.extend(G3);
const K3 = {
  init() {
    this.callBase(), this.createAction("onRowExpanding"), this.createAction("onRowExpanded"), this.createAction("onRowCollapsing"), this.createAction("onRowCollapsed");
  },
  _beforeProcessItems(e) {
    const t = this._columnsController.getGroupColumns();
    return e = this.callBase(e), e.length && t.length && (e = this._processGroupItems(e, t.length)), e;
  },
  _processItem(e, t) {
    return x(e.groupIndex) && Te(e.rowType) && e.rowType.indexOf("group") === 0 ? (e = this._processGroupItem(e, t), t.dataIndex = 0) : e = this.callBase.apply(this, arguments), e;
  },
  _processGroupItem: (e) => e,
  _processGroupItems(e, t, i) {
    const n = this, r = n._columnsController.getGroupColumns(), a = r[r.length - t];
    if (!i) {
      const s = n.option("scrolling.mode");
      i = {
        collectContinuationItems: s !== "virtual" && s !== "infinite",
        resultItems: [],
        path: [],
        values: []
      };
    }
    const {
      resultItems: o
    } = i;
    if (i.data && (i.collectContinuationItems || !i.data.isContinuation) && o.push({
      rowType: "group",
      data: i.data,
      groupIndex: i.path.length - 1,
      isExpanded: !!i.data.items,
      key: i.path.slice(0),
      values: i.values.slice(0)
    }), e)
      if (t === 0)
        o.push.apply(o, e);
      else
        for (let s = 0; s < e.length; s++) {
          const l = e[s];
          l && "items" in l ? (i.data = l, i.path.push(l.key), i.values.push(a && a.deserializeValue && !a.calculateDisplayValue ? a.deserializeValue(l.key) : l.key), n._processGroupItems(l.items, t - 1, i), i.data = void 0, i.path.pop(), i.values.pop()) : o.push(l);
        }
    return o;
  },
  publicMethods() {
    return this.callBase().concat(["collapseAll", "expandAll", "isRowExpanded", "expandRow", "collapseRow"]);
  },
  collapseAll(e) {
    const t = this._dataSource;
    t && t.collapseAll(e) && (t.pageIndex(0), t.reload());
  },
  expandAll(e) {
    const t = this._dataSource;
    t && t.expandAll(e) && (t.pageIndex(0), t.reload());
  },
  changeRowExpand(e) {
    const t = this, i = t.isRowExpanded(e), n = {
      key: e,
      expanded: i
    };
    return t.executeAction(i ? "onRowCollapsing" : "onRowExpanding", n), n.cancel ? new U().resolve() : ge(t._changeRowExpandCore(e)).done(() => {
      n.expanded = !i, t.executeAction(i ? "onRowCollapsed" : "onRowExpanded", n);
    });
  },
  _changeRowExpandCore(e) {
    const t = this, i = this._dataSource, n = new U();
    return i ? ge(i.changeRowExpand(e)).done(() => {
      t.load().done(n.resolve).fail(n.reject);
    }).fail(n.reject) : n.resolve(), n;
  },
  isRowExpanded(e) {
    const t = this._dataSource;
    return t && t.isRowExpanded(e);
  },
  expandRow(e) {
    return this.isRowExpanded(e) ? new U().resolve() : this.changeRowExpand(e);
  },
  collapseRow(e) {
    return this.isRowExpanded(e) ? this.changeRowExpand(e) : new U().resolve();
  },
  optionChanged(e) {
    e.name === "grouping" && (e.name = "dataSource"), this.callBase(e);
  }
}, zv = function(e, t) {
  const i = this._columnsController;
  switch (t.itemData.value) {
    case "group": {
      const n = i._dataSource.group() || [];
      i.columnOption(e.dataField, "groupIndex", n.length);
      break;
    }
    case "ungroup":
      i.columnOption(e.dataField, "groupIndex", -1);
      break;
    case "ungroupAll":
      this.component.clearGrouping();
  }
}, U3 = {
  _getToolbarItems() {
    const e = this.callBase();
    return this._appendGroupingItem(e);
  },
  _appendGroupingItem(e) {
    if (this._isGroupPanelVisible()) {
      let t = !1;
      const i = {
        template: () => {
          const n = g("<div>").addClass("dx-datagrid-group-panel");
          return this._updateGroupPanelContent(n), $s("groupPanel", this, n, void 0, this._handleActionKeyDown.bind(this)), n;
        },
        name: "groupPanel",
        onItemRendered: () => {
          t && this.renderCompleted.fire(), t = !0;
        },
        location: "before",
        locateInMenu: "never",
        sortIndex: 1
      };
      e.push(i), this.updateToolbarDimensions();
    }
    return e;
  },
  _handleActionKeyDown(e) {
    const {
      event: t
    } = e, i = g(t.target), n = i.closest(".dx-group-panel-item").index(), r = this._columnsController.getGroupColumns()[n], a = r && r.index;
    i.is(".dx-header-filter") ? this.getController("headerFilter").showHeaderFilterMenu(a, !0) : this._processGroupItemAction(a), t.preventDefault();
  },
  _isGroupPanelVisible() {
    const e = this.option("groupPanel");
    let t;
    return e && (t = e.visible, t === "auto" && (t = ve.current().deviceType === "desktop")), t;
  },
  _renderGroupPanelItems(e, t) {
    const i = this;
    e.empty(), B(t, (n, r) => {
      i._createGroupPanelItem(e, r);
    }), sv(this);
  },
  _createGroupPanelItem(e, t) {
    const i = g("<div>").addClass(t.cssClass).addClass("dx-group-panel-item").data("columnData", t).appendTo(e).text(t.caption);
    return r$(this, i), i;
  },
  _columnOptionChanged(e) {
    if (!this._requireReady && !xe.checkChanges(e.optionNames, ["width", "visibleWidth"])) {
      const t = this.element(), i = t && t.find(".dx-datagrid-group-panel");
      i && i.length && (this._updateGroupPanelContent(i), this.updateToolbarDimensions(), this.renderCompleted.fire());
    }
    this.callBase();
  },
  _updateGroupPanelContent(e) {
    const t = this.getController("columns").getGroupColumns(), i = this.option("groupPanel");
    this._renderGroupPanelItems(e, t), i.allowColumnDragging && !t.length && (g("<div>").addClass("dx-group-panel-message").text(i.emptyPanelText).appendTo(e), e.closest(".dx-toolbar-item").addClass("dx-toolbar-label"), e.closest(".dx-toolbar-label").css("maxWidth", "none"));
  },
  allowDragging(e) {
    const t = this.option("groupPanel");
    return this._isGroupPanelVisible() && t.allowColumnDragging && e && e.allowGrouping;
  },
  getColumnElements() {
    const e = this.element();
    return e && e.find(".dx-group-panel-item");
  },
  getColumns() {
    return this.getController("columns").getGroupColumns();
  },
  getBoundingRect() {
    const e = this.element();
    if (e && e.find(".dx-datagrid-group-panel").length) {
      const t = e.offset();
      return {
        top: t.top,
        bottom: t.top + Fe(e)
      };
    }
    return null;
  },
  getName: () => "group",
  getContextMenuItems(e) {
    const t = this, i = t.option("grouping.contextMenuEnabled"), n = g(e.targetElement).closest(".dx-group-panel-item");
    let r;
    if (n.length && (e.column = n.data("columnData")), i && e.column) {
      const {
        column: a
      } = e;
      if (x(a.allowGrouping) ? a.allowGrouping : !0) {
        const s = x(a.groupIndex) && a.groupIndex > -1, l = t.option("grouping.texts"), u = zv.bind(t, a);
        r = [{
          text: l.ungroup,
          value: "ungroup",
          disabled: !s,
          onItemClick: u
        }, {
          text: l.ungroupAll,
          value: "ungroupAll",
          onItemClick: u
        }];
      }
    }
    return r;
  },
  isVisible() {
    return this.callBase() || this._isGroupPanelVisible();
  },
  optionChanged(e) {
    e.name === "groupPanel" ? (this._invalidate(), e.handled = !0) : this.callBase(e);
  }
}, j3 = {
  getContextMenuItems(e) {
    const t = this, i = t.option("grouping.contextMenuEnabled");
    let n;
    if (i && e.row && e.row.rowType === "group") {
      const a = t._columnsController.columnOption("groupIndex:" + e.row.groupIndex);
      if (a && a.allowGrouping) {
        const o = t.option("grouping.texts"), s = zv.bind(t, a);
        n = [], n.push({
          text: o.ungroup,
          value: "ungroup",
          onItemClick: s
        }, {
          text: o.ungroupAll,
          value: "ungroupAll",
          onItemClick: s
        });
      }
    }
    return n;
  },
  _rowClick(e) {
    const t = this, i = t.option("grouping.expandMode"), r = t.option("scrolling.mode") !== "infinite" && i === "rowClick" && g(e.event.target).closest(".dx-group-row").length, a = g(e.event.target).closest(".dx-datagrid-expand").length;
    (r || a) && t._changeGroupRowState(e), t.callBase(e);
  },
  _changeGroupRowState(e) {
    const t = this.getController("data"), i = t.items()[e.rowIndex], n = this._columnsController.columnOption("groupIndex:" + i.groupIndex, "allowCollapsing");
    (i.rowType === "data" || i.rowType === "group" && n !== !1) && (t.changeRowExpand(i.key, !0), e.event.preventDefault(), e.handled = !0);
  }
}, q3 = {
  getContextMenuItems(e) {
    const t = this, i = t.option("grouping.contextMenuEnabled");
    let n = t.callBase(e);
    if (i && e.row && (e.row.rowType === "header" || e.row.rowType === "detailAdaptive")) {
      const {
        column: r
      } = e;
      if (!r.command && (!x(r.allowGrouping) || r.allowGrouping)) {
        const a = t.option("grouping.texts"), o = x(r.groupIndex) && r.groupIndex > -1, s = zv.bind(t, r);
        n = n || [], n.push({
          text: a.groupByThisColumn,
          value: "group",
          beginGroup: !0,
          disabled: o,
          onItemClick: s
        }), r.showWhenGrouped && n.push({
          text: a.ungroup,
          value: "ungroup",
          disabled: !o,
          onItemClick: s
        }), n.push({
          text: a.ungroupAll,
          value: "ungroupAll",
          onItemClick: s
        });
      }
    }
    return n;
  }
};
xe.registerModule("grouping", {
  defaultOptions: () => ({
    grouping: {
      autoExpandAll: !0,
      allowCollapsing: !0,
      contextMenuEnabled: !1,
      expandMode: "buttonClick",
      texts: {
        groupContinuesMessage: q.format("dxDataGrid-groupContinuesMessage"),
        groupContinuedMessage: q.format("dxDataGrid-groupContinuedMessage"),
        groupByThisColumn: q.format("dxDataGrid-groupHeaderText"),
        ungroup: q.format("dxDataGrid-ungroupHeaderText"),
        ungroupAll: q.format("dxDataGrid-ungroupAllText")
      }
    },
    groupPanel: {
      visible: !1,
      emptyPanelText: q.format("dxDataGrid-groupPanelEmptyText"),
      allowColumnDragging: !0
    }
  }),
  extenders: {
    controllers: {
      data: K3,
      columns: {
        _getExpandColumnOptions() {
          const e = this.callBase.apply(this, arguments);
          return e.cellTemplate = xe.getExpandCellTemplate(), e;
        }
      },
      editing: {
        _isProcessedItem: (e) => x(e.groupIndex) && Te(e.rowType) && e.rowType.indexOf("group") === 0
      }
    },
    views: {
      headerPanel: U3,
      rowsView: j3,
      columnHeadersView: q3
    }
  }
});
const X3 = {
  defaultOptions: () => ({
    masterDetail: {
      enabled: !1,
      autoExpandAll: !1,
      template: null
    }
  }),
  extenders: {
    controllers: {
      columns: {
        _getExpandColumnsCore() {
          const e = this.callBase();
          return this.option("masterDetail.enabled") && e.push({
            type: "detailExpand",
            cellTemplate: ae.getExpandCellTemplate()
          }), e;
        }
      },
      data: function() {
        const e = function(t) {
          t._expandedItems = [], t._isExpandAll = t.option("masterDetail.autoExpandAll");
        };
        return {
          init() {
            e(this), this.callBase();
          },
          expandAll(t) {
            const i = this;
            t < 0 ? (i._isExpandAll = !0, i._expandedItems = [], i.updateItems()) : i.callBase.apply(i, arguments);
          },
          collapseAll(t) {
            const i = this;
            t < 0 ? (i._isExpandAll = !1, i._expandedItems = [], i.updateItems()) : i.callBase.apply(i, arguments);
          },
          isRowExpanded(t) {
            const i = this, n = ae.getIndexByKey(t, i._expandedItems);
            return Array.isArray(t) ? i.callBase.apply(i, arguments) : !!(i._isExpandAll ^ (n >= 0 && i._expandedItems[n].visible));
          },
          _getRowIndicesForExpand(t) {
            const i = this.getRowIndexByKey(t);
            return [i, i + 1];
          },
          _changeRowExpandCore(t) {
            const i = this;
            let n;
            if (Array.isArray(t))
              n = i.callBase.apply(i, arguments);
            else {
              const r = ae.getIndexByKey(t, i._expandedItems);
              if (r >= 0) {
                const {
                  visible: a
                } = i._expandedItems[r];
                i._expandedItems[r].visible = !a;
              } else
                i._expandedItems.push({
                  key: t,
                  visible: !0
                });
              i.updateItems({
                changeType: "update",
                rowIndices: i._getRowIndicesForExpand(t)
              }), n = new U().resolve();
            }
            return n;
          },
          _processDataItem(t, i) {
            const n = this.callBase.apply(this, arguments);
            return n.isExpanded = this.isRowExpanded(n.key), i.detailColumnIndex === void 0 && (i.detailColumnIndex = -1, B(i.visibleColumns, (r, a) => {
              if (a.command === "expand" && !x(a.groupIndex))
                return i.detailColumnIndex = r, !1;
            })), i.detailColumnIndex >= 0 && (n.values[i.detailColumnIndex] = n.isExpanded), n;
          },
          _processItems(t, i) {
            const n = this, {
              changeType: r
            } = i, a = [];
            return t = n.callBase.apply(n, arguments), r === "loadingAll" ? t : (r === "refresh" && (n._expandedItems = li(n._expandedItems, (o) => o.visible)), B(t, (o, s) => {
              a.push(s);
              const l = ae.getIndexByKey(s.key, n._expandedItems);
              s.rowType === "data" && (s.isExpanded || l >= 0) && !s.isNewRow && a.push({
                visible: s.isExpanded,
                rowType: "detail",
                key: s.key,
                data: s.data,
                values: []
              });
            }), a);
          },
          optionChanged(t) {
            const i = this;
            let n, r;
            if (t.name === "masterDetail") {
              switch (t.name = "dataSource", t.fullName) {
                case "masterDetail": {
                  const a = t.value || {}, o = t.previousValue || {};
                  n = a.enabled !== o.enabled, r = a.autoExpandAll !== o.autoExpandAll;
                  break;
                }
                case "masterDetail.template":
                  e(i);
                  break;
                case "masterDetail.enabled":
                  n = !0;
                  break;
                case "masterDetail.autoExpandAll":
                  r = !0;
              }
              (n || r) && e(i);
            }
            i.callBase(t);
          }
        };
      }(),
      resizing: {
        fireContentReadyAction() {
          this.callBase.apply(this, arguments), this._updateParentDataGrids(this.component.$element());
        },
        _updateParentDataGrids(e) {
          const t = e.closest(".dx-master-detail-row");
          t.length && ge(this._updateMasterDataGrid(t, e)).done(() => {
            this._updateParentDataGrids(t.parent());
          });
        },
        _updateMasterDataGrid(e, t) {
          const i = g(e).data("options"), n = g(e).closest("." + this.getWidgetContainerClass()).parent().data("dxDataGrid");
          if (i && n)
            return this._updateMasterDataGridCore(n, i);
        },
        _updateMasterDataGridCore(e, t) {
          const i = U();
          if (e.getView("rowsView").isFixedColumns())
            this._updateFixedMasterDetailGrids(e, t.rowIndex, g(t.rowElement)).done(i.resolve);
          else {
            if (e.option("scrolling.useNative") === !0) {
              e.updateDimensions().done(() => i.resolve(!0));
              return;
            }
            const n = e.getScrollable();
            n ? n == null || n.update().done(() => i.resolve()) : i.resolve();
          }
          return i.promise();
        },
        _updateFixedMasterDetailGrids(e, t, i) {
          const n = U(), r = g(e.getRowElement(t)), a = g(e.getView("rowsView").getTableElements()), o = (r == null ? void 0 : r.length) === 2 && Fe(r.eq(0)) !== Fe(r.eq(1)), s = (a == null ? void 0 : a.length) === 2 && Fe(a.eq(0)) !== Fe(a.eq(1));
          if (o || s) {
            const l = Ae(i);
            return e.updateDimensions().done(() => {
              const u = this.option("columnAutoWidth") && e.option("scrolling.useNative") === !0, d = u && l !== Ae(i);
              u && d ? this.updateDimensions().done(() => n.resolve(!0)) : n.resolve(!0);
            }), n.promise();
          }
          return U().resolve();
        },
        _toggleBestFitMode(e) {
          if (this.callBase.apply(this, arguments), this.option("masterDetail.template")) {
            const t = this._rowsView.getTableElement();
            t && t.find(".dx-master-detail-cell").css("maxWidth", e ? 0 : "");
          }
        }
      }
    },
    views: {
      rowsView: {
        _getCellTemplate(e) {
          const t = this, {
            column: i
          } = e, n = t.getController("editing"), r = n && n.isEditRow(e.rowIndex);
          let a;
          return i.command === "detail" && !r ? a = t.option("masterDetail.template") || {
            allowRenderToDetachedContainer: !1,
            render: t._getDefaultTemplate(i)
          } : a = t.callBase.apply(t, arguments), a;
        },
        _isDetailRow: (e) => e && e.rowType && e.rowType.indexOf("detail") === 0,
        _createRow(e) {
          const t = this.callBase.apply(this, arguments);
          return e && this._isDetailRow(e) && (this.option("showRowLines") && t.addClass("dx-row-lines"), t.addClass("dx-master-detail-row"), x(e.visible) && t.toggle(e.visible)), t;
        },
        _renderCells(e, t) {
          const {
            row: i
          } = t;
          let n;
          const r = this._columnsController.getVisibleColumns();
          i.rowType && this._isDetailRow(i) ? this._needRenderCell(0, t.columnIndices) && (n = this._renderCell(e, {
            value: null,
            row: i,
            rowIndex: i.rowIndex,
            column: {
              command: "detail"
            },
            columnIndex: 0,
            change: t.change
          }), n.addClass("dx-cell-focus-disabled").addClass("dx-master-detail-cell").attr("colSpan", r.length)) : this.callBase.apply(this, arguments);
        }
      }
    }
  }
};
xe.registerModule("masterDetail", X3);
var pd = function(e) {
  for (var t = 0, i = 0, n = 0; n < e.length; ++n)
    if (e[n] === "'" && t++, e[n] === "." && (++i, t % 2 === 0))
      return {
        occurrence: i,
        index: n
      };
  return {
    occurrence: 1,
    index: -1
  };
}, Rg = function(e, t, i) {
  for (var n = -1; i-- && n++ < e.length; )
    n = e.indexOf(t, n);
  return n;
}, Bg = function(e, t) {
  return t === -1 ? [e] : [e.slice(0, t), e.slice(t + 1)];
}, Y3 = function(e, t) {
  return e && dI(e / 100, t);
}, Xd = function(e, t) {
  if (typeof t == "string") {
    var i = t.split(";"), n = nt.getSign(e, t);
    i[1] = i[1] || "-" + i[0], t = i[n < 0 ? 1 : 0], t = (o = t, o.replace(/'([^']*)'/g, (s) => s.split("").map(() => " ").join("").substr(2)));
    var r = /^[^#0.,]*/.exec(t)[0].length, a = /[^#0.,]*$/.exec(t)[0].length;
    return {
      start: r,
      end: e.length - a
    };
  } else
    return {
      start: 0,
      end: e.length
    };
  var o;
}, $0 = function(e, t) {
  var i = nt.getDecimalSeparator(), n = new RegExp("[^0-9" + br(i) + "]", "g"), r = t.slice(0, e);
  return r.replace(n, "").length;
}, H0 = function(e) {
  return e.split("").reverse().join("");
}, z0 = function(e, t) {
  if (!e)
    return -1;
  for (var i = /[0-9]/g, n = 1, r = null, a = i.exec(t); a; ) {
    if (r = a.index, n >= e)
      return r;
    n++, a = i.exec(t);
  }
  return r === null ? t.length : r;
}, Z3 = function(e) {
  return e.replace(/[^0-9e]+$/, "");
}, sa = function(e, t) {
  return e.start === void 0 && (e = {
    start: e,
    end: e
  }), {
    start: e.start + t,
    end: e.end + t
  };
}, Q3 = function(e, t, i, n) {
  i = sa(i, 0);
  var r = nt.getDecimalSeparator(), a = J3(e), o = pd(n).occurrence, s = a ? 0 : Rg(e, r, o), l = Rg(t, r, o), u = Bg(e, s), d = Bg(t, l), c = s !== -1 && i.start > s;
  if (c) {
    var h = i.start - s - 1, p = $0(h, u[1]), f = d[1] ? l + 1 + z0(p, d[1]) + 1 : t.length;
    return mr(f, t, n);
  } else {
    var v = Z3(d[0]), m = u[0].length - i.start, C = $0(m, H0(u[0])), b = z0(C, H0(v)), A = v.length - (b + 1);
    return mr(A, t, n);
  }
};
function J3(e) {
  return e.length === 1 && !!e.match(/^[,.][0-9]*$/g);
}
var e5 = function(e, t, i) {
  e = sa(e, 0);
  var n = mr(e, t, i);
  return e.start >= n.start && e.end <= n.end;
};
function mr(e, t, i) {
  e = sa(e, 0);
  var n = Xd(t, i), r = {
    start: Zt(e.start, n.start, n.end),
    end: Zt(e.end, n.start, n.end)
  };
  return r;
}
var t5 = function(e, t, i) {
  var n = Xd(e, i), r = Xd(t, i);
  return r.start - n.start;
}, i5 = "dx-numberbox-spin", n5 = "dx-numberbox-spin-button", r5 = 100, TA = "dxNumberBox", W0 = oe(je.up, TA), G0 = oe(je.cancel, TA), ro = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      direction: "up",
      onChange: null,
      activeStateEnabled: !0,
      hoverStateEnabled: !0
    });
  },
  _initMarkup: function() {
    this.callBase();
    var e = i5 + "-" + this.option("direction");
    this.$element().addClass(n5).addClass(e), this._spinIcon = g("<div>").addClass(e + "-icon").appendTo(this.$element());
  },
  _render: function() {
    this.callBase();
    var e = oe(je.down, this.NAME), t = this.$element();
    w.off(t, e), w.on(t, e, this._spinDownHandler.bind(this)), this._spinChangeHandler = this._createActionByOption("onChange");
  },
  _spinDownHandler: function(e) {
    e.preventDefault(), this._clearTimer(), w.on(this.$element(), Br.name, function() {
      this._feedBackDeferred = new U(), GP(this._feedBackDeferred), this._spinChangeHandler({
        event: e
      }), this._holdTimer = setInterval(this._spinChangeHandler, r5, {
        event: e
      });
    }.bind(this));
    var t = ee.getDocument();
    w.on(t, W0, this._clearTimer.bind(this)), w.on(t, G0, this._clearTimer.bind(this)), this._spinChangeHandler({
      event: e
    });
  },
  _dispose: function() {
    this._clearTimer(), this.callBase();
  },
  _clearTimer: function() {
    w.off(this.$element(), Br.name);
    var e = ee.getDocument();
    w.off(e, W0), w.off(e, G0), this._feedBackDeferred && this._feedBackDeferred.resolve(), this._holdTimer && clearInterval(this._holdTimer);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "onChange":
      case "direction":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  }
}), a5 = "dx-numberbox-spin", o5 = "dx-numberbox-spin-container", s5 = "dx-numberbox-spin-touch-friendly";
class l5 extends Bc {
  _attachEvents(t, i) {
    var {
      editor: n
    } = this, r = oe(je.down, n.NAME), a = i.children(), o = n._createAction((s) => n._spinButtonsPointerDownHandler(s));
    w.off(i, r), w.on(i, r, (s) => o({
      event: s
    })), ro.getInstance(a.eq(0)).option("onChange", (s) => n._spinUpChangeHandler(s)), ro.getInstance(a.eq(1)).option("onChange", (s) => n._spinDownChangeHandler(s));
  }
  _create() {
    var {
      editor: t
    } = this, i = g("<div>").addClass(o5), n = g("<div>").appendTo(i), r = g("<div>").appendTo(i), a = this._getOptions();
    return this._addToContainer(i), t._createComponent(n, ro, T({
      direction: "up"
    }, a)), t._createComponent(r, ro, T({
      direction: "down"
    }, a)), this._legacyRender(t.$element(), this._isTouchFriendly(), a.visible), {
      instance: i,
      $element: i
    };
  }
  _getOptions() {
    var {
      editor: t
    } = this, i = this._isVisible(), n = t.option("disabled");
    return {
      visible: i,
      disabled: n
    };
  }
  _isVisible() {
    var {
      editor: t
    } = this;
    return super._isVisible() && t.option("showSpinButtons");
  }
  _isTouchFriendly() {
    var {
      editor: t
    } = this;
    return t.option("showSpinButtons") && t.option("useLargeSpinButtons");
  }
  _legacyRender(t, i, n) {
    t.toggleClass(s5, i), t.toggleClass(a5, n);
  }
  update() {
    var t = super.update();
    if (t) {
      var {
        editor: i,
        instance: n
      } = this, r = i.$element(), a = this._isVisible(), o = this._isTouchFriendly(), s = n.children(), l = ro.getInstance(s.eq(0)), u = ro.getInstance(s.eq(1)), d = this._getOptions();
      l.option(d), u.option(d), this._legacyRender(r, o, a);
    }
  }
}
var u5 = Math, d5 = "dx-numberbox", c5 = ["tab", "del", "backspace", "leftArrow", "rightArrow", "home", "end", "enter"], h5 = "NumberBoxForceValueChange", p5 = Tv.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), {
      upArrow: function(e) {
        Pt(e) || (e.preventDefault(), e.stopPropagation(), this._spinUpChangeHandler(e));
      },
      downArrow: function(e) {
        Pt(e) || (e.preventDefault(), e.stopPropagation(), this._spinDownChangeHandler(e));
      },
      enter: function() {
      }
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      value: 0,
      min: void 0,
      max: void 0,
      step: 1,
      showSpinButtons: !1,
      useLargeSpinButtons: !0,
      mode: "text",
      invalidValueMessage: q.format("dxNumberBox-invalidValueMessage"),
      buttons: void 0
    });
  },
  _useTemplates: function() {
    return !1;
  },
  _getDefaultButtons: function() {
    return this.callBase().concat([{
      name: "spins",
      Ctor: l5
    }]);
  },
  _isSupportInputMode: function() {
    var e = parseFloat(lt.version);
    return lt.chrome && e >= 66 || lt.safari && e >= 12;
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().generic && !ve.isSimulator();
      },
      options: {
        useLargeSpinButtons: !1
      }
    }, {
      device: function() {
        return ve.real().deviceType !== "desktop" && !this._isSupportInputMode();
      }.bind(this),
      options: {
        mode: "number"
      }
    }]);
  },
  _initMarkup: function() {
    this._renderSubmitElement(), this.$element().addClass(d5), this.callBase();
  },
  _getDefaultAttributes: function() {
    var e = this.callBase();
    return e.inputmode = "decimal", e;
  },
  _renderContentImpl: function() {
    this.option("isValid") && this._validateValue(this.option("value")), this.setAria("role", "spinbutton");
  },
  _renderSubmitElement: function() {
    this._$submitElement = g("<input>").attr("type", "hidden").appendTo(this.$element()), this._setSubmitValue(this.option("value"));
  },
  _setSubmitValue: function(e) {
    this._getSubmitElement().val(wk(e));
  },
  _getSubmitElement: function() {
    return this._$submitElement;
  },
  _keyPressHandler: function(e) {
    this.callBase(e);
    var t = Ad(e), i = /[\d.,eE\-+]/.test(t);
    if (!i) {
      var n = ht(e);
      return Pt(e) || n && c5.includes(n) ? void 0 : (e.preventDefault(), !1);
    }
    this._keyPressed = !0;
  },
  _onMouseWheel: function(e) {
    e.delta > 0 ? this._spinValueChange(1, e) : this._spinValueChange(-1, e);
  },
  _renderValue: function() {
    var e = this._input().val(), t = this.option("value");
    (!e.length || Number(e) !== t) && (this._forceValueRender(), this._toggleEmptinessEventHandler());
    var i = x(t) ? null : q.format("dxNumberBox-noDataText");
    return this.setAria({
      valuenow: ct(t, ""),
      valuetext: i
    }), this.option("text", this._input().val()), this._updateButtons(), new U().resolve();
  },
  _forceValueRender: function() {
    var e = this.option("value"), t = Number(e), i = isNaN(t) ? "" : this._applyDisplayValueFormatter(e);
    this._renderDisplayText(i);
  },
  _applyDisplayValueFormatter: function(e) {
    return this.option("displayValueFormatter")(e);
  },
  _renderProps: function() {
    this._input().prop({
      min: this.option("min"),
      max: this.option("max"),
      step: this.option("step")
    }), this.setAria({
      valuemin: ct(this.option("min"), ""),
      valuemax: ct(this.option("max"), "")
    });
  },
  _spinButtonsPointerDownHandler: function() {
    var e = this._input();
    !this.option("useLargeSpinButtons") && ee.getActiveElement() !== e[0] && w.trigger(e, "focus");
  },
  _spinUpChangeHandler: function(e) {
    this.option("readOnly") || this._spinValueChange(1, e.event || e);
  },
  _spinDownChangeHandler: function(e) {
    this.option("readOnly") || this._spinValueChange(-1, e.event || e);
  },
  _spinValueChange: function(e, t) {
    var i = parseFloat(this.option("step"));
    if (i !== 0) {
      var n = parseFloat(this._normalizeInputValue()) || 0;
      n = this._correctRounding(n, i * e);
      var r = this.option("min"), a = this.option("max");
      x(r) && (n = Math.max(r, n)), x(a) && (n = Math.min(a, n)), this._saveValueChangeEvent(t), this.option("value", n);
    }
  },
  _correctRounding: function(e, t) {
    var i = /[,.](.*)/, n = i.test(e), r = i.test(t);
    if (n || r) {
      var a = n ? i.exec(e)[0].length : 0, o = r ? i.exec(t)[0].length : 0, s = u5.max(a, o);
      return e = this._round(e + t, s), e;
    }
    return e + t;
  },
  _round: function(e, t) {
    t = t || 0;
    var i = Math.pow(10, t);
    return e *= i, e = Math.round(e) / i, e;
  },
  _renderValueChangeEvent: function() {
    this.callBase();
    var e = oe("focusout", h5);
    w.off(this.element(), e), w.on(this.element(), e, this._forceRefreshInputValue.bind(this));
  },
  _forceRefreshInputValue: function() {
    if (this.option("mode") !== "number") {
      var e = this._input(), t = this._applyDisplayValueFormatter(this.option("value"));
      e.val(null), e.val(t);
    }
  },
  _valueChangeEventHandler: function(e) {
    var t = this._input(), i = this._normalizeText(), n = this._parseValue(i), r = i !== "." && i !== "-";
    if (this._isValueValid() && !this._validateValue(n)) {
      t.val(this._applyDisplayValueFormatter(n));
      return;
    }
    r && this.callBase(e, isNaN(n) ? null : n), this._applyValueBoundaries(i, n), this.validationRequest.fire({
      value: n,
      editor: this
    });
  },
  _applyValueBoundaries: function(e, t) {
    var i = this._isValueIncomplete(e), n = this._isValueInRange(e);
    !i && !n && t !== null && Number(e) !== t && this._input().val(this._applyDisplayValueFormatter(t));
  },
  _replaceCommaWithPoint: function(e) {
    return e.replace(",", ".");
  },
  _inputIsInvalid: function() {
    var e = this.option("mode") === "number", t = this._input().get(0).validity;
    return e && t && t.badInput;
  },
  _renderDisplayText: function(e) {
    this._inputIsInvalid() || this.callBase(e);
  },
  _isValueIncomplete: function(e) {
    return /(^-$)|(^-?\d*\.$)|(\d+e-?$)/i.test(e);
  },
  _isValueInRange: function(e) {
    return Gn(e, this.option("min"), this.option("max"));
  },
  _isNumber: function(e) {
    return this._parseValue(e) !== null;
  },
  _validateValue: function(e) {
    var t = this._normalizeText(), i = this._isValueValid(), n = !0, r = this._isNumber(t);
    return isNaN(Number(e)) && (n = !1), !e && i ? n = !0 : !r && !i && (n = !1), this.option({
      isValid: n,
      validationError: n ? null : {
        editorSpecific: !0,
        message: this.option("invalidValueMessage")
      }
    }), n;
  },
  _normalizeInputValue: function() {
    return this._parseValue(this._normalizeText());
  },
  _normalizeText: function() {
    var e = this._input().val().trim();
    return this._replaceCommaWithPoint(e);
  },
  _parseValue: function(e) {
    var t = parseFloat(e);
    return isNaN(t) ? null : Zt(t, this.option("min"), this.option("max"));
  },
  _clearValue: function() {
    this._inputIsInvalid() && (this._input().val(""), this._validateValue()), this.callBase();
  },
  reset: function() {
    this.option("value") === null ? (this.option("text", ""), this._input().length && this._renderValue()) : this.option("value", null);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "value":
        this._validateValue(e.value), this._setSubmitValue(e.value), this.callBase(e), this._resumeValueChangeAction();
        break;
      case "step":
        this._renderProps();
        break;
      case "min":
      case "max":
        this._renderProps(), this.option("value", this._parseValue(this.option("value")));
        break;
      case "showSpinButtons":
      case "useLargeSpinButtons":
        this._updateButtons(["spins"]);
        break;
      case "invalidValueMessage":
        break;
      default:
        this.callBase(e);
    }
  }
}), Gp = "dxNumberFormatter", Fu = 1, Kp = -1, K0 = "-", vs = "minus", f5 = "input", U0 = 0, Yd = p5.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      useMaskBehavior: !0,
      format: null
    });
  },
  _isDeleteKey: function(e) {
    return e === "del";
  },
  _supportedKeys: function() {
    return this._useMaskBehavior() ? T(this.callBase(), {
      minus: this._revertSign.bind(this),
      del: this._removeHandler.bind(this),
      backspace: this._removeHandler.bind(this),
      leftArrow: this._arrowHandler.bind(this, Kp),
      rightArrow: this._arrowHandler.bind(this, Fu),
      home: this._moveCaretToBoundaryEventHandler.bind(this, Fu),
      enter: this._updateFormattedValue.bind(this),
      end: this._moveCaretToBoundaryEventHandler.bind(this, Kp)
    }) : this.callBase();
  },
  _getTextSeparatorIndex: function(e) {
    var t = nt.getDecimalSeparator(), i = pd(this.option("format")).occurrence;
    return Rg(e, t, i);
  },
  _focusInHandler: function(e) {
    this._preventNestedFocusEvent(e) || (this.clearCaretTimeout(), this._caretTimeout = setTimeout(function() {
      this._caretTimeout = void 0;
      var t = this._caret();
      if (t.start === t.end && this._useMaskBehavior()) {
        var i = this._getInputVal(), n = this._getTextSeparatorIndex(i);
        n >= 0 ? this._caret({
          start: n,
          end: n
        }) : this._moveCaretToBoundaryEventHandler(Kp, e);
      }
    }.bind(this), U0)), this.callBase(e);
  },
  _focusOutHandler: function(e) {
    var t = !this._preventNestedFocusEvent(e);
    t && (this._focusOutOccurs = !0, this._useMaskBehavior() && this._updateFormattedValue()), this.callBase(e), t && (this._focusOutOccurs = !1);
  },
  _hasValueBeenChanged(e) {
    var t = this._getFormatPattern(), i = this.option("value"), n = this._format(i, t) || "";
    return n !== e;
  },
  _updateFormattedValue: function() {
    var e = this._getInputVal();
    this._hasValueBeenChanged(e) && (this._updateParsedValue(), this._adjustParsedValue(), this._setTextByParsedValue(), this._parsedValue !== this.option("value") && w.trigger(this._input(), "change"));
  },
  _arrowHandler: function(e, t) {
    if (this._useMaskBehavior()) {
      var i = this._getInputVal(), n = this._getFormatPattern(), r = sa(this._caret(), e);
      e5(r, i, n) || (r = e === Fu ? r.end : r.start, t.preventDefault(), this._caret(mr(r, i, n)));
    }
  },
  _moveCaretToBoundary: function(e) {
    var t = Xd(this._getInputVal(), this._getFormatPattern()), i = sa(e === Fu ? t.start : t.end, 0);
    this._caret(i);
  },
  _moveCaretToBoundaryEventHandler: function(e, t) {
    !this._useMaskBehavior() || t && t.shiftKey || (this._moveCaretToBoundary(e), t && t.preventDefault());
  },
  _shouldMoveCaret: function(e, t) {
    var i = nt.getDecimalSeparator(), n = e.charAt(t.end) === i, r = (this._lastKey === i || this._lastKey === "." || this._lastKey === ",") && n;
    return r;
  },
  _getInputVal: function() {
    return nt.convertDigits(this._input().val(), !0);
  },
  _keyboardHandler: function(e) {
    if (this.clearCaretTimeout(), this._lastKey = nt.convertDigits(Ad(e), !0), this._lastKeyName = ht(e), !this._shouldHandleKey(e.originalEvent))
      return this.callBase(e);
    var t = this._getInputVal(), i = this._caret(), n = this._lastKeyName === vs ? "" : this._lastKey, r = this._tryParse(t, i, n);
    return this._shouldMoveCaret(t, i) && (this._moveCaret(1), e.originalEvent.preventDefault()), r === void 0 ? this._lastKeyName !== vs && e.originalEvent.preventDefault() : this._parsedValue = r, this.callBase(e);
  },
  _keyPressHandler: function(e) {
    this._useMaskBehavior() || this.callBase(e);
  },
  _removeHandler: function(e) {
    var t = this._caret(), i = this._getInputVal(), n = t.start, r = t.end;
    this._lastKey = Ad(e), this._lastKeyName = ht(e);
    var a = this._isDeleteKey(this._lastKeyName), o = !a;
    if (n === r) {
      var s = n, l = o && s > 0 || a && s < i.length;
      if (l)
        a && r++, o && n--;
      else {
        e.preventDefault();
        return;
      }
    }
    var u = i.slice(n, r);
    if (this._isStub(u)) {
      this._moveCaret(a ? 1 : -1), (this._parsedValue < 0 || 1 / this._parsedValue === -1 / 0) && (this._revertSign(e), this._setTextByParsedValue()), e.preventDefault();
      return;
    }
    var d = nt.getDecimalSeparator();
    if (u === d) {
      var c = i.indexOf(d);
      this._isNonStubAfter(c + 1) && (this._moveCaret(a ? 1 : -1), e.preventDefault());
      return;
    }
    if (r - n < i.length) {
      var h = this._replaceSelectedText(i, {
        start: n,
        end: r
      }, ""), p = h.search(/[0-9]/) < 0;
      if (p && this._isValueInRange(0)) {
        this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -1 / 0 ? -0 : 0;
        return;
      }
    }
    var f = this._tryParse(i, {
      start: n,
      end: r
    }, "");
    f === void 0 ? e.preventDefault() : this._parsedValue = f;
  },
  _isPercentFormat: function() {
    var e = this._getFormatPattern(), t = e.replace(/'[^']+'/g, "");
    return t.indexOf("%") !== -1;
  },
  _parse: function(e, t) {
    var i = this.option("format"), n = ce(i.parser), r = n ? i.parser : nt.parse, a = 0;
    if (!n) {
      var o = pd(t).index, s = this._getTextSeparatorIndex(e), l = o !== -1 ? o : t.length, u = s !== -1 ? s : e.length;
      u > l && t.indexOf("#") === -1 && (a = u - l);
    }
    return e = e.substr(a), r(e, t);
  },
  _format: function(e, t) {
    var i = this.option("format"), n = (i == null ? void 0 : i.formatter) || i, r = ce(n) ? n : nt.format, a = e === null ? "" : r(e, t);
    return a;
  },
  _getFormatPattern: function() {
    return this._currentFormat || this._updateFormat(), this._currentFormat;
  },
  _updateFormat: function() {
    var e = this.option("format"), t = ce(e == null ? void 0 : e.parser), i = Te(e) && (e.indexOf("0") >= 0 || e.indexOf("#") >= 0), n = e === "exponential" || (e == null ? void 0 : e.type) === "exponential", r = t || i || n;
    this._currentFormat = r ? e : cL((a) => {
      var o = this._format(a, e);
      return nt.convertDigits(o, !0);
    });
  },
  _getFormatForSign: function(e) {
    var t = this._getFormatPattern();
    if (Te(t)) {
      var i = t.split(";"), n = nt.getSign(e, t);
      return i[1] = i[1] || "-" + i[0], n < 0 ? i[1] : i[0];
    } else {
      var r = nt.getSign(e);
      return r < 0 ? "-" : "";
    }
  },
  _removeStubs: function(e, t) {
    var i = this._getFormatForSign(e), n = nt.getThousandsSeparator(), r = this._getStubs(i), a = e;
    if (r.length) {
      var o = r[0], s = new RegExp("(" + br(r[1] || "") + ")$", "g"), l = new RegExp("[-" + br(t ? "" : n) + "]", "g");
      a = a.replace(o, "").replace(s, "").replace(l, "");
    }
    return a;
  },
  _getStubs: function(e) {
    var t = /[^']([#0.,]+)/g.exec(e), i = t && t[0].trim();
    return e.split(i).map(function(n) {
      return n.replace(/'/g, "");
    });
  },
  _truncateToPrecision: function(e, t) {
    if (x(e)) {
      var i = e.toString(), n = i.indexOf(".");
      if (i && n > -1) {
        var r = parseFloat(i.substr(0, n + t + 1));
        return isNaN(r) ? e : r;
      }
    }
    return e;
  },
  _tryParse: function(e, t, i) {
    var n = this._replaceSelectedText(e, t, i), r = this._getFormatPattern(), a = t.start !== t.end, o = this._getParsedValue(n, r), s = !r.parser && this._getPrecisionLimits(n).max, l = o !== this._parsedValue, u = nt.getDecimalSeparator(), d = i === u && s === 0, c = !a && !l && i !== K0 && !this._isValueIncomplete(n) && this._isStub(i);
    if (!(d || c) && (this._removeStubs(n) === "" && (o = Math.abs(0 * this._parsedValue)), !isNaN(o))) {
      var h = o === null ? this._parsedValue : o;
      return o = s ? this._truncateToPrecision(h, s) : o, !r.parser && this._isPercentFormat() ? Y3(o, s) : o;
    }
  },
  _getParsedValue: function(e, t) {
    var i = nt.getSign(e, (t == null ? void 0 : t.formatter) || t), n = this._removeStubs(e, !0), r = this._parse(n, t), a = r < 0 ? -1 : 1, o = rt(r) && i !== a ? i * r : r;
    return o;
  },
  _isValueIncomplete: function(e) {
    if (!this._useMaskBehavior())
      return this.callBase(e);
    var t = this._caret(), i = nt.getDecimalSeparator(), n = this._getTextSeparatorIndex(e), r = n >= 0 && n < t.start, a = this._removeStubs(e, !0).split(i);
    if (!r || a.length !== 2)
      return !1;
    var o = a[1].length, s = this._getFormatPattern(), l = !!s.parser, u = !l && this._getPrecisionLimits(this._getFormatPattern(), e), d = l ? !0 : Gn(o, u.min, u.max), c = a[1].charAt(o - 1) === "0";
    return d && (c || !o);
  },
  _isValueInRange: function(e) {
    var t = ct(this.option("min"), -1 / 0), i = ct(this.option("max"), 1 / 0);
    return Gn(e, t, i);
  },
  _setInputText: function(e) {
    var t = nt.convertDigits(e, !0), i = Q3(this._getInputVal(), t, this._caret(), this._getFormatPattern());
    this._input().val(e), this._toggleEmptinessEventHandler(), this._formattedValue = e, this._focusOutOccurs || this._caret(i);
  },
  _useMaskBehavior: function() {
    return !!this.option("format") && this.option("useMaskBehavior");
  },
  _renderInputType: function() {
    var e = this.option("mode") === "number", t = ve.real().deviceType === "desktop";
    this._useMaskBehavior() && e ? this._setInputType(t || this._isSupportInputMode() ? "text" : "tel") : this.callBase();
  },
  _isChar: function(e) {
    return Te(e) && e.length === 1;
  },
  _moveCaret: function(e) {
    if (e) {
      var t = sa(this._caret(), e), i = mr(t, this._getInputVal(), this._getFormatPattern());
      this._caret(i);
    }
  },
  _shouldHandleKey: function(e) {
    var t = ht(e), i = Pt(e) || e.altKey || e.shiftKey || !this._isChar(t), n = t === vs, r = this._useMaskBehavior();
    return r && !i && !n;
  },
  _renderInput: function() {
    this.callBase(), this._renderFormatter();
  },
  _renderFormatter: function() {
    this._clearCache(), this._detachFormatterEvents(), this._useMaskBehavior() && this._attachFormatterEvents();
  },
  _detachFormatterEvents: function() {
    w.off(this._input(), "." + Gp);
  },
  _isInputFromPaste: function(e) {
    var t = e.originalEvent && e.originalEvent.inputType;
    return x(t) ? t === "insertFromPaste" : this._isValuePasted;
  },
  _attachFormatterEvents: function() {
    var e = this._input();
    w.on(e, oe(f5, Gp), function(t) {
      this._formatValue(t), this._isValuePasted = !1;
    }.bind(this)), w.on(e, oe("dxclick", Gp), function() {
      this._caretTimeout || (this._caretTimeout = setTimeout(function() {
        this._caretTimeout = void 0, this._caret(mr(this._caret(), this._getInputVal(), this._getFormatPattern()));
      }.bind(this), U0));
    }.bind(this)), w.on(e, "dxdblclick", function() {
      this.clearCaretTimeout();
    }.bind(this));
  },
  clearCaretTimeout: function() {
    clearTimeout(this._caretTimeout), this._caretTimeout = void 0;
  },
  _forceRefreshInputValue: function() {
    if (!this._useMaskBehavior())
      return this.callBase();
  },
  _isNonStubAfter: function(e) {
    var t = this._getInputVal().slice(e);
    return t && !this._isStub(t, !0);
  },
  _isStub: function(e, t) {
    var i = br(nt.getDecimalSeparator()), n = "^[^0-9" + i + "]+$", r = new RegExp(n, "g");
    return r.test(e) && (t || this._isChar(e));
  },
  _parseValue: function(e) {
    return this._useMaskBehavior() ? this._parsedValue : this.callBase(e);
  },
  _getPrecisionLimits: function(e) {
    var t = this._getFormatForSign(e), i = pd(t).index, n = (Bg(t, i)[1] || "").replace(/[^#0]/g, ""), r = n.replace(/^(0*)#*/, "$1").length, a = n.length;
    return {
      min: r,
      max: a
    };
  },
  _revertSign: function(e) {
    if (this._useMaskBehavior()) {
      var t = this._caret();
      if (t.start !== t.end)
        if (ht(e) === vs) {
          this._applyRevertedSign(e, t, !0);
          return;
        } else
          this._caret(mr(0, this._getInputVal(), this._getFormatPattern()));
      this._applyRevertedSign(e, t);
    }
  },
  _applyRevertedSign: function(e, t, i) {
    var n = -1 * ct(this._parsedValue, null);
    if ((this._isValueInRange(n) || n === 0) && (this._parsedValue = n, i)) {
      var r = this._getFormatPattern(), a = this._getInputVal();
      this._setTextByParsedValue(), e.preventDefault();
      var o = this._getInputVal(), s = t5(a, o, r);
      t = sa(t, s);
      var l = mr(t, o, r);
      this._caret(l);
    }
  },
  _removeMinusFromText: function(e, t) {
    var i = this._lastKeyName === vs && e.charAt(t.start - 1) === K0;
    return i ? this._replaceSelectedText(e, {
      start: t.start - 1,
      end: t.start
    }, "") : e;
  },
  _setTextByParsedValue: function() {
    var e = this._getFormatPattern(), t = this._parseValue(), i = this._format(t, e) || "";
    this._setInputText(i);
  },
  _formatValue: function(e) {
    var t = this._getInputVal(), i = this._caret(), n = this._removeMinusFromText(t, i), r = n !== t;
    if (t = n, !this._isInputFromPaste(e) && this._isValueIncomplete(n)) {
      this._formattedValue = t, r && this._setTextByParsedValue();
      return;
    }
    var a = nt.convertDigits(this._formattedValue, !0) !== t;
    if (a) {
      var o = this._tryParse(t, i, "");
      x(o) && (this._parsedValue = o);
    }
    this._setTextByParsedValue();
  },
  _renderDisplayText: function() {
    this._useMaskBehavior() ? this._toggleEmptinessEventHandler() : this.callBase.apply(this, arguments);
  },
  _renderValue: function() {
    return this._useMaskBehavior() && (this._parsedValue = this.option("value"), this._setTextByParsedValue()), this.callBase();
  },
  _updateParsedValue: function() {
    var e = this._getInputVal();
    this._parsedValue = this._tryParse(e, this._caret());
  },
  _adjustParsedValue: function() {
    if (this._useMaskBehavior()) {
      var e = this._removeStubs(this._getInputVal()), t = e ? this._parseValue() : null;
      if (!rt(t)) {
        this._parsedValue = t;
        return;
      }
      this._parsedValue = Zt(t, this.option("min"), this.option("max"));
    }
  },
  _valueChangeEventHandler: function(e) {
    if (!this._useMaskBehavior())
      return this.callBase(e);
    var t = this._caret();
    this._saveValueChangeEvent(e), this._lastKey = null, this._lastKeyName = null, this._updateParsedValue(), this._adjustParsedValue(), this.option("value", this._parsedValue), t && this._caret(t);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "format":
      case "useMaskBehavior":
        this._renderInputType(), this._updateFormat(), this._renderFormatter(), this._renderValue(), this._refreshValueChangeEvent(), this._refreshEvents();
        break;
      case "min":
      case "max":
        this._adjustParsedValue(), this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  },
  _clearCache: function() {
    delete this._formattedValue, delete this._lastKey, delete this._lastKeyName, delete this._parsedValue, delete this._focusOutOccurs, clearTimeout(this._caretTimeout), delete this._caretTimeout;
  },
  _clean: function() {
    this._clearCache(), this.callBase();
  }
});
We("dxNumberBox", Yd);
var g5 = "dx-dropdowneditor-button", _5 = "dx-dropdowneditor-button-visible", v5 = "dxDropDownEditor-selectLabel";
let m5 = class extends Bc {
  constructor(t, i, n) {
    super(t, i, n), this.currentTemplate = null;
  }
  _attachEvents(t) {
    var {
      editor: i
    } = this;
    t.option("onClick", (n) => {
      !i.option("openOnFieldClick") && i._openHandler(n);
    }), w.on(t.$element(), "mousedown", (n) => {
      i.$element().is(".dx-state-focused") && n.preventDefault();
    });
  }
  _create() {
    var {
      editor: t
    } = this, i = g("<div>"), n = this._getOptions();
    this._addToContainer(i);
    var r = t._createComponent(i, Gt, T({}, n, {
      elementAttr: {
        "aria-label": q.format(v5)
      }
    }));
    return this._legacyRender(t.$element(), i, n.visible), {
      $element: i,
      instance: r
    };
  }
  _getOptions() {
    var {
      editor: t
    } = this, i = this._isVisible(), n = t.option("readOnly"), r = {
      focusStateEnabled: !1,
      hoverStateEnabled: !1,
      activeStateEnabled: !1,
      useInkRipple: !1,
      disabled: n,
      visible: i
    };
    return this._addTemplate(r), r;
  }
  _isVisible() {
    var {
      editor: t
    } = this;
    return super._isVisible() && t.option("showDropDownButton");
  }
  _legacyRender(t, i, n) {
    t.toggleClass(_5, n), i && i.removeClass("dx-button").addClass(g5);
  }
  _isSameTemplate() {
    return this.editor.option("dropDownButtonTemplate") === this.currentTemplate;
  }
  _addTemplate(t) {
    this._isSameTemplate() || (t.template = this.editor._getTemplateByOption("dropDownButtonTemplate"), this.currentTemplate = this.editor.option("dropDownButtonTemplate"));
  }
  update() {
    var t = super.update();
    if (t) {
      var {
        editor: i,
        instance: n
      } = this, r = i.$element(), a = this._getOptions();
      n == null || n.option(a), this._legacyRender(r, n == null ? void 0 : n.$element(), a.visible);
    }
  }
};
var Zd = function(e) {
  if (Re())
    return Ge(e);
}, Wv = function(e) {
  return e === null && (e = void 0), typeof e == "function" && (e = e()), e;
}, C5 = "dx-dropdowneditor", j0 = "dx-dropdowneditor-input-wrapper", x5 = "dx-dropdowneditor-icon", Pu = "dx-dropdowneditor-overlay", y5 = "dx-dropdowneditor-overlay-flipped", b5 = "dx-dropdowneditor-active", S5 = "dx-dropdowneditor-field-clickable", E5 = "dx-dropdowneditor-field-template-wrapper", q0 = ve.current().platform === "ios", Gv = Wl.inherit({
  _supportedKeys: function() {
    return T({}, this.callBase(), {
      tab: function(e) {
        if (this.option("opened")) {
          if (this.option("applyValueMode") === "instantly") {
            this.close();
            return;
          }
          var t = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();
          t && (w.trigger(t, "focus"), t.select()), e.preventDefault();
        }
      },
      escape: function(e) {
        return this.option("opened") && e.preventDefault(), this.close(), !0;
      },
      upArrow: function(e) {
        return !Pt(e) && (e.preventDefault(), e.stopPropagation(), e.altKey) ? (this.close(), !1) : !0;
      },
      downArrow: function(e) {
        return !Pt(e) && (e.preventDefault(), e.stopPropagation(), e.altKey) ? (this._validatedOpening(), !1) : !0;
      },
      enter: function(e) {
        return this.option("opened") && (e.preventDefault(), this._valueChangeEventHandler(e)), !0;
      }
    });
  },
  _getDefaultButtons: function() {
    return this.callBase().concat([{
      name: "dropDown",
      Ctor: m5
    }]);
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      value: null,
      onOpened: null,
      onClosed: null,
      opened: !1,
      acceptCustomValue: !0,
      applyValueMode: "instantly",
      deferRendering: !0,
      activeStateEnabled: !0,
      dropDownButtonTemplate: "dropDownButton",
      fieldTemplate: null,
      openOnFieldClick: !1,
      showDropDownButton: !0,
      buttons: void 0,
      dropDownOptions: {
        showTitle: !1
      },
      popupPosition: this._getDefaultPopupPosition(),
      onPopupInitialized: null,
      applyButtonText: q.format("OK"),
      cancelButtonText: q.format("Cancel"),
      buttonsLocation: "default",
      useHiddenSubmitElement: !1,
      validationMessagePosition: "auto"
    });
  },
  _useTemplates: function() {
    return !0;
  },
  _getDefaultPopupPosition: function(e) {
    var t = $r(e);
    return {
      offset: {
        h: 0,
        v: -1
      },
      my: t + " top",
      at: t + " bottom",
      collision: "flip flip"
    };
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function(e) {
        var t = e.platform === "generic";
        return t;
      },
      options: {
        popupPosition: {
          offset: {
            v: 0
          }
        }
      }
    }]);
  },
  _inputWrapper: function() {
    return this.$element().find("." + j0).first();
  },
  _init: function() {
    this.callBase(), this._initVisibilityActions(), this._initPopupInitializedAction(), this._updatePopupPosition(this.option("rtlEnabled")), this._options.cache("dropDownOptions", this.option("dropDownOptions"));
  },
  _updatePopupPosition: function(e) {
    var {
      my: t,
      at: i
    } = this._getDefaultPopupPosition(e), n = this.option("popupPosition");
    this.option("popupPosition", T({}, n, {
      my: t,
      at: i
    }));
  },
  _initVisibilityActions: function() {
    this._openAction = this._createActionByOption("onOpened", {
      excludeValidators: ["disabled", "readOnly"]
    }), this._closeAction = this._createActionByOption("onClosed", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _initPopupInitializedAction: function() {
    this._popupInitializedAction = this._createActionByOption("onPopupInitialized", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _initMarkup: function() {
    this._renderSubmitElement(), this.callBase(), this.$element().addClass(C5), this.setAria("role", "combobox");
  },
  _render: function() {
    this.callBase(), this._renderOpenHandler(), this._attachFocusOutHandler(), this._renderOpenedState();
  },
  _renderContentImpl: function() {
    this.option("deferRendering") || this._createPopup();
  },
  _renderInput: function() {
    this.callBase(), this._wrapInput(), this._setDefaultAria();
  },
  _wrapInput: function() {
    this._$container = this.$element().wrapInner(g("<div>").addClass(j0)).children().eq(0);
  },
  _setDefaultAria: function() {
    this.setAria({
      haspopup: "true",
      autocomplete: "list"
    });
  },
  _readOnlyPropValue: function() {
    return !this._isEditable() || this.callBase();
  },
  _cleanFocusState: function() {
    this.callBase(), this.option("fieldTemplate") && this._detachFocusEvents();
  },
  _getFieldTemplate: function() {
    return this.option("fieldTemplate") && this._getTemplateByOption("fieldTemplate");
  },
  _renderMask: function() {
    this.option("fieldTemplate") || this.callBase();
  },
  _renderField: function() {
    var e = this._getFieldTemplate();
    e && this._renderTemplatedField(e, this._fieldRenderData());
  },
  _renderPlaceholder: function() {
    var e = !!this._getFieldTemplate();
    e || this.callBase();
  },
  _renderValue: function() {
    this.option("useHiddenSubmitElement") && this._setSubmitValue();
    var e = this.callBase();
    e.always(this._renderField.bind(this));
  },
  _renderTemplatedField: function(e, t) {
    var i;
    this._fieldRenderQueueLength = ((i = this._fieldRenderQueueLength) !== null && i !== void 0 ? i : 0) + 1;
    var n = Or(this._input()), r = this._$container;
    this._detachKeyboardEvents(), this._refreshButtonsContainer(), this._detachWrapperContent(), this._detachFocusEvents(), r.empty();
    var a = g("<div>").addClass(E5).appendTo(r);
    e.render({
      model: t,
      container: Ie(a),
      onRendered: () => {
        if (this._fieldRenderQueueLength--, this._fieldRenderQueueLength === 0) {
          var o = this._input();
          if (!o.length)
            throw $e.Error("E1010");
          this._integrateInput(), n && w.trigger(o, "focus");
        }
      }
    }), this._attachWrapperContent(r);
  },
  _detachWrapperContent() {
    var e, t, i, n = this.option("useHiddenSubmitElement");
    n && ((e = this._$submitElement) === null || e === void 0 || e.detach());
    var r = (t = this._$beforeButtonsContainer) === null || t === void 0 ? void 0 : t[0].parentNode, a = (i = this._$afterButtonsContainer) === null || i === void 0 ? void 0 : i[0].parentNode;
    r == null || r.removeChild(this._$beforeButtonsContainer[0]), a == null || a.removeChild(this._$afterButtonsContainer[0]);
  },
  _attachWrapperContent(e) {
    var t, i = this.option("useHiddenSubmitElement");
    e.prepend(this._$beforeButtonsContainer), i && ((t = this._$submitElement) === null || t === void 0 || t.appendTo(e)), e.append(this._$afterButtonsContainer);
  },
  _refreshButtonsContainer() {
    this._$buttonsContainer = this.$element().children().eq(0);
  },
  _integrateInput: function() {
    this._renderFocusState(), this._refreshValueChangeEvent(), this._refreshEvents(), this._refreshEmptinessEvent();
  },
  _refreshEmptinessEvent: function() {
    w.off(this._input(), "input blur", this._toggleEmptinessEventHandler), this._renderEmptinessEvent();
  },
  _fieldRenderData: function() {
    return this.option("value");
  },
  _initTemplates: function() {
    this._templateManager.addDefaultTemplates({
      dropDownButton: new Bo(function(e) {
        var t = g("<div>").addClass(x5);
        g(e.container).append(t);
      })
    }), this.callBase();
  },
  _renderOpenHandler: function() {
    var e = this._inputWrapper(), t = oe(Xe, this.NAME), i = this.option("openOnFieldClick");
    w.off(e, t), w.on(e, t, this._getInputClickHandler(i)), this.$element().toggleClass(S5, i), i && (this._openOnFieldClickAction = this._createAction(this._openHandler.bind(this)));
  },
  _attachFocusOutHandler: function() {
    q0 && (this._detachFocusOutEvents(), w.on(this._inputWrapper(), oe("focusout", this.NAME), (e) => {
      var t = e.relatedTarget, i = this.content ? g(this.content()).closest("." + Pu) : this._$popup;
      if (t && this.option("opened")) {
        var n = g(t).closest("." + Pu, i).length === 0;
        n && this.close();
      }
    }));
  },
  _detachFocusOutEvents: function() {
    q0 && w.off(this._inputWrapper(), oe("focusout", this.NAME));
  },
  _getInputClickHandler: function(e) {
    return e ? (t) => {
      this._executeOpenAction(t);
    } : (t) => {
      this._focusInput();
    };
  },
  _openHandler: function() {
    this._toggleOpenState();
  },
  _executeOpenAction: function(e) {
    this._openOnFieldClickAction({
      event: e
    });
  },
  _keyboardEventBindingTarget: function() {
    return this._input();
  },
  _focusInput: function() {
    return this.option("disabled") ? !1 : (this.option("focusStateEnabled") && !Or(this._input()) && (this._resetCaretPosition(), w.trigger(this._input(), "focus")), !0);
  },
  _resetCaretPosition: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, t = this._input().get(0);
    if (t) {
      var {
        value: i
      } = t, n = x(i) && (e || this._isEditable()) ? i.length : 0;
      this._caret({
        start: n,
        end: n
      }, !0);
    }
  },
  _isEditable: function() {
    return this.option("acceptCustomValue");
  },
  _toggleOpenState: function(e) {
    this._focusInput() && (this.option("readOnly") || (e = arguments.length ? e : !this.option("opened"), this.option("opened", e)));
  },
  _getControlsAria() {
    return this._popup && this._popupContentId;
  },
  _renderOpenedState: function() {
    var e = this.option("opened");
    e && this._createPopup(), this.$element().toggleClass(b5, e), this._setPopupOption("visible", e);
    var t = {
      expanded: e,
      controls: this._getControlsAria()
    };
    this.setAria(t), this.setAria("owns", e ? this._popupContentId : void 0, this.$element());
  },
  _createPopup: function() {
    this._$popup || (this._$popup = g("<div>").addClass(Pu).appendTo(this.$element()), this._renderPopup(), this._renderPopupContent());
  },
  _renderPopupContent: $,
  _renderPopup: function() {
    var e = T(this._popupConfig(), this._options.cache("dropDownOptions"));
    delete e.closeOnOutsideClick, e.elementAttr && !Object.keys(e.elementAttr).length && delete e.elementAttr, this._popup = this._createComponent(this._$popup, an, e), this._popup.on({
      showing: this._popupShowingHandler.bind(this),
      shown: this._popupShownHandler.bind(this),
      hiding: this._popupHidingHandler.bind(this),
      hidden: this._popupHiddenHandler.bind(this),
      contentReady: this._contentReadyHandler.bind(this)
    }), this._contentReadyHandler(), this._setPopupContentId(this._popup.$content()), this._bindInnerWidgetOptions(this._popup, "dropDownOptions");
  },
  _setPopupContentId(e) {
    this._popupContentId = "dx-" + new Ot(), this.setAria("id", this._popupContentId, e);
  },
  _contentReadyHandler: $,
  _popupConfig: function() {
    return {
      onInitialized: this._popupInitializedHandler(),
      position: T(this.option("popupPosition"), {
        of: this.$element()
      }),
      showTitle: this.option("dropDownOptions.showTitle"),
      _ignoreFunctionValueDeprecation: !0,
      width: () => Zd(this.$element()),
      height: "auto",
      shading: !1,
      hideOnParentScroll: !0,
      hideOnOutsideClick: (e) => this._closeOutsideDropDownHandler(e),
      animation: {
        show: {
          type: "fade",
          duration: 0,
          from: 0,
          to: 1
        },
        hide: {
          type: "fade",
          duration: 400,
          from: 1,
          to: 0
        }
      },
      deferRendering: !1,
      focusStateEnabled: !1,
      showCloseButton: !1,
      dragEnabled: !1,
      toolbarItems: this._getPopupToolbarItems(),
      onPositioned: this._popupPositionedHandler.bind(this),
      fullScreen: !1,
      contentTemplate: null,
      _wrapperClassExternal: Pu
    };
  },
  _popupInitializedHandler: function() {
    return this.option("onPopupInitialized") ? (e) => {
      this._popupInitializedAction({
        popup: e.component
      });
    } : null;
  },
  _dimensionChanged: function() {
    if (Re() && !this.$element().is(":visible")) {
      this.close();
      return;
    }
    this._updatePopupWidth();
  },
  _updatePopupWidth: function() {
    var e = Wv(this.option("dropDownOptions.width"));
    e === void 0 && this._setPopupOption("width", () => Zd(this.$element()));
  },
  _popupPositionedHandler: function(e) {
    var t, i, {
      labelMode: n,
      stylingMode: r
    } = this.option();
    if (this._popup) {
      var a = this._popup.$overlayContent(), o = (t = e.position) === null || t === void 0 || (i = t.v) === null || i === void 0 ? void 0 : i.flip, s = n !== "hidden" && r === "outlined";
      if (e.position && a.toggleClass(y5, o), o && s && this._label.isVisible()) {
        var l = this._label.$element();
        kt(a, {
          top: Mi(a).top - parseInt(l.css("fontSize"))
        });
      }
    }
  },
  _popupShowingHandler: $,
  _popupHidingHandler: function() {
    this.option("opened", !1);
  },
  _popupShownHandler: function() {
    var e;
    this._openAction(), (e = this._validationMessage) === null || e === void 0 || e.option("positionSide", this._getValidationMessagePositionSide());
  },
  _popupHiddenHandler: function() {
    var e;
    this._closeAction(), (e = this._validationMessage) === null || e === void 0 || e.option("positionSide", this._getValidationMessagePositionSide());
  },
  _getValidationMessagePositionSide: function() {
    var e = this.option("validationMessagePosition");
    if (e !== "auto")
      return e;
    var t = "bottom";
    if (this._popup && this._popup.option("visible")) {
      var {
        top: i
      } = en.setup(this.$element()), {
        top: n
      } = en.setup(this._popup.$content());
      t = i + this.option("popupPosition").offset.v > n ? "bottom" : "top";
    }
    return t;
  },
  _closeOutsideDropDownHandler: function(e) {
    var {
      target: t
    } = e, i = g(t), n = this.getButton("dropDown"), r = n && n.$element(), a = !!i.closest(this.$element()).length, o = !!i.closest(r).length, s = !a && !o;
    return s;
  },
  _clean: function() {
    delete this._openOnFieldClickAction, this._$popup && (this._$popup.remove(), delete this._$popup, delete this._popup), this.callBase();
  },
  _setPopupOption: function(e, t) {
    this._setWidgetOption("_popup", arguments);
  },
  _validatedOpening: function() {
    this.option("readOnly") || this._toggleOpenState(!0);
  },
  _getPopupToolbarItems: function() {
    return this.option("applyValueMode") === "useButtons" ? this._popupToolbarItemsConfig() : [];
  },
  _getFirstPopupElement: function() {
    return this._popup.$wrapper().find(".dx-popup-done.dx-button");
  },
  _getLastPopupElement: function() {
    return this._popup.$wrapper().find(".dx-popup-cancel.dx-button");
  },
  _popupElementTabHandler: function(e) {
    var t = g(e.currentTarget);
    (e.shiftKey && t.is(this._getFirstPopupElement()) || !e.shiftKey && t.is(this._getLastPopupElement())) && (w.trigger(this._input(), "focus"), e.preventDefault());
  },
  _popupElementEscHandler: function() {
    w.trigger(this._input(), "focus"), this.close();
  },
  _popupButtonInitializedHandler: function(e) {
    e.component.registerKeyHandler("tab", this._popupElementTabHandler.bind(this)), e.component.registerKeyHandler("escape", this._popupElementEscHandler.bind(this));
  },
  _popupToolbarItemsConfig: function() {
    var e = [{
      shortcut: "done",
      options: {
        onClick: this._applyButtonHandler.bind(this),
        text: this.option("applyButtonText"),
        onInitialized: this._popupButtonInitializedHandler.bind(this)
      }
    }, {
      shortcut: "cancel",
      options: {
        onClick: this._cancelButtonHandler.bind(this),
        text: this.option("cancelButtonText"),
        onInitialized: this._popupButtonInitializedHandler.bind(this)
      }
    }];
    return this._applyButtonsLocation(e);
  },
  _applyButtonsLocation: function(e) {
    var t = this.option("buttonsLocation"), i = e;
    if (t !== "default") {
      var n = zo(t);
      B(i, function(r, a) {
        T(a, {
          toolbar: n[0],
          location: n[1]
        });
      });
    }
    return i;
  },
  _applyButtonHandler: function() {
    this.close(), this.option("focusStateEnabled") && this.focus();
  },
  _cancelButtonHandler: function() {
    this.close(), this.option("focusStateEnabled") && this.focus();
  },
  _popupOptionChanged: function(e) {
    var t = Mt.getOptionsFromContainer(e);
    this._setPopupOption(t);
    var i = Object.keys(t);
    (i.indexOf("width") !== -1 || i.indexOf("height") !== -1) && this._dimensionChanged();
  },
  _renderSubmitElement: function() {
    this.option("useHiddenSubmitElement") && (this._$submitElement = g("<input>").attr("type", "hidden").appendTo(this.$element()));
  },
  _setSubmitValue: function() {
    this._getSubmitElement().val(this.option("value"));
  },
  _getSubmitElement: function() {
    return this.option("useHiddenSubmitElement") ? this._$submitElement : this.callBase();
  },
  _dispose: function() {
    this._detachFocusOutEvents(), this.callBase();
  },
  _optionChanged: function(e) {
    var t;
    switch (e.name) {
      case "width":
      case "height":
        this.callBase(e), (t = this._popup) === null || t === void 0 || t.repaint();
        break;
      case "opened":
        this._renderOpenedState();
        break;
      case "onOpened":
      case "onClosed":
        this._initVisibilityActions();
        break;
      case "onPopupInitialized":
        this._initPopupInitializedAction();
        break;
      case "fieldTemplate":
        x(e.value) ? this._renderField() : this._invalidate();
        break;
      case "acceptCustomValue":
      case "openOnFieldClick":
        this._invalidate();
        break;
      case "dropDownButtonTemplate":
      case "showDropDownButton":
        this._updateButtons(["dropDown"]);
        break;
      case "dropDownOptions":
        this._popupOptionChanged(e), this._options.cache("dropDownOptions", this.option("dropDownOptions"));
        break;
      case "popupPosition":
        break;
      case "deferRendering":
        Re() && this._createPopup();
        break;
      case "applyValueMode":
      case "applyButtonText":
      case "cancelButtonText":
      case "buttonsLocation":
        this._setPopupOption("toolbarItems", this._getPopupToolbarItems());
        break;
      case "useHiddenSubmitElement":
        this._$submitElement && (this._$submitElement.remove(), this._$submitElement = void 0), this._renderSubmitElement();
        break;
      case "rtlEnabled":
        this._updatePopupPosition(e.value), this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  },
  open: function() {
    this.option("opened", !0);
  },
  close: function() {
    this.option("opened", !1);
  },
  field: function() {
    return Ie(this._input());
  },
  content: function() {
    return this._popup ? this._popup.content() : null;
  }
});
We("dxDropDownEditor", Gv);
var w5 = "dx-list-item", X0 = "dx-list-group", Kv = 20, I5 = (1 << Kv) - 1, Y0 = function(e) {
  return (e.group << Kv) + e.item;
}, Xr = function(e) {
  return {
    group: e >> Kv,
    item: e & I5
  };
}, T5 = Rv.inherit({
  _groupElements: function() {
    return this._collectionWidget._itemContainer().find("." + X0);
  },
  _groupItemElements: function(e) {
    return e.find("." + w5);
  },
  getIndexByItemData: function(e) {
    var t = this._collectionWidget.option("items"), i = !1;
    return e ? (e.items && e.items.length && (e = e.items[0]), B(t, function(n, r) {
      if (!r.items || (B(r.items, function(a, o) {
        return o !== e ? !0 : (i = {
          group: n,
          item: a
        }, !1);
      }), i))
        return !1;
    }), i) : !1;
  },
  getItemDataByIndex: function(e) {
    var t = this._collectionWidget.option("items");
    return rt(e) ? this.itemsGetter()[e] : e && t[e.group] && t[e.group].items[e.item] || null;
  },
  itemsGetter: function() {
    for (var e = [], t = this._collectionWidget.option("items"), i = 0; i < t.length; i++)
      t[i] && t[i].items ? e = e.concat(t[i].items) : e.push(t[i]);
    return e;
  },
  deleteItemAtIndex: function(e) {
    var t = Xr(e), i = this._collectionWidget.option("items")[t.group].items;
    i.splice(t.item, 1);
  },
  getKeysByItems: function(e) {
    var t = [], i;
    for (i = 0; i < e.length; i++)
      e[i] && e[i].items ? t = t.concat(e[i].items) : t.push(e[i]);
    var n = [];
    for (i = 0; i < t.length; i++)
      n.push(this._collectionWidget.keyOf(t[i]));
    return n;
  },
  getIndexByKey: function(e, t) {
    var i = t || this._collectionWidget.option("items"), n = -1, r = this;
    return B(i, function(a, o) {
      if (o.items && (B(o.items, function(s, l) {
        var u = r._collectionWidget.keyOf(l);
        if (r._equalKeys(u, e))
          return n = {
            group: a,
            item: s
          }, !1;
      }), n !== -1))
        return !1;
    }), n;
  },
  _getGroups: function(e) {
    var t = this._collectionWidget._dataController, i = t.group();
    return i ? Qn.queryByOptions(ui(e), {
      group: i
    }).toArray() : this._collectionWidget.option("items");
  },
  getItemsByKeys: function(e, t) {
    var i = [], n = this._getGroups(t), r = {}, a = (o) => {
      var s = this.getIndexByKey(o, n), l = s && n[s.group];
      if (l)
        return {
          groupKey: l.key,
          item: l.items[s.item]
        };
    };
    return B(e, function(o, s) {
      var l = a(s);
      if (l) {
        var u = l.groupKey, d = l.item, c = r[u];
        c || (c = {
          key: u,
          items: []
        }, r[u] = c, i.push(c)), c.items.push(d);
      }
    }), i;
  },
  moveItemAtIndexToIndex: function(e, t) {
    var i = this._collectionWidget.option("items"), n = Xr(e), r = Xr(t), a = i[n.group].items, o = i[r.group].items, s = a[n.item];
    a.splice(n.item, 1), o.splice(r.item, 0, s);
  },
  _isItemIndex: function(e) {
    return e && rt(e.group) && rt(e.item);
  },
  _getNormalizedItemIndex: function(e) {
    var t = g(e), i = t.closest("." + X0);
    return i.length ? Y0({
      group: this._groupElements().index(i),
      item: this._groupItemElements(i).index(t)
    }) : -1;
  },
  _normalizeItemIndex: function(e) {
    return Y0(e);
  },
  _denormalizeItemIndex: function(e) {
    return Xr(e);
  },
  _getItemByNormalizedIndex: function(e) {
    var t = Xr(e), i = this._groupElements().eq(t.group);
    return this._groupItemElements(i).eq(t.item);
  },
  _itemsFromSameParent: function(e, t) {
    return Xr(e).group === Xr(t).group;
  }
}), DA = {};
function D5(e, t, i) {
  var n = DA, r = {};
  r[e] = n[e] ? n[e] : {}, r[e][t] = i, T(n, r);
}
var AA = [], Gc = function(e, t, i) {
  AA.push({
    enabled: e,
    decoratorType: t,
    decoratorSubType: i
  });
};
Gc(function() {
  return this.option("menuItems").length;
}, function() {
  return "menu";
}, function() {
  return this.option("menuMode");
});
Gc(function() {
  return !this.option("menuItems").length && this.option("allowItemDeleting");
}, function() {
  var e = this.option("itemDeleteMode");
  return e === "toggle" || e === "slideButton" || e === "swipe" || e === "static" ? "delete" : "menu";
}, function() {
  var e = this.option("itemDeleteMode");
  return e === "slideItem" && (e = "slide"), e;
});
Gc(function() {
  return this.option("selectionMode") !== "none" && this.option("showSelectionControls");
}, function() {
  return "selection";
}, function() {
  return "default";
});
Gc(function() {
  return this.option("itemDragging.allowReordering") || this.option("itemDragging.allowDropInsideItem") || this.option("itemDragging.group");
}, function() {
  return "reorder";
}, function() {
  return "default";
});
var A5 = "dx-list-item-before-bag", O5 = "dx-list-item-after-bag", R5 = "beforeBag", B5 = "afterBag", k5 = "modifyElement", F5 = "afterRender", P5 = "getExcludedSelectors", M5 = ze.inherit({
  ctor: function(e) {
    this._list = e, this._fetchRequiredDecorators();
  },
  dispose: function() {
    this._decorators && this._decorators.length && B(this._decorators, function(e, t) {
      t.dispose();
    });
  },
  _fetchRequiredDecorators: function() {
    this._decorators = [], B(AA, function(e, t) {
      var i = t.enabled.call(this._list);
      if (i) {
        var n = t.decoratorType.call(this._list), r = t.decoratorSubType.call(this._list), a = this._createDecorator(n, r);
        this._decorators.push(a);
      }
    }.bind(this));
  },
  _createDecorator: function(e, t) {
    var i = this._findDecorator(e, t);
    return new i(this._list);
  },
  _findDecorator: function(e, t) {
    var i, n = (i = DA[e]) === null || i === void 0 ? void 0 : i[t];
    if (!n)
      throw $e.Error("E1012", e, t);
    return n;
  },
  modifyItemElement: function(e) {
    var t = g(e.itemElement), i = {
      $itemElement: t
    };
    this._prependBeforeBags(t, i), this._appendAfterBags(t, i), this._applyDecorators(k5, i);
  },
  afterItemsRendered: function() {
    this._applyDecorators(F5);
  },
  _prependBeforeBags: function(e, t) {
    var i = this._collectDecoratorsMarkup(R5, t, A5);
    e.prepend(i);
  },
  _appendAfterBags: function(e, t) {
    var i = this._collectDecoratorsMarkup(B5, t, O5);
    e.append(i);
  },
  _collectDecoratorsMarkup: function(e, t, i) {
    var n = g("<div>");
    return B(this._decorators, function() {
      var r = g("<div>").addClass(i);
      this[e](T({
        $container: r
      }, t)), r.children().length && n.append(r);
    }), n.children();
  },
  _applyDecorators: function(e, t) {
    B(this._decorators, function() {
      this[e](t);
    });
  },
  _handlerExists: function(e) {
    if (!this._decorators)
      return !1;
    for (var t = this._decorators, i = t.length, n = 0; n < i; n++)
      if (t[n][e] !== $)
        return !0;
    return !1;
  },
  _eventHandler: function(e, t, i) {
    if (!this._decorators)
      return !1;
    for (var n = !1, r = this._decorators, a = r.length, o = 0; o < a && (n = r[o][e](t, i), !n); o++)
      ;
    return n;
  },
  handleClick: function(e, t) {
    return this._eventHandler("handleClick", e, t);
  },
  handleKeyboardEvents: function(e, t) {
    return this._eventHandler("handleKeyboardEvents", e, t);
  },
  handleEnterPressing: function(e) {
    return this._eventHandler("handleEnterPressing", e);
  },
  contextMenuHandlerExists: function() {
    return this._handlerExists("handleContextMenu");
  },
  handleContextMenu: function(e, t) {
    return this._eventHandler("handleContextMenu", e, t);
  },
  getExcludedItemSelectors: function() {
    var e = [];
    return this._applyDecorators(P5, e), e.join(",");
  }
}), L5 = "dx-list-item-selected", V5 = "dx-list-item-response-wait", N5 = Vv.inherit({
  _supportedKeys() {
    var e = this, t = this.callBase(), i = (n, r) => {
      var a = this._editStrategy, o = this.option("focusedElement"), s = a.getNormalizedIndex(o), l = s === this._getLastItemIndex();
      if (!(l && this._dataController.isLoading()))
        if (n.shiftKey && e.option("itemDragging.allowReordering")) {
          var u = s + (r ? -1 : 1), d = a.getItemElement(u);
          this.reorderItem(o, d), this.scrollToItem(o), n.preventDefault();
        } else {
          var c = this._editProvider, h = c.handleKeyboardEvents(s, r);
          h || (r ? t.upArrow(n) : t.downArrow(n));
        }
    };
    return T({}, t, {
      del: (n) => {
        e.option("allowItemDeleting") && (n.preventDefault(), e.deleteItem(e.option("focusedElement")));
      },
      upArrow: (n) => i(n, !0),
      downArrow: (n) => i(n),
      enter: function(n) {
        this._editProvider.handleEnterPressing(n) || t.enter.apply(this, arguments);
      },
      space: function(n) {
        this._editProvider.handleEnterPressing(n) || t.space.apply(this, arguments);
      }
    });
  },
  _updateSelection() {
    this._editProvider.afterItemsRendered(), this.callBase();
  },
  _getLastItemIndex() {
    return this._itemElements().length - 1;
  },
  _refreshItemElements() {
    this.callBase();
    var e = this._editProvider.getExcludedItemSelectors();
    e.length && (this._itemElementsCache = this._itemElementsCache.not(e));
  },
  _isItemStrictEquals: function(e, t) {
    var i = e && e.__dx_key__;
    return i && !this.key() && this._selection.isItemSelected(i) ? !1 : this.callBase(e, t);
  },
  _getDefaultOptions() {
    return T(this.callBase(), {
      showSelectionControls: !1,
      selectionMode: "none",
      selectAllMode: "page",
      onSelectAllValueChanged: null,
      selectAllText: q.format("dxList-selectAll"),
      menuItems: [],
      menuMode: "context",
      allowItemDeleting: !1,
      itemDeleteMode: "static",
      itemDragging: {}
    });
  },
  _defaultOptionsRules() {
    return this.callBase().concat([{
      device: (e) => e.platform === "ios",
      options: {
        menuMode: "slide",
        itemDeleteMode: "slideItem"
      }
    }, {
      device: {
        platform: "android"
      },
      options: {
        itemDeleteMode: "swipe"
      }
    }]);
  },
  _init() {
    this.callBase(), this._initEditProvider();
  },
  _initDataSource() {
    this.callBase(), this._isPageSelectAll() || this._dataSource && this._dataSource.requireTotalCount(!0);
  },
  _isPageSelectAll() {
    return this.option("selectAllMode") === "page";
  },
  _initEditProvider() {
    this._editProvider = new M5(this);
  },
  _disposeEditProvider() {
    this._editProvider && this._editProvider.dispose();
  },
  _refreshEditProvider() {
    this._disposeEditProvider(), this._initEditProvider();
  },
  _initEditStrategy() {
    this.option("grouped") ? this._editStrategy = new T5(this) : this.callBase();
  },
  _initMarkup() {
    this._refreshEditProvider(), this.callBase();
  },
  _renderItems() {
    this.callBase(...arguments), this._editProvider.afterItemsRendered();
  },
  _selectedItemClass: () => L5,
  _itemResponseWaitClass: () => V5,
  _itemClickHandler(e) {
    var t = g(e.currentTarget);
    if (!t.is(".dx-state-disabled, .dx-state-disabled *")) {
      var i = this._editProvider.handleClick(t, e);
      i || (this._saveSelectionChangeEvent(e), this.callBase(...arguments));
    }
  },
  _shouldFireContextMenuEvent() {
    return this.callBase(...arguments) || this._editProvider.contextMenuHandlerExists();
  },
  _itemHoldHandler(e) {
    var t = g(e.currentTarget);
    if (!t.is(".dx-state-disabled, .dx-state-disabled *")) {
      var i = xl(e) && this._editProvider.handleContextMenu(t, e);
      if (i) {
        e.handledByEditProvider = !0;
        return;
      }
      this.callBase(...arguments);
    }
  },
  _getItemContainer: function(e) {
    if (this.option("grouped")) {
      var t, i = (t = this._editStrategy.getIndexByItemData(e)) === null || t === void 0 ? void 0 : t.group;
      return this._getGroupContainerByIndex(i);
    } else
      return this.callBase(e);
  },
  _itemContextMenuHandler(e) {
    var t = g(e.currentTarget);
    if (!t.is(".dx-state-disabled, .dx-state-disabled *")) {
      var i = !e.handledByEditProvider && this._editProvider.handleContextMenu(t, e);
      if (i) {
        e.preventDefault();
        return;
      }
      this.callBase(...arguments);
    }
  },
  _postprocessRenderItem(e) {
    this.callBase(...arguments), this._editProvider.modifyItemElement(e);
  },
  _clean() {
    this._disposeEditProvider(), this.callBase();
  },
  focusListItem(e) {
    var t = this._editStrategy.getItemElement(e);
    this.option("focusedElement", t), this.focus(), this.scrollToItem(this.option("focusedElement"));
  },
  _optionChanged(e) {
    switch (e.name) {
      case "selectAllMode":
        this._initDataSource(), this._dataController.pageIndex(0), this._dataController.load();
        break;
      case "grouped":
        this._clearSelectedItems(), delete this._renderingGroupIndex, this._initEditStrategy(), this.callBase(e);
        break;
      case "showSelectionControls":
      case "menuItems":
      case "menuMode":
      case "allowItemDeleting":
      case "itemDeleteMode":
      case "itemDragging":
      case "selectAllText":
        this._invalidate();
        break;
      case "onSelectAllValueChanged":
        break;
      default:
        this.callBase(e);
    }
  },
  selectAll() {
    return this._selection.selectAll(this._isPageSelectAll());
  },
  unselectAll() {
    return this._selection.deselectAll(this._isPageSelectAll());
  },
  isSelectAll() {
    return this._selection.getSelectAllState(this._isPageSelectAll());
  },
  getFlatIndexByItemElement(e) {
    return this._itemElements().index(e);
  },
  getItemElementByFlatIndex(e) {
    var t = this._itemElements();
    return e < 0 || e >= t.length ? g() : t.eq(e);
  },
  getItemByIndex(e) {
    return this._editStrategy.getItemDataByIndex(e);
  }
}), jo = N5.inherit(Ia).inherit({
  _addWidgetPrefix: function(e) {
    return "dx-list-" + e;
  },
  _getCombinedFilter: function() {
    var e = this._dataController, t = {
      filter: e.filter()
    };
    e.addSearchFilter(t);
    var i = t.filter;
    return i;
  },
  _initDataSource: function() {
    var e = this.option("searchValue"), t = this.option("searchExpr"), i = this.option("searchMode");
    this.callBase();
    var n = this._dataController;
    e && e.length && n.searchValue(e), i.length && n.searchOperation(Ia.getOperationBySearchMode(i)), t && n.searchExpr(t);
  }
});
We("dxList", jo);
var Z0 = T({}, Rc, {
  _dataExpressionDefaultOptions: function() {
    return {
      items: [],
      dataSource: null,
      itemTemplate: "item",
      value: null,
      valueExpr: "this",
      displayExpr: void 0
    };
  },
  _initDataExpressions: function() {
    this._compileValueGetter(), this._compileDisplayGetter(), this._initDynamicTemplates(), this._initDataSource(), this._itemsToDataSource();
  },
  _itemsToDataSource: function() {
    this.option("dataSource") || (this._dataSource = new Jn({
      store: new Il(this.option("items")),
      pageSize: 0
    }), this._initDataController());
  },
  _compileDisplayGetter: function() {
    this._displayGetter = tt(this._displayGetterExpr());
  },
  _displayGetterExpr: function() {
    return this.option("displayExpr");
  },
  _compileValueGetter: function() {
    this._valueGetter = tt(this._valueGetterExpr());
  },
  _valueGetterExpr: function() {
    return this.option("valueExpr") || "this";
  },
  _loadValue: function(e) {
    var t = new U();
    return e = this._unwrappedValue(e), x(e) ? (this._loadSingle(this._valueGetterExpr(), e).done(function(i) {
      this._isValueEquals(this._valueGetter(i), e) ? t.resolve(i) : t.reject();
    }.bind(this)).fail(function() {
      t.reject();
    }), this._loadValueDeferred = t, t.promise()) : t.reject().promise();
  },
  _rejectValueLoading: function() {
    var e;
    (e = this._loadValueDeferred) === null || e === void 0 || e.reject({
      shouldSkipCallback: !0
    });
  },
  _getCurrentValue: function() {
    return this.option("value");
  },
  _unwrappedValue: function(e) {
    var t;
    return e = (t = e) !== null && t !== void 0 ? t : this._getCurrentValue(), e && this._dataSource && this._valueGetterExpr() === "this" && (e = this._getItemKey(e)), ii.unwrap(e);
  },
  _getItemKey: function(e) {
    var t = this._dataSource.key();
    if (Array.isArray(t)) {
      for (var i = {}, n = 0, r = t.length; n < r; n++)
        i[t[n]] = e[t[n]];
      return i;
    }
    return t && typeof e == "object" && (e = e[t]), e;
  },
  _isValueEquals: function(e, t) {
    var i = this._dataSource && this._dataSource.key(), n = this._compareValues(e, t);
    return !n && i && x(e) && x(t) && (Array.isArray(i) ? n = this._compareByCompositeKey(e, t, i) : n = this._compareByKey(e, t, i)), n;
  },
  _compareByCompositeKey: function(e, t, i) {
    var n = De;
    if (!n(e) || !n(t))
      return !1;
    for (var r = 0, a = i.length; r < a; r++)
      if (e[i[r]] !== t[i[r]])
        return !1;
    return !0;
  },
  _compareByKey: function(e, t, i) {
    var n = ii.unwrap, r = ct(n(e[i]), e), a = ct(n(t[i]), t);
    return this._compareValues(r, a);
  },
  _compareValues: function(e, t) {
    return bt(e, !0) === bt(t, !0);
  },
  _initDynamicTemplates: $,
  _setCollectionWidgetItemTemplate: function() {
    this._initDynamicTemplates(), this._setCollectionWidgetOption("itemTemplate", this.option("itemTemplate"));
  },
  _getCollectionKeyExpr: function() {
    var e = this.option("valueExpr"), t = Te(e) && e !== "this" || ce(e);
    return t ? e : null;
  },
  _dataExpressionOptionChanged: function(e) {
    switch (e.name) {
      case "items":
        this._itemsToDataSource(), this._setCollectionWidgetOption("items");
        break;
      case "dataSource":
        this._initDataSource();
        break;
      case "itemTemplate":
        this._setCollectionWidgetItemTemplate();
        break;
      case "valueExpr":
        this._compileValueGetter();
        break;
      case "displayExpr":
        this._compileDisplayGetter(), this._initDynamicTemplates(), this._setCollectionWidgetOption("displayExpr");
    }
  }
}), Q0 = ke(), $5 = ".dx-list-item", H5 = "dxListItemData", z5 = "dx-dropdownlist-popup-wrapper", W5 = "input", G5 = ["startswith", "contains", "endwith", "notcontains"], J0 = ve.real().platform !== "android", OA = Gv.inherit({
  _supportedKeys: function() {
    var e = this.callBase();
    return T({}, e, {
      tab: function(t) {
        if (this._allowSelectItemByTab()) {
          this._saveValueChangeEvent(t);
          var i = g(this._list.option("focusedElement"));
          i.length && this._setSelectedElement(i);
        }
        e.tab.apply(this, arguments);
      },
      space: $,
      home: $,
      end: $
    });
  },
  _allowSelectItemByTab: function() {
    return this.option("opened") && this.option("applyValueMode") === "instantly";
  },
  _setSelectedElement: function(e) {
    var t = this._valueGetter(this._list._getItemData(e));
    this._setValue(t);
  },
  _setValue: function(e) {
    this.option("value", e);
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), T(Z0._dataExpressionDefaultOptions(), {
      displayValue: void 0,
      searchEnabled: !1,
      searchMode: "contains",
      searchTimeout: 500,
      minSearchLength: 0,
      searchExpr: null,
      valueChangeEvent: "input change keyup",
      selectedItem: null,
      noDataText: q.format("dxCollectionWidget-noDataText"),
      encodeNoDataText: !1,
      onSelectionChanged: null,
      onItemClick: $,
      showDataBeforeSearch: !1,
      grouped: !1,
      groupTemplate: "group",
      popupPosition: {
        my: "left top",
        at: "left bottom",
        offset: {
          h: 0,
          v: 0
        },
        collision: "flip"
      },
      wrapItemText: !1,
      useItemTextAsTitle: !1
    }));
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: {
        platform: "ios"
      },
      options: {
        popupPosition: {
          offset: {
            v: -1
          }
        }
      }
    }, {
      device: {
        platform: "generic"
      },
      options: {
        buttonsLocation: "bottom center"
      }
    }]);
  },
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      value: !0,
      selectedItem: !0,
      displayValue: !0
    });
  },
  _init: function() {
    this.callBase(), this._initDataExpressions(), this._initActions(), this._setListDataSource(), this._validateSearchMode(), this._clearSelectedItem(), this._initItems();
  },
  _setListFocusedElementOptionChange: function() {
    this._list._updateParentActiveDescendant = this._updateActiveDescendant.bind(this);
  },
  _initItems: function() {
    var e = this.option().items;
    e && !e.length && this._dataSource && (this.option().items = this._dataSource.items());
  },
  _initActions: function() {
    this._initContentReadyAction(), this._initSelectionChangedAction(), this._initItemClickAction();
  },
  _initContentReadyAction: function() {
    this._contentReadyAction = this._createActionByOption("onContentReady", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _initSelectionChangedAction: function() {
    this._selectionChangedAction = this._createActionByOption("onSelectionChanged", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  _initItemClickAction: function() {
    this._itemClickAction = this._createActionByOption("onItemClick");
  },
  _initTemplates: function() {
    this.callBase(), this._templateManager.addDefaultTemplates({
      item: new O_("item")
    });
  },
  _isEditable: function() {
    return this.callBase() || this.option("searchEnabled");
  },
  _saveFocusOnWidget: function(e) {
    this._list && this._list.initialOption("focusStateEnabled") && this._focusInput();
  },
  _fitIntoRange: function(e, t, i) {
    return e > i ? t : e < t ? i : e;
  },
  _items: function() {
    var e = this._getPlainItems(!this._list && this._dataSource.items()), t = new ui(e).filter("disabled", "<>", !0).toArray();
    return t;
  },
  _calcNextItem: function(e) {
    var t = this._items(), i = this._fitIntoRange(this._getSelectedIndex() + e, 0, t.length - 1);
    return t[i];
  },
  _getSelectedIndex: function() {
    var e = this._items(), t = this.option("selectedItem"), i = -1;
    return B(e, function(n, r) {
      if (this._isValueEquals(r, t))
        return i = n, !1;
    }.bind(this)), i;
  },
  _createPopup: function() {
    this.callBase(), this._updateCustomBoundaryContainer(), this._popup.$wrapper().addClass(this._popupWrapperClass());
    var e = this._popup.$content();
    w.off(e, "mouseup"), w.on(e, "mouseup", this._saveFocusOnWidget.bind(this));
  },
  _updateCustomBoundaryContainer: function() {
    var e = this.option("dropDownOptions.container"), t = e && g(e);
    if (t && t.length && !Ct(t.get(0))) {
      var i = [].slice.call(t.parents());
      i.unshift(t.get(0)), B(i, function(n, r) {
        if (r === g("body").get(0))
          return !1;
        if (Q0.getComputedStyle(r).overflowY === "hidden")
          return this._$customBoundaryContainer = g(r), !1;
      }.bind(this));
    }
  },
  _popupWrapperClass: function() {
    return z5;
  },
  _renderInputValue: function() {
    var e = this._getCurrentValue();
    return this._rejectValueLoading(), this._loadInputValue(e, this._setSelectedItem.bind(this)).always(this.callBase.bind(this, e));
  },
  _loadInputValue: function(e, t) {
    return this._loadItem(e).always(t);
  },
  _getItemFromPlain: function(e, t) {
    var i, n;
    return t && typeof e != "object" && (t.itemByValue || (t.itemByValue = {}, i = this._getPlainItems(), i.forEach(function(r) {
      t.itemByValue[this._valueGetter(r)] = r;
    }, this)), n = t.itemByValue[e]), n || (i = this._getPlainItems(), n = li(i, function(r) {
      return this._isValueEquals(this._valueGetter(r), e);
    }.bind(this))[0]), n;
  },
  _loadItem: function(e, t) {
    var i = this._getItemFromPlain(e, t);
    return i !== void 0 ? new U().resolve(i).promise() : this._loadValue(e);
  },
  _getPlainItems: function(e) {
    var t = [];
    e = e || this.option("items") || this._dataSource.items() || [];
    for (var i = 0; i < e.length; i++)
      e[i] && e[i].items ? t = t.concat(e[i].items) : t.push(e[i]);
    return t;
  },
  _updateActiveDescendant() {
    var e, t = this.option("opened"), i = (e = this._list) === null || e === void 0 ? void 0 : e.getFocusedItemId(), n = g("#".concat(i)).length > 0, r = t && n && i;
    this.setAria({
      activedescendant: r || null
    });
  },
  _setSelectedItem: function(e) {
    var t = this._displayValue(e);
    this.option("selectedItem", ct(e, null)), this.option("displayValue", t);
  },
  _displayValue: function(e) {
    return this._displayGetter(e);
  },
  _refreshSelected: function() {
    var e = {};
    this._listItemElements().each(function(t, i) {
      var n = g(i), r = this._valueGetter(n.data(H5)), a = this._isSelectedValue(r, e);
      a ? this._list.selectItem(n) : this._list.unselectItem(n);
    }.bind(this));
  },
  _popupShownHandler: function() {
    this.callBase(), this._setFocusPolicy();
  },
  _setFocusPolicy: function() {
    !this.option("focusStateEnabled") || !this._list || this._list.option("focusedElement", null);
  },
  _isSelectedValue: function(e) {
    return this._isValueEquals(e, this.option("value"));
  },
  _validateSearchMode: function() {
    var e = this.option("searchMode"), t = e.toLowerCase();
    if (!G5.includes(t))
      throw $e.Error("E1019", e);
  },
  _clearSelectedItem: function() {
    this.option("selectedItem", null);
  },
  _processDataSourceChanging: function() {
    this._initDataController(), this._setListOption("_dataController", this._dataController), this._setListDataSource(), this._renderInputValue().fail(function() {
      this._isCustomValueAllowed() || this._clearSelectedItem();
    }.bind(this));
  },
  _isCustomValueAllowed: function() {
    return this.option("displayCustomValue");
  },
  reset: function() {
    this.callBase(), this._clearFilter(), this._clearSelectedItem();
  },
  _listItemElements: function() {
    return this._$list ? this._$list.find($5) : g();
  },
  _popupConfig: function() {
    return T(this.callBase(), {
      templatesRenderAsynchronously: !1,
      autoResizeEnabled: !1,
      maxHeight: this._getMaxHeight.bind(this)
    });
  },
  _renderPopupContent: function() {
    this.callBase(), this._renderList();
  },
  _getKeyboardListeners() {
    var e = this._canListHaveFocus();
    return this.callBase().concat([!e && this._list]);
  },
  _setAriaTargetForList: function() {
    this._list._getAriaTarget = this._getAriaTarget.bind(this);
  },
  _renderList: function() {
    this._listId = "dx-" + new Ot()._value;
    var e = this._$list = g("<div>").attr("id", this._listId).appendTo(this._popup.$content());
    this._list = this._createComponent(e, jo, this._listConfig()), this._refreshList(), this._setAriaTargetForList(), this._list.option("_listAttributes", {
      role: "combobox"
    }), this._renderPreventBlurOnListClick(), this._setListFocusedElementOptionChange();
  },
  _renderPreventBlurOnListClick: function() {
    var e = oe("mousedown", "dxDropDownList");
    w.off(this._$list, e), w.on(this._$list, e, (t) => t.preventDefault());
  },
  _getControlsAria() {
    return this._list && this._listId;
  },
  _renderOpenedState: function() {
    this.callBase(), this._list && this._updateActiveDescendant(), this.setAria("owns", this._popup && this._popupContentId);
  },
  _setDefaultAria: function() {
    this.setAria({
      haspopup: "listbox",
      autocomplete: "list"
    });
  },
  _refreshList: function() {
    this._list && this._shouldRefreshDataSource() && this._setListDataSource();
  },
  _shouldRefreshDataSource: function() {
    var e = !!this._list.option("dataSource");
    return e !== this._needPassDataSourceToList();
  },
  _isDesktopDevice: function() {
    return ve.real().deviceType === "desktop";
  },
  _listConfig: function() {
    var e = {
      selectionMode: "single",
      _templates: this.option("_templates"),
      templateProvider: this.option("templateProvider"),
      noDataText: this.option("noDataText"),
      encodeNoDataText: this.option("encodeNoDataText"),
      grouped: this.option("grouped"),
      wrapItemText: this.option("wrapItemText"),
      useItemTextAsTitle: this.option("useItemTextAsTitle"),
      onContentReady: this._listContentReadyHandler.bind(this),
      itemTemplate: this.option("itemTemplate"),
      indicateLoading: !1,
      keyExpr: this._getCollectionKeyExpr(),
      displayExpr: this._displayGetterExpr(),
      groupTemplate: this.option("groupTemplate"),
      onItemClick: this._listItemClickAction.bind(this),
      dataSource: this._getDataSource(),
      _dataController: this._dataController,
      hoverStateEnabled: this._isDesktopDevice() ? this.option("hoverStateEnabled") : !1,
      focusStateEnabled: this._isDesktopDevice() ? this.option("focusStateEnabled") : !1
    };
    return this._canListHaveFocus() || (e.tabIndex = null), e;
  },
  _canListHaveFocus: () => !1,
  _getDataSource: function() {
    return this._needPassDataSourceToList() ? this._dataSource : null;
  },
  _dataSourceOptions: function() {
    return {
      paginate: !1
    };
  },
  _getGroupedOption: function() {
    return this.option("grouped");
  },
  _dataSourceFromUrlLoadMode: function() {
    return "raw";
  },
  _listContentReadyHandler: function() {
    this._list = this._list || this._$list.dxList("instance"), this.option("deferRendering") || this._refreshSelected(), this._updatePopupWidth(), this._updateListDimensions(), this._contentReadyAction();
  },
  _setListOption: function(e, t) {
    this._setWidgetOption("_list", arguments);
  },
  _listItemClickAction: function(e) {
    this._listItemClickHandler(e), this._itemClickAction(e);
  },
  _listItemClickHandler: $,
  _setListDataSource: function() {
    this._list && (this._setListOption("dataSource", this._getDataSource()), this._needPassDataSourceToList() || this._setListOption("items", []));
  },
  _needPassDataSourceToList: function() {
    return this.option("showDataBeforeSearch") || this._isMinSearchLengthExceeded();
  },
  _isMinSearchLengthExceeded: function() {
    return this._searchValue().toString().length >= this.option("minSearchLength");
  },
  _needClearFilter: function() {
    return this._canKeepDataSource() ? !1 : this._needPassDataSourceToList();
  },
  _canKeepDataSource: function() {
    var e = this._isMinSearchLengthExceeded();
    return this._dataController.isLoaded() && this.option("showDataBeforeSearch") && this.option("minSearchLength") && !e && !this._isLastMinSearchLengthExceeded;
  },
  _searchValue: function() {
    return this._input().val() || "";
  },
  _getSearchEvent: function() {
    return oe(W5, this.NAME + "Search");
  },
  _getCompositionStartEvent: function() {
    return oe("compositionstart", this.NAME + "CompositionStart");
  },
  _getCompositionEndEvent: function() {
    return oe("compositionend", this.NAME + "CompositionEnd");
  },
  _getSetFocusPolicyEvent: function() {
    return oe("input", this.NAME + "FocusPolicy");
  },
  _renderEvents: function() {
    this.callBase(), w.on(this._input(), this._getSetFocusPolicyEvent(), () => {
      this._setFocusPolicy();
    }), this._shouldRenderSearchEvent() && (w.on(this._input(), this._getSearchEvent(), (e) => {
      this._searchHandler(e);
    }), J0 && (w.on(this._input(), this._getCompositionStartEvent(), () => {
      this._isTextCompositionInProgress(!0);
    }), w.on(this._input(), this._getCompositionEndEvent(), (e) => {
      this._isTextCompositionInProgress(void 0), this._searchHandler(e, this._searchValue());
    })));
  },
  _shouldRenderSearchEvent: function() {
    return this.option("searchEnabled");
  },
  _refreshEvents: function() {
    w.off(this._input(), this._getSearchEvent()), w.off(this._input(), this._getSetFocusPolicyEvent()), J0 && (w.off(this._input(), this._getCompositionStartEvent()), w.off(this._input(), this._getCompositionEndEvent())), this.callBase();
  },
  _isTextCompositionInProgress: function(e) {
    if (arguments.length)
      this._isTextComposition = e;
    else
      return this._isTextComposition;
  },
  _searchHandler: function(e, t) {
    if (!this._isTextCompositionInProgress()) {
      if (!this._isMinSearchLengthExceeded()) {
        this._searchCanceled();
        return;
      }
      var i = this.option("searchTimeout");
      i ? (this._clearSearchTimer(), this._searchTimer = setTimeout(() => {
        this._searchDataSource(t);
      }, i)) : this._searchDataSource(t);
    }
  },
  _searchCanceled: function() {
    this._clearSearchTimer(), this._needClearFilter() && this._filterDataSource(null), this._refreshList();
  },
  _searchDataSource: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._searchValue();
    this._filterDataSource(e);
  },
  _filterDataSource: function(e) {
    this._clearSearchTimer();
    var t = this._dataController;
    t.searchExpr(this.option("searchExpr") || this._displayGetterExpr()), t.searchOperation(this.option("searchMode")), t.searchValue(e), t.load().done(this._dataSourceFiltered.bind(this, e));
  },
  _clearFilter: function() {
    var e = this._dataController;
    e.searchValue() && e.searchValue(null);
  },
  _dataSourceFiltered: function() {
    this._isLastMinSearchLengthExceeded = this._isMinSearchLengthExceeded(), this._refreshList(), this._refreshPopupVisibility();
  },
  _shouldOpenPopup: function() {
    return this._hasItemsToShow();
  },
  _refreshPopupVisibility: function() {
    if (!(this.option("readOnly") || !this._searchValue())) {
      var e = this._shouldOpenPopup();
      e && !this._isFocused() || (this.option("opened", e), e && (this._updatePopupWidth(), this._updateListDimensions()));
    }
  },
  _dataSourceChangedHandler: function(e) {
    this._dataController.pageIndex() === 0 ? this.option().items = e : this.option().items = this.option().items.concat(e);
  },
  _hasItemsToShow: function() {
    var e = this._dataController, t = e.items() || [], i = t.length, n = this._needPassDataSourceToList();
    return !!(n && i);
  },
  _clearSearchTimer: function() {
    clearTimeout(this._searchTimer), delete this._searchTimer;
  },
  _popupShowingHandler: function() {
    this._updatePopupWidth(), this._updateListDimensions();
  },
  _dimensionChanged: function() {
    this.callBase(), this._updateListDimensions();
  },
  _needPopupRepaint: function() {
    var e = this._dataController, t = e.pageIndex(), i = x(this._pageIndex) && t <= this._pageIndex || e.isLastPage() && !this._list._scrollViewIsFull();
    return this._pageIndex = t, i;
  },
  _updateListDimensions: function() {
    this._popup && (this._needPopupRepaint() && this._popup.repaint(), this._list && this._list.updateDimensions());
  },
  _getMaxHeight: function() {
    var e = this.$element(), t = this._$customBoundaryContainer, i = e.offset().top - (t ? t.offset().top : 0), n = Ne(Q0), r = t ? Math.min(Ne(t), n) : n, a = Math.max(i, r - i - Ne(e));
    return Math.min(0.5 * r, a);
  },
  _clean: function() {
    this._list && delete this._list, delete this._isLastMinSearchLengthExceeded, this.callBase();
  },
  _dispose: function() {
    this._clearSearchTimer(), this.callBase();
  },
  _setCollectionWidgetOption: function() {
    this._setListOption.apply(this, arguments);
  },
  _setSubmitValue: function() {
    var e = this.option("value"), t = this._shouldUseDisplayValue(e) ? this._displayGetter(e) : e;
    this._getSubmitElement().val(t);
  },
  _shouldUseDisplayValue: function(e) {
    return this.option("valueExpr") === "this" && De(e);
  },
  _optionChanged: function(e) {
    switch (this._dataExpressionOptionChanged(e), e.name) {
      case "hoverStateEnabled":
      case "focusStateEnabled":
        this._isDesktopDevice() && this._setListOption(e.name, e.value), this.callBase(e);
        break;
      case "items":
        this.option("dataSource") || this._processDataSourceChanging();
        break;
      case "dataSource":
        this._processDataSourceChanging();
        break;
      case "valueExpr":
        this._renderValue(), this._setListOption("keyExpr", this._getCollectionKeyExpr());
        break;
      case "displayExpr":
        this._renderValue(), this._setListOption("displayExpr", this._displayGetterExpr());
        break;
      case "searchMode":
        this._validateSearchMode();
        break;
      case "minSearchLength":
        this._refreshList();
        break;
      case "searchEnabled":
      case "showDataBeforeSearch":
      case "searchExpr":
        this._invalidate();
        break;
      case "onContentReady":
        this._initContentReadyAction();
        break;
      case "onSelectionChanged":
        this._initSelectionChangedAction();
        break;
      case "onItemClick":
        this._initItemClickAction();
        break;
      case "grouped":
      case "groupTemplate":
      case "wrapItemText":
      case "noDataText":
      case "encodeNoDataText":
      case "useItemTextAsTitle":
        this._setListOption(e.name);
        break;
      case "displayValue":
        this.option("text", e.value);
        break;
      case "itemTemplate":
      case "searchTimeout":
        break;
      case "selectedItem":
        e.previousValue !== e.value && this._selectionChangedAction({
          selectedItem: e.value
        });
        break;
      default:
        this.callBase(e);
    }
  }
}).include(Z0, sA);
We("dxDropDownList", OA);
var K5 = "dx-radiobutton", eb = "dx-radiobutton-icon", U5 = "dx-radiobutton-icon-dot", j5 = "dx-radiobutton-checked", q5 = "dx-radiobutton-icon-checked", RA = nn.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), {
      space: function(e) {
        e.preventDefault(), this._clickAction({
          event: e
        });
      }
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      hoverStateEnabled: !0,
      activeStateEnabled: !0,
      value: !1
    });
  },
  _canValueBeChangedByClick: function() {
    return !0;
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }]);
  },
  _init: function() {
    this.callBase(), this.$element().addClass(K5);
  },
  _initMarkup: function() {
    this.callBase(), this._renderIcon(), this._renderCheckedState(this.option("value")), this._renderClick(), this.setAria("role", "radio");
  },
  _renderIcon: function() {
    this._$icon = g("<div>").addClass(eb), g("<div>").addClass(U5).appendTo(this._$icon), this.$element().append(this._$icon);
  },
  _renderCheckedState: function(e) {
    this.$element().toggleClass(j5, e).find("." + eb).toggleClass(q5, e), this.setAria("checked", e);
  },
  _renderClick: function() {
    var e = oe(Xe, this.NAME);
    this._clickAction = this._createAction(function(t) {
      this._clickHandler(t.event);
    }.bind(this)), w.off(this.$element(), e), w.on(this.$element(), e, function(t) {
      this._clickAction({
        event: t
      });
    }.bind(this));
  },
  _clickHandler: function(e) {
    this._saveValueChangeEvent(e), this.option("value", !0);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "value":
        this._renderCheckedState(e.value), this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxRadioButton", RA);
var Uv = "dxListEditDecorator", X5 = oe($c, Uv), Y5 = oe(Hc, Uv), Z5 = oe(Kl, Uv), Q5 = ze.inherit({
  ctor: function(e) {
    this._list = e, this._init();
  },
  _init: $,
  _shouldHandleSwipe: !1,
  _attachSwipeEvent: function(e) {
    var t = {
      itemSizeFunc: function() {
        return this._clearSwipeCache && (this._itemWidthCache = Ae(this._list.$element()), this._clearSwipeCache = !1), this._itemWidthCache;
      }.bind(this)
    };
    w.on(e.$itemElement, X5, t, this._itemSwipeStartHandler.bind(this)), w.on(e.$itemElement, Y5, this._itemSwipeUpdateHandler.bind(this)), w.on(e.$itemElement, Z5, this._itemSwipeEndHandler.bind(this));
  },
  _itemSwipeStartHandler: function(e) {
    var t = g(e.currentTarget);
    if (t.is(".dx-state-disabled, .dx-state-disabled *")) {
      e.cancel = !0;
      return;
    }
    clearTimeout(this._list._inkRippleTimer), this._swipeStartHandler(t, e);
  },
  _itemSwipeUpdateHandler: function(e) {
    var t = g(e.currentTarget);
    this._swipeUpdateHandler(t, e);
  },
  _itemSwipeEndHandler: function(e) {
    var t = g(e.currentTarget);
    this._swipeEndHandler(t, e), this._clearSwipeCache = !0;
  },
  beforeBag: $,
  afterBag: $,
  _commonOptions: function() {
    return {
      activeStateEnabled: this._list.option("activeStateEnabled"),
      hoverStateEnabled: this._list.option("hoverStateEnabled"),
      focusStateEnabled: this._list.option("focusStateEnabled")
    };
  },
  modifyElement: function(e) {
    this._shouldHandleSwipe && (this._attachSwipeEvent(e), this._clearSwipeCache = !0);
  },
  afterRender: $,
  handleClick: $,
  handleKeyboardEvents: $,
  handleEnterPressing: $,
  handleContextMenu: $,
  _swipeStartHandler: $,
  _swipeUpdateHandler: $,
  _swipeEndHandler: $,
  visibilityChange: $,
  getExcludedSelectors: $,
  dispose: $
}), tb = "dx-list-select-decorator-enabled", J5 = "dx-list-select-all", ej = "dx-list-select-all-checkbox", tj = "dx-list-select-all-label", ij = "dx-list-select-checkbox-container", nj = "dx-list-select-checkbox", rj = "dx-list-select-radiobutton-container", aj = "dx-list-select-radiobutton", oj = "dx-state-focused", ib = oe(Xe, "dxListEditDecorator");
D5("selection", "default", Q5.inherit({
  _init: function() {
    this.callBase.apply(this, arguments);
    var e = this._list.option("selectionMode");
    this._singleStrategy = e === "single", this._containerClass = this._singleStrategy ? rj : ij, this._controlClass = this._singleStrategy ? aj : nj, this._controlWidget = this._singleStrategy ? RA : Ta, this._list.$element().addClass(tb);
  },
  beforeBag: function(e) {
    var t = e.$itemElement, i = e.$container.addClass(this._containerClass), n = g("<div>").addClass(this._controlClass).appendTo(i);
    new this._controlWidget(n, T(this._commonOptions(), {
      value: this._isSelected(t),
      focusStateEnabled: !1,
      hoverStateEnabled: !1,
      onValueChanged: function(r) {
        r.event && this._list._saveSelectionChangeEvent(r.event), this._processCheckedState(t, r.value), r.event && r.event.stopPropagation();
      }.bind(this)
    }));
  },
  modifyElement: function(e) {
    this.callBase.apply(this, arguments);
    var t = e.$itemElement, i = this._controlWidget.getInstance(t.find("." + this._controlClass));
    w.on(t, "stateChanged", function(n, r) {
      i.option("value", r);
    }.bind(this));
  },
  _updateSelectAllState: function() {
    this._$selectAll && this._selectAllCheckBox.option("value", this._list.isSelectAll());
  },
  afterRender: function() {
    this._list.option("selectionMode") === "all" && (this._$selectAll ? this._updateSelectAllState() : this._renderSelectAll());
  },
  handleKeyboardEvents: function(e, t) {
    var i = !t, n = this._list, r = this._$selectAll, a = n._getLastItemIndex(), o = t && e === 0 || i && e === a, s = !!r;
    return s && o ? (n.option("focusedElement", r), n.scrollToItem(n.option("focusedElement")), !0) : !1;
  },
  handleEnterPressing: function(e) {
    if (this._$selectAll && this._$selectAll.hasClass(oj))
      return e.target = this._$selectAll.get(0), this._list._saveSelectionChangeEvent(e), this._selectAllCheckBox.option("value", !this._selectAllCheckBox.option("value")), !0;
  },
  _renderSelectAll: function() {
    var e = this._$selectAll = g("<div>").addClass(J5), t = this._list, i = t._supportedKeys().downArrow.bind(t);
    this._selectAllCheckBox = t._createComponent(g("<div>").addClass(ej).appendTo(e), Ta, {
      focusStateEnabled: !1,
      hoverStateEnabled: !1
    }), this._selectAllCheckBox.registerKeyHandler("downArrow", i), g("<div>").addClass(tj).text(this._list.option("selectAllText")).appendTo(e), this._list.itemsContainer().prepend(e), this._updateSelectAllState(), this._attachSelectAllHandler();
  },
  _attachSelectAllHandler: function() {
    this._selectAllCheckBox.option("onValueChanged", this._selectAllHandler.bind(this)), w.off(this._$selectAll, ib), w.on(this._$selectAll, ib, this._selectAllClickHandler.bind(this));
  },
  _selectAllHandler: function(e) {
    e.event && e.event.stopPropagation();
    var t = this._selectAllCheckBox.option("value");
    e.event && this._list._saveSelectionChangeEvent(e.event), t === !0 ? this._selectAllItems() : t === !1 && this._unselectAllItems(), this._list._createActionByOption("onSelectAllValueChanged")({
      value: t
    });
  },
  _checkSelectAllCapability: function() {
    var e = this._list, t = e._dataController;
    return e.option("selectAllMode") === "allPages" && e.option("grouped") && !t.group() ? ($e.log("W1010"), !1) : !0;
  },
  _selectAllItems: function() {
    this._checkSelectAllCapability() && this._list._selection.selectAll(this._list.option("selectAllMode") === "page");
  },
  _unselectAllItems: function() {
    this._checkSelectAllCapability() && this._list._selection.deselectAll(this._list.option("selectAllMode") === "page");
  },
  _selectAllClickHandler: function(e) {
    this._list._saveSelectionChangeEvent(e), this._selectAllCheckBox.option("value", !this._selectAllCheckBox.option("value"));
  },
  _isSelected: function(e) {
    return this._list.isItemSelected(e);
  },
  _processCheckedState: function(e, t) {
    t ? this._list.selectItem(e) : this._list.unselectItem(e);
  },
  dispose: function() {
    this._disposeSelectAll(), this._list.$element().removeClass(tb), this.callBase.apply(this, arguments);
  },
  _disposeSelectAll: function() {
    this._$selectAll && (this._$selectAll.remove(), this._$selectAll = null);
  }
}));
var sj = ".dx-state-disabled", lj = "dx-selectbox", uj = "dx-selectbox-popup", dj = "dx-selectbox-container", nb = "dx-selectbox-popup-wrapper", jv = OA.inherit({
  _supportedKeys: function() {
    var e = this, t = this.callBase(), i = function(r) {
      var a = this._isEditable();
      a ? this._valueSubstituted() && (this._preventFiltering = !0) : this.option("showClearButton") && (r.preventDefault(), this.reset()), this._savedTextRemoveEvent = r, this._preventSubstitution = !0;
    }, n = function() {
      e.option("searchEnabled") && e._valueSubstituted() && e._searchHandler();
    };
    return T({}, t, {
      tab: function() {
        this.option("opened") && this.option("applyValueMode") === "instantly" && this._resetCaretPosition(!0), t.tab && t.tab.apply(this, arguments), this._cancelSearchIfNeed();
      },
      upArrow: function(r) {
        if (t.upArrow && t.upArrow.apply(this, arguments))
          return this.option("opened") || this._setNextValue(r), !0;
      },
      downArrow: function(r) {
        if (t.downArrow && t.downArrow.apply(this, arguments))
          return this.option("opened") || this._setNextValue(r), !0;
      },
      leftArrow: function() {
        n(), t.leftArrow && t.leftArrow.apply(this, arguments);
      },
      rightArrow: function() {
        n(), t.rightArrow && t.rightArrow.apply(this, arguments);
      },
      home: function() {
        n(), t.home && t.home.apply(this, arguments);
      },
      end: function() {
        n(), t.end && t.end.apply(this, arguments);
      },
      escape: function() {
        var r = t.escape && t.escape.apply(this, arguments);
        return this._cancelEditing(), r ?? !0;
      },
      enter: function(r) {
        var a = this.option("opened"), o = this._input().val().trim(), s = o && this._list && !this._list.option("focusedElement");
        if (!o && x(this.option("value")) && this.option("allowClearing"))
          this._saveValueChangeEvent(r), this.option({
            selectedItem: null,
            value: null
          }), this.close();
        else {
          if (this.option("acceptCustomValue"))
            return r.preventDefault(), s && (a && this._toggleOpenState(), this._valueChangeEventHandler(r)), a;
          if (t.enter && t.enter.apply(this, arguments))
            return a;
        }
      },
      space: function(r) {
        var a = this.option("opened"), o = this.option("searchEnabled"), s = this.option("acceptCustomValue");
        if (!(!a || o || s))
          return r.preventDefault(), this._valueChangeEventHandler(r), !0;
      },
      backspace: i,
      del: i
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      placeholder: q.format("Select"),
      fieldTemplate: null,
      customItemCreateEvent: "change",
      valueChangeEvent: "change",
      acceptCustomValue: !1,
      onCustomItemCreating: function(e) {
        x(e.customItem) || (e.customItem = e.text);
      },
      showSelectionControls: !1,
      allowClearing: !0,
      tooltipEnabled: !1,
      openOnFieldClick: !0,
      showDropDownButton: !0,
      displayCustomValue: !1,
      useHiddenSubmitElement: !0
    });
  },
  _init: function() {
    this.callBase(), this._initCustomItemCreatingAction();
  },
  _initMarkup: function() {
    this.$element().addClass(lj), this._renderTooltip(), this.callBase(), this._$container.addClass(dj);
  },
  _createPopup: function() {
    this.callBase(), this._popup.$element().addClass(uj), this._popup.$overlayContent().attr("tabindex", -1);
  },
  _popupWrapperClass: function() {
    return this.callBase() + " " + nb;
  },
  _setDeprecatedOptions() {
    this.callBase(), T(this._deprecatedOptions, {
      valueChangeEvent: {
        since: "22.2",
        alias: "customItemCreateEvent"
      }
    });
  },
  _cancelEditing: function() {
    !this.option("searchEnabled") && this._list && (this._focusListElement(null), this._updateField(this.option("selectedItem")));
  },
  _renderOpenedState: function() {
    this.callBase(), this.option("opened") && (this._scrollToSelectedItem(), this._focusSelectedElement());
  },
  _focusSelectedElement: function() {
    var e, t = this._searchValue();
    if (!t) {
      this._focusListElement(null);
      return;
    }
    var {
      items: i,
      selectedItem: n
    } = this.option(), r = this._list._itemElements(), a = (e = i == null ? void 0 : i.indexOf(n)) !== null && e !== void 0 ? e : -1, o = a !== -1 && !this._isCustomItemSelected() ? r.eq(a) : null;
    this._focusListElement(o);
  },
  _renderFocusedElement: function() {
    if (this._list) {
      var e = this._searchValue();
      if (!e || this.option("acceptCustomValue")) {
        this._focusListElement(null);
        return;
      }
      var t = this._list._itemElements(), i = t.not(sj).eq(0);
      this._focusListElement(i);
    }
  },
  _focusListElement: function(e) {
    this._preventInputValueRender = !0, this._list.option("focusedElement", Ie(e)), delete this._preventInputValueRender;
  },
  _scrollToSelectedItem: function() {
    this._list && this._list.scrollToItem(this._list.option("selectedItem"));
  },
  _listContentReadyHandler: function() {
    this.callBase();
    var e = this._dataController.paginate();
    e && this._needPopupRepaint() || this._scrollToSelectedItem();
  },
  _renderValue: function() {
    return this._renderInputValue(), this._setSubmitValue(), new U().resolve();
  },
  _renderInputValue: function() {
    return this.callBase().always(function() {
      this._renderInputValueAsync();
    }.bind(this));
  },
  _renderInputValueAsync: function() {
    this._renderTooltip(), this._renderInputValueImpl().always(function() {
      this._refreshSelected();
    }.bind(this));
  },
  _renderInputValueImpl: function() {
    return this._renderField(), new U().resolve();
  },
  _setNextItem: function(e) {
    var t = this._calcNextItem(e), i = this._valueGetter(t);
    this._setValue(i);
  },
  _setNextValue: function(e) {
    var t = this._dataController.isLoaded() ? new U().resolve() : this._dataController.load();
    t.done(function() {
      var i = this._getSelectedIndex(), n = this._dataController.pageSize(), r = this._dataController.isLastPage(), a = i === this._items().length - 1;
      this._saveValueChangeEvent(e);
      var o = ht(e) === "downArrow" ? 1 : -1;
      n && !r && a && o > 0 ? (this._popup || this._createPopup(), this._dataController.isLoading() || this._list._loadNextPage().done(this._setNextItem.bind(this, o))) : this._setNextItem(o);
    }.bind(this));
  },
  _setSelectedItem: function(e) {
    var t = !this._isCustomValueAllowed() && e === void 0;
    this.callBase(t ? null : e), !t && (!this._isEditable() || this._isCustomItemSelected()) && this._setListOption("selectedItem", this.option("selectedItem"));
  },
  _isCustomValueAllowed: function() {
    return this.option("acceptCustomValue") || this.callBase();
  },
  _displayValue: function(e) {
    return e = !x(e) && this._isCustomValueAllowed() ? this.option("value") : e, this.callBase(e);
  },
  _listConfig: function() {
    var e = T(this.callBase(), {
      pageLoadMode: "scrollBottom",
      onSelectionChanged: this._getSelectionChangeHandler(),
      selectedItem: this.option("selectedItem"),
      onFocusedItemChanged: this._listFocusedItemChangeHandler.bind(this)
    });
    return this.option("showSelectionControls") && T(e, {
      showSelectionControls: !0,
      selectionByClick: !0
    }), e;
  },
  _listFocusedItemChangeHandler: function(e) {
    if (!this._preventInputValueRender) {
      var t = e.component, i = g(t.option("focusedElement")), n = t._getItemData(i);
      this._updateField(n);
    }
  },
  _updateField: function(e) {
    var t = this._getTemplateByOption("fieldTemplate");
    if (!(t && this.option("fieldTemplate"))) {
      var i = this._displayGetter(e);
      this.option("text", i), this._renderDisplayText(i);
      return;
    }
    this._renderField();
  },
  _getSelectionChangeHandler: function() {
    return this.option("showSelectionControls") ? this._selectionChangeHandler.bind(this) : $;
  },
  _selectionChangeHandler: function(e) {
    B(e.addedItems || [], function(t, i) {
      this._setValue(this._valueGetter(i));
    }.bind(this));
  },
  _getActualSearchValue: function() {
    return this._dataController.searchValue();
  },
  _toggleOpenState: function(e) {
    if (!this.option("disabled")) {
      if (e = arguments.length ? e : !this.option("opened"), !e && !this._shouldClearFilter() && this._restoreInputText(!0), this._wasSearch() && e) {
        this._wasSearch(!1);
        var t = this.option("showDataBeforeSearch") || this._isMinSearchLengthExceeded();
        if (t && this._dataController.getDataSource()) {
          if (this._searchTimer)
            return;
          var i = this._getActualSearchValue();
          i && this._wasSearch(!0), this._filterDataSource(i || null);
        } else
          this._setListOption("items", []);
      }
      e && this._scrollToSelectedItem(), this.callBase(e);
    }
  },
  _renderTooltip: function() {
    this.option("tooltipEnabled") && this.$element().attr("title", this.option("displayValue"));
  },
  _renderDimensions: function() {
    this.callBase(), this._updatePopupWidth(), this._updateListDimensions();
  },
  _isValueEqualInputText: function() {
    var e = this.option("selectedItem");
    if (e === null)
      return !1;
    var t = this._displayGetter(e), i = t ? String(t) : "", n = this._searchValue();
    return i === n;
  },
  _popupHidingHandler: function() {
    this._isValueEqualInputText() && this._cancelEditing(), this.callBase();
  },
  _popupHiddenHandler: function() {
    this.callBase(), this._shouldCancelSearch() && (this._wasSearch(!1), this._searchCanceled(), this._shouldCancelSearch(!1));
  },
  _restoreInputText: function(e) {
    this.option("readOnly") || this._loadItemDeferred && this._loadItemDeferred.always(function() {
      var {
        acceptCustomValue: t,
        text: i,
        selectedItem: n
      } = this.option();
      if (t) {
        !e && !this._isValueChanging && (this._updateField(n ?? this._createCustomItem(i)), this._clearFilter());
        return;
      }
      if (this.option("searchEnabled") && !this._searchValue() && this.option("allowClearing")) {
        this._clearTextValue();
        return;
      }
      this._isValueEqualInputText() || this._renderInputValue().always(function(r) {
        var a = ct(r, n);
        this._setSelectedItem(a), this._updateField(a), this._clearFilter();
      }.bind(this));
    }.bind(this));
  },
  _valueChangeEventIncludesBlur: function() {
    var e = this.option(this._getValueChangeEventOptionName());
    return e.includes("blur");
  },
  _isPreventedFocusOutEvent: function(e) {
    return this._preventNestedFocusEvent(e) || this._valueChangeEventIncludesBlur();
  },
  _focusOutHandler: function(e) {
    if (!this._isPreventedFocusOutEvent(e)) {
      var t = this._isOverlayNestedTarget(e.relatedTarget);
      t || (this._restoreInputText(), this._clearSearchTimer()), this._cancelSearchIfNeed(e);
    }
    e.target = this._input().get(0), this.callBase(e);
  },
  _cancelSearchIfNeed: function(e) {
    var {
      searchEnabled: t
    } = this.option(), i = this._isOverlayNestedTarget(e == null ? void 0 : e.relatedTarget), n = this._wasSearch() && t && !i;
    if (n) {
      var r, a = (r = this._popup) === null || r === void 0 ? void 0 : r._hideAnimationProcessing;
      this._clearSearchTimer(), a ? this._shouldCancelSearch(!0) : (this._wasSearch(!1), this._searchCanceled());
    }
  },
  _shouldCancelSearch: function(e) {
    if (!arguments.length)
      return this._shouldCancelSearchValue;
    this._shouldCancelSearchValue = e;
  },
  _isOverlayNestedTarget: function(e) {
    return !!g(e).closest(".".concat(nb)).length;
  },
  _clearTextValue: function() {
    this.option("selectedItem") && (this._savedTextRemoveEvent && this._saveValueChangeEvent(this._savedTextRemoveEvent), this.option("value", null)), delete this._savedTextRemoveEvent;
  },
  _shouldOpenPopup: function() {
    return this._needPassDataSourceToList() && this._wasSearch();
  },
  _isFocused: function() {
    var e = ee.getActiveElement(this.element());
    return this.callBase() && g(e).closest(this._input()).length > 0;
  },
  _getValueChangeEventOptionName: function() {
    return "customItemCreateEvent";
  },
  _renderValueChangeEvent: function() {
    this._isEditable() && this.callBase();
  },
  _fieldRenderData: function() {
    var e = this._list && this.option("opened") && g(this._list.option("focusedElement"));
    return e && e.length ? this._list._getItemData(e) : this.option("selectedItem");
  },
  _isSelectedValue: function(e) {
    return this._isValueEquals(e, this.option("value"));
  },
  _shouldCloseOnItemClick: function() {
    return !(this.option("showSelectionControls") && this.option("selectionMode") !== "single");
  },
  _listItemClickHandler: function(e) {
    var t = this._getCurrentValue();
    this._focusListElement(g(e.itemElement)), this._saveValueChangeEvent(e.event), this._completeSelection(this._valueGetter(e.itemData)), this._shouldCloseOnItemClick() && this.option("opened", !1), this.option("searchEnabled") && t === this._valueGetter(e.itemData) && this._updateField(e.itemData), this._shouldClearFilter() && this._cancelSearchIfNeed();
  },
  _shouldClearFilter: function() {
    return this._wasSearch();
  },
  _completeSelection: function(e) {
    this._setValue(e);
  },
  _loadItem: function(e, t) {
    var i = this, n = new U();
    return this.callBase(e, t).done(function(r) {
      n.resolve(r);
    }.bind(this)).fail(function(r) {
      if (!(r != null && r.shouldSkipCallback)) {
        var a = i.option("selectedItem");
        i.option("acceptCustomValue") && e === i._valueGetter(a) ? n.resolve(a) : n.reject();
      }
    }.bind(this)), n.promise();
  },
  _loadInputValue: function(e, t) {
    return this._loadItemDeferred = this._loadItem(e).always(t), this._loadItemDeferred;
  },
  _isCustomItemSelected: function() {
    var e = this.option("selectedItem"), t = this._searchValue(), i = this._displayGetter(e);
    return !i || t !== i.toString();
  },
  _valueChangeEventHandler: function(e) {
    this.option("acceptCustomValue") && this._isCustomItemSelected() && !this._isValueChanging && (this._isValueChanging = !0, this._customItemAddedHandler(e));
  },
  _initCustomItemCreatingAction: function() {
    this._customItemCreatingAction = this._createActionByOption("onCustomItemCreating");
  },
  _createCustomItem: function(e) {
    var t = {
      text: e
    }, i = this._customItemCreatingAction(t), n = ct(i, t.customItem);
    return x(i) && Je.log("W0015", "onCustomItemCreating", "customItem"), n;
  },
  _customItemAddedHandler: function(e) {
    var t = this._searchValue(), i = this._createCustomItem(t);
    if (this._saveValueChangeEvent(e), i === void 0)
      throw this._renderValue(), Je.Error("E0121");
    Ho(i) ? Nt(i).done(this._setCustomItem.bind(this)).fail(this._setCustomItem.bind(this, null)) : this._setCustomItem(i);
  },
  _setCustomItem: function(e) {
    this._disposed || (e = e || null, this.option("selectedItem", e), this._cancelSearchIfNeed(), this._setValue(this._valueGetter(e)), this._renderDisplayText(this._displayGetter(e)), this._isValueChanging = !1);
  },
  _clearValueHandler: function(e) {
    return this._preventFiltering = !0, this.callBase(e), this._searchCanceled(), !1;
  },
  _wasSearch: function(e) {
    if (!arguments.length)
      return !!this._wasSearchValue;
    this._wasSearchValue = e;
  },
  _searchHandler: function() {
    if (this._preventFiltering) {
      delete this._preventFiltering;
      return;
    }
    this._needPassDataSourceToList() && this._wasSearch(!0), this.callBase(arguments);
  },
  _dataSourceFiltered: function(e) {
    this.callBase(), e !== null && (this._renderInputSubstitution(), this._renderFocusedElement());
  },
  _valueSubstituted: function() {
    var e = this._input().get(0), t = this._searchValue().length, i = e.selectionStart === 0 && e.selectionEnd === t, n = e.selectionStart !== e.selectionEnd, r = t === e.selectionEnd;
    return this._wasSearch() && n && !i && r && this._shouldSubstitutionBeRendered();
  },
  _shouldSubstitutionBeRendered: function() {
    return !this._preventSubstitution && this.option("searchEnabled") && !this.option("acceptCustomValue") && this.option("searchMode") === "startswith";
  },
  _renderInputSubstitution: function() {
    if (!this._shouldSubstitutionBeRendered()) {
      delete this._preventSubstitution;
      return;
    }
    var e = this._list && this._getPlainItems(this._list.option("items"))[0];
    if (e) {
      var t = this._input(), i = t.val().length;
      if (i !== 0) {
        var n = t.get(0), r = this._displayGetter(e).toString();
        n.value = r, this._caret({
          start: i,
          end: r.length
        });
      }
    }
  },
  _dispose: function() {
    this._renderInputValueAsync = $, delete this._loadItemDeferred, this.callBase();
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "customItemCreateEvent":
        this._refreshValueChangeEvent(), this._refreshFocusEvent(), this._refreshEvents();
        break;
      case "onCustomItemCreating":
        this._initCustomItemCreatingAction();
        break;
      case "tooltipEnabled":
        this._renderTooltip();
        break;
      case "displayCustomValue":
      case "acceptCustomValue":
      case "showSelectionControls":
        this._invalidate();
        break;
      case "allowClearing":
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxSelectBox", jv);
var rb = (e) => e.getMonth() + 1, ab = (e, t) => {
  var i = e.getDate(), n = dl("M", e), r = Zt(parseInt(t), n.min, n.max);
  e.setMonth(r - 1, 1);
  var {
    min: a,
    max: o
  } = dl("dM", e), s = Zt(i, a, o);
  e.setDate(s);
}, cj = {
  a: (e) => e.getHours() < 12 ? 0 : 1,
  E: "getDay",
  y: "getFullYear",
  M: rb,
  L: rb,
  d: "getDate",
  H: "getHours",
  h: "getHours",
  m: "getMinutes",
  s: "getSeconds",
  S: "getMilliseconds"
}, hj = T({}, $L(), {
  a: (e, t) => {
    var i = e.getHours(), n = i >= 12;
    n !== !!parseInt(t) && e.setHours((i + 12) % 24);
  },
  d: (e, t) => {
    var i = dl("dM", e).max;
    t > i && e.setMonth(e.getMonth() + 1), e.setDate(t);
  },
  h: (e, t) => {
    var i = e.getHours() >= 12;
    e.setHours(+t % 12 + (i ? 12 : 0));
  },
  M: ab,
  L: ab,
  E: (e, t) => {
    t < 0 || e.setDate(e.getDate() - e.getDay() + parseInt(t));
  },
  y: (e, t) => {
    var i = e.getFullYear(), n = String(t).length, r = String(dl("y", e).max).length, a = parseInt(String(i).substr(0, r - n) + t);
    e.setFullYear(a);
  }
}), pj = (e) => cj[e] || (() => e), fj = (e, t) => {
  for (var i = t.regexp.exec(e), n = 0, r = 0, a = [], o = function() {
    n = r, r = n + i[s].length;
    var l = t.patterns[s - 1].replace(/^'|'$/g, ""), u = pj(l[0]);
    a.push({
      index: s - 1,
      isStub: l === i[s],
      caret: {
        start: n,
        end: r
      },
      pattern: l,
      text: i[s],
      limits: function() {
        for (var d = arguments.length, c = new Array(d), h = 0; h < d; h++)
          c[h] = arguments[h];
        return dl(l[0], ...c);
      },
      setter: hj[l[0]] || $,
      getter: u
    });
  }, s = 1; s < i.length; s++)
    o();
  return a;
}, dl = (e, t, i) => {
  var n = {
    y: {
      min: 0,
      max: 9999
    },
    M: {
      min: 1,
      max: 12
    },
    L: {
      min: 1,
      max: 12
    },
    d: {
      min: 1,
      max: 31
    },
    dM: {
      min: 1,
      max: new Date(t.getFullYear(), t.getMonth() + 1, 0).getDate()
    },
    E: {
      min: 0,
      max: 6
    },
    H: {
      min: 0,
      max: 23
    },
    h: {
      min: 0,
      max: 12
    },
    m: {
      min: 0,
      max: 59
    },
    s: {
      min: 0,
      max: 59
    },
    S: {
      min: 0,
      max: 999
    },
    a: {
      min: 0,
      max: 1
    }
  };
  return n[i || e] || n.getAmPm;
}, gj = (e, t) => {
  for (var i = 0; i < e.length; i++) {
    var n = e[i].caret.end >= t;
    if (!e[i].isStub && n)
      return i;
  }
  return null;
}, Up = ["year", "day", "month", "day"], ob = ["hours", "minutes", "seconds", "milliseconds"], BA = 6e4, kA = 60 * BA * 24, _j = 365 * kA, vj = function(e) {
  var t = typeof e;
  return t === "string" ? "format" : t === "object" && e.type !== void 0 ? e.type : null;
}, Ye = {
  SUPPORTED_FORMATS: ["date", "time", "datetime"],
  ONE_MINUTE: BA,
  ONE_DAY: kA,
  ONE_YEAR: _j,
  MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),
  MAX_DATEVIEW_DEFAULT_DATE: function() {
    var e = /* @__PURE__ */ new Date();
    return new Date(e.getFullYear() + 50, e.getMonth(), e.getDate(), 23, 59, 59);
  }(),
  FORMATS_INFO: {
    date: {
      getStandardPattern: function() {
        return "yyyy-MM-dd";
      },
      components: Up
    },
    time: {
      getStandardPattern: function() {
        return "HH:mm";
      },
      components: ob
    },
    datetime: {
      getStandardPattern: function() {
        var e;
        return function() {
          var t = g("<input>").attr("type", "datetime");
          t.val("2000-01-01T01:01Z"), t.val() && (e = "yyyy-MM-ddTHH:mmZ");
        }(), e || (e = "yyyy-MM-ddTHH:mm:ssZ"), Ye.FORMATS_INFO.datetime.getStandardPattern = function() {
          return e;
        }, e;
      },
      components: [...Up, ...ob]
    },
    "datetime-local": {
      getStandardPattern: function() {
        return "yyyy-MM-ddTHH:mm:ss";
      },
      components: [...Up, "hours", "minutes", "seconds"]
    }
  },
  FORMATS_MAP: {
    date: "shortdate",
    time: "shorttime",
    datetime: "shortdateshorttime"
  },
  SUBMIT_FORMATS_MAP: {
    date: "date",
    time: "time",
    datetime: "datetime-local"
  },
  toStandardDateFormat: function(e, t) {
    var i = Ye.FORMATS_INFO[t].getStandardPattern();
    return Dt.serializeDate(e, i);
  },
  fromStandardDateFormat: function(e) {
    var t = Dt.dateParser(e);
    return Qt(t) ? t : void 0;
  },
  getMaxMonthDay: function(e, t) {
    return new Date(e, t + 1, 0).getDate();
  },
  mergeDates: function(e, t, i) {
    if (!t)
      return t || null;
    if (!e || isNaN(e.getTime())) {
      var n = /* @__PURE__ */ new Date(null);
      e = new Date(n.getFullYear(), n.getMonth(), n.getDate());
    }
    var r = new Date(e.valueOf()), a = Ye.FORMATS_INFO[i];
    return B(a.components, function() {
      var o = Ye.DATE_COMPONENTS_INFO[this];
      r[o.setter](t[o.getter]());
    }), r;
  },
  getLongestCaptionIndex: function(e) {
    var t = 0, i = 0, n;
    for (n = 0; n < e.length; ++n)
      e[n].length > i && (t = n, i = e[n].length);
    return t;
  },
  formatUsesMonthName: function(e) {
    return Pe.formatUsesMonthName(e);
  },
  formatUsesDayName: function(e) {
    return Pe.formatUsesDayName(e);
  },
  getLongestDate: function(e, t, i) {
    var n = vj(e), r = 9;
    (!n || Ye.formatUsesMonthName(n)) && (r = Ye.getLongestCaptionIndex(t));
    var a = new Date(1888, r, 21, 23, 59, 59, 999);
    if (!n || Ye.formatUsesDayName(n)) {
      var o = a.getDate() - a.getDay() + Ye.getLongestCaptionIndex(i);
      a.setDate(o);
    }
    return a;
  },
  normalizeTime: function(e) {
    e.setSeconds(0), e.setMilliseconds(0);
  }
};
Ye.DATE_COMPONENTS_INFO = {
  year: {
    getter: "getFullYear",
    setter: "setFullYear",
    formatter: function(e, t) {
      var i = new Date(t.getTime());
      return i.setFullYear(e), Pe.format(i, "yyyy");
    },
    startValue: void 0,
    endValue: void 0
  },
  day: {
    getter: "getDate",
    setter: "setDate",
    formatter: function(e, t) {
      var i = new Date(t.getTime());
      return i.setDate(e), Pe.format(i, "d");
    },
    startValue: 1,
    endValue: void 0
  },
  month: {
    getter: "getMonth",
    setter: "setMonth",
    formatter: function(e) {
      return Pe.getMonthNames()[e];
    },
    startValue: 0,
    endValue: 11
  },
  hours: {
    getter: "getHours",
    setter: "setHours",
    formatter: function(e) {
      return Pe.format(new Date(0, 0, 0, e), "hour");
    },
    startValue: 0,
    endValue: 23
  },
  minutes: {
    getter: "getMinutes",
    setter: "setMinutes",
    formatter: function(e) {
      return Pe.format(new Date(0, 0, 0, 0, e), "minute");
    },
    startValue: 0,
    endValue: 59
  },
  seconds: {
    getter: "getSeconds",
    setter: "setSeconds",
    formatter: function(e) {
      return Pe.format(new Date(0, 0, 0, 0, 0, e), "second");
    },
    startValue: 0,
    endValue: 59
  },
  milliseconds: {
    getter: "getMilliseconds",
    setter: "setMilliseconds",
    formatter: function(e) {
      return Pe.format(new Date(0, 0, 0, 0, 0, 0, e), "millisecond");
    },
    startValue: 0,
    endValue: 999
  }
};
var FA = "dxSwipeable", mj = "dx-swipeable", Cj = {
  onStart: $c,
  onUpdated: Hc,
  onEnd: Kl,
  onCancel: "dxswipecancel"
}, xj = 180, Qd = wn.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      elastic: !0,
      immediate: !1,
      immediateTimeout: xj,
      direction: "horizontal",
      itemSizeFunc: null,
      onStart: null,
      onUpdated: null,
      onEnd: null,
      onCancel: null
    });
  },
  _render: function() {
    this.callBase(), this.$element().addClass(mj), this._attachEventHandlers();
  },
  _attachEventHandlers: function() {
    if (this._detachEventHandlers(), !this.option("disabled")) {
      var e = this.NAME;
      this._createEventData(), B(Cj, function(t, i) {
        var n = this._createActionByOption(t, {
          context: this
        });
        i = oe(i, e), w.on(this.$element(), i, this._eventData, function(r) {
          return n({
            event: r
          });
        });
      }.bind(this));
    }
  },
  _createEventData: function() {
    this._eventData = {
      elastic: this.option("elastic"),
      itemSizeFunc: this.option("itemSizeFunc"),
      direction: this.option("direction"),
      immediate: this.option("immediate"),
      immediateTimeout: this.option("immediateTimeout")
    };
  },
  _detachEventHandlers: function() {
    w.off(this.$element(), "." + FA);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "disabled":
      case "onStart":
      case "onUpdated":
      case "onEnd":
      case "onCancel":
      case "elastic":
      case "immediate":
      case "itemSizeFunc":
      case "direction":
        this._detachEventHandlers(), this._attachEventHandlers();
        break;
      case "rtlEnabled":
        break;
      default:
        this.callBase(e);
    }
  },
  _useTemplates: function() {
    return !1;
  }
});
ml(Qd, FA);
var yj = "dx-calendar-navigator", bj = "dx-calendar-navigator-previous-month", Sj = "dx-calendar-navigator-next-month", Ej = "dx-calendar-navigator-previous-view", wj = "dx-calendar-navigator-next-view", Ij = "dx-calendar-disabled-navigator-link", Tj = "dx-calendar-caption-button", Dj = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      onClick: null,
      onCaptionClick: null,
      text: ""
    });
  },
  _init: function() {
    this.callBase(), this._initActions();
  },
  _initActions: function() {
    this._clickAction = this._createActionByOption("onClick"), this._captionClickAction = this._createActionByOption("onCaptionClick");
  },
  _initMarkup: function() {
    this.callBase(), this.$element().addClass(yj), this._renderButtons(), this._renderCaption();
  },
  _renderButtons: function() {
    var e = this, t = this.option("rtlEnabled") ? -1 : 1;
    this._prevButton = this._createComponent(g("<a>"), Gt, {
      focusStateEnabled: !1,
      icon: "chevronleft",
      onClick: function(a) {
        e._clickAction({
          direction: -t,
          event: a
        });
      },
      integrationOptions: {}
    });
    var i = this._prevButton.$element().addClass(Ej).addClass(bj);
    this._nextButton = this._createComponent(g("<a>"), Gt, {
      focusStateEnabled: !1,
      icon: "chevronright",
      onClick: function(a) {
        e._clickAction({
          direction: t,
          event: a
        });
      },
      integrationOptions: {}
    });
    var n = this._nextButton.$element().addClass(wj).addClass(Sj);
    this._caption = this._createComponent(g("<a>").addClass(Tj), Gt, {
      focusStateEnabled: !1,
      onClick: function(a) {
        e._captionClickAction({
          event: a
        });
      },
      integrationOptions: {}
    });
    var r = this._caption.$element();
    this.$element().append(i, r, n);
  },
  _renderCaption: function() {
    this._caption.option("text", this.option("text"));
  },
  toggleButton: function(e, t) {
    var i = "_" + e + "Button", n = this[i];
    n && (n.option("disabled", t), n.$element().toggleClass(Ij, t));
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "text":
        this._renderCaption();
        break;
      default:
        this.callBase(e);
    }
  }
}), {
  abstract: or
} = Mt, Aj = "dx-calendar-other-view", Oj = "dx-calendar-cell", Rj = "dx-calendar-week-number-cell", sb = "dx-calendar-empty-cell", Bj = "dx-calendar-today", lb = "dx-calendar-selected-date", jp = "dx-calendar-contoured-date", ub = oe(Xe, "dxCalendar"), db = "dxDateValueKey", Mu = Mt.inherit({
  _getViewName: function() {
    return "base";
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      date: /* @__PURE__ */ new Date(),
      focusStateEnabled: !1,
      cellTemplate: null,
      disabledDates: null,
      onCellClick: null,
      rowCount: 3,
      colCount: 4,
      allowValueSelection: !0,
      _todayDate: () => /* @__PURE__ */ new Date()
    });
  },
  _initMarkup: function() {
    this.callBase(), this._renderImpl();
  },
  _renderImpl: function() {
    this.$element().append(this._createTable()), this._createDisabledDatesHandler(), this._renderBody(), this._renderContouredDate(), this._renderValue(), this._renderEvents();
  },
  _createTable: function() {
    return this._$table = g("<table>"), this.setAria({
      label: q.format("dxCalendar-ariaWidgetName"),
      role: "grid"
    }, this._$table), this._$table;
  },
  _renderBody: function() {
    this.$body = g("<tbody>").appendTo(this._$table);
    for (var e = {
      cellDate: this._getFirstCellData(),
      prevCellDate: null
    }, t = 0, i = this.option("rowCount"); t < i; t++) {
      e.row = this._createRow();
      for (var n = 0, r = this.option("colCount"); n < r; n++)
        this._renderCell(e, n);
      this._renderWeekNumberCell(e);
    }
  },
  _createRow: function() {
    var e = ee.createElement("tr");
    return this.setAria("role", "row", g(e)), this.$body.get(0).appendChild(e), e;
  },
  _appendCell: function(e, t) {
    this._appendMethodName || this._cacheAppendMethodName(), g(e)[this._appendMethodName](t);
  },
  _cacheAppendMethodName: function(e) {
    this._appendMethodName = e ?? this.option("rtlEnabled") ? "prepend" : "append";
  },
  _createCell: function(e) {
    var t = ee.createElement("td"), i = g(t);
    return t.className = this._getClassNameByDate(e), t.setAttribute("data-value", Dt.serializeDate(e, be.getShortDateFormat())), dt(t, db, e), this.setAria({
      role: "gridcell",
      label: this.getCellAriaLabel(e)
    }, i), {
      cell: t,
      $cell: i
    };
  },
  _renderCell: function(e, t) {
    var {
      cellDate: i,
      prevCellDate: n,
      row: r
    } = e;
    n && be.fixTimezoneGap(n, i), e.prevCellDate = i;
    var {
      cell: a,
      $cell: o
    } = this._createCell(i), s = this.option("cellTemplate");
    this._appendCell(r, a), s ? s.render(this._prepareCellTemplateData(i, t, o)) : a.innerHTML = this._getCellText(i), e.cellDate = this._getNextCellData(i);
  },
  _getClassNameByDate: function(e) {
    var t = Oj;
    return this._isTodayCell(e) && (t += " ".concat(Bj)), (this._isDateOutOfRange(e) || this.isDateDisabled(e)) && (t += " ".concat(sb)), this._isOtherView(e) && (t += " ".concat(Aj)), t;
  },
  _prepareCellTemplateData: function(e, t, i) {
    var n = e instanceof Date, r = n ? this._getCellText(e) : e, a = n ? e : void 0, o = this._getViewName();
    return {
      model: {
        text: r,
        date: a,
        view: o
      },
      container: Ie(i),
      index: t
    };
  },
  _renderEvents: function() {
    this._createCellClickAction(), w.off(this._$table, ub), w.on(this._$table, ub, "td:not(.".concat(Rj, ")"), (e) => {
      g(e.currentTarget).hasClass(sb) || this._cellClickAction({
        event: e,
        value: g(e.currentTarget).data(db)
      });
    });
  },
  _createCellClickAction: function() {
    this._cellClickAction = this._createActionByOption("onCellClick");
  },
  _createDisabledDatesHandler: function() {
    var e = this.option("disabledDates");
    this._disabledDatesHandler = Array.isArray(e) ? this._getDefaultDisabledDatesHandler(e) : e || $;
  },
  _getDefaultDisabledDatesHandler: function(e) {
    return $;
  },
  _isTodayCell: or,
  _isDateOutOfRange: or,
  isDateDisabled: function(e) {
    var t = {
      date: e,
      view: this._getViewName()
    };
    return this._disabledDatesHandler(t);
  },
  _isOtherView: or,
  _getCellText: or,
  _getFirstCellData: or,
  _getNextCellData: or,
  _renderContouredDate: function(e) {
    if (this.option("focusStateEnabled")) {
      e = e || this.option("contouredDate");
      var t = this._getContouredCell(), i = this._getCellByDate(e);
      t.removeClass(jp), i.addClass(jp);
    }
  },
  _getContouredCell: function() {
    return this._$table.find(".".concat(jp));
  },
  _changeValue: function(e) {
    if (e) {
      var t = this.option("value"), i = t ? new Date(t) : /* @__PURE__ */ new Date();
      i.setDate(e.getDate()), i.setMonth(e.getMonth()), i.setFullYear(e.getFullYear()), i.setDate(e.getDate()), this.option("value", i);
    } else
      this.option("value", null);
  },
  _renderValue: function() {
    if (this.option("allowValueSelection")) {
      var e = this.option("value"), t = this._getCellByDate(e);
      this._selectedCell && this._selectedCell.removeClass(lb), t.addClass(lb), this._selectedCell = t;
    }
  },
  getCellAriaLabel: function(e) {
    return this._getCellText(e);
  },
  _getFirstAvailableDate: function() {
    var e = this.option("date"), t = this.option("min");
    return e = be.getFirstDateView(this._getViewName(), e), new Date(t && e < t ? t : e);
  },
  _getCellByDate: or,
  isBoundary: or,
  _optionChanged: function(e) {
    var {
      name: t,
      value: i
    } = e;
    switch (t) {
      case "value":
        this._renderValue();
        break;
      case "contouredDate":
        this._renderContouredDate(i);
        break;
      case "onCellClick":
        this._createCellClickAction();
        break;
      case "disabledDates":
      case "cellTemplate":
        this._invalidate();
        break;
      case "rtlEnabled":
        this._cacheAppendMethodName(i), this.callBase(e);
        break;
      case "_todayDate":
        this._renderBody();
        break;
      default:
        this.callBase(e);
    }
  }
}), kj = "dx-calendar-other-month", Fj = "dx-calendar-other-view", Pj = "dx-calendar-week-number-cell", Mj = {
  month: Mu.inherit({
    _getViewName: function() {
      return "month";
    },
    _getDefaultOptions: function() {
      return T(this.callBase(), {
        firstDayOfWeek: 0,
        rowCount: 6,
        colCount: 7
      });
    },
    _renderImpl: function() {
      this.callBase(), this._renderHeader();
    },
    _renderBody: function() {
      this.callBase(), this._$table.find(".".concat(Fj)).addClass(kj);
    },
    _renderFocusTarget: $,
    getCellAriaLabel: function(e) {
      return Pe.format(e, "longdate");
    },
    _renderHeader: function() {
      var e = g("<tr>"), t = g("<thead>").append(e);
      this._$table.prepend(t);
      for (var i = 0, n = this.option("colCount"); i < n; i++)
        this._renderHeaderCell(i, e);
      this.option("showWeekNumbers") && this._renderWeekHeaderCell(e);
    },
    _renderHeaderCell: function(e, t) {
      var {
        firstDayOfWeek: i
      } = this.option(), {
        full: n,
        abbreviated: r
      } = this._getDayCaption(i + e), a = g("<th>").attr({
        scope: "col",
        abbr: n
      }).text(r);
      this._appendCell(t, a);
    },
    _renderWeekHeaderCell: function(e) {
      var t = g("<th>").attr({
        scope: "col",
        abbr: "WeekNumber",
        class: "dx-week-number-header"
      }).text("#"), i = this.option("rtlEnabled");
      i ? e.append(t) : e.prepend(t);
    },
    _renderWeekNumberCell: function(e) {
      var {
        showWeekNumbers: t,
        rtlEnabled: i,
        cellTemplate: n
      } = this.option();
      if (t) {
        var r = this._getWeekNumber(e.prevCellDate), a = ee.createElement("td"), o = g(a);
        a.className = Pj, n ? n.render(this._prepareCellTemplateData(r, -1, o)) : a.innerHTML = r, i ? e.row.append(a) : e.row.prepend(a), this.setAria({
          role: "gridcell",
          label: "Week ".concat(r)
        }, o);
      }
    },
    _getWeekNumber: function(e) {
      var {
        weekNumberRule: t,
        firstDayOfWeek: i
      } = this.option();
      return t === "auto" ? be.getWeekNumber(e, i, i === 1 ? "firstFourDays" : "firstDay") : be.getWeekNumber(e, i, t);
    },
    getNavigatorCaption: function() {
      return Pe.format(this.option("date"), "monthandyear");
    },
    _isTodayCell: function(e) {
      var t = this.option("_todayDate")();
      return be.sameDate(e, t);
    },
    _isDateOutOfRange: function(e) {
      var t = this.option("min"), i = this.option("max");
      return !be.dateInRange(e, t, i, "date");
    },
    _isOtherView: function(e) {
      return e.getMonth() !== this.option("date").getMonth();
    },
    _getCellText: function(e) {
      return Pe.format(e, "d");
    },
    _getDayCaption: function(e) {
      var t = this.option("colCount"), i = e % t;
      return {
        full: Pe.getDayNames()[i],
        abbreviated: Pe.getDayNames("abbreviated")[i]
      };
    },
    _getFirstCellData: function() {
      var {
        firstDayOfWeek: e
      } = this.option(), t = be.getFirstMonthDate(this.option("date")), i = e - t.getDay(), n = this.option("colCount");
      return i >= 0 && (i -= n), t.setDate(t.getDate() + i), t;
    },
    _getNextCellData: function(e) {
      return e = new Date(e), e.setDate(e.getDate() + 1), e;
    },
    _getCellByDate: function(e) {
      return this._$table.find("td[data-value='".concat(Dt.serializeDate(e, be.getShortDateFormat()), "']"));
    },
    isBoundary: function(e) {
      return be.sameMonthAndYear(e, this.option("min")) || be.sameMonthAndYear(e, this.option("max"));
    },
    _getDefaultDisabledDatesHandler: function(e) {
      return function(t) {
        var i = e.some(function(n) {
          return be.sameDate(n, t.date);
        });
        if (i)
          return !0;
      };
    }
  }),
  year: Mu.inherit({
    _getViewName: function() {
      return "year";
    },
    _isTodayCell: function(e) {
      var t = this.option("_todayDate")();
      return be.sameMonthAndYear(e, t);
    },
    _isDateOutOfRange: function(e) {
      return !be.dateInRange(e, be.getFirstMonthDate(this.option("min")), be.getLastMonthDate(this.option("max")));
    },
    _isOtherView: function() {
      return !1;
    },
    _getCellText: function(e) {
      return Pe.getMonthNames("abbreviated")[e.getMonth()];
    },
    _getFirstCellData: function() {
      var e = this.option("date"), t = new Date(e);
      return t.setDate(1), t.setMonth(0), t;
    },
    _getNextCellData: function(e) {
      return e = new Date(e), e.setMonth(e.getMonth() + 1), e;
    },
    _getCellByDate: function(e) {
      var t = new Date(e);
      return t.setDate(1), this._$table.find("td[data-value='".concat(Dt.serializeDate(t, be.getShortDateFormat()), "']"));
    },
    getCellAriaLabel: function(e) {
      return Pe.format(e, "monthandyear");
    },
    getNavigatorCaption: function() {
      return Pe.format(this.option("date"), "yyyy");
    },
    isBoundary: function(e) {
      return be.sameYear(e, this.option("min")) || be.sameYear(e, this.option("max"));
    },
    _renderWeekNumberCell: $
  }),
  decade: Mu.inherit({
    _getViewName: function() {
      return "decade";
    },
    _isTodayCell: function(e) {
      var t = this.option("_todayDate")();
      return be.sameYear(e, t);
    },
    _isDateOutOfRange: function(e) {
      var t = this.option("min"), i = this.option("max");
      return !be.dateInRange(e.getFullYear(), t && t.getFullYear(), i && i.getFullYear());
    },
    _isOtherView: function(e) {
      var t = new Date(e);
      return t.setMonth(1), !be.sameDecade(t, this.option("date"));
    },
    _getCellText: function(e) {
      return Pe.format(e, "yyyy");
    },
    _getFirstCellData: function() {
      var e = be.getFirstYearInDecade(this.option("date")) - 1;
      return be.createDateWithFullYear(e, 0, 1);
    },
    _getNextCellData: function(e) {
      return e = new Date(e), e.setFullYear(e.getFullYear() + 1), e;
    },
    getNavigatorCaption: function() {
      var e = this.option("date"), t = be.getFirstYearInDecade(e), i = new Date(e), n = new Date(e);
      return i.setFullYear(t), n.setFullYear(t + 9), Pe.format(i, "yyyy") + "-" + Pe.format(n, "yyyy");
    },
    _isValueOnCurrentView: function(e, t) {
      return be.sameDecade(e, t);
    },
    _getCellByDate: function(e) {
      var t = new Date(e);
      return t.setDate(1), t.setMonth(0), this._$table.find("td[data-value='".concat(Dt.serializeDate(t, be.getShortDateFormat()), "']"));
    },
    isBoundary: function(e) {
      return be.sameDecade(e, this.option("min")) || be.sameDecade(e, this.option("max"));
    },
    _renderWeekNumberCell: $
  }),
  century: Mu.inherit({
    _getViewName: function() {
      return "century";
    },
    _isTodayCell: function(e) {
      var t = this.option("_todayDate")();
      return be.sameDecade(e, t);
    },
    _isDateOutOfRange: function(e) {
      var t = be.getFirstYearInDecade(e), i = be.getFirstYearInDecade(this.option("min")), n = be.getFirstYearInDecade(this.option("max"));
      return !be.dateInRange(t, i, n);
    },
    _isOtherView: function(e) {
      var t = new Date(e);
      return t.setMonth(1), !be.sameCentury(t, this.option("date"));
    },
    _getCellText: function(e) {
      var t = Pe.format(e, "yyyy"), i = new Date(e);
      return i.setFullYear(i.getFullYear() + 9), t + " - " + Pe.format(i, "yyyy");
    },
    _getFirstCellData: function() {
      var e = be.getFirstDecadeInCentury(this.option("date")) - 10;
      return be.createDateWithFullYear(e, 0, 1);
    },
    _getNextCellData: function(e) {
      return e = new Date(e), e.setFullYear(e.getFullYear() + 10), e;
    },
    _getCellByDate: function(e) {
      var t = new Date(e);
      return t.setDate(1), t.setMonth(0), t.setFullYear(be.getFirstYearInDecade(t)), this._$table.find("td[data-value='".concat(Dt.serializeDate(t, be.getShortDateFormat()), "']"));
    },
    getNavigatorCaption: function() {
      var e = this.option("date"), t = be.getFirstDecadeInCentury(e), i = new Date(e), n = new Date(e);
      return i.setFullYear(t), n.setFullYear(t + 99), Pe.format(i, "yyyy") + "-" + Pe.format(n, "yyyy");
    },
    isBoundary: function(e) {
      return be.sameCentury(e, this.option("min")) || be.sameCentury(e, this.option("max"));
    },
    _renderWeekNumberCell: $
  })
}, Lj = "dx-calendar", Vj = "dx-calendar-body", Nj = "dx-calendar-cell", $j = "dx-calendar-footer", Hj = "dx-calendar-today-button", zj = "dx-calendar-with-footer", Wj = "dx-calendar-views-wrapper", cb = "dx-calendar-view", Gj = "dx-state-focused", qp = 250, Kj = 0.6, Uj = 1, jj = "yyyy-MM-dd", qj = "dxDateValueKey", ao = {
  month: 3,
  year: 2,
  decade: 1,
  century: 0
}, Ut = {
  MONTH: "month",
  YEAR: "year",
  DECADE: "decade",
  CENTURY: "century"
};
function Xj(e) {
  return e.hasClass(Gj);
}
var PA = nn.inherit({
  _activeStateUnit: "." + Nj,
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      hoverStateEnabled: !0,
      activeStateEnabled: !0,
      currentDate: /* @__PURE__ */ new Date(),
      value: null,
      dateSerializationFormat: void 0,
      min: new Date(1e3, 0),
      max: new Date(3e3, 0),
      firstDayOfWeek: void 0,
      zoomLevel: Ut.MONTH,
      maxZoomLevel: Ut.MONTH,
      minZoomLevel: Ut.CENTURY,
      showTodayButton: !1,
      showWeekNumbers: !1,
      weekNumberRule: "auto",
      cellTemplate: "cell",
      disabledDates: null,
      onCellClick: null,
      onContouredChanged: null,
      skipFocusCheck: !1,
      _todayDate: () => /* @__PURE__ */ new Date()
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }]);
  },
  _supportedKeys: function() {
    return T(this.callBase(), {
      rightArrow: function(e) {
        e.preventDefault(), Pt(e) ? this._waitRenderView(1) : this._moveCurrentDateByOffset(1 * this._getRtlCorrection());
      },
      leftArrow: function(e) {
        e.preventDefault(), Pt(e) ? this._waitRenderView(-1) : this._moveCurrentDateByOffset(-1 * this._getRtlCorrection());
      },
      upArrow: function(e) {
        if (e.preventDefault(), Pt(e))
          this._navigateUp();
        else {
          if (ft.isAnimating(this._view.$element()))
            return;
          this._moveCurrentDateByOffset(-1 * this._view.option("colCount"));
        }
      },
      downArrow: function(e) {
        if (e.preventDefault(), Pt(e))
          this._navigateDown();
        else {
          if (ft.isAnimating(this._view.$element()))
            return;
          this._moveCurrentDateByOffset(1 * this._view.option("colCount"));
        }
      },
      home: function(e) {
        e.preventDefault();
        var t = this.option("zoomLevel"), i = this.option("currentDate"), n = this._dateOption("min");
        if (!this._view.isDateDisabled(i)) {
          var r = be.sameView(t, i, n) ? n : be.getViewFirstCellDate(t, i);
          this._moveToClosestAvailableDate(r);
        }
      },
      end: function(e) {
        e.preventDefault();
        var t = this.option("zoomLevel"), i = this.option("currentDate"), n = this._dateOption("max");
        if (!this._view.isDateDisabled(i)) {
          var r = be.sameView(t, i, n) ? n : be.getViewLastCellDate(t, i);
          this._moveToClosestAvailableDate(r);
        }
      },
      pageUp: function(e) {
        e.preventDefault(), this._waitRenderView(-1 * this._getRtlCorrection());
      },
      pageDown: function(e) {
        e.preventDefault(), this._waitRenderView(1 * this._getRtlCorrection());
      },
      tab: $,
      enter: function(e) {
        if (!this._isMaxZoomLevel())
          this._navigateDown();
        else if (!this._view.isDateDisabled(this.option("currentDate"))) {
          var t = this._updateTimeComponent(this.option("currentDate"));
          this._dateValue(t, e);
        }
      }
    });
  },
  _getSerializationFormat: function(e) {
    var t = this.option(e || "value");
    if (this.option("dateSerializationFormat"))
      return this.option("dateSerializationFormat");
    if (rt(t))
      return "number";
    if (Te(t))
      return Dt.getDateSerializationFormat(t);
  },
  _convertToDate: function(e, t) {
    return Dt.deserializeDate(e);
  },
  _dateValue: function(e, t) {
    if (t) {
      if (t.type === "keydown") {
        var i = this._view._getContouredCell().get(0);
        t.target = i;
      }
      this._saveValueChangeEvent(t);
    }
    this._dateOption("value", e);
  },
  _dateOption: function(e, t) {
    if (arguments.length === 1)
      return this._convertToDate(this.option(e), e);
    var i = this._getSerializationFormat(e);
    this.option(e, Dt.serializeDate(t, i));
  },
  _shiftDate: function(e, t, i, n) {
    switch (e) {
      case Ut.MONTH:
        t.setDate(t.getDate() + i * n);
        break;
      case Ut.YEAR:
        t.setMonth(t.getMonth() + i * n);
        break;
      case Ut.DECADE:
        t.setFullYear(t.getFullYear() + i * n);
        break;
      case Ut.CENTURY:
        t.setFullYear(t.getFullYear() + 10 * i * n);
    }
  },
  _moveCurrentDateByOffset: function(e) {
    var t = this.option("currentDate"), i = new Date(t), n = this.option("zoomLevel");
    this._shiftDate(n, i, e, 1);
    for (var r = this._getMaxDate(), a = this._getMinDate(), o = this._areDatesInNeighborView(n, i, t), s = Gn(i, a, r) && o, l = new Date(i); s; ) {
      if (!this._view.isDateDisabled(l)) {
        i = l;
        break;
      }
      this._shiftDate(n, l, e, 1), o = this._areDatesInNeighborView(n, l, t), s = Gn(l, a, r) && o;
    }
    this._view.isDateDisabled(t) || this._view.isDateDisabled(i) ? this._waitRenderView(e > 0 ? 1 : -1) : this.option("currentDate", i);
  },
  _areDatesInSameView(e, t, i) {
    switch (e) {
      case Ut.MONTH:
        return t.getMonth() === i.getMonth();
      case Ut.YEAR:
        return t.getYear() === i.getYear();
      case Ut.DECADE:
        return parseInt(t.getYear() / 10) === parseInt(i.getYear() / 10);
      case Ut.CENTURY:
        return parseInt(t.getYear() / 100) === parseInt(i.getYear() / 100);
    }
  },
  _areDatesInNeighborView(e, t, i) {
    switch (e) {
      case Ut.MONTH:
        return n = t.getMonth(), r = i.getMonth(), a = Math.abs(n - r), Math.min(a, 12 - a) <= 1;
      case Ut.YEAR:
        return Math.abs(t.getYear() - i.getYear()) <= 1;
      case Ut.DECADE:
        return Math.abs(t.getYear() - i.getYear()) <= 10;
      case Ut.CENTURY:
        return Math.abs(t.getYear() - i.getYear()) <= 100;
    }
    var n, r, a;
  },
  _moveToClosestAvailableDate: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.option("currentDate"), t = new Date(e), i = this.option("zoomLevel"), n = !this._isDateNotAvailable(t), r = n, a = n, o, s, l = new Date(t), u = new Date(t);
    do {
      if (r) {
        t = l;
        break;
      }
      if (a) {
        t = u;
        break;
      }
      this._shiftDate(i, l, 1, 1), this._shiftDate(i, u, 1, -1), o = this._areDatesInSameView(i, l, e), s = this._areDatesInSameView(i, u, e), r = o && !this._isDateNotAvailable(l), a = s && !this._isDateNotAvailable(u);
    } while (o || s);
    this.option("currentDate", t);
  },
  _isDateNotAvailable: function(e) {
    var t = this._getMaxDate(), i = this._getMinDate();
    return !Gn(e, i, t) || this._view.isDateDisabled(e);
  },
  _init: function() {
    this.callBase(), this._correctZoomLevel(), this._initCurrentDate(), this._initActions();
  },
  _correctZoomLevel: function() {
    var e = this.option("minZoomLevel"), t = this.option("maxZoomLevel"), i = this.option("zoomLevel");
    ao[t] < ao[e] || (ao[i] > ao[t] ? this.option("zoomLevel", t) : ao[i] < ao[e] && this.option("zoomLevel", e));
  },
  _initCurrentDate: function() {
    var e = this._getNormalizedDate(this._dateOption("value")) || this._getNormalizedDate(this.option("currentDate"));
    this.option("currentDate", e);
  },
  _getNormalizedDate: function(e) {
    return e = be.normalizeDate(e, this._getMinDate(), this._getMaxDate()), x(e) ? this._getDate(e) : e;
  },
  _initActions: function() {
    this._cellClickAction = this._createActionByOption("onCellClick"), this._onContouredChanged = this._createActionByOption("onContouredChanged");
  },
  _initTemplates: function() {
    this._templateManager.addDefaultTemplates({
      cell: new Bo(function(e) {
        var t = e.model;
        g(e.container).append(g("<span>").text(t && t.text || String(t)));
      })
    }), this.callBase();
  },
  _updateCurrentDate: function(e) {
    ft.isAnimating(this._$viewsWrapper) && ft.stop(this._$viewsWrapper, !0);
    var t = this._getMinDate(), i = this._getMaxDate();
    if (t > i) {
      this.option("currentDate", /* @__PURE__ */ new Date());
      return;
    }
    var n = this._getNormalizedDate(e);
    if (e.getTime() !== n.getTime()) {
      this.option("currentDate", new Date(n));
      return;
    }
    var r = this._getViewsOffset(this._view.option("date"), n);
    r !== 0 && !this._isMaxZoomLevel() && this._isOtherViewCellClicked && (r = 0), this._view && r !== 0 && !this._suppressNavigation ? this._navigate(r, n) : (this._renderNavigator(), this._setViewContoured(n), this._updateAriaId(n));
  },
  _setViewContoured: function(e) {
    (this.option("skipFocusCheck") || Xj(this._focusTarget())) && this._view.option("contouredDate", e);
  },
  _getMinDate: function() {
    return this.min ? this.min : (this.min = this._dateOption("min") || new Date(1e3, 0), this.min);
  },
  _getMaxDate: function() {
    return this.max ? this.max : (this.max = this._dateOption("max") || new Date(3e3, 0), this.max);
  },
  _getViewsOffset: function(e, t) {
    var i = this.option("zoomLevel");
    if (i === Ut.MONTH)
      return this._getMonthsOffset(e, t);
    var n;
    switch (i) {
      case Ut.CENTURY:
        n = 100;
        break;
      case Ut.DECADE:
        n = 10;
        break;
      default:
        n = 1;
    }
    return parseInt(t.getFullYear() / n) - parseInt(e.getFullYear() / n);
  },
  _getMonthsOffset: function(e, t) {
    var i = t.getFullYear() - e.getFullYear(), n = t.getMonth() - e.getMonth();
    return 12 * i + n;
  },
  _waitRenderView: function(e) {
    if (!this._alreadyViewRender) {
      this._alreadyViewRender = !0;
      var t = this._getDateByOffset(e * this._getRtlCorrection());
      this._moveToClosestAvailableDate(t), this._waitRenderViewTimeout = setTimeout(() => {
        this._alreadyViewRender = !1;
      });
    }
  },
  _getRtlCorrection: function() {
    return this.option("rtlEnabled") ? -1 : 1;
  },
  _getDateByOffset: function(e, t) {
    var i;
    t = this._getDate((i = t) !== null && i !== void 0 ? i : this.option("currentDate"));
    var n = t.getDate(), r = be.getDifferenceInMonth(this.option("zoomLevel")) * e;
    t.setDate(1), t.setMonth(t.getMonth() + r);
    var a = be.getLastMonthDate(t).getDate();
    return t.setDate(n > a ? a : n), t;
  },
  _focusTarget: function() {
    return this.$element();
  },
  _initMarkup: function() {
    this._renderSubmitElement(), this.callBase();
    var e = this.$element();
    e.addClass(Lj), this._renderBody(), e.append(this.$body), this._renderViews(), this._renderNavigator(), e.append(this._navigator.$element()), this._renderSwipeable(), this._renderFooter(), this._updateAriaSelected(), this._updateAriaId(), this._moveToClosestAvailableDate();
  },
  _render: function() {
    this.callBase(), this._setViewContoured(this.option("currentDate"));
  },
  _renderBody: function() {
    this._$viewsWrapper || (this.$body = g("<div>").addClass(Vj), this._$viewsWrapper = g("<div>").addClass(Wj), this.$body.append(this._$viewsWrapper));
  },
  _getKeyboardListeners() {
    return this.callBase().concat([this._view]);
  },
  _renderViews: function() {
    this.$element().addClass(cb + "-" + this.option("zoomLevel"));
    var e = this.option("currentDate");
    if (this._view = this._renderSpecificView(e), Re()) {
      var t = this._getDateByOffset(-1, e);
      this._beforeView = this._isViewAvailable(t) ? this._renderSpecificView(t) : null;
      var i = this._getDateByOffset(1, e);
      i.setDate(1), this._afterView = this._isViewAvailable(i) ? this._renderSpecificView(i) : null;
    }
    this._translateViews();
  },
  _renderSpecificView: function(e) {
    var t = Mj[this.option("zoomLevel")], i = g("<div>").appendTo(this._$viewsWrapper), n = this._viewConfig(e);
    return this._createComponent(i, t, n);
  },
  _viewConfig: function(e) {
    var t, i = this.option("disabledDates");
    return i = ce(i) ? this._injectComponent(i.bind(this)) : i, {
      date: e,
      min: this._getMinDate(),
      max: this._getMaxDate(),
      firstDayOfWeek: (t = this.option("firstDayOfWeek")) !== null && t !== void 0 ? t : Pe.firstDayOfWeekIndex(),
      showWeekNumbers: this.option("showWeekNumbers"),
      weekNumberRule: this.option("weekNumberRule"),
      zoomLevel: this.option("zoomLevel"),
      value: this._dateOption("value"),
      tabIndex: void 0,
      focusStateEnabled: this.option("focusStateEnabled"),
      hoverStateEnabled: this.option("hoverStateEnabled"),
      disabledDates: i,
      onCellClick: this._cellClickHandler.bind(this),
      cellTemplate: this._getTemplateByOption("cellTemplate"),
      allowValueSelection: this._isMaxZoomLevel(),
      _todayDate: this.option("_todayDate")
    };
  },
  _injectComponent: function(e) {
    var t = this;
    return function(i) {
      return T(i, {
        component: t
      }), e(i);
    };
  },
  _isViewAvailable: function(e) {
    var t = this.option("zoomLevel"), i = be.getViewMinBoundaryDate(t, this._getMinDate()), n = be.getViewMaxBoundaryDate(t, this._getMaxDate());
    return be.dateInRange(e, i, n);
  },
  _translateViews: function() {
    kt(this._view.$element(), {
      left: 0,
      top: 0
    }), this._beforeView && kt(this._beforeView.$element(), {
      left: this._getViewPosition(-1),
      top: 0
    }), this._afterView && kt(this._afterView.$element(), {
      left: this._getViewPosition(1),
      top: 0
    });
  },
  _getViewPosition: function(e) {
    var t = this.option("rtlEnabled") ? -1 : 1;
    return 100 * e * t + "%";
  },
  _cellClickHandler: function(e) {
    var t = this.option("zoomLevel"), i = be.getViewDown(t), n = this._isMaxZoomLevel();
    if (i && !n)
      this._navigateDown(e.event.currentTarget);
    else {
      var r = this._updateTimeComponent(e.value);
      this._dateValue(r, e.event), this._cellClickAction(e);
    }
  },
  _updateTimeComponent: function(e) {
    var t = new Date(e), i = this._dateOption("value");
    return i && (t.setHours(i.getHours()), t.setMinutes(i.getMinutes()), t.setSeconds(i.getSeconds()), t.setMilliseconds(i.getMilliseconds())), t;
  },
  _isMaxZoomLevel: function() {
    return this.option("zoomLevel") === this.option("maxZoomLevel");
  },
  _navigateDown: function(e) {
    var t = this.option("zoomLevel");
    if (!this._isMaxZoomLevel()) {
      var i = be.getViewDown(t);
      if (i) {
        var n = this._view.option("contouredDate") || this._view.option("date");
        e && (n = g(e).data(qj)), this._isOtherViewCellClicked = !0, this.option("currentDate", n), this.option("zoomLevel", i), this._isOtherViewCellClicked = !1, this._renderNavigator(), this._animateShowView(), this._moveToClosestAvailableDate(), this._setViewContoured(this._getNormalizedDate(this.option("currentDate")));
      }
    }
  },
  _renderNavigator: function() {
    this._navigator || (this._navigator = new Dj(g("<div>"), this._navigatorConfig())), this._navigator.option("text", this._view.getNavigatorCaption()), this._updateButtonsVisibility();
  },
  _navigatorConfig: function() {
    return {
      text: this._view.getNavigatorCaption(),
      onClick: this._navigatorClickHandler.bind(this),
      onCaptionClick: this._navigateUp.bind(this),
      rtlEnabled: this.option("rtlEnabled")
    };
  },
  _navigatorClickHandler: function(e) {
    var t = this._getDateByOffset(e.direction, this.option("currentDate"));
    this._moveToClosestAvailableDate(t);
  },
  _navigateUp: function() {
    var e = this.option("zoomLevel"), t = be.getViewUp(e);
    !t || this._isMinZoomLevel(e) || (this.option("zoomLevel", t), this._renderNavigator(), this._animateShowView(), this._moveToClosestAvailableDate(), this._setViewContoured(this._getNormalizedDate(this.option("currentDate"))));
  },
  _isMinZoomLevel: function(e) {
    var t = this._getMinDate(), i = this._getMaxDate();
    return be.sameView(e, t, i) || this.option("minZoomLevel") === e;
  },
  _updateButtonsVisibility: function() {
    this._navigator.toggleButton("next", !x(this._getRequiredView("next"))), this._navigator.toggleButton("prev", !x(this._getRequiredView("prev")));
  },
  _renderSwipeable: function() {
    this._swipeable || (this._swipeable = this._createComponent(this.$element(), Qd, {
      onStart: this._swipeStartHandler.bind(this),
      onUpdated: this._swipeUpdateHandler.bind(this),
      onEnd: this._swipeEndHandler.bind(this),
      itemSizeFunc: this._viewWidth.bind(this)
    }));
  },
  _swipeStartHandler: function(e) {
    ft.stop(this._$viewsWrapper, !0), e.event.maxLeftOffset = this._getRequiredView("next") ? 1 : 0, e.event.maxRightOffset = this._getRequiredView("prev") ? 1 : 0;
  },
  _getRequiredView: function(e) {
    var t, i = this.option("rtlEnabled");
    return e === "next" ? t = i ? this._beforeView : this._afterView : e === "prev" && (t = i ? this._afterView : this._beforeView), t;
  },
  _swipeUpdateHandler: function(e) {
    var t = e.event.offset;
    kt(this._$viewsWrapper, {
      left: t * this._viewWidth(),
      top: 0
    }), this._updateNavigatorCaption(t);
  },
  _swipeEndHandler: function(e) {
    var t = e.event.targetOffset, i = t ? t / Math.abs(t) : 0;
    if (i === 0) {
      this._animateWrapper(0, qp);
      return;
    }
    var n = this._getDateByOffset(-i * this._getRtlCorrection());
    this._isDateInInvalidRange(n) && (i >= 0 ? n = new Date(this._getMinDate()) : n = new Date(this._getMaxDate())), this.option("currentDate", n);
  },
  _viewWidth: function() {
    return this._viewWidthValue || (this._viewWidthValue = Ae(this.$element())), this._viewWidthValue;
  },
  _updateNavigatorCaption: function(e) {
    e *= this._getRtlCorrection();
    var t = this._view;
    e > 0.5 && this._beforeView ? t = this._beforeView : e < -0.5 && this._afterView && (t = this._afterView), this._navigator.option("text", t.getNavigatorCaption());
  },
  _isDateInInvalidRange: function(e) {
    if (!this._view.isBoundary(e)) {
      var t = this._getMinDate(), i = this._getMaxDate(), n = be.normalizeDate(e, t, i);
      return n === t || n === i;
    }
  },
  _renderFooter: function() {
    var e = this.option("showTodayButton");
    if (e) {
      var t = this._createComponent(g("<a>"), Gt, {
        focusStateEnabled: !1,
        text: q.format("dxCalendar-todayButtonText"),
        onClick: function(i) {
          this._toTodayView(i);
        }.bind(this),
        integrationOptions: {}
      }).$element().addClass(Hj);
      this._$footer = g("<div>").addClass($j).append(t), this.$element().append(this._$footer);
    }
    this.$element().toggleClass(zj, e);
  },
  _renderSubmitElement: function() {
    this._$submitElement = g("<input>").attr("type", "hidden").appendTo(this.$element()), this._setSubmitValue(this.option("value"));
  },
  _setSubmitValue: function(e) {
    var t = this._convertToDate(e);
    this._getSubmitElement().val(Dt.serializeDate(t, jj));
  },
  _getSubmitElement: function() {
    return this._$submitElement;
  },
  _animateShowView: function() {
    return ft.stop(this._view.$element(), !0), this._popAnimationView(this._view, Kj, Uj, qp).promise();
  },
  _popAnimationView: function(e, t, i, n) {
    return ft.animate(e.$element(), {
      type: "pop",
      from: {
        scale: t,
        opacity: t
      },
      to: {
        scale: i,
        opacity: i
      },
      duration: n
    });
  },
  _navigate: function(e, t) {
    if (e !== 0 && Math.abs(e) !== 1 && this._isViewAvailable(t)) {
      var i = this._renderSpecificView(t);
      e > 0 ? (this._afterView && this._afterView.$element().remove(), this._afterView = i) : (this._beforeView && this._beforeView.$element().remove(), this._beforeView = i), this._translateViews();
    }
    var n = this._getRtlCorrection(), r = e > 0 ? 1 : e < 0 ? -1 : 0, a = -n * r * this._viewWidth(), o = this._$viewsWrapper.position().left;
    o !== a && (this._preventViewChangeAnimation ? this._wrapperAnimationEndHandler(e, t) : this._animateWrapper(a, qp).done(this._wrapperAnimationEndHandler.bind(this, e, t)));
  },
  _animateWrapper: function(e, t) {
    return ft.animate(this._$viewsWrapper, {
      type: "slide",
      from: {
        left: this._$viewsWrapper.position().left
      },
      to: {
        left: e
      },
      duration: t
    });
  },
  _getDate: (e) => new Date(e),
  _toTodayView: function(e) {
    this._saveValueChangeEvent(e.event);
    var t = /* @__PURE__ */ new Date();
    if (this._isMaxZoomLevel()) {
      this._dateOption("value", t);
      return;
    }
    this._preventViewChangeAnimation = !0, this.option("zoomLevel", this.option("maxZoomLevel")), this._dateOption("value", t), this._animateShowView(), this._preventViewChangeAnimation = !1;
  },
  _wrapperAnimationEndHandler: function(e, t) {
    this._rearrangeViews(e), this._translateViews(), this._resetLocation(), this._renderNavigator(), this._setViewContoured(t), this._updateAriaId(t), this._updateAriaSelected();
  },
  _rearrangeViews: function(e) {
    if (e !== 0) {
      var t, i, n;
      if (e < 0 ? (t = 1, i = "_beforeView", n = "_afterView") : (t = -1, i = "_afterView", n = "_beforeView"), !!this[i]) {
        var r = this[i].option("date");
        this[n] && this[n].$element().remove(), e === t ? this[n] = this._view : (this[n] = this._renderSpecificView(this._getDateByOffset(t, r)), this._view.$element().remove()), this._view = this[i];
        var a = this._getDateByOffset(-t, r);
        this[i] = this._isViewAvailable(a) ? this._renderSpecificView(a) : null;
      }
    }
  },
  _resetLocation: function() {
    kt(this._$viewsWrapper, {
      left: 0,
      top: 0
    });
  },
  _clean: function() {
    this.callBase(), this._clearViewWidthCache(), delete this._$viewsWrapper, delete this._navigator, delete this._$footer;
  },
  _clearViewWidthCache: function() {
    delete this._viewWidthValue;
  },
  _disposeViews: function() {
    this._view.$element().remove(), this._beforeView && this._beforeView.$element().remove(), this._afterView && this._afterView.$element().remove(), delete this._view, delete this._beforeView, delete this._afterView;
  },
  _dispose: function() {
    clearTimeout(this._waitRenderViewTimeout), this.callBase();
  },
  _refreshViews: function() {
    this._disposeViews(), this._renderViews();
  },
  _visibilityChanged: function() {
    this._translateViews();
  },
  _focusInHandler: function() {
    this.callBase.apply(this, arguments), this._view.option("contouredDate", this.option("currentDate"));
  },
  _focusOutHandler: function() {
    this.callBase.apply(this, arguments), this._view.option("contouredDate", null);
  },
  _updateViewsValue: function(e) {
    var t = e ? new Date(e) : null;
    this._view.option("value", t), this._beforeView && this._beforeView.option("value", t), this._afterView && this._afterView.option("value", t);
  },
  _updateAriaSelected: function(e, t) {
    var i;
    e = (i = e) !== null && i !== void 0 ? i : this._dateOption("value");
    var n = this._view._getCellByDate(t), r = this._view._getCellByDate(e);
    this.setAria("selected", void 0, n), this.setAria("selected", !0, r), e && this.option("currentDate").getTime() === e.getTime() && this._updateAriaId(e);
  },
  _updateAriaId: function(e) {
    var t;
    e = (t = e) !== null && t !== void 0 ? t : this.option("currentDate");
    var i = "dx-" + new Ot(), n = this._view._getCellByDate(e);
    this.setAria("id", i, n), this.setAria("activedescendant", i), this._onContouredChanged(i);
  },
  _suppressingNavigation: function(e, t) {
    this._suppressNavigation = !0, e.apply(this, t), delete this._suppressNavigation;
  },
  _optionChanged: function(e) {
    var t = e.value, i = e.previousValue;
    switch (e.name) {
      case "width":
        this.callBase(e), this._clearViewWidthCache();
        break;
      case "min":
      case "max":
        this.min = void 0, this.max = void 0, this._suppressingNavigation(this._updateCurrentDate, [this.option("currentDate")]), this._refreshViews(), this._renderNavigator();
        break;
      case "firstDayOfWeek":
        this._refreshViews(), this._updateButtonsVisibility();
        break;
      case "currentDate":
        this.setAria("id", void 0, this._view._getCellByDate(i)), this._updateCurrentDate(t);
        break;
      case "zoomLevel":
        this.$element().removeClass(cb + "-" + i), this._correctZoomLevel(), this._refreshViews(), this._renderNavigator(), this._updateAriaId();
        break;
      case "minZoomLevel":
      case "maxZoomLevel":
        this._correctZoomLevel(), this._updateButtonsVisibility();
        break;
      case "value":
        t = this._convertToDate(t), i = this._convertToDate(i), this._updateAriaSelected(t, i), this.option("currentDate", x(t) ? new Date(t) : /* @__PURE__ */ new Date()), this._updateViewsValue(t), this._setSubmitValue(t), this.callBase(e);
        break;
      case "onCellClick":
        this._view.option("onCellClick", t);
        break;
      case "onContouredChanged":
        this._onContouredChanged = this._createActionByOption("onContouredChanged");
        break;
      case "disabledDates":
      case "dateSerializationFormat":
      case "cellTemplate":
      case "showTodayButton":
        this._invalidate();
        break;
      case "skipFocusCheck":
        break;
      case "_todayDate":
      case "showWeekNumbers":
      case "weekNumberRule":
        this._refreshViews();
        break;
      default:
        this.callBase(e);
    }
  },
  getContouredDate: function() {
    return this._view.option("contouredDate");
  }
});
We("dxCalendar", PA);
var Lu = ze.abstract, Kc = ze.inherit({
  ctor: function(e) {
    this.dateBox = e;
  },
  widgetOption: function() {
    return this._widget && this._widget.option.apply(this._widget, arguments);
  },
  _renderWidget: function(e) {
    e = e || g("<div>"), this._widget = this._createWidget(e), this._widget.$element().appendTo(this._getWidgetContainer());
  },
  _createWidget: function(e) {
    var t = this._getWidgetName(), i = this._getWidgetOptions();
    return this.dateBox._createComponent(e, t, i);
  },
  _getWidgetOptions: Lu,
  _getWidgetName: Lu,
  getDefaultOptions: function() {
    return {
      mode: "text"
    };
  },
  getDisplayFormat: Lu,
  supportedKeys: $,
  getKeyboardListener: $,
  customizeButtons: $,
  getParsedText: function(e, t) {
    var i = Pe.parse(e, t);
    return i || Pe.parse(e);
  },
  renderInputMinMax: $,
  renderOpenedState: function() {
    this._updateValue();
  },
  popupConfig: Lu,
  _dimensionChanged: function() {
    var e;
    (e = this._getPopup()) === null || e === void 0 || e.repaint();
  },
  renderPopupContent: function() {
    var e = this._getPopup();
    this._renderWidget();
    var t = e.$content().parent();
    w.off(t, "mousedown"), w.on(t, "mousedown", this._preventFocusOnPopup.bind(this));
  },
  getFirstPopupElement: $,
  getLastPopupElement: $,
  _preventFocusOnPopup: function(e) {
    e.preventDefault();
  },
  _getWidgetContainer: function() {
    return this._getPopup().$content();
  },
  _getPopup: function() {
    return this.dateBox._popup;
  },
  popupShowingHandler: $,
  popupHiddenHandler: $,
  _updateValue: function() {
    this._widget && this._widget.option("value", this.dateBoxValue());
  },
  useCurrentDateByDefault: $,
  getDefaultDate: function() {
    return /* @__PURE__ */ new Date();
  },
  textChangedHandler: $,
  renderValue: function() {
    this.dateBox.option("opened") && this._updateValue();
  },
  getValue: function() {
    return this._widget.option("value");
  },
  isAdaptivityChanged: function() {
    return !1;
  },
  dispose: function() {
    var e = this._getPopup();
    e && e.$content().empty();
  },
  dateBoxValue: function() {
    return arguments.length ? this.dateBox.dateValue.apply(this.dateBox, arguments) : this.dateBox.dateOption.apply(this.dateBox, ["value"]);
  }
}), MA = Kc.inherit({
  NAME: "Calendar",
  getDefaultOptions: function() {
    return T(this.callBase(), {
      todayButtonText: q.format("dxCalendar-todayButtonText")
    });
  },
  supportedKeys: function() {
    var e = function(t) {
      return this.option("opened") ? (t.preventDefault(), !0) : !1;
    };
    return {
      rightArrow: function() {
        if (this.option("opened"))
          return !0;
      },
      leftArrow: function() {
        if (this.option("opened"))
          return !0;
      },
      enter: function(t) {
        if (this.dateBox.option("opened"))
          if (t.preventDefault(), this._widget.option("zoomLevel") === this._widget.option("maxZoomLevel")) {
            var i = this._getContouredValue(), n = this._lastActionElement, r = this._closeDropDownByEnter();
            return r && i && n === "calendar" && this.dateBoxValue(i, t), r && this.dateBox.close(), this.dateBox._valueChangeEventHandler(t), !r;
          } else
            return !0;
        else
          this.dateBox._valueChangeEventHandler(t);
      }.bind(this),
      home: e,
      end: e
    };
  },
  getDisplayFormat: function(e) {
    return e || "shortdate";
  },
  _closeDropDownByEnter: () => !0,
  _getWidgetName: function() {
    return PA;
  },
  _getContouredValue: function() {
    return this._widget._view.option("contouredDate");
  },
  getKeyboardListener() {
    return this._widget;
  },
  _getWidgetOptions: function() {
    var e = this.dateBox.option("disabledDates");
    return T(this.dateBox.option("calendarOptions"), {
      value: this.dateBoxValue() || null,
      dateSerializationFormat: null,
      min: this.dateBox.dateOption("min"),
      max: this.dateBox.dateOption("max"),
      onValueChanged: this._valueChangedHandler.bind(this),
      onCellClick: this._cellClickHandler.bind(this),
      tabIndex: null,
      disabledDates: ce(e) ? this._injectComponent(e.bind(this.dateBox)) : e,
      onContouredChanged: this._refreshActiveDescendant.bind(this),
      skipFocusCheck: !0
    });
  },
  _injectComponent: function(e) {
    var t = this;
    return function(i) {
      return T(i, {
        component: t.dateBox
      }), e(i);
    };
  },
  _refreshActiveDescendant: function(e) {
    this._lastActionElement = "calendar", this.dateBox.setAria("activedescendant", e.actionValue);
  },
  _getTodayButtonConfig() {
    var e = this.dateBox.option("buttonsLocation"), t = e === "default", i = t ? ["bottom", "center"] : zo(e);
    return {
      widget: "dxButton",
      toolbar: i[0],
      location: i[1] === "after" ? "before" : i[1],
      options: {
        onInitialized: function(n) {
          n.component.registerKeyHandler("escape", this._escapeHandler.bind(this));
        }.bind(this),
        onClick: (n) => {
          this._widget._toTodayView(n);
        },
        text: this.dateBox.option("todayButtonText"),
        type: "today"
      }
    };
  },
  _isCalendarVisible: function() {
    var {
      calendarOptions: e
    } = this.dateBox.option();
    return $i(e) || e.visible !== !1;
  },
  _getPopupToolbarItems(e) {
    var t = this.dateBox.option("applyValueMode") === "useButtons", i = t && this._isCalendarVisible();
    if (i) {
      var n = this._getTodayButtonConfig();
      return [n, ...e];
    }
    return e;
  },
  popupConfig: function(e) {
    return T(!0, e, {
      position: {
        collision: "flipfit flip"
      },
      width: "auto"
    });
  },
  _escapeHandler: function() {
    this.dateBox.close(), this.dateBox.focus();
  },
  _valueChangedHandler: function(e) {
    var t = e.value, i = e.previousValue;
    be.sameDate(t, i) && be.sameHoursAndMinutes(t, i) || this.dateBox.option("applyValueMode") === "instantly" && this.dateBoxValue(this.getValue(), e.event);
  },
  _updateValue: function() {
    this._widget && this._widget.option("value", this.dateBoxValue());
  },
  textChangedHandler: function() {
    this._lastActionElement = "input", this.dateBox.option("opened") && this._widget && this._updateValue(!0);
  },
  _cellClickHandler: function(e) {
    var t = this.dateBox;
    t.option("applyValueMode") === "instantly" && (t.option("opened", !1), this.dateBoxValue(this.getValue(), e.event));
  }
});
class Yj {
  constructor(t) {
    this.DIRECTION_HORIZONTAL = "horizontal", this.DIRECTION_VERTICAL = "vertical", this.DIRECTION_BOTH = "both", this.direction = t ?? zd;
  }
  get isHorizontal() {
    return this.direction === KT || this.direction === cp;
  }
  get isVertical() {
    return this.direction === zd || this.direction === cp;
  }
  get isBoth() {
    return this.direction === cp;
  }
}
function Zj(e, t) {
  if (Me(e)) {
    var i = ct(e.left, e.x), n = ct(e.top, e.y);
    return {
      left: x(i) ? i : void 0,
      top: x(n) ? n : void 0
    };
  }
  var {
    isHorizontal: r,
    isVertical: a
  } = new Yj(t);
  return {
    left: r && x(e) ? e : void 0,
    top: a && x(e) ? e : void 0
  };
}
var Qj = "dx-dateviewroller", Jj = "dx-state-active", e6 = "dx-dateviewroller-current", hb = "dx-dateview-item", t6 = "dx-dateview-item-selected", i6 = "dx-dateview-item-selected-frame", n6 = "dx-dateview-item-selected-border";
class LA extends Si {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      showScrollbar: "never",
      useNative: !1,
      selectedIndex: 0,
      bounceEnabled: !1,
      items: [],
      showOnClick: !1,
      onClick: null,
      onSelectedIndexChanged: null,
      scrollByContent: !0
    });
  }
  _init() {
    super._init(), this.option("onVisibilityChange", this._visibilityChangedHandler.bind(this)), this.option("onEnd", this._endActionHandler.bind(this));
  }
  _render() {
    super._render(), this._renderSelectedItemFrame(), this.$element().addClass(Qj), this._renderContainerClick(), this._renderItems(), this._renderSelectedValue(), this._renderItemsClick(), this._renderWheelEvent(), this._renderSelectedIndexChanged();
  }
  _renderSelectedIndexChanged() {
    this._selectedIndexChanged = this._createActionByOption("onSelectedIndexChanged");
  }
  _renderWheelEvent() {
    w.on(g(this.container()), "dxmousewheel", (t) => {
      this._isWheelScrolled = !0;
    });
  }
  _renderContainerClick() {
    if (this.option("showOnClick")) {
      var t = oe(Xe, this.NAME), i = this._createActionByOption("onClick");
      w.off(g(this.container()), t), w.on(g(this.container()), t, function(n) {
        i({
          event: n
        });
      });
    }
  }
  _renderItems() {
    var t = this.option("items") || [], i = g();
    g(this.content()).empty(), t.forEach(function(n) {
      i = i.add(g("<div>").addClass(hb).append(n));
    }), g(this.content()).append(i), this._$items = i, this.update();
  }
  _renderSelectedItemFrame() {
    g("<div>").addClass(i6).append(g("<div>").addClass(n6)).appendTo(g(this.container()));
  }
  _renderSelectedValue(t) {
    var i = this._fitIndex(t ?? this.option("selectedIndex"));
    this._moveTo({
      top: this._getItemPosition(i)
    }), this._renderActiveStateItem();
  }
  _fitIndex(t) {
    var i = this.option("items") || [], n = i.length;
    return t >= n ? n - 1 : t < 0 ? 0 : t;
  }
  _getItemPosition(t) {
    return Math.round(this._itemHeight() * t);
  }
  _renderItemsClick() {
    var t = this._getItemSelector(), i = oe(Xe, this.NAME);
    w.off(this.$element(), i, t), w.on(this.$element(), i, t, this._itemClickHandler.bind(this));
  }
  _getItemSelector() {
    return "." + hb;
  }
  _itemClickHandler(t) {
    this.option("selectedIndex", this._itemElementIndex(t.currentTarget));
  }
  _itemElementIndex(t) {
    return this._itemElements().index(t);
  }
  _itemElements() {
    return this.$element().find(this._getItemSelector());
  }
  _renderActiveStateItem() {
    var t = this.option("selectedIndex");
    B(this._$items, function(i) {
      g(this).toggleClass(t6, t === i);
    });
  }
  _shouldScrollToNeighborItem() {
    return ve.real().deviceType === "desktop" && this._isWheelScrolled;
  }
  _moveTo(t) {
    var {
      top: i,
      left: n
    } = Zj(t), r = this.scrollOffset(), a = {
      x: r.left - n,
      y: r.top - i
    };
    if (this._isVisible() && (a.x || a.y))
      if (this._prepareDirections(!0), this._animation && !this._shouldScrollToNeighborItem()) {
        var o = this;
        ft.stop(g(this.content())), ft.animate(g(this.content()), {
          duration: 200,
          type: "slide",
          to: {
            top: Math.floor(a.y)
          },
          complete() {
            Dl(g(o.content())), o.handleMove({
              delta: a
            });
          }
        }), delete this._animation;
      } else
        this.handleMove({
          delta: a
        });
  }
  _validate(t) {
    return this._moveIsAllowed(t);
  }
  _fitSelectedIndexInRange(t) {
    var i = this.option("items").length;
    return Math.max(Math.min(t, i - 1), 0);
  }
  _isInNullNeighborhood(t) {
    return -0.1 <= t && t <= 0.1;
  }
  _getSelectedIndexAfterScroll(t) {
    var i = this.scrollOffset().top, n = t * this._itemHeight(), r = i - n;
    if (this._isInNullNeighborhood(r))
      return t;
    var a = r > 0 ? 1 : -1, o = this._fitSelectedIndexInRange(t + a);
    return o;
  }
  _getNewSelectedIndex(t) {
    if (this._shouldScrollToNeighborItem())
      return this._getSelectedIndexAfterScroll(t);
    this._animation = !0;
    var i = this.scrollOffset().top / this._itemHeight();
    return Math.round(i);
  }
  _endActionHandler() {
    var t = this.option("selectedIndex"), i = this._getNewSelectedIndex(t);
    i === t ? this._renderSelectedValue(i) : this.option("selectedIndex", i), this._isWheelScrolled = !1;
  }
  _itemHeight() {
    var t = this._$items.first();
    return Fe(t);
  }
  _toggleActive(t) {
    this.$element().toggleClass(Jj, t);
  }
  _isVisible() {
    return g(this.container()).is(":visible");
  }
  _fireSelectedIndexChanged(t, i) {
    this._selectedIndexChanged({
      value: t,
      previousValue: i,
      event: void 0
    });
  }
  _visibilityChanged(t) {
    super._visibilityChanged(t), this._visibilityChangedHandler(t);
  }
  _visibilityChangedHandler(t) {
    t && (this._visibilityTimer = setTimeout(() => {
      this._renderSelectedValue(this.option("selectedIndex"));
    })), this.toggleActiveState(!1);
  }
  toggleActiveState(t) {
    this.$element().toggleClass(e6, t);
  }
  _refreshSelectedIndex() {
    var t = this.option("selectedIndex"), i = this._fitIndex(t);
    i === t ? this._renderActiveStateItem() : this.option("selectedIndex", i);
  }
  _optionChanged(t) {
    switch (t.name) {
      case "selectedIndex":
        this._fireSelectedIndexChanged(t.value, t.previousValue), this._renderSelectedValue(t.value);
        break;
      case "items":
        this._renderItems(), this._refreshSelectedIndex();
        break;
      case "onClick":
      case "showOnClick":
        this._renderContainerClick();
        break;
      case "onSelectedIndexChanged":
        this._renderSelectedIndexChanged();
        break;
      default:
        super._optionChanged(t);
    }
  }
  _dispose() {
    clearTimeout(this._visibilityTimer), super._dispose();
  }
}
We("dxDateViewRoller", LA);
var Xp = "dx-dateview", r6 = "dx-dateview-compact", a6 = "dx-dateview-wrapper", o6 = "dx-dateview-rollers", s6 = "dx-dateviewroller", pb = {
  date: "date",
  datetime: "datetime",
  time: "time"
}, pi = {
  year: "year",
  month: "month",
  day: "day",
  hours: "hours"
}, VA = nn.inherit({
  _valueOption: function() {
    var e = this.option("value"), t = new Date(e);
    return !e || isNaN(t) ? this._getDefaultDate() : t;
  },
  _getDefaultDate: function() {
    var e = /* @__PURE__ */ new Date();
    return this.option("type") === pb.date ? new Date(e.getFullYear(), e.getMonth(), e.getDate()) : e;
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      minDate: Ye.MIN_DATEVIEW_DEFAULT_DATE,
      maxDate: Ye.MAX_DATEVIEW_DEFAULT_DATE,
      type: pb.date,
      value: /* @__PURE__ */ new Date(),
      applyCompactClass: !1
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function(e) {
        return e.deviceType !== "desktop";
      },
      options: {
        applyCompactClass: !0
      }
    }]);
  },
  _render: function() {
    this.callBase(), this.$element().addClass(Xp), this._toggleFormatClasses(this.option("type")), this._toggleCompactClass();
  },
  _toggleFormatClasses: function(e, t) {
    this.$element().addClass(Xp + "-" + e), t && this.$element().removeClass(Xp + "-" + t);
  },
  _toggleCompactClass: function() {
    this.$element().toggleClass(r6, this.option("applyCompactClass"));
  },
  _wrapper: function() {
    return this._$wrapper;
  },
  _renderContentImpl: function() {
    this._$wrapper = g("<div>").addClass(a6), this._renderRollers(), this._$wrapper.appendTo(this.$element());
  },
  _renderRollers: function() {
    this._$rollersContainer || (this._$rollersContainer = g("<div>").addClass(o6)), this._$rollersContainer.empty(), this._createRollerConfigs(), this._rollers = {};
    var e = this;
    B(e._rollerConfigs, function(t) {
      var i = g("<div>").appendTo(e._$rollersContainer).addClass(s6 + "-" + e._rollerConfigs[t].type);
      e._rollers[e._rollerConfigs[t].type] = e._createComponent(i, LA, {
        items: e._rollerConfigs[t].displayItems,
        selectedIndex: e._rollerConfigs[t].selectedIndex,
        showScrollbar: "never",
        scrollByContent: !0,
        onStart: function(n) {
          var r = n.component;
          r._toggleActive(!0), e._setActiveRoller(e._rollerConfigs[t], r.option("selectedIndex"));
        },
        onEnd: function(n) {
          var r = n.component;
          r._toggleActive(!1);
        },
        onClick: function(n) {
          var r = n.component;
          r._toggleActive(!0), e._setActiveRoller(e._rollerConfigs[t], r.option("selectedIndex")), e._setRollerState(e._rollerConfigs[t], r.option("selectedIndex")), r._toggleActive(!1);
        },
        onSelectedIndexChanged: function(n) {
          var r = n.component;
          e._setRollerState(e._rollerConfigs[t], r.option("selectedIndex"));
        }
      });
    }), e._$rollersContainer.appendTo(e._wrapper());
  },
  _createRollerConfigs: function(e) {
    var t = this;
    e = e || t.option("type"), t._rollerConfigs = {}, Pe.getFormatParts(Ye.FORMATS_MAP[e]).forEach(function(i) {
      t._createRollerConfig(i);
    });
  },
  _createRollerConfig: function(e) {
    for (var t = Ye.DATE_COMPONENTS_INFO[e], i = this._calculateRollerConfigValueRange(e), n = i.startValue, r = i.endValue, a = t.formatter, o = this._getCurrentDate(), s = {
      type: e,
      setValue: t.setter,
      valueItems: [],
      displayItems: [],
      getIndex: function(u) {
        return u[t.getter]() - n;
      }
    }, l = n; l <= r; l++)
      s.valueItems.push(l), s.displayItems.push(a(l, o));
    s.selectedIndex = s.getIndex(o), this._rollerConfigs[e] = s;
  },
  _setActiveRoller: function(e) {
    var t = e && this._rollers[e.type];
    B(this._rollers, function() {
      this.toggleActiveState(this === t);
    });
  },
  _updateRollersPosition: function() {
    var e = this;
    B(this._rollers, function(t) {
      var i = e._rollerConfigs[t].getIndex(e._getCurrentDate());
      this.option("selectedIndex", i);
    });
  },
  _setRollerState: function(e, t) {
    if (t !== e.selectedIndex) {
      var i = e.valueItems[t], n = e.setValue, r = new Date(this._getCurrentDate()), a = r.getDate(), o = this.option("minDate"), s = this.option("maxDate");
      e.type === pi.month ? a = Math.min(a, Ye.getMaxMonthDay(r.getFullYear(), i)) : e.type === pi.year && (a = Math.min(a, Ye.getMaxMonthDay(i, r.getMonth()))), r.setDate(a), r[n](i);
      var l = be.normalizeDate(r, o, s);
      r = Ye.mergeDates(l, r, "time"), r = be.normalizeDate(r, o, s), this.option("value", r), e.selectedIndex = t;
    }
    e.type === pi.year && this._refreshRollers(), e.type === pi.month && (this._refreshRoller(pi.day), this._refreshRoller(pi.hours));
  },
  _refreshRoller: function(e) {
    var t = this._rollers[e];
    if (t) {
      this._createRollerConfig(e);
      var i = this._rollerConfigs[e];
      (e === pi.day || i.displayItems.toString() !== t.option("items").toString()) && t.option({
        items: i.displayItems,
        selectedIndex: i.selectedIndex
      });
    }
  },
  _getCurrentDate: function() {
    var e = this._valueOption(), t = this.option("minDate"), i = this.option("maxDate");
    return be.normalizeDate(e, t, i);
  },
  _calculateRollerConfigValueRange: function(e) {
    var t = this._getCurrentDate(), i = this.option("minDate"), n = this.option("maxDate"), r = be.sameYear(t, i), a = r && t.getMonth() === i.getMonth(), o = be.sameYear(t, n), s = o && t.getMonth() === n.getMonth(), l = a && t.getDate() === i.getDate(), u = s && t.getDate() === n.getDate(), d = Ye.DATE_COMPONENTS_INFO[e], c = d.startValue, h = d.endValue;
    return e === pi.year && (c = i.getFullYear(), h = n.getFullYear()), e === pi.month && (r && (c = i.getMonth()), o && (h = n.getMonth())), e === pi.day && (h = Ye.getMaxMonthDay(t.getFullYear(), t.getMonth()), r && a && (c = i.getDate()), o && s && (h = n.getDate())), e === pi.hours && (c = l ? i.getHours() : c, h = u ? n.getHours() : h), {
      startValue: c,
      endValue: h
    };
  },
  _refreshRollers: function() {
    this._refreshRoller(pi.month), this._refreshRoller(pi.day), this._refreshRoller(pi.hours);
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "minDate":
      case "maxDate":
      case "type":
        this._renderRollers(), this._toggleFormatClasses(e.value, e.previousValue);
        break;
      case "visible":
        this.callBase(e), e.value && this._renderRollers();
        break;
      case "value":
        this.option("value", this._valueOption()), this._refreshRollers(), this._updateRollersPosition();
        break;
      default:
        this.callBase(e);
    }
  },
  _clean: function() {
    this.callBase(), delete this._$rollersContainer;
  }
});
We("dxDateView", VA);
var l6 = ke(), u6 = Kc.inherit({
  NAME: "DateView",
  getDefaultOptions: function() {
    return T(this.callBase(), {
      openOnFieldClick: !0,
      applyButtonText: q.format("OK"),
      "dropDownOptions.showTitle": !0
    });
  },
  getDisplayFormat: function(e) {
    return e || Ye.FORMATS_MAP[this.dateBox.option("type")];
  },
  popupConfig: function(e) {
    return {
      toolbarItems: this.dateBox._popupToolbarItemsConfig(),
      onInitialized: e.onInitialized,
      defaultOptionsRules: [{
        device: {
          platform: "android"
        },
        options: {
          width: 333,
          height: 331
        }
      }, {
        device: function(t) {
          var i = t.platform;
          return i === "generic" || i === "ios";
        },
        options: {
          width: "auto",
          height: "auto"
        }
      }, {
        device: function(t) {
          var i = t.platform, n = t.phone;
          return i === "generic" && n;
        },
        options: {
          width: 333,
          maxWidth: "100%",
          maxHeight: "100%",
          height: "auto",
          position: {
            collision: "flipfit flip"
          }
        }
      }, {
        device: {
          platform: "ios",
          phone: !0
        },
        options: {
          width: "100%",
          position: {
            my: "bottom",
            at: "bottom",
            of: l6
          }
        }
      }]
    };
  },
  _renderWidget: function() {
    if (Cc(this.dateBox.option("mode")) && this.dateBox._isNativeType() || this.dateBox.option("readOnly")) {
      this._widget && (this._widget.$element().remove(), this._widget = null);
      return;
    }
    var e = this._getPopup();
    if (this._widget)
      this._widget.option(this._getWidgetOptions());
    else {
      var t = g("<div>").appendTo(e.$content());
      this._widget = this._createWidget(t);
    }
    this._widget.$element().appendTo(this._getWidgetContainer());
  },
  _getWidgetName: function() {
    return VA;
  },
  renderOpenedState: function() {
    this.callBase(), this._widget && this._widget.option("value", this._widget._getCurrentDate());
  },
  _getWidgetOptions: function() {
    return {
      value: this.dateBoxValue() || /* @__PURE__ */ new Date(),
      type: this.dateBox.option("type"),
      minDate: this.dateBox.dateOption("min") || new Date(1900, 0, 1),
      maxDate: this.dateBox.dateOption("max") || new Date(Date.now() + 50 * Ye.ONE_YEAR),
      onDisposing: function() {
        this._widget = null;
      }.bind(this)
    };
  }
}), d6 = Kc.inherit({
  NAME: "Native",
  popupConfig: function(e) {
    return T({}, e, {
      width: "auto"
    });
  },
  getParsedText: function(e) {
    return e ? this.dateBox.option("type") === "datetime" ? new Date(e.replace(/-/g, "/").replace("T", " ").split(".")[0]) : Ye.fromStandardDateFormat(e) : null;
  },
  renderPopupContent: $,
  _getWidgetName: $,
  _getWidgetOptions: $,
  _getDateBoxType: function() {
    var e = this.dateBox.option("type");
    return Ye.SUPPORTED_FORMATS.includes(e) ? e === "datetime" && !Cc(e) && (e = "datetime-local") : e = "date", e;
  },
  customizeButtons: function() {
    var e = this.dateBox.getButton("dropDown");
    ve.real().android && e && e.on("click", function() {
      this.dateBox._input().get(0).click();
    }.bind(this));
  },
  getDefaultOptions: function() {
    return {
      mode: this._getDateBoxType()
    };
  },
  getDisplayFormat: function(e) {
    var t = this._getDateBoxType();
    return e || Ye.FORMATS_MAP[t];
  },
  renderInputMinMax: function(e) {
    e.attr({
      min: Dt.serializeDate(this.dateBox.dateOption("min"), "yyyy-MM-dd"),
      max: Dt.serializeDate(this.dateBox.dateOption("max"), "yyyy-MM-dd")
    });
  }
}), c6 = "dx-box", h6 = "dx-box-flex", p6 = "dx-box-item", NA = "dxBoxItemData", f6 = 1, g6 = {
  row: "minWidth",
  col: "minHeight"
}, _6 = {
  row: "maxWidth",
  col: "maxHeight"
}, fb = {
  start: "flex-start",
  end: "flex-end",
  center: "center",
  "space-between": "space-between",
  "space-around": "space-around"
}, gb = {
  start: "flex-start",
  end: "flex-end",
  center: "center",
  stretch: "stretch"
}, v6 = {
  row: "row",
  col: "column"
}, oo = (e, t, i) => {
  if (i = Oo(t, i), e.style[Fa(t)] = i, !Re()) {
    if (i === "" || !x(i))
      return;
    var n = b_(t), r = n + ": " + i + ";";
    e.attributes.style ? e.attributes.style.value.indexOf(r) < 0 && (e.attributes.style.value += " " + r) : e.setAttribute("style", r);
  }
};
class m6 extends Na {
  _renderVisible(t, i) {
    super._renderVisible(t), x(i) && this._options.fireItemStateChangedAction({
      name: "visible",
      state: t,
      oldState: i
    });
  }
}
class C6 {
  constructor(t, i) {
    this._$element = t, this._option = i;
  }
  renderBox() {
    this._$element.css({
      display: td("flexDirection") + "flex"
    }), oo(this._$element.get(0), "flexDirection", v6[this._option("direction")]);
  }
  renderAlign() {
    this._$element.css({
      justifyContent: this._normalizedAlign()
    });
  }
  _normalizedAlign() {
    var t = this._option("align");
    return t in fb ? fb[t] : t;
  }
  renderCrossAlign() {
    this._$element.css({
      alignItems: this._normalizedCrossAlign()
    });
  }
  _normalizedCrossAlign() {
    var t = this._option("crossAlign");
    return t in gb ? gb[t] : t;
  }
  renderItems(t) {
    var i = td("flexDirection"), n = this._option("direction");
    B(t, function() {
      var r = g(this), a = r.data(NA);
      r.css({
        display: i + "flex"
      }).css(_6[n], a.maxSize || "none").css(g6[n], a.minSize || "0"), oo(r.get(0), "flexBasis", a.baseSize || 0), oo(r.get(0), "flexGrow", a.ratio), oo(r.get(0), "flexShrink", x(a.shrink) ? a.shrink : f6), r.children().each((o, s) => {
        g(s).css({
          width: "auto",
          height: "auto",
          display: td("flexDirection") + "flex",
          flexBasis: 0
        }), oo(s, "flexGrow", 1), oo(s, "flexDirection", g(s)[0].style.flexDirection || "column");
      });
    });
  }
}
class kr extends Ha {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      direction: "row",
      align: "start",
      crossAlign: "stretch",
      activeStateEnabled: !1,
      focusStateEnabled: !1,
      onItemStateChanged: void 0,
      _queue: void 0
    });
  }
  _itemClass() {
    return p6;
  }
  _itemDataKey() {
    return NA;
  }
  _itemElements() {
    return this._itemContainer().children(this._itemSelector());
  }
  _init() {
    super._init(), this.$element().addClass(h6), this._initLayout(), this._initBoxQueue();
  }
  _initLayout() {
    this._layout = new C6(this.$element(), this.option.bind(this));
  }
  _initBoxQueue() {
    this._queue = this.option("_queue") || [];
  }
  _queueIsNotEmpty() {
    return this.option("_queue") ? !1 : !!this._queue.length;
  }
  _pushItemToQueue(t, i) {
    this._queue.push({
      $item: t,
      config: i
    });
  }
  _shiftItemFromQueue() {
    return this._queue.shift();
  }
  _initMarkup() {
    this.$element().addClass(c6), this._layout.renderBox(), super._initMarkup(), this._renderAlign(), this._renderActions();
  }
  _renderActions() {
    this._onItemStateChanged = this._createActionByOption("onItemStateChanged");
  }
  _renderAlign() {
    this._layout.renderAlign(), this._layout.renderCrossAlign();
  }
  _renderItems(t) {
    for (super._renderItems(t); this._queueIsNotEmpty(); ) {
      var i = this._shiftItemFromQueue();
      this._createComponent(i.$item, kr, T({
        itemTemplate: this.option("itemTemplate"),
        itemHoldTimeout: this.option("itemHoldTimeout"),
        onItemHold: this.option("onItemHold"),
        onItemClick: this.option("onItemClick"),
        onItemContextMenu: this.option("onItemContextMenu"),
        onItemRendered: this.option("onItemRendered"),
        _queue: this._queue
      }, i.config));
    }
    this._layout.renderItems(this._itemElements());
  }
  _renderItemContent(t) {
    var i = t.itemData && t.itemData.node;
    return i ? this._renderItemContentByNode(t, i) : super._renderItemContent(t);
  }
  _postprocessRenderItem(t) {
    var i = t.itemData.box;
    i && this._pushItemToQueue(t.itemContent, i);
  }
  _createItemByTemplate(t, i) {
    return i.itemData.box ? t.source ? t.source() : g() : super._createItemByTemplate(t, i);
  }
  _itemOptionChanged(t, i, n, r) {
    i === "visible" && this._onItemStateChanged({
      name: i,
      state: n,
      oldState: r !== !1
    }), super._itemOptionChanged(t, i, n);
  }
  _optionChanged(t) {
    switch (t.name) {
      case "_queue":
      case "direction":
        this._invalidate();
        break;
      case "align":
        this._layout.renderAlign();
        break;
      case "crossAlign":
        this._layout.renderCrossAlign();
        break;
      default:
        super._optionChanged(t);
    }
  }
  _itemOptions() {
    var t = super._itemOptions();
    return t.fireItemStateChangedAction = (i) => {
      this._onItemStateChanged(i);
    }, t;
  }
}
kr.ItemClass = m6;
We("dxBox", kr);
var x6 = "dx-timeview", y6 = "dx-timeview-clock", b6 = "dx-timeview-field", S6 = "dx-timeview-hourarrow", E6 = "dx-timeview-time-separator", w6 = "dx-timeview-format12", Yp = -1, Zp = 1, I6 = "dx-timeview-minutearrow", _b = function(e, t, i) {
  T6(e, t, i);
}, T6 = function(e, t, i) {
  e.css("transform", "rotate(" + t + "deg) translate(0," + i + "px)");
}, $A = nn.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      value: new Date(Date.now()),
      use24HourFormat: !0,
      _showClock: !0,
      _arrowOffset: 5,
      stylingMode: void 0
    });
  },
  _getValue: function() {
    return this.option("value") || /* @__PURE__ */ new Date();
  },
  _init: function() {
    this.callBase(), this.$element().addClass(x6);
  },
  _render: function() {
    this.callBase(), this._renderBox(), this._updateTime();
  },
  _renderBox: function() {
    var e = g("<div>").appendTo(this.$element()), t = [];
    this.option("_showClock") && t.push({
      ratio: 1,
      shrink: 0,
      baseSize: "auto",
      template: this._renderClock.bind(this)
    }), t.push({
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      template: this._renderField.bind(this)
    }), this._createComponent(e, kr, {
      height: "100%",
      width: "100%",
      direction: "col",
      items: t
    });
  },
  _renderClock: function(e, t, i) {
    this._$hourArrow = g("<div>").addClass(S6), this._$minuteArrow = g("<div>").addClass(I6);
    var n = g(i);
    n.addClass(y6).append(this._$hourArrow).append(this._$minuteArrow), this.setAria("role", "presentation", n);
  },
  _updateClock: function() {
    var e = this._getValue(), t = e.getHours() / 12 * 360 + e.getMinutes() / 60 * 30, i = e.getMinutes() / 60 * 360;
    _b(this._$hourArrow, t, this.option("_arrowOffset")), _b(this._$minuteArrow, i, this.option("_arrowOffset"));
  },
  _getBoxItems: function(e) {
    var t = [{
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      template: () => this._hourBox.$element()
    }, {
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      template: g("<div>").addClass(E6).text(Pe.getTimeSeparator())
    }, {
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      template: () => this._minuteBox.$element()
    }];
    return e && t.push({
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      template: () => this._format12.$element()
    }), t;
  },
  _renderField: function() {
    var e = !this.option("use24HourFormat");
    return this._createHourBox(e), this._createMinuteBox(), e && this._createFormat12Box(), this._createComponent(g("<div>").addClass(b6), kr, {
      direction: "row",
      align: "center",
      crossAlign: "center",
      items: this._getBoxItems(e)
    }).$element();
  },
  _createHourBox: function(e) {
    var t = this._hourBox = this._createComponent(g("<div>"), Yd, T({
      min: -1,
      max: e ? 13 : 24,
      value: this._getValue().getHours(),
      onValueChanged: this._onHourBoxValueChanged.bind(this),
      onKeyboardHandled: (i) => this._keyboardHandler(i)
    }, this._getNumberBoxConfig()));
    t.setAria("label", "hours");
  },
  _isPM: function() {
    return !this.option("use24HourFormat") && this._format12.option("value") === 1;
  },
  _onHourBoxValueChanged: function(e) {
    var {
      value: t,
      component: i
    } = e, n = this._getValue(), r = new Date(n), a = this._convertMaxHourToMin(t);
    i.option("value", a), this._isPM() && (a += 12), r.setHours(a), Ye.normalizeTime(r), this.option("value", r);
  },
  _convertMaxHourToMin: function(e) {
    var t = this.option("use24HourFormat") ? 24 : 12;
    return (t + e) % t;
  },
  _createMinuteBox: function() {
    var e = this._minuteBox = this._createComponent(g("<div>"), Yd, T({
      min: -1,
      max: 60,
      value: this._getValue().getMinutes(),
      onKeyboardHandled: (t) => this._keyboardHandler(t),
      onValueChanged: (t) => {
        var {
          value: i,
          component: n
        } = t, r = (60 + i) % 60;
        n.option("value", r);
        var a = new Date(this._getValue());
        a.setMinutes(r), Ye.normalizeTime(a), this.option("value", a);
      }
    }, this._getNumberBoxConfig()));
    e.setAria("label", "minutes");
  },
  _createFormat12Box: function() {
    var e = Pe.getPeriodNames(), t = this._format12 = this._createComponent(g("<div>").addClass(w6), jv, {
      items: [{
        value: Yp,
        text: e[0]
      }, {
        value: Zp,
        text: e[1]
      }],
      valueExpr: "value",
      displayExpr: "text",
      onKeyboardHandled: (i) => this._keyboardHandler(i),
      onValueChanged: (i) => {
        var {
          value: n
        } = i, r = this._getValue().getHours(), a = new Date(this._getValue()), o = (r + 12 * n) % 24;
        a.setHours(o), this.option("value", a);
      },
      value: this._getValue().getHours() >= 12 ? Zp : Yp,
      stylingMode: this.option("stylingMode")
    });
    t.setAria("label", "type");
  },
  _refreshFormat12: function() {
    if (!this.option("use24HourFormat")) {
      var e = this._getValue(), t = e.getHours(), i = t >= 12, n = i ? Zp : Yp;
      this._silentEditorValueUpdate(this._format12, n);
    }
  },
  _silentEditorValueUpdate: function(e, t) {
    e && (e._suppressValueChangeAction(), e.option("value", t), e._resumeValueChangeAction());
  },
  _getNumberBoxConfig: function() {
    return {
      showSpinButtons: !0,
      displayValueFormatter: function(e) {
        return (e < 10 ? "0" : "") + e;
      },
      stylingMode: this.option("stylingMode")
    };
  },
  _normalizeHours: function(e) {
    return this.option("use24HourFormat") ? e : e % 12 || 12;
  },
  _updateField: function() {
    var e = this._normalizeHours(this._getValue().getHours());
    this._silentEditorValueUpdate(this._hourBox, e), this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes()), this._refreshFormat12();
  },
  _updateTime: function() {
    this.option("_showClock") && this._updateClock(), this._updateField();
  },
  _visibilityChanged: function(e) {
    e && this._updateTime();
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "value":
        this._updateTime(), this.callBase(e);
        break;
      case "_arrowOffset":
        break;
      case "use24HourFormat":
      case "_showClock":
      case "stylingMode":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxTimeView", $A);
var D6 = ke(), A6 = 573, O6 = "dx-datebox-adaptivity-mode", vb = "dx-datebox-datetime-time-side", R6 = MA.inherit({
  NAME: "CalendarWithTime",
  getDefaultOptions: function() {
    return T(this.callBase(), {
      applyValueMode: "useButtons",
      buttonsLocation: "bottom after",
      "dropDownOptions.showTitle": !1
    });
  },
  _closeDropDownByEnter: function() {
    return be.sameDate(this._getContouredValue(), this.widgetOption("value"));
  },
  getDisplayFormat: function(e) {
    return e || "shortdateshorttime";
  },
  _is24HourFormat: function() {
    return Pe.is24HourFormat(this.getDisplayFormat(this.dateBox.option("displayFormat")));
  },
  _getContouredValue: function() {
    var e = this.callBase();
    return this._updateDateTime(e);
  },
  _renderWidget: function() {
    this.callBase(), this._timeView = this.dateBox._createComponent(g("<div>"), $A, {
      value: this.dateBoxValue(),
      _showClock: !this._isShrinkView(),
      use24HourFormat: this._is24HourFormat(),
      onValueChanged: this._valueChangedHandler.bind(this),
      stylingMode: this.dateBox.option("stylingMode")
    }), this._timeView.registerKeyHandler("escape", this._escapeHandler.bind(this));
  },
  renderOpenedState: function() {
    this.callBase();
    var e = this._getPopup();
    e && e.$wrapper().toggleClass(O6, this._isSmallScreen()), clearTimeout(this._repaintTimer), this._repaintTimer = setTimeout(function() {
      this._getPopup() && this._getPopup().repaint();
    }.bind(this), 0);
  },
  isAdaptivityChanged: function() {
    var e = this._isShrinkView(), t = this._currentAdaptiveMode;
    return e !== t ? (this._currentAdaptiveMode = e, t !== void 0) : this.callBase();
  },
  _updateValue: function(e) {
    var t = this.dateBoxValue();
    !t && !e && (t = /* @__PURE__ */ new Date(), Ye.normalizeTime(t)), this.callBase(), this._timeView && (t && this._timeView.option("value", t), this._timeView.option("use24HourFormat", this._is24HourFormat()));
  },
  _isSmallScreen: function() {
    return Ae(D6) <= A6;
  },
  _isShrinkView: function() {
    return !this.dateBox.option("showAnalogClock") || this.dateBox.option("adaptivityEnabled") && this._isSmallScreen();
  },
  _getBoxItems: function() {
    var e = [{
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      name: "calendar"
    }];
    return this._isShrinkView() || e.push({
      ratio: 0,
      shrink: 0,
      baseSize: "auto",
      name: "time"
    }), e;
  },
  renderPopupContent: function() {
    this.callBase(), this._currentAdaptiveMode = this._isShrinkView();
    var e = this._getPopup().$content();
    this._box = this.dateBox._createComponent(g("<div>").appendTo(e), kr, {
      direction: "row",
      crossAlign: "stretch",
      items: this._getBoxItems(),
      itemTemplate: function(t, i, n) {
        var r = g("<div>");
        switch (t.name) {
          case "calendar":
            r.append(this._widget.$element()), this._isShrinkView() && (this._timeView.$element().addClass(vb), r.append(this._timeView.$element()));
            break;
          case "time":
            r.append(this._timeView.$element()), g(n).addClass(vb);
        }
        return r;
      }.bind(this)
    }), this._attachTabHandler();
  },
  popupConfig: function(e) {
    var t = this.callBase(e);
    return T(t, {
      width: "auto"
    });
  },
  getFirstPopupElement: function() {
    return this._timeView._hourBox.$element().find("input");
  },
  _attachTabHandler: function() {
    var e = this.dateBox;
    this._timeView._hourBox.registerKeyHandler("tab", function(t) {
      t.shiftKey && (t.preventDefault(), e.focus());
    });
  },
  _preventFocusOnPopup: function(e) {
    g(e.target).hasClass("dx-texteditor-input") || (this.callBase.apply(this, arguments), this.dateBox._hasFocusClass() || this.dateBox.focus());
  },
  _updateDateTime: function(e) {
    var t = this._timeView.option("value");
    return e.setHours(t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()), e;
  },
  getValue: function() {
    var e, t = (e = this._widget.option("value")) !== null && e !== void 0 ? e : this._widget.getContouredDate();
    return t = t ? new Date(t) : /* @__PURE__ */ new Date(), this._updateDateTime(t);
  },
  dispose: function() {
    clearTimeout(this._removeMinWidthTimer), clearTimeout(this._repaintTimer), this.callBase();
  }
}), B6 = ke(), k6 = "date", F6 = {
  min: new Date(0, 0, 0, 0, 0),
  max: new Date(0, 0, 0, 23, 59)
}, P6 = Kc.inherit({
  NAME: "List",
  supportedKeys: function() {
    return {
      tab: function() {
        var {
          opened: e,
          applyValueMode: t
        } = this.option();
        e && t === "instantly" && this.close();
      },
      space: $,
      home: $,
      end: $
    };
  },
  getDefaultOptions: function() {
    return T(this.callBase(), {
      applyValueMode: "instantly"
    });
  },
  getDisplayFormat: function(e) {
    return e || "shorttime";
  },
  popupConfig: function(e) {
    return e;
  },
  getValue: function() {
    var e = this._widget.option("selectedIndex");
    if (e === -1)
      return this.dateBox.option("value");
    var t = this._widgetItems[e];
    return this._getDateByItemData(t);
  },
  useCurrentDateByDefault: function() {
    return !0;
  },
  getDefaultDate: function() {
    return /* @__PURE__ */ new Date(null);
  },
  popupShowingHandler: function() {
    this.dateBox._dimensionChanged();
  },
  _renderWidget: function() {
    this.callBase(), this._refreshItems();
  },
  _getWidgetName: function() {
    return jo;
  },
  _getWidgetOptions: function() {
    return {
      itemTemplate: this._timeListItemTemplate.bind(this),
      onItemClick: this._listItemClickHandler.bind(this),
      tabIndex: -1,
      onFocusedItemChanged: this._refreshActiveDescendant.bind(this),
      selectionMode: "single"
    };
  },
  _refreshActiveDescendant: function(e) {
    this.dateBox.setAria("activedescendant", ""), this.dateBox.setAria("activedescendant", e.actionValue);
  },
  _refreshItems: function() {
    this._widgetItems = this._getTimeListItems(), this._widget.option("items", this._widgetItems);
  },
  renderOpenedState: function() {
    this._widget && (this._widget.option("focusedElement", null), this._setSelectedItemsByValue(), this._widget.option("templatesRenderAsynchronously") ? this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this)) : this._scrollToSelectedItem());
  },
  dispose: function() {
    this.callBase(), clearTimeout(this._asyncScrollTimeout);
  },
  _updateValue: function() {
    this._widget && (this._refreshItems(), this._setSelectedItemsByValue(), this._scrollToSelectedItem());
  },
  _setSelectedItemsByValue: function() {
    var e = this.dateBoxValue(), t = this._getDateIndex(e);
    t === -1 ? this._widget.option("selectedItems", []) : this._widget.option("selectedIndex", t);
  },
  _scrollToSelectedItem: function() {
    this._widget.scrollToItem(this._widget.option("selectedIndex"));
  },
  _getDateIndex: function(e) {
    for (var t = -1, i = 0, n = this._widgetItems.length; i < n; i++)
      if (this._areDatesEqual(e, this._widgetItems[i])) {
        t = i;
        break;
      }
    return t;
  },
  _areDatesEqual: function(e, t) {
    return Qt(e) && Qt(t) && e.getHours() === t.getHours() && e.getMinutes() === t.getMinutes();
  },
  _getTimeListItems: function() {
    var e = this.dateBox.dateOption("min") || this._getBoundaryDate("min"), t = this.dateBox.dateOption("max") || this._getBoundaryDate("max"), i = this.dateBox.dateOption("value") || null, n = t - e, r = e.getMinutes() % this.dateBox.option("interval");
    return n < 0 ? [] : (n > Ye.ONE_DAY && (n = Ye.ONE_DAY), i - e < Ye.ONE_DAY ? this._getRangeItems(e, new Date(e), n) : (e = this._getBoundaryDate("min"), e.setMinutes(r), i && Math.abs(i - t) < Ye.ONE_DAY && (n = (60 * t.getHours() + Math.abs(t.getMinutes() - r)) * Ye.ONE_MINUTE), this._getRangeItems(e, new Date(e), n)));
  },
  _getRangeItems: function(e, t, i) {
    for (var n = [], r = this.dateBox.option("interval"); t - e <= i; )
      n.push(new Date(t)), t.setMinutes(t.getMinutes() + r);
    return n;
  },
  _getBoundaryDate: function(e) {
    var t = F6[e], i = new Date(ct(this.dateBox.dateOption("value"), 0));
    return new Date(i.getFullYear(), i.getMonth(), i.getDate(), t.getHours(), t.getMinutes());
  },
  _timeListItemTemplate: function(e) {
    var t = this.dateBox.option("displayFormat");
    return Pe.format(e, this.getDisplayFormat(t));
  },
  _listItemClickHandler: function(e) {
    if (this.dateBox.option("applyValueMode") !== "useButtons") {
      var t = this._getDateByItemData(e.itemData);
      this.dateBox.option("opened", !1), this.dateBoxValue(t, e.event);
    }
  },
  _getDateByItemData: function(e) {
    var t = this.dateBox.option("value"), i = e.getHours(), n = e.getMinutes(), r = e.getSeconds(), a = e.getFullYear(), o = e.getMonth(), s = e.getDate();
    return t ? (this.dateBox.option("dateSerializationFormat") ? t = Dt.deserializeDate(t) : t = new Date(t), t.setHours(i), t.setMinutes(n), t.setSeconds(r), t.setFullYear(a), t.setMonth(o), t.setDate(s)) : t = new Date(a, o, s, i, n, 0, 0), t;
  },
  getKeyboardListener: function() {
    return this._widget;
  },
  _updatePopupHeight: function() {
    var e = Wv(this.dateBox.option("dropDownOptions.height"));
    if (e === void 0 || e === "auto") {
      this.dateBox._setPopupOption("height", "auto");
      var t = Ne(this._widget.$element()), i = 0.45 * Fe(B6);
      this.dateBox._setPopupOption("height", Math.min(t, i));
    }
    this.dateBox._timeList && this.dateBox._timeList.updateDimensions();
  },
  getParsedText: function(e, t) {
    var i = this.callBase(e, t);
    return i && (i = Ye.mergeDates(i, /* @__PURE__ */ new Date(null), k6)), i;
  }
}), ms = ke(), Cs = "dx-datebox", M6 = "dx-auto-width", L6 = "dx-show-invalid-badge", V6 = "dx-clear-button-area", Vu = "dx-datebox-wrapper", N6 = "dx-dropdowneditor-overlay", mi = {
  calendar: "calendar",
  rollers: "rollers",
  list: "list",
  native: "native"
}, Ri = {
  date: "date",
  datetime: "datetime",
  time: "time"
}, xs = {
  calendar: "Calendar",
  dateView: "DateView",
  native: "Native",
  calendarWithTime: "CalendarWithTime",
  list: "List"
}, $6 = {
  Calendar: MA,
  DateView: u6,
  Native: d6,
  CalendarWithTime: R6,
  List: P6
}, H6 = Gv.inherit({
  _supportedKeys: function() {
    return T(this.callBase(), this._strategy.supportedKeys());
  },
  _renderButtonContainers: function() {
    this.callBase.apply(this, arguments), this._strategy.customizeButtons();
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      type: "date",
      showAnalogClock: !0,
      value: null,
      dateSerializationFormat: void 0,
      min: void 0,
      max: void 0,
      displayFormat: null,
      interval: 30,
      disabledDates: null,
      pickerType: mi.calendar,
      invalidDateMessage: q.format("dxDateBox-validation-datetime"),
      dateOutOfRangeMessage: q.format("validation-range"),
      applyButtonText: q.format("OK"),
      adaptivityEnabled: !1,
      calendarOptions: {},
      useHiddenSubmitElement: !0
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: {
        platform: "ios"
      },
      options: {
        "dropDownOptions.showTitle": !0
      }
    }, {
      device: {
        platform: "android"
      },
      options: {
        buttonsLocation: "bottom after"
      }
    }, {
      device: function() {
        var e = ve.real(), t = e.platform;
        return t === "ios" || t === "android";
      },
      options: {
        pickerType: mi.native
      }
    }, {
      device: {
        platform: "generic",
        deviceType: "desktop"
      },
      options: {
        buttonsLocation: "bottom after"
      }
    }]);
  },
  _initOptions: function(e) {
    this._userOptions = T({}, e), this.callBase(e), this._updatePickerOptions();
  },
  _updatePickerOptions: function() {
    var e = this.option("pickerType"), t = this.option("type");
    e === mi.list && (t === Ri.datetime || t === Ri.date) && (e = mi.calendar), t === Ri.time && e === mi.calendar && (e = mi.list), this.option("showDropDownButton", ve.real().platform !== "generic" || e !== mi.native), this._pickerType = e;
  },
  _init: function() {
    this._initStrategy(), this.option(T({}, this._strategy.getDefaultOptions(), this._userOptions)), delete this._userOptions, this.callBase();
  },
  _toLowerCaseFirstLetter: function(e) {
    return e.charAt(0).toLowerCase() + e.substr(1);
  },
  _initStrategy: function() {
    var e = this._getStrategyName(this._getFormatType()), t = $6[e];
    this._strategy && this._strategy.NAME === e || (this._strategy = new t(this));
  },
  _getFormatType: function() {
    var e = this.option("type"), t = /h|m|s/g.test(e), i = /d|M|Y/g.test(e), n = "";
    return i && (n += Ri.date), t && (n += Ri.time), n;
  },
  _getStrategyName: function(e) {
    var t = this._pickerType;
    return t === mi.rollers ? xs.dateView : t === mi.native ? xs.native : e === Ri.date ? xs.calendar : e === Ri.datetime ? xs.calendarWithTime : xs.list;
  },
  _initMarkup: function() {
    this.$element().addClass(Cs), this.callBase(), this._refreshFormatClass(), this._refreshPickerTypeClass(), this._strategy.renderInputMinMax(this._input());
  },
  _render: function() {
    this.callBase(), this._formatValidationIcon();
  },
  _renderDimensions: function() {
    this.callBase(), this.$element().toggleClass(M6, !this.option("width")), this._updatePopupWidth(), this._updatePopupHeight();
  },
  _dimensionChanged: function() {
    this.callBase(), this._updatePopupHeight();
  },
  _updatePopupHeight: function() {
    if (this._popup) {
      var e, t;
      (e = (t = this._strategy)._updatePopupHeight) === null || e === void 0 || e.call(t);
    }
  },
  _refreshFormatClass: function() {
    var e = this.$element();
    B(Ri, function(t, i) {
      e.removeClass(Cs + "-" + i);
    }), e.addClass(Cs + "-" + this.option("type"));
  },
  _refreshPickerTypeClass: function() {
    var e = this.$element();
    B(mi, function(t, i) {
      e.removeClass(Cs + "-" + i);
    }), e.addClass(Cs + "-" + this._pickerType);
  },
  _formatValidationIcon: function() {
    if (Re()) {
      var e = this._input().get(0), t = this.option("rtlEnabled"), i = this._getClearButtonWidth(), n = this._getLongestElementDimensions(), r = parseFloat(ms.getComputedStyle(e).width) - i, a = n.width > r, o = e.style;
      this.$element().toggleClass(L6, !a), a ? (this._storedPadding === void 0 && (this._storedPadding = t ? n.leftPadding : n.rightPadding), t ? o.paddingLeft = 0 : o.paddingRight = 0) : t ? o.paddingLeft = this._storedPadding + "px" : o.paddingRight = this._storedPadding + "px";
    }
  },
  _getClearButtonWidth: function() {
    var e = 0;
    if (this._isClearButtonVisible() && this._input().val() === "") {
      var t = this.$element().find("." + V6).get(0);
      e = parseFloat(ms.getComputedStyle(t).width);
    }
    return e;
  },
  _getLongestElementDimensions: function() {
    var e = this._strategy.getDisplayFormat(this.option("displayFormat")), t = Pe.format(Ye.getLongestDate(e, Pe.getMonthNames(), Pe.getDayNames()), e), i = this._input(), n = i.get(0), r = WF(i, t), a = this._storedPadding !== void 0, o = a ? this._storedPadding : 0;
    r.appendTo(this.$element());
    var s = parseFloat(ms.getComputedStyle(r.get(0)).width), l = parseFloat(ms.getComputedStyle(n).paddingRight), u = parseFloat(ms.getComputedStyle(n).paddingLeft), d = s + u + l + o;
    return r.remove(), {
      width: d,
      leftPadding: u,
      rightPadding: l
    };
  },
  _getKeyboardListeners() {
    return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()]);
  },
  _renderPopup: function() {
    this.callBase(), this._popup.$wrapper().addClass(Vu), this._renderPopupWrapper();
  },
  _getPopupToolbarItems() {
    var e, t, i, n = this.callBase();
    return (e = (t = (i = this._strategy)._getPopupToolbarItems) === null || t === void 0 ? void 0 : t.call(i, n)) !== null && e !== void 0 ? e : n;
  },
  _popupConfig: function() {
    var e = this.callBase();
    return T(this._strategy.popupConfig(e), {
      title: this._getPopupTitle(),
      dragEnabled: !1
    });
  },
  _renderPopupWrapper: function() {
    if (this._popup) {
      var e = this.$element(), t = T({}, Ri, mi);
      B(t, function(i, n) {
        e.removeClass(Vu + "-" + n);
      }.bind(this)), this._popup.$wrapper().addClass(Vu + "-" + this.option("type")).addClass(Vu + "-" + this._pickerType).addClass(N6);
    }
  },
  _renderPopupContent: function() {
    this.callBase(), this._strategy.renderPopupContent();
  },
  _getFirstPopupElement: function() {
    return this._strategy.getFirstPopupElement() || this.callBase();
  },
  _getLastPopupElement: function() {
    return this._strategy.getLastPopupElement() || this.callBase();
  },
  _popupShowingHandler: function() {
    this.callBase(), this._strategy.popupShowingHandler();
  },
  _popupShownHandler: function() {
    this.callBase(), this._strategy.renderOpenedState();
  },
  _popupHiddenHandler: function() {
    this.callBase(), this._strategy.renderOpenedState(), this._strategy.popupHiddenHandler();
  },
  _visibilityChanged: function(e) {
    e && this._formatValidationIcon();
  },
  _clearValueHandler: function(e) {
    this.option("text", ""), this.callBase(e);
  },
  _readOnlyPropValue: function() {
    if (this._pickerType === mi.rollers)
      return !0;
    var e = ve.real().platform, t = this._isNativeType() && (e === "ios" || e === "android");
    return t ? this.option("readOnly") : this.callBase();
  },
  _isClearButtonVisible: function() {
    return this.callBase() && !this._isNativeType();
  },
  _renderValue: function() {
    var e = this.dateOption("value");
    return this.option("text", this._getDisplayedText(e)), this._strategy.renderValue(), this.callBase();
  },
  _setSubmitValue: function() {
    var e = this.dateOption("value"), t = this.option("dateSerializationFormat"), i = Ye.SUBMIT_FORMATS_MAP[this.option("type")], n = t ? Dt.serializeDate(e, t) : Ye.toStandardDateFormat(e, i);
    this._getSubmitElement().val(n);
  },
  _getDisplayedText: function(e) {
    var t = this.option("mode"), i;
    if (t === "text") {
      var n = this._strategy.getDisplayFormat(this.option("displayFormat"));
      i = Pe.format(e, n);
    } else {
      var r = this._getFormatByMode(t);
      r ? i = Pe.format(e, r) : i = Ye.toStandardDateFormat(e, t);
    }
    return i;
  },
  _getFormatByMode: function(e) {
    return Cc(e) ? null : Ye.FORMATS_MAP[e];
  },
  _valueChangeEventHandler: function(e) {
    var {
      text: t,
      type: i,
      validationError: n
    } = this.option(), r = this.dateOption("value");
    if (t === this._getDisplayedText(r)) {
      (!n || n.editorSpecific) && (this._applyInternalValidation(r), this._applyCustomValidation(r));
      return;
    }
    var a = this._getParsedDate(t), o = r ?? this._getDateByDefault(), s = Ye.mergeDates(o, a, i), l = a && i === "time" ? s : a;
    if (this._applyInternalValidation(l).isValid) {
      var u = this._getDisplayedText(s);
      o && s && o.getTime() === s.getTime() && u !== t ? this._renderValue() : this.dateValue(s, e);
    }
  },
  _getDateByDefault: function() {
    return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate();
  },
  _getParsedDate: function(e) {
    var t = this._strategy.getDisplayFormat(this.option("displayFormat")), i = this._strategy.getParsedText(e, t);
    return i ?? void 0;
  },
  _applyInternalValidation(e) {
    var t = this.option("text"), i = !!t && e !== null, n = !!e && Qt(e) && !isNaN(e.getTime()), r = n && be.dateInRange(e, this.dateOption("min"), this.dateOption("max"), this.option("type")), a = !i && !e || r, o = "";
    return n ? r || (o = this.option("dateOutOfRangeMessage")) : o = this.option("invalidDateMessage"), this.option({
      isValid: a,
      validationError: a ? null : {
        editorSpecific: !0,
        message: o
      }
    }), {
      isValid: a,
      isDate: n
    };
  },
  _applyCustomValidation: function(e) {
    this.validationRequest.fire({
      editor: this,
      value: this._serializeDate(e)
    });
  },
  _isValueChanged: function(e) {
    var t = this.dateOption("value"), i = t && t.getTime(), n = e && e.getTime();
    return i !== n;
  },
  _isTextChanged: function(e) {
    var t = this.option("text"), i = e && this._getDisplayedText(e) || "";
    return t !== i;
  },
  _renderProps: function() {
    this.callBase(), this._input().attr("autocomplete", "off");
  },
  _renderOpenedState: function() {
    this._isNativeType() || this.callBase(), this._strategy.isAdaptivityChanged() && this._refreshStrategy();
  },
  _getPopupTitle: function() {
    var e = this.option("placeholder");
    if (e)
      return e;
    var t = this.option("type");
    return t === Ri.time ? q.format("dxDateBox-simulatedDataPickerTitleTime") : t === Ri.date || t === Ri.datetime ? q.format("dxDateBox-simulatedDataPickerTitleDate") : "";
  },
  _refreshStrategy: function() {
    this._strategy.dispose(), this._initStrategy(), this.option(this._strategy.getDefaultOptions()), this._refresh();
  },
  _applyButtonHandler: function(e) {
    var t = this._strategy.getValue();
    this.dateValue(t, e.event), this.callBase();
  },
  _dispose: function() {
    var e;
    this.callBase(), (e = this._strategy) === null || e === void 0 || e.dispose();
  },
  _isNativeType: function() {
    return this._pickerType === mi.native;
  },
  _updatePopupTitle: function() {
    var e;
    (e = this._popup) === null || e === void 0 || e.option("title", this._getPopupTitle());
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "showClearButton":
      case "buttons":
        this.callBase.apply(this, arguments), this._formatValidationIcon();
        break;
      case "pickerType":
        this._updatePickerOptions({
          pickerType: e.value
        }), this._refreshStrategy(), this._refreshPickerTypeClass(), this._invalidate();
        break;
      case "type":
        this._updatePickerOptions({
          format: e.value
        }), this._refreshStrategy(), this._refreshFormatClass(), this._renderPopupWrapper(), this._formatValidationIcon(), this._updateValue();
        break;
      case "placeholder":
        this.callBase.apply(this, arguments), this._updatePopupTitle();
        break;
      case "min":
      case "max":
        var t = this.option("isValid");
        this._applyInternalValidation(this.dateOption("value")), t || this._applyCustomValidation(this.dateOption("value")), this._invalidate();
        break;
      case "dateSerializationFormat":
      case "interval":
      case "disabledDates":
      case "calendarOptions":
        this._invalidate();
        break;
      case "displayFormat":
        this.option("text", this._getDisplayedText(this.dateOption("value"))), this._renderInputValue();
        break;
      case "text":
        this._strategy.textChangedHandler(e.value), this.callBase.apply(this, arguments);
        break;
      case "isValid":
        this.callBase.apply(this, arguments), this._formatValidationIcon();
        break;
      case "showDropDownButton":
        this._formatValidationIcon(), this.callBase.apply(this, arguments);
        break;
      case "readOnly":
        this.callBase.apply(this, arguments), this._formatValidationIcon();
        break;
      case "todayButtonText":
        this._setPopupOption("toolbarItems", this._getPopupToolbarItems());
        break;
      case "invalidDateMessage":
      case "dateOutOfRangeMessage":
      case "adaptivityEnabled":
      case "showAnalogClock":
        break;
      default:
        this.callBase.apply(this, arguments);
    }
  },
  _getSerializationFormat: function() {
    var e = this.option("value");
    if (this.option("dateSerializationFormat") && st().forceIsoDateParsing)
      return this.option("dateSerializationFormat");
    if (rt(e))
      return "number";
    if (Te(e))
      return Dt.getDateSerializationFormat(e);
  },
  _updateValue: function(e) {
    this.callBase(), this._applyInternalValidation(e ?? this.dateOption("value"));
  },
  dateValue: function(e, t) {
    var i = this._isValueChanged(e);
    return i && t && this._saveValueChangeEvent(t), i || (this._isTextChanged(e) ? this._updateValue(e) : this.option("text") === "" && this._applyCustomValidation(e)), this.dateOption("value", e);
  },
  dateOption: function(e, t) {
    if (arguments.length === 1)
      return Dt.deserializeDate(this.option(e));
    this.option(e, this._serializeDate(t));
  },
  _serializeDate: function(e) {
    var t = this._getSerializationFormat();
    return Dt.serializeDate(e, t);
  },
  _clearValue: function() {
    var e = this.option("value");
    this.callBase(), e === null && this._applyCustomValidation(null);
  },
  reset: function() {
    var e = this.option("value");
    this.callBase(), e === null && this._applyInternalValidation(null);
  }
}), so = "dateBoxMask", sr = 1, lo = -1, z6 = H6.inherit({
  _supportedKeys(e) {
    var t = this.callBase(e), i = (r) => {
      var a = t[ht(r)];
      return a && a.apply(this, [r]);
    }, n = (r, a) => this._shouldUseOriginalHandler(r) ? i.apply(this, [r]) : a.apply(this, [r]);
    return T({}, t, {
      del: (r) => n(r, (a) => {
        this._revertPart(sr), this._isAllSelected() || a.preventDefault();
      }),
      backspace: (r) => n(r, (a) => {
        this._revertPart(lo), this._isAllSelected() || a.preventDefault();
      }),
      home: (r) => n(r, (a) => {
        this._selectFirstPart(), a.preventDefault();
      }),
      end: (r) => n(r, (a) => {
        this._selectLastPart(), a.preventDefault();
      }),
      escape: (r) => n(r, (a) => {
        this._revertChanges(a);
      }),
      enter: (r) => n(r, () => {
        this._enterHandler();
      }),
      leftArrow: (r) => n(r, (a) => {
        this._selectNextPart(lo), a.preventDefault();
      }),
      rightArrow: (r) => n(r, (a) => {
        this._selectNextPart(sr), a.preventDefault();
      }),
      upArrow: (r) => n(r, (a) => {
        this._upDownArrowHandler(sr), a.preventDefault();
      }),
      downArrow: (r) => n(r, (a) => {
        this._upDownArrowHandler(lo), a.preventDefault();
      })
    });
  },
  _shouldUseOriginalHandler(e) {
    var t = this.option("opened") && e && ["backspace", "del"].indexOf(ht(e)) === -1;
    return !this._useMaskBehavior() || t || e && e.altKey;
  },
  _upDownArrowHandler(e) {
    this._setNewDateIfEmpty();
    var t = this._getActivePartValue(this._initialMaskValue), i = this._getActivePartValue(), n = i - t;
    this._loadMaskValue(this._initialMaskValue), this._partIncrease(n + e, !0);
  },
  _getDefaultOptions() {
    return T(this.callBase(), {
      useMaskBehavior: !1,
      emptyDateValue: new Date(2e3, 0, 1, 0, 0, 0)
    });
  },
  _isSingleCharKey(e) {
    var {
      originalEvent: t,
      alt: i
    } = e, n = t.data || t.key;
    return typeof n == "string" && n.length === 1 && !i && !Pt(t);
  },
  _isSingleDigitKey(e) {
    var t, i = (t = e.originalEvent) === null || t === void 0 ? void 0 : t.data;
    return (i == null ? void 0 : i.length) === 1 && parseInt(i, 10);
  },
  _useBeforeInputEvent: function() {
    return ve.real().android;
  },
  _keyInputHandler(e, t) {
    var i = this._input().val();
    this._processInputKey(t), e.preventDefault();
    var n = i !== this._input().val();
    n && w.trigger(this._input(), "input");
  },
  _keyboardHandler(e) {
    var t = e.originalEvent.key, i = this.callBase(e);
    return !this._useMaskBehavior() || this._useBeforeInputEvent() || (lt.chrome && e.key === "Process" && e.code.indexOf("Digit") === 0 ? (t = e.code.replace("Digit", ""), this._processInputKey(t), this._maskInputHandler = () => {
      this._renderSelectedPart();
    }) : this._isSingleCharKey(e) && this._keyInputHandler(e.originalEvent, t)), i;
  },
  _maskBeforeInputHandler(e) {
    this._maskInputHandler = null;
    var {
      inputType: t
    } = e.originalEvent;
    t === "insertCompositionText" && (this._maskInputHandler = () => {
      this._renderSelectedPart();
    });
    var i = t === "deleteContentBackward", n = t === "deleteContentForward";
    if (i || n) {
      var r = i ? lo : sr;
      this._maskInputHandler = () => {
        this._revertPart(), this._selectNextPart(r);
      };
    }
    if (!(!this._useMaskBehavior() || !this._isSingleCharKey(e))) {
      var a = e.originalEvent.data;
      return this._keyInputHandler(e, a), !0;
    }
  },
  _keyPressHandler(e) {
    var {
      originalEvent: t
    } = e;
    (t == null ? void 0 : t.inputType) === "insertCompositionText" && this._isSingleDigitKey(e) && (this._processInputKey(t.data), this._renderDisplayText(this._getDisplayedText(this._maskValue)), this._selectNextPart()), this.callBase(e), this._maskInputHandler && (this._maskInputHandler(), this._maskInputHandler = null);
  },
  _processInputKey(e) {
    this._isAllSelected() && (this._activePartIndex = 0), this._setNewDateIfEmpty(), isNaN(parseInt(e)) ? this._searchString(e) : this._searchNumber(e);
  },
  _isAllSelected() {
    var e = this._caret();
    return e.end - e.start === this.option("text").length;
  },
  _getFormatPattern() {
    if (this._formatPattern)
      return this._formatPattern;
    var e = this._strategy.getDisplayFormat(this.option("displayFormat")), t = Te(e) && !Pe._getPatternByFormat(e);
    return t ? this._formatPattern = e : this._formatPattern = z_(function(i) {
      return Pe.format(i, e);
    }), this._formatPattern;
  },
  _setNewDateIfEmpty() {
    if (!this._maskValue) {
      var e = this.option("type") === "time" ? /* @__PURE__ */ new Date(null) : /* @__PURE__ */ new Date();
      this._maskValue = e, this._initialMaskValue = e, this._renderDateParts();
    }
  },
  _partLimitsReached(e) {
    var t = String(e).length, i = this._getActivePartProp("pattern").length, n = i === 1, r = n ? t : Math.min(i, t), a = this._searchValue.length === r, o = parseInt(this._searchValue + "0") > e;
    return a || o;
  },
  _searchNumber(e) {
    var {
      max: t
    } = this._getActivePartLimits(), i = String(t).length;
    this._searchValue = (this._searchValue + e).substr(-i), isNaN(this._searchValue) && (this._searchValue = e), this._setActivePartValue(this._searchValue), this._partLimitsReached(t) && this._selectNextPart(sr);
  },
  _searchString(e) {
    if (isNaN(parseInt(this._getActivePartProp("text")))) {
      for (var t = this._getActivePartProp("limits")(this._maskValue), i = this._searchValue + e.toLowerCase(), n = t.max - t.min, r = 0; r <= n; r++)
        if (this._loadMaskValue(this._initialMaskValue), this._partIncrease(r + 1), this._getActivePartProp("text").toLowerCase().indexOf(i) === 0) {
          this._searchValue = i;
          return;
        }
      this._setNewDateIfEmpty(), this._searchValue && (this._clearSearchValue(), this._searchString(e));
    }
  },
  _clearSearchValue() {
    this._searchValue = "";
  },
  _revertPart: function(e) {
    if (!this._isAllSelected()) {
      var t = this._getActivePartValue(this.option("emptyDateValue"));
      this._setActivePartValue(t), this._selectNextPart(e);
    }
    this._clearSearchValue();
  },
  _useMaskBehavior() {
    return this.option("useMaskBehavior") && this.option("mode") === "text";
  },
  _prepareRegExpInfo() {
    this._regExpInfo = AI(this._getFormatPattern(), Pe);
    var e = this._regExpInfo.regexp, t = e.source, i = e.flags, n = new RegExp(/(\{[0-9]+,?[0-9]*\})/), r = t.split(n).map((a) => n.test(a) ? a : nt.convertDigits(a, !1)).join("");
    this._regExpInfo.regexp = new RegExp(r, i);
  },
  _initMaskState() {
    this._activePartIndex = 0, this._formatPattern = null, this._prepareRegExpInfo(), this._loadMaskValue();
  },
  _renderMask() {
    this.callBase(), this._detachMaskEvents(), this._clearMaskState(), this._useMaskBehavior() && (this._attachMaskEvents(), this._initMaskState(), this._renderDateParts());
  },
  _renderDateParts() {
    if (this._useMaskBehavior()) {
      var e = this.option("text") || this._getDisplayedText(this._maskValue);
      e && (this._dateParts = fj(e, this._regExpInfo), this._input().is(":hidden") || this._selectNextPart());
    }
  },
  _detachMaskEvents() {
    w.off(this._input(), "." + so);
  },
  _attachMaskEvents() {
    w.on(this._input(), oe("dxclick", so), this._maskClickHandler.bind(this)), w.on(this._input(), oe("paste", so), this._maskPasteHandler.bind(this)), w.on(this._input(), oe("drop", so), () => {
      this._renderSelectedPart();
    }), w.on(this._input(), oe("compositionend", so), this._maskCompositionEndHandler.bind(this)), this._useBeforeInputEvent() && w.on(this._input(), oe("beforeinput", so), this._maskBeforeInputHandler.bind(this));
  },
  _renderSelectedPart() {
    this._renderDisplayText(this._getDisplayedText(this._maskValue)), this._selectNextPart();
  },
  _selectLastPart() {
    this.option("text") && (this._activePartIndex = this._dateParts.length, this._selectNextPart(lo));
  },
  _selectFirstPart() {
    this.option("text") && (this._activePartIndex = -1, this._selectNextPart(sr));
  },
  _onMouseWheel(e) {
    this._useMaskBehavior() && this._partIncrease(e.delta > 0 ? sr : lo, e);
  },
  _selectNextPart() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
    if (!(!this.option("text") || this._disposed)) {
      e && (this._initialMaskValue = new Date(this._maskValue));
      var t = Zt(this._activePartIndex + e, 0, this._dateParts.length - 1);
      if (this._dateParts[t].isStub) {
        var i = t === 0 && e < 0 || t === this._dateParts.length - 1 && e > 0;
        if (i)
          t = this._activePartIndex;
        else {
          this._selectNextPart(e >= 0 ? e + 1 : e - 1);
          return;
        }
      }
      this._activePartIndex !== t && this._clearSearchValue(), this._activePartIndex = t, this._caret(this._getActivePartProp("caret"));
    }
  },
  _getRealLimitsPattern() {
    if (this._getActivePartProp("pattern")[0] === "d")
      return "dM";
  },
  _getActivePartLimits(e) {
    var t = this._getActivePartProp("limits");
    return t(this._maskValue, e && this._getRealLimitsPattern());
  },
  _getActivePartValue(e) {
    e = e || this._maskValue;
    var t = this._getActivePartProp("getter");
    return ce(t) ? t(e) : e[t]();
  },
  _addLeadingZeroes(e) {
    var t = this._searchValue.match(/^0+/), i = this._getActivePartLimits(), n = String(i.max).length;
    return ((t && t[0] || "") + String(e)).substr(-n);
  },
  _setActivePartValue(e, t) {
    t = t || this._maskValue;
    var i = this._getActivePartProp("setter"), n = this._getActivePartLimits();
    e = Gn(e, n.min, n.max) ? e : e % 10, e = this._addLeadingZeroes(Zt(e, n.min, n.max)), ce(i) ? i(t, e) : t[i](e), this._renderDisplayText(this._getDisplayedText(t)), this._renderDateParts();
  },
  _getActivePartProp(e) {
    if (!(!this._dateParts || !this._dateParts[this._activePartIndex]))
      return this._dateParts[this._activePartIndex][e];
  },
  _loadMaskValue() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.dateOption("value");
    this._maskValue = e && new Date(e), this._initialMaskValue = e && new Date(e);
  },
  _saveMaskValue() {
    var e = this._maskValue && new Date(this._maskValue);
    e && this.option("type") === "date" && e.setHours(0, 0, 0, 0), this._initialMaskValue = new Date(e), this.dateOption("value", e);
  },
  _revertChanges() {
    this._loadMaskValue(), this._renderDisplayText(this._getDisplayedText(this._maskValue)), this._renderDateParts();
  },
  _renderDisplayText(e) {
    this.callBase(e), this._useMaskBehavior() && this.option("text", e);
  },
  _partIncrease(e, t) {
    this._setNewDateIfEmpty();
    var {
      max: i,
      min: n
    } = this._getActivePartLimits(t), r = i - n;
    r === 1 && r++;
    var a = e + this._getActivePartValue();
    a > i ? a = this._applyLimits(a, {
      limitBase: n,
      limitClosest: i,
      limitDelta: r
    }) : a < n && (a = this._applyLimits(a, {
      limitBase: i,
      limitClosest: n,
      limitDelta: r
    })), this._setActivePartValue(a);
  },
  _applyLimits(e, t) {
    var {
      limitBase: i,
      limitClosest: n,
      limitDelta: r
    } = t, a = (e - n) % r;
    return a ? i + a - 1 * ko(a) : n;
  },
  _maskClickHandler() {
    this._loadMaskValue(this._maskValue), this.option("text") && (this._activePartIndex = gj(this._dateParts, this._caret().start), this._isAllSelected() || (x(this._activePartIndex) ? this._caret(this._getActivePartProp("caret")) : this._selectLastPart()));
  },
  _maskCompositionEndHandler(e) {
    this._input().val(this._getDisplayedText(this._maskValue)), this._selectNextPart(), this._maskInputHandler = () => {
      this._renderSelectedPart();
    };
  },
  _maskPasteHandler(e) {
    var t = this._replaceSelectedText(this.option("text"), this._caret(), jf(e)), i = Pe.parse(t, this._getFormatPattern());
    i && this._isDateValid(i) && (this._maskValue = i, this._renderDisplayText(this._getDisplayedText(this._maskValue)), this._renderDateParts(), this._selectNextPart()), e.preventDefault();
  },
  _isDateValid: (e) => Qt(e) && !isNaN(e),
  _isValueDirty() {
    var e = this.dateOption("value");
    return (this._maskValue && this._maskValue.getTime()) !== (e && e.getTime());
  },
  _fireChangeEvent() {
    this._clearSearchValue(), this._isValueDirty() && w.trigger(this._input(), "change");
  },
  _enterHandler() {
    this._fireChangeEvent(), this._selectNextPart(sr);
  },
  _focusOutHandler(e) {
    var t = this._useMaskBehavior() && !e.isDefaultPrevented();
    t ? (this._fireChangeEvent(), this.callBase(e), this._selectFirstPart(e)) : this.callBase(e);
  },
  _valueChangeEventHandler(e) {
    var t = this.option("text");
    this._useMaskBehavior() ? (this._saveValueChangeEvent(e), t ? this._maskValue === null && this._loadMaskValue(t) : this._maskValue = null, this._saveMaskValue()) : this.callBase(e);
  },
  _optionChanged(e) {
    switch (e.name) {
      case "useMaskBehavior":
        this._renderMask();
        break;
      case "displayFormat":
      case "mode":
        this.callBase(e), this._renderMask();
        break;
      case "value":
        this._loadMaskValue(), this.callBase(e), this._renderDateParts();
        break;
      case "emptyDateValue":
        break;
      default:
        this.callBase(e);
    }
  },
  _clearMaskState() {
    this._clearSearchValue(), delete this._dateParts, delete this._activePartIndex, delete this._maskValue;
  },
  reset() {
    this._clearMaskState(), this._activePartIndex = 0, this.callBase();
  },
  _clean() {
    this.callBase(), this._detachMaskEvents(), this._clearMaskState();
  }
});
We("dxDateBox", z6);
var {
  isWrapped: W6
} = ii, G6 = "checkbox-size", K6 = "dx-editor-inline-block", HA = function() {
  var e = function(d, c) {
    return T(d, {
      readOnly: c.readOnly,
      placeholder: c.placeholder,
      inputAttr: {
        id: c.id
      },
      tabIndex: c.tabIndex
    }, c.editorOptions);
  }, t = function() {
    return lt.mozilla || ve.real().ios;
  }, i = function(d) {
    var c = {}, h = t(), p = d.sharedData || c;
    return e({
      placeholder: d.placeholder,
      width: d.width,
      value: d.value,
      onValueChanged: function(f) {
        var v = d.parentType === "filterRow" || d.parentType === "searchPanel", m = f.event && (f.event.type === "input" || f.event.type === "keyup"), C = function(b, A) {
          d && d.setValue(b.value, A);
        };
        clearTimeout(c.valueChangeTimeout), m && v ? p.valueChangeTimeout = c.valueChangeTimeout = setTimeout(function() {
          C(f, c.valueChangeTimeout !== p.valueChangeTimeout);
        }, x(d.updateValueTimeout) ? d.updateValueTimeout : 0) : C(f);
      },
      onKeyDown: function(f) {
        h && ht(f.event) === "enter" && w.trigger(g(f.component._input()), "change");
      },
      valueChangeEvent: "change" + (d.parentType === "filterRow" ? " keyup input" : "")
    }, d);
  }, n = function(d) {
    d.editorName = "dxDateBox", d.editorOptions = e({
      value: d.value,
      onValueChanged: function(c) {
        d.setValue(c.value);
      },
      onKeyDown: function(c) {
        var {
          component: h,
          event: p
        } = c, f = h.option("useMaskBehavior");
        (t() || f) && ht(p) === "enter" && (h.blur(), h.focus());
      },
      displayFormat: d.format,
      type: d.dataType,
      dateSerializationFormat: null,
      width: d.parentType === "filterBuilder" ? void 0 : "auto"
    }, d);
  }, r = function(d) {
    var c = i(d), h = d.parentType === "searchPanel";
    d.editorType && d.editorType !== "dxTextBox" ? c.value = d.value : c.value = (p = d.value, x(p) ? p.toString() : "");
    var p;
    c.valueChangeEvent += h ? " keyup input search" : "", c.mode = c.mode || (h ? "search" : "text"), d.editorName = "dxTextBox", d.editorOptions = c;
  }, a = function(d) {
    var c = i(d);
    c.value = x(d.value) ? d.value : null, d.editorName = "dxNumberBox", d.editorOptions = c;
  };
  function o(d) {
    var c = d.lookup, h, p, f, v = d.parentType === "filterRow";
    if (c) {
      var m;
      h = tt(c.displayExpr), p = c.dataSource, ce(p) && !W6(p) && (p = p(d.row || {}), function(b) {
        if (b.row && b.row.watch && b.parentType === "dataRow") {
          var A = b.editorOptions || {};
          b.editorOptions = A;
          var R, k = A.onInitialized;
          A.onInitialized = function(j) {
            k && k.apply(this, arguments), R = j.component, R.on("disposing", K);
          };
          var H, K = b.row.watch(() => (H = b.lookup.dataSource(b.row), H && H.filter), () => {
            R.option("dataSource", H);
          }, (j) => {
            b.row = j;
          });
        }
      }(d)), (De(p) || Array.isArray(p)) && (p = Uo(p), v && (f = p.postProcess, p.postProcess = function(b) {
        return this.pageIndex() === 0 && (b = b.slice(0), b.unshift(null)), f ? f.call(this, b) : b;
      }));
      var C = !!(c.allowClearing && !v);
      d.editorName = (m = d.editorType) !== null && m !== void 0 ? m : "dxSelectBox", d.editorOptions = e({
        searchEnabled: !0,
        value: d.value,
        valueExpr: d.lookup.valueExpr,
        searchExpr: d.lookup.searchExpr || d.lookup.displayExpr,
        allowClearing: C,
        showClearButton: C,
        displayExpr: function(b) {
          return b === null ? d.showAllText : h(b);
        },
        dataSource: p,
        onValueChanged: function(b) {
          var A = [b.value];
          !v && A.push(b.component.option("text")), d.setValue.apply(this, A);
        }
      }, d);
    }
  }
  function s(d) {
    d.editorName = "dxCheckBox", d.editorOptions = e({
      elementAttr: {
        id: d.id
      },
      value: x(d.value) ? d.value : void 0,
      hoverStateEnabled: !d.readOnly,
      focusStateEnabled: !d.readOnly,
      activeStateEnabled: !1,
      onValueChanged: function(c) {
        d.setValue && d.setValue(c.value, c);
      }
    }, d);
  }
  var l = (d) => {
    d.editorName = d.editorType, d.editorOptions = e({
      value: d.value,
      onValueChanged: function(c) {
        d.setValue(c.value);
      }
    }, d);
  }, u = (d) => {
    var c = {
      dxDateBox: n,
      dxCheckBox: s,
      dxNumberBox: a,
      dxTextBox: r
    };
    if (d.lookup)
      o(d);
    else if (d.editorType) {
      var h;
      ((h = c[d.editorType]) !== null && h !== void 0 ? h : l)(d);
    } else
      switch (d.dataType) {
        case "date":
        case "datetime":
          n(d);
          break;
        case "boolean":
          (function(p) {
            p.parentType === "filterRow" || p.parentType === "filterBuilder" ? o(T(p, {
              lookup: {
                displayExpr: function(f) {
                  if (f === !0)
                    return p.trueText || "true";
                  if (f === !1)
                    return p.falseText || "false";
                },
                dataSource: [!0, !1]
              }
            })) : s(p);
          })(d);
          break;
        case "number":
          a(d);
          break;
        default:
          r(d);
      }
  };
  return {
    createEditor: function(d, c) {
      c.cancel = !1, c.editorElement = Ie(d), x(c.tabIndex) || (c.tabIndex = this.option("tabIndex")), u(c), this.executeAction("onEditorPreparing", c), !c.cancel && (c.parentType === "dataRow" && !c.isOnForm && !x(c.editorOptions.showValidationMark) && (c.editorOptions.showValidationMark = !1), function(h, p) {
        var f = g(p.editorElement);
        if (p.editorName && p.editorOptions && f[p.editorName]) {
          if ((p.editorName === "dxCheckBox" || p.editorName === "dxSwitch") && (p.isOnForm || (f.addClass(h.addWidgetPrefix(G6)), f.parent().addClass(K6))), h._createComponent(f, p.editorName, p.editorOptions), p.editorName === "dxDateBox") {
            var v = f.dxDateBox("instance"), m = v._supportedKeys().enter;
            v.registerKeyHandler("enter", (C) => (v.option("opened") && m(C), !0));
          }
          p.editorName === "dxTextArea" && f.dxTextArea("instance").registerKeyHandler("enter", function(C) {
            ht(C) === "enter" && !C.ctrlKey && !C.shiftKey && C.stopPropagation();
          });
        }
      }(this, c), this.executeAction("onEditorPrepared", c));
    }
  };
}();
const U6 = "dx-editor-inline-block", zA = "dxDataGridEditorFactory", mb = oe([je.down, "focusin", Xe].join(" "), zA), Qp = "dx-hidden", j6 = {
  _getFocusedElement(e) {
    const i = `td[tabindex]:focus, ${this.option("focusedRowEnabled") ? "tr[tabindex]:focus" : "tr[tabindex]:not(.dx-data-row):focus"}, input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus, .dx-adaptive-item-text:focus`, n = e.find(i);
    return this.elementIsInsideGrid(n) && n;
  },
  _getFocusCellSelector: () => ".dx-row > td",
  _updateFocusCore() {
    const e = this.component && this.component.$element();
    if (e) {
      let t = this._getFocusedElement(e);
      if (t && t.length) {
        let i;
        if (!t.hasClass("dx-cell-focus-disabled") && !t.hasClass("dx-row")) {
          const n = t.closest(this._getFocusCellSelector() + ", .dx-cell-focus-disabled");
          n.get(0) !== t.get(0) && (i = this._needHideBorder(n), t = n);
        }
        if (t.length && !t.hasClass("dx-cell-focus-disabled")) {
          this.focus(t, i);
          return;
        }
      }
    }
    this.loseFocus();
  },
  _needHideBorder: (e) => e.hasClass(U6),
  _updateFocus(e) {
    const t = this, i = e && e.event && g(e.event.target).hasClass(t.addWidgetPrefix("focus-overlay"));
    t._isFocusOverlay = t._isFocusOverlay || i, clearTimeout(t._updateFocusTimeoutID), t._updateFocusTimeoutID = setTimeout(() => {
      delete t._updateFocusTimeoutID, t._isFocusOverlay || t._updateFocusCore(), t._isFocusOverlay = !1;
    });
  },
  _updateFocusOverlaySize(e, t) {
    e.hide();
    const i = en.calculate(e, T({
      collision: "fit"
    }, t));
    i.h.oversize > 0 && Ym(e, Ge(e) - i.h.oversize), i.v.oversize > 0 && Zm(e, Ne(e) - i.v.oversize), e.show();
  },
  callbackNames: () => ["focused"],
  focus(e, t) {
    const i = this;
    if (e === void 0)
      return i._$focusedElement;
    e && (e.is(i._$focusedElement) || i._$focusedElement && i._$focusedElement.removeClass("dx-focused"), i._$focusedElement = e, clearTimeout(i._focusTimeoutID), i._focusTimeoutID = setTimeout(() => {
      delete i._focusTimeoutID, i.renderFocusOverlay(e, t), e.addClass("dx-focused"), i.focused.fire(e);
    }));
  },
  refocus() {
    const e = this.focus();
    this.focus(e);
  },
  renderFocusOverlay(e, t) {
    const i = this;
    if (ae.isElementInCurrentGrid(this, e)) {
      if (i._$focusOverlay || (i._$focusOverlay = g("<div>").addClass(i.addWidgetPrefix("focus-overlay"))), t)
        i._$focusOverlay.addClass(Qp);
      else if (e.length) {
        const n = lt.mozilla ? "right bottom" : "left top", r = e.closest("." + i.addWidgetPrefix("content")), a = Et(e.get(0));
        i._$focusOverlay.removeClass(Qp).appendTo(r), Zm(i._$focusOverlay, a.bottom - a.top + 1), Ym(i._$focusOverlay, a.right - a.left + 1);
        const o = {
          precise: !0,
          my: n,
          at: n,
          of: e,
          boundary: r.length && r
        };
        i._updateFocusOverlaySize(i._$focusOverlay, o), en.setup(i._$focusOverlay, o), i._$focusOverlay.css("visibility", "visible");
      }
    }
  },
  resize() {
    const e = this._$focusedElement;
    e && this.focus(e);
  },
  loseFocus() {
    this._$focusedElement && this._$focusedElement.removeClass("dx-focused"), this._$focusedElement = null, this._$focusOverlay && this._$focusOverlay.addClass(Qp);
  },
  init() {
    this.createAction("onEditorPreparing", {
      excludeValidators: ["disabled", "readOnly"],
      category: "rendering"
    }), this.createAction("onEditorPrepared", {
      excludeValidators: ["disabled", "readOnly"],
      category: "rendering"
    }), this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this)), w.on(this._getContainerRoot(), mb, this._updateFocusHandler), this._attachContainerEventHandlers();
  },
  _getContainerRoot() {
    var e;
    const t = (e = this.component) === null || e === void 0 ? void 0 : e.$element(), i = ee.getRootNode(t == null ? void 0 : t.get(0));
    return i.nodeType === Node.DOCUMENT_FRAGMENT_NODE && !i.host ? ee.getDocument() : i;
  },
  _attachContainerEventHandlers() {
    const e = this, t = e.component && e.component.$element();
    t && w.on(t, oe("keydown", zA), (i) => {
      ht(i) === "tab" && e._updateFocusHandler(i);
    });
  },
  dispose() {
    clearTimeout(this._focusTimeoutID), clearTimeout(this._updateFocusTimeoutID), w.off(this._getContainerRoot(), mb, this._updateFocusHandler);
  }
}, q6 = at.ViewController.inherit(HA).inherit(j6), X6 = {
  defaultOptions: () => ({}),
  controllers: {
    editorFactory: q6
  }
};
xe.registerModule("editorFactory", X6);
var Nu = ke(), Y6 = {
  text: "OK",
  onClick: function() {
    return !0;
  }
}, Wa = "dx-dialog", Z6 = "".concat(Wa, "-wrapper"), Q6 = "".concat(Wa, "-root"), J6 = "".concat(Wa, "-content"), eq = "".concat(Wa, "-message"), tq = "".concat(Wa, "-buttons"), iq = "".concat(Wa, "-button"), Cb = "dx-button", nq = I_.inherit({
  ctor: function(e, t) {
    this.callBase(t);
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: {
        platform: "ios"
      },
      options: {
        width: 276
      }
    }]);
  }
}), rq = function(e) {
  var t, i = new U(), n = new nq().option();
  e = T(n, e);
  var r = g("<div>").addClass(Wa).appendTo(Ar()), a = "message" in e, o = "messageHtml" in e;
  a && $e.log("W1013");
  var s = String(o ? e.messageHtml : e.message), l = g("<div>").addClass(eq).html(s), u = [];
  B(e.buttons || [Y6], function() {
    var h = new _i(this.onClick, {
      context: d
    });
    u.push({
      toolbar: "bottom",
      location: ve.current().android ? "after" : "center",
      widget: "dxButton",
      options: T({}, this, {
        onClick: function() {
          var p = h.execute(...arguments);
          c(p);
        }
      })
    });
  });
  var d = new an(r, T({
    title: (t = e.title) !== null && t !== void 0 ? t : "",
    showTitle: ct(e.showTitle, !0),
    dragEnabled: ct(e.dragEnabled, !0),
    height: "auto",
    width: e.width,
    showCloseButton: e.showCloseButton || !1,
    ignoreChildEvents: !1,
    container: r,
    visualContainer: Nu,
    dragAndResizeArea: Nu,
    onContentReady: function(h) {
      h.component.$content().addClass(J6).append(l);
    },
    onShowing: function(h) {
      h.component.bottomToolbar().addClass(tq).find(".".concat(Cb)).addClass(iq), Go();
    },
    onShown: function(h) {
      var p = h.component.bottomToolbar().find(".".concat(Cb)).first();
      w.trigger(p, "focus");
    },
    onHiding: function() {
      i.reject();
    },
    onHidden: function(h) {
      var {
        element: p
      } = h;
      g(p).remove();
    },
    toolbarItems: u,
    animation: {
      show: {
        type: "pop",
        duration: 400
      },
      hide: {
        type: "pop",
        duration: 400,
        to: {
          opacity: 0,
          scale: 0
        },
        from: {
          opacity: 1,
          scale: 1
        }
      }
    },
    rtlEnabled: st().rtlEnabled,
    position: {
      boundaryOffset: {
        h: 10,
        v: 0
      }
    }
  }, e.popupOptions));
  d.$wrapper().addClass(Z6), e.position && d.option("position", e.position), d.$wrapper().addClass(Q6);
  function c(h) {
    i.resolve(h), d.hide();
  }
  return {
    show: function() {
      if (ve.real().platform === "android") {
        var h = Fe(Nu) > Ae(Nu), p = h ? "80%" : "60%";
        d.option({
          width: p
        });
      }
      return d.show(), i.promise();
    },
    hide: c
  };
}, aq = function(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", i = arguments.length > 2 ? arguments[2] : void 0, n = Me(e) ? e : {
    title: t,
    messageHtml: e,
    showTitle: i,
    buttons: [{
      text: q.format("Yes"),
      onClick: function() {
        return !0;
      }
    }, {
      text: q.format("No"),
      onClick: function() {
        return !1;
      }
    }],
    dragEnabled: i
  };
  return rq(n).show();
}, oq = "dx-editor-cell", sq = "dx-row", xb = "dx-selection", WA = "edit-form", cn = "insert", lr = "remove", fd = "editing.popup", Jp = "editing.form", Fi = "editing.editRowKey", Bs = "editing.editColumnName", GA = "targetComponent", KA = "input:not([type='hidden'])", UA = "[tabindex], " + KA, kg = "batch", Po = "row", jA = "cell", Uc = "form", qv = "popup", yb = "first", $u = "last", bb = "pageBottom", ef = "pageTop", Sb = "viewportBottom", qA = "viewportTop", lq = [kg, Po, jA, Uc, qv], uq = [Po, Uc, qv], dq = [Po, Uc], cq = "readonly", hq = "dx-link", pq = "dx-selection", fq = "dx-edit-button", XA = "dx-command-edit", Eb = XA + "-with-icons", ur = "__DX_INSERT_INDEX__", gq = "dx-row-inserted", _q = "dx-row-modified", wb = "dx-cell-modified", vq = "dxDataGridEditing", mq = "dx-cell-focus-disabled", ys = "update", Cq = "click", xq = {
  save: "dx-link-save",
  cancel: "dx-link-cancel",
  edit: "dx-link-edit",
  undelete: "dx-link-undelete",
  delete: "dx-link-delete",
  add: "dx-link-add"
}, yq = {
  save: "save",
  cancel: "revert",
  edit: "edit",
  undelete: "revert",
  delete: "trash",
  add: "add"
}, bq = {
  edit: "editRow",
  delete: "deleteRow",
  undelete: "undeleteRow",
  save: "saveEditData",
  cancel: "cancelEditData",
  add: "addRowByRowIndex"
}, Sq = {
  add: "allowAdding",
  edit: "allowUpdating",
  delete: "allowDeleting"
}, Eq = ["edit", "save", "cancel", "delete", "undelete"], Pn = "editing.changes", Hu = function(e) {
  return function(t) {
    var i = t instanceof Error ? t : new Error(t && String(t) || "Unknown error");
    e.reject(i);
  };
}, YA = function(e, t) {
  return t.isEditing || e && t.column.allowEditing;
}, Ib = function(e, t) {
  var i = !!t.column.command, n = YA(e, t), r = !i && (n || t.column.showEditorAlways);
  return t.rowType === "data" && r;
}, wq = at.ViewController.inherit(function() {
  var e = (n, r) => {
    var a = -1;
    return n.some((o, s) => {
      if (t(o) === r)
        return a = s, !0;
    }), a;
  };
  function t(n) {
    return De(n) ? n.name : n;
  }
  var i = {
    init: function() {
      this._columnsController = this.getController("columns"), this._dataController = this.getController("data"), this._rowsView = this.getView("rowsView"), this._lastOperation = null, this._changes = [], this._deferreds && this._deferreds.forEach((n) => n.reject("cancel")), this._deferreds = [], this._dataChangedHandler || (this._dataChangedHandler = this._handleDataChanged.bind(this), this._dataController.changed.add(this._dataChangedHandler)), this._saveEditorHandler || (this.createAction("onInitNewRow", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowInserting", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowInserted", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onEditingStart", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowUpdating", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowUpdated", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowRemoving", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onRowRemoved", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onSaved", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onSaving", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onEditCanceling", {
        excludeValidators: ["disabled", "readOnly"]
      }), this.createAction("onEditCanceled", {
        excludeValidators: ["disabled", "readOnly"]
      })), this._updateEditColumn(), this._updateEditButtons(), this._internalState || (this._internalState = []), this.component._optionsByReference[Fi] = !0, this.component._optionsByReference[Pn] = !0;
    },
    getEditMode: function() {
      var n = this.option("editing.mode");
      return lq.indexOf(n) !== -1 ? n : Po;
    },
    _getDefaultEditorTemplate: function() {
      return (n, r) => {
        var a = g("<div>").appendTo(n);
        this.getController("editorFactory").createEditor(a, T({}, r.column, {
          value: r.value,
          setValue: r.setValue,
          row: r.row,
          parentType: "dataRow",
          width: null,
          readOnly: !r.setValue,
          isOnForm: r.isOnForm,
          id: r.id
        }));
      };
    },
    _getNewRowPosition: function() {
      var n = this.option("editing.newRowPosition"), r = this.option("scrolling.mode");
      if (r === "virtual")
        switch (n) {
          case ef:
            return qA;
          case bb:
            return Sb;
          default:
            return n;
        }
      return n;
    },
    getChanges: function() {
      return this.option(Pn);
    },
    getInsertRowCount: function() {
      var n = this.option(Pn);
      return n.filter((r) => r.type === "insert").length;
    },
    resetChanges: function() {
      var n = this.getChanges(), r = n == null ? void 0 : n.length;
      r && this._silentOption(Pn, []);
    },
    _getInternalData: function(n) {
      return this._internalState.filter((r) => et(r.key, n))[0];
    },
    _addInternalData: function(n) {
      var r = this._getInternalData(n.key);
      return r ? T(r, n) : (this._internalState.push(n), n);
    },
    _getOldData: function(n) {
      var r;
      return (r = this._getInternalData(n)) === null || r === void 0 ? void 0 : r.oldData;
    },
    getUpdatedData: function(n) {
      var r = this._dataController.keyOf(n), a = this.getChanges(), o = ae.getIndexByKey(r, a);
      return a[o] ? yr(n, a[o].data) : n;
    },
    getInsertedData: function() {
      return this.getChanges().filter((n) => n.data && n.type === cn).map((n) => n.data);
    },
    getRemovedData: function() {
      return this.getChanges().filter((n) => this._getOldData(n.key) && n.type === lr).map((n) => this._getOldData(n.key));
    },
    _fireDataErrorOccurred: function(n) {
      if (n !== "cancel") {
        var r = this.getPopupContent();
        this._dataController.dataErrorOccurred.fire(n, r);
      }
    },
    _needToCloseEditableCell: $,
    _closeEditItem: $,
    _handleDataChanged: $,
    _isDefaultButtonVisible: function(n, r) {
      var a = !0;
      switch (n.name) {
        case "delete":
          a = this.allowDeleting(r);
          break;
        case "undelete":
          a = !1;
      }
      return a;
    },
    _isButtonVisible: function(n, r) {
      var a = n.visible;
      return x(a) ? ce(a) ? a.call(n, {
        component: r.component,
        row: r.row,
        column: r.column
      }) : a : this._isDefaultButtonVisible(n, r);
    },
    _isButtonDisabled: function(n, r) {
      var a = n.disabled;
      return ce(a) ? a.call(n, {
        component: r.component,
        row: r.row,
        column: r.column
      }) : !!a;
    },
    _getButtonConfig: function(n, r) {
      var a = De(n) ? n : {}, o = t(n), s = ((h) => {
        var p = h.component.option("editing.texts") || {};
        return {
          save: p.saveRowChanges,
          cancel: p.cancelRowChanges,
          edit: p.editRow,
          undelete: p.undeleteRow,
          delete: p.deleteRow,
          add: p.addRowToNode
        };
      })(r), l = bq[o], u = this.option("editing"), d = Sq[o], c = d ? u[d] : !0;
      return T({
        name: o,
        text: s[o],
        cssClass: xq[o]
      }, {
        onClick: l && ((h) => {
          var p = h.event;
          p.stopPropagation(), p.preventDefault(), setTimeout(() => {
            r.row && c && this[l] && this[l](r.row.rowIndex);
          });
        })
      }, a);
    },
    _getEditingButtons: function(n) {
      var r, a = !!n.column.buttons, o = (n.column.buttons || []).slice();
      return a ? (r = e(o, "edit"), r >= 0 && (e(o, "save") < 0 && o.splice(r + 1, 0, "save"), e(o, "cancel") < 0 && o.splice(e(o, "save") + 1, 0, "cancel")), r = e(o, "delete"), r >= 0 && e(o, "undelete") < 0 && o.splice(r + 1, 0, "undelete")) : o = Eq.slice(), o.map((s) => this._getButtonConfig(s, n));
    },
    _renderEditingButtons: function(n, r, a, o) {
      r.forEach((s) => {
        this._isButtonVisible(s, a) && this._createButton(n, s, a, o);
      });
    },
    _getEditCommandCellTemplate: function() {
      return (n, r, a) => {
        var o = g(n);
        if (r.rowType === "data") {
          var s = this._getEditingButtons(r);
          this._renderEditingButtons(o, s, r, a), r.watch && r.watch(() => s.map((l) => ({
            visible: this._isButtonVisible(l, r),
            disabled: this._isButtonDisabled(l, r)
          })), () => {
            o.empty(), this._renderEditingButtons(o, s, r);
          });
        } else
          ae.setEmptyText(o);
      };
    },
    isRowBasedEditMode: function() {
      var n = this.getEditMode();
      return uq.indexOf(n) !== -1;
    },
    getFirstEditableColumnIndex: function() {
      var n = this.getController("columns"), r, a = n.getVisibleColumns();
      return B(a, function(o, s) {
        if (s.allowEditing)
          return r = o, !1;
      }), r;
    },
    getFirstEditableCellInRow: function(n) {
      var r = this.getView("rowsView");
      return r && r._getCellElement(n || 0, this.getFirstEditableColumnIndex());
    },
    getFocusedCellInRow: function(n) {
      return this.getFirstEditableCellInRow(n);
    },
    getIndexByKey: function(n, r) {
      return ae.getIndexByKey(n, r);
    },
    hasChanges: function(n) {
      for (var r = this.getChanges(), a = !1, o = 0; o < (r == null ? void 0 : r.length); o++)
        if (r[o].type && (!x(n) || this._dataController.getRowIndexByKey(r[o].key) === n)) {
          a = !0;
          break;
        }
      return a;
    },
    dispose: function() {
      this.callBase(), clearTimeout(this._inputFocusTimeoutID), w.off(ee.getDocument(), je.up, this._pointerUpEditorHandler), w.off(ee.getDocument(), je.down, this._pointerDownEditorHandler), w.off(ee.getDocument(), Xe, this._saveEditorHandler);
    },
    _silentOption: function(n, r) {
      n === "editing.changes" && (this._changes = Pi([], r)), this.callBase.apply(this, arguments);
    },
    optionChanged: function(n) {
      if (n.name === "editing") {
        var r = n.fullName;
        if (r === Fi)
          this._handleEditRowKeyChange(n);
        else if (r === Pn) {
          var a = et(n.value, this._changes, -1);
          a || (this._changes = Pi([], n.value), this._handleChangesChange(n));
        } else
          n.handled || (this._columnsController.reinit(), this.init(), this.resetChanges(), this._resetEditColumnName(), this._resetEditRowKey());
        n.handled = !0;
      } else
        this.callBase(n);
    },
    _handleEditRowKeyChange: function(n) {
      var r = this._dataController.getRowIndexByKey(n.value), a = this._getEditRowIndexCorrection(), o = this._dataController.getRowIndexByKey(n.previousValue) + a;
      x(n.value) ? n.value !== n.previousValue && this._editRowFromOptionChanged(r, o) : this.cancelEditData();
    },
    _handleChangesChange: function(n) {
      var r = this._dataController, a = n.value;
      !n.value.length && !n.previousValue.length || (a.forEach((o) => {
        if (o.type === "insert")
          this._addInsertInfo(o);
        else {
          var s, l = r.items(), u = r.getRowIndexByKey(o.key);
          this._addInternalData({
            key: o.key,
            oldData: (s = l[u]) === null || s === void 0 ? void 0 : s.data
          });
        }
      }), r.updateItems({
        repaintChangesOnly: !0,
        isLiveUpdate: !1,
        isOptionChanged: !0
      }));
    },
    publicMethods: function() {
      return ["addRow", "deleteRow", "undeleteRow", "editRow", "saveEditData", "cancelEditData", "hasEditData"];
    },
    refresh: function() {
      x(this._pageIndex) && this._refreshCore.apply(this, arguments);
    },
    _refreshCore: $,
    isEditing: function() {
      var n = x(this.option(Fi));
      return n;
    },
    isEditRow: function() {
      return !1;
    },
    _setEditRowKey: function(n, r) {
      r ? this._silentOption(Fi, n) : this.option(Fi, n), this._refocusEditCell && (this._refocusEditCell = !1, this._focusEditingCell());
    },
    _setEditRowKeyByIndex: function(n, r) {
      var a = this._dataController.getKeyByRowIndex(n);
      if (a === void 0) {
        this._dataController.fireError("E1043");
        return;
      }
      this._setEditRowKey(a, r);
    },
    getEditRowIndex: function() {
      return this._getVisibleEditRowIndex();
    },
    getEditFormRowIndex: function() {
      return -1;
    },
    isEditRowByIndex(n) {
      var r = this._dataController.getKeyByRowIndex(n), a = x(r) && et(this.option(Fi), r);
      return a && this._getVisibleEditRowIndex() === n;
    },
    isEditCell: function(n, r) {
      return this.isEditRowByIndex(n) && this._getVisibleEditColumnIndex() === r;
    },
    getPopupContent: $,
    _isProcessedItem: function(n) {
      return !1;
    },
    _getInsertRowIndex: function(n, r, a) {
      var o = -1, s = this._dataController, l = this._getInsertAfterOrBeforeKey(r);
      return !x(l) && n.length === 0 ? o = 0 : x(l) && n.some((u, d) => {
        var c = a || this._isProcessedItem(u);
        if (De(u) && (c || x(u[ur]) ? et(u.key, l) && (o = d) : et(s.keyOf(u), l) && (o = d)), o >= 0) {
          var h = n[o + 1];
          return h && (h.rowType === "detail" || h.rowType === "detailAdaptive") && x(r.insertAfterKey) ? void 0 : (x(r.insertAfterKey) && (o += 1), !0);
        }
      }), o;
    },
    _generateNewItem: function(n) {
      var r, a = {
        key: n
      }, o = (r = this._getInternalData(n)) === null || r === void 0 ? void 0 : r.insertInfo;
      return o != null && o[ur] && (a[ur] = o[ur]), a;
    },
    _getLoadedRowIndex: function(n, r, a) {
      var o = this._getInsertRowIndex(n, r, a), s = this._dataController;
      if (o < 0) {
        var l = this._getNewRowPosition(), u = s.pageIndex(), d = this._getInsertAfterOrBeforeKey(r);
        l !== $u && u === 0 && !x(d) ? o = 0 : l === $u && s.isLastPageLoaded() && (o = n.length);
      }
      return o;
    },
    processItems: function(n, r) {
      var a = r.changeType;
      this.update(a);
      var o = this.getChanges();
      return o.forEach((s) => {
        var l, u = s.type === cn;
        if (u) {
          var d = s.key, c = (l = this._getInternalData(d)) === null || l === void 0 ? void 0 : l.insertInfo;
          (!x(d) || !x(c)) && (c = this._addInsertInfo(s), d = c.key);
          var h = this._getLoadedRowIndex(n, s), p = this._generateNewItem(d);
          h >= 0 && n.splice(h, 0, p);
        }
      }), n;
    },
    processDataItem: function(n, r, a) {
      var o = r.visibleColumns, s = n.data[ur] ? n.data.key : n.key, l = this.getChanges(), u = ae.getIndexByKey(s, l);
      n.isEditing = !1, u >= 0 && this._processDataItemCore(n, l[u], s, o, a);
    },
    _processDataItemCore: function(n, r, a, o, s) {
      var {
        data: l,
        type: u
      } = r;
      switch (u) {
        case cn:
          n.isNewRow = !0, n.key = a, n.data = l;
          break;
        case ys:
          n.modified = !0, n.oldData = n.data, n.data = yr(n.data, l), n.modifiedValues = s(l, o, !0);
          break;
        case lr:
          n.removed = !0;
      }
    },
    _initNewRow: function(n) {
      if (this.executeAction("onInitNewRow", n), n.promise) {
        var r = new U();
        return ge(Nt(n.promise)).done(r.resolve).fail(Hu(r)).fail((a) => this._fireDataErrorOccurred(a)), r;
      }
    },
    _createInsertInfo: function() {
      var n = {};
      return n[ur] = this._getInsertIndex(), n;
    },
    _addInsertInfo: function(n, r) {
      var a, o, {
        key: s
      } = n;
      if (x(s) || (s = String(new Ot()), n.key = s), o = (a = this._getInternalData(s)) === null || a === void 0 ? void 0 : a.insertInfo, !x(o)) {
        var l = this._getInsertAfterOrBeforeKey(n);
        o = this._createInsertInfo(), x(l) || this._setInsertAfterOrBeforeKey(n, r);
      }
      return this._addInternalData({
        insertInfo: o,
        key: s
      }), {
        insertInfo: o,
        key: s
      };
    },
    _setInsertAfterOrBeforeKey: function(n, r) {
      var a = this._dataController, o = a.items(!0), s = this.getView("rowsView"), l = this._getNewRowPosition();
      switch (l) {
        case yb:
        case $u:
          break;
        case ef:
        case bb:
          if (o.length) {
            var u = l === ef ? 0 : o.length - 1;
            n[u === 0 ? "insertBeforeKey" : "insertAfterKey"] = o[u].key;
          }
          break;
        default:
          var d = l === Sb, c = d ? s == null ? void 0 : s.getBottomVisibleItemIndex() : s == null ? void 0 : s.getTopVisibleItemIndex(), h = a.getVisibleRows()[c];
          h && (!h.isEditing && h.rowType === "detail" || h.rowType === "detailAdaptive") && c++;
          var p = a.getKeyByRowIndex(c);
          x(p) && (n.insertBeforeKey = p);
      }
    },
    _getInsertIndex: function() {
      var n = 0;
      return this.getChanges().forEach((r) => {
        var a, o = (a = this._getInternalData(r.key)) === null || a === void 0 ? void 0 : a.insertInfo;
        x(o) && r.type === cn && o[ur] > n && (n = o[ur]);
      }), n + 1;
    },
    _getInsertAfterOrBeforeKey: function(n) {
      var r;
      return (r = n.insertAfterKey) !== null && r !== void 0 ? r : n.insertBeforeKey;
    },
    _getPageIndexToInsertRow: function() {
      var n = this._getNewRowPosition(), r = this._dataController, a = r.pageIndex(), o = r.pageCount() - 1;
      return n === yb && a !== 0 ? 0 : n === $u && a !== o ? o : -1;
    },
    addRow: function(n) {
      var r = this._dataController, a = r.store();
      return a ? this._addRow(n) : (r.fireError("E1052", this.component.NAME), new U().reject());
    },
    _addRow: function(n) {
      var r = this._dataController, a = r.store(), o = a && a.key(), s = {
        data: {}
      }, l = this._getVisibleEditRowIndex(), u = new U();
      return this.refresh({
        allowCancelEditing: !0
      }), this._allowRowAdding() ? (o || (s.data.__KEY__ = String(new Ot())), ge(this._initNewRow(s, n)).done(() => {
        this._allowRowAdding() ? ge(this._addRowCore(s.data, n, l)).done(u.resolve).fail(u.reject) : u.reject("cancel");
      }).fail(u.reject), u.promise()) : (ge(this._navigateToNewRow(l)).done(u.resolve).fail(u.reject), u.promise());
    },
    _allowRowAdding: function() {
      var n = this._getInsertIndex();
      return !(n > 1);
    },
    _addRowCore: function(n, r, a) {
      var o = {
        data: n,
        type: cn
      }, s = this._getVisibleEditRowIndex(), l = this._addInsertInfo(o, r), u = l.key;
      return this._setEditRowKey(u, !0), this._addChange(o), this._navigateToNewRow(a, o, s);
    },
    _navigateToNewRow: function(n, r, a) {
      var o, s, l = new U(), u = this._dataController, d = this.getController("focus");
      if (a = (o = a) !== null && o !== void 0 ? o : -1, r = (s = r) !== null && s !== void 0 ? s : this.getChanges().filter((v) => v.type === cn)[0], !r)
        return l.reject("cancel").promise();
      var c = this._getPageIndexToInsertRow(), h = this._getLoadedRowIndex(u.items(), r, !0), p = (v) => {
        ge(d == null ? void 0 : d.navigateToRow(v)).done(() => {
          h = u.getRowIndexByKey(r.key), l.resolve();
        });
      }, f = this._getInsertAfterOrBeforeKey(r);
      return c >= 0 ? u.pageIndex(c).done(() => {
        p(r.key);
      }).fail(l.reject) : h < 0 && x(f) ? p(f) : (u.updateItems({
        changeType: "update",
        rowIndices: [n, a, h]
      }), h = u.getRowIndexByKey(r.key), h < 0 ? p(r.key) : l.resolve()), l.done(() => {
        var v;
        (v = this._rowsView) === null || v === void 0 || v.waitAsyncTemplates(!0).done(() => {
          this._showAddedRow(h), this._afterInsertRow(r.key);
        });
      }), l.promise();
    },
    _showAddedRow: function(n) {
      this._focusFirstEditableCellInRow(n);
    },
    _beforeFocusElementInRow: $,
    _focusFirstEditableCellInRow: function(n) {
      var r = this._dataController, a = r.getKeyByRowIndex(n), o = this.getFirstEditableCellInRow(n);
      this._editCellInProgress = !0, this._delayedInputFocus(o, () => {
        n = r.getRowIndexByKey(a), this._editCellInProgress = !1, this._beforeFocusElementInRow(n);
      });
    },
    _isEditingStart: function(n) {
      return this.executeAction("onEditingStart", n), n.cancel;
    },
    _beforeUpdateItems: $,
    _getVisibleEditColumnIndex: function() {
      var n = this.option(Bs);
      return x(n) ? this._columnsController.getVisibleColumnIndex(n) : -1;
    },
    _setEditColumnNameByIndex: function(n, r) {
      var a, o = this._columnsController.getVisibleColumns();
      this._setEditColumnName((a = o[n]) === null || a === void 0 ? void 0 : a.name, r);
    },
    _setEditColumnName: function(n, r) {
      r ? this._silentOption(Bs, n) : this.option(Bs, n);
    },
    _resetEditColumnName: function() {
      this._setEditColumnName(null, !0);
    },
    _getEditColumn: function() {
      var n = this.option(Bs);
      return this._getColumnByName(n);
    },
    _getColumnByName: function(n) {
      var r = this._columnsController.getVisibleColumns(), a;
      return x(n) && r.some((o) => {
        if (o.name === n)
          return a = o, !0;
      }), a;
    },
    _getVisibleEditRowIndex: function(n) {
      var r = this._dataController, a = this.option(Fi), o = r.getRowIndexByKey(a);
      return o === -1 ? o : o + this._getEditRowIndexCorrection(n);
    },
    _getEditRowIndexCorrection: function(n) {
      var r = n ? this._getColumnByName(n) : this._getEditColumn(), a = (r == null ? void 0 : r.visibleWidth) === "adaptiveHidden";
      return a ? 1 : 0;
    },
    _resetEditRowKey: function() {
      this._setEditRowKey(null, !0);
    },
    _resetEditIndices: function() {
      this._resetEditColumnName(), this._resetEditRowKey();
    },
    editRow: function(n) {
      var r, a = this._dataController, o = a.items(), s = o[n], l = {
        data: s && s.data,
        cancel: !1
      }, u = this._getVisibleEditRowIndex();
      if (s) {
        if (n === u)
          return !0;
        if (s.key === void 0) {
          this._dataController.fireError("E1043");
          return;
        }
        s.isNewRow || (l.key = s.key), !this._isEditingStart(l) && (this.resetChanges(), this.init(), this._resetEditColumnName(), this._pageIndex = a.pageIndex(), this._addInternalData({
          key: s.key,
          oldData: (r = s.oldData) !== null && r !== void 0 ? r : s.data
        }), this._setEditRowKey(s.key));
      }
    },
    _editRowFromOptionChanged: function(n, r) {
      var a = [r, n];
      this._beforeUpdateItems(a, n, r), this._editRowFromOptionChangedCore(a, n);
    },
    _editRowFromOptionChangedCore: function(n, r, a) {
      this._needFocusEditor = !0, this._dataController.updateItems({
        changeType: "update",
        rowIndices: n,
        cancel: a
      });
    },
    _focusEditorIfNeed: $,
    _showEditPopup: $,
    _repaintEditPopup: $,
    _getEditPopupHiddenHandler: function() {
      return (n) => {
        this.isEditing() && this.cancelEditData();
      };
    },
    _getPopupEditFormTemplate: $,
    _getSaveButtonConfig: function() {
      return {
        text: this.option("editing.texts.saveRowChanges"),
        onClick: this.saveEditData.bind(this)
      };
    },
    _getCancelButtonConfig: function() {
      return {
        text: this.option("editing.texts.cancelRowChanges"),
        onClick: this.cancelEditData.bind(this)
      };
    },
    _removeInternalData: function(n) {
      var r = this._getInternalData(n), a = this._internalState.indexOf(r);
      a > -1 && this._internalState.splice(a, 1);
    },
    _updateInsertAfterOrBeforeKeys: function(n, r) {
      var a = n[r];
      n.forEach((o) => {
        var s = this._getInsertAfterOrBeforeKey(o);
        et(s, a.key) && (o[x(o.insertAfterKey) ? "insertAfterKey" : "insertBeforeKey"] = this._getInsertAfterOrBeforeKey(a));
      });
    },
    _removeChange: function(n) {
      if (n >= 0) {
        var r = [...this.getChanges()], a = r[n].key;
        this._removeInternalData(a), this._updateInsertAfterOrBeforeKeys(r, n), r.splice(n, 1), this._silentOption(Pn, r), et(this.option(Fi), a) && this._resetEditIndices();
      }
    },
    executeOperation: function(n, r) {
      this._lastOperation && this._lastOperation.reject(), this._lastOperation = n, this.waitForDeferredOperations().done(() => {
        n.state() !== "rejected" && (r(), this._lastOperation = null);
      }).fail(() => {
        n.reject(), this._lastOperation = null;
      });
    },
    waitForDeferredOperations: function() {
      return ge(...this._deferreds);
    },
    _processCanceledEditingCell: $,
    _repaintEditCell: function(n, r, a) {
      this._needFocusEditor = !0, !n || !n.showEditorAlways || r && !r.showEditorAlways ? (this._editCellInProgress = !0, this.getController("editorFactory").loseFocus(), this._dataController.updateItems({
        changeType: "update",
        rowIndices: [a, this._getVisibleEditRowIndex()]
      })) : n !== r && this._dataController.updateItems({
        changeType: "update",
        rowIndices: []
      });
    },
    _delayedInputFocus: function(n, r, a) {
      var o = () => {
        if (r && r(), n) {
          var s = n.find(UA).first();
          ae.focusAndSelectElement(this, s);
        }
        this._beforeFocusCallback = null;
      };
      ve.real().ios || ve.real().android ? o() : (this._beforeFocusCallback && this._beforeFocusCallback(), clearTimeout(this._inputFocusTimeoutID), a && (this._beforeFocusCallback = r), this._inputFocusTimeoutID = setTimeout(o));
    },
    _focusEditingCell: function(n, r, a) {
      var o = this.getView("rowsView"), s = this._getVisibleEditColumnIndex();
      r = r || o && o._getCellElement(this._getVisibleEditRowIndex(), s), r && this._delayedInputFocus(r, n, a);
    },
    deleteRow: function(n) {
      this._checkAndDeleteRow(n);
    },
    _checkAndDeleteRow: function(n) {
      var r = this.option("editing"), a = r == null ? void 0 : r.texts, o = r == null ? void 0 : r.confirmDelete, s = a == null ? void 0 : a.confirmDeleteMessage, l = this._dataController.items()[n], u = !this.isEditing() || l.isNewRow;
      if (l && u)
        if (!o || !s)
          this._deleteRowCore(n);
        else {
          var d = a && a.confirmDeleteTitle, c = x(d) && d.length > 0;
          aq(s, d, c).done((h) => {
            h && this._deleteRowCore(n);
          });
        }
    },
    _deleteRowCore: function(n) {
      var r = this._dataController, a = r.items()[n], o = a && a.key, s = this._getVisibleEditRowIndex();
      this.refresh();
      var l = this.getChanges(), u = ae.getIndexByKey(o, l);
      return u >= 0 ? l[u].type === cn ? this._removeChange(u) : this._addChange({
        key: o,
        type: lr
      }) : this._addChange({
        key: o,
        oldData: a.data,
        type: lr
      }), this._afterDeleteRow(n, s);
    },
    _afterDeleteRow: function(n, r) {
      return this.saveEditData();
    },
    undeleteRow: function(n) {
      var r = this._dataController, a = r.items()[n], o = this._getVisibleEditRowIndex(), s = a && a.key, l = this.getChanges();
      if (a) {
        var u = ae.getIndexByKey(s, l);
        if (u >= 0) {
          var {
            data: d
          } = l[u];
          $i(d) ? this._removeChange(u) : this._addChange({
            key: s,
            type: ys
          }), r.updateItems({
            changeType: "update",
            rowIndices: [o, n]
          });
        }
      }
    },
    _fireOnSaving: function() {
      var n = {
        cancel: !1,
        promise: null,
        changes: [...this.getChanges()]
      };
      this.executeAction("onSaving", n);
      var r = new U();
      return ge(Nt(n.promise)).done(() => {
        r.resolve(n);
      }).fail((a) => {
        this._fireDataErrorOccurred(a), r.resolve({
          cancel: !0
        });
      }), r;
    },
    _executeEditingAction: function(n, r, a) {
      if (this.component._disposed)
        return null;
      var o = new U();
      return this.executeAction(n, r), ge(Nt(r.cancel)).done(function(s) {
        s ? setTimeout(function() {
          o.resolve("cancel");
        }) : a(r).done(o.resolve).fail(Hu(o));
      }).fail(Hu(o)), o;
    },
    _processChanges: function(n, r, a, o) {
      var s = this._dataController.store();
      B(o, (l, u) => {
        var d = this._getOldData(u.key), {
          data: c,
          type: h
        } = u, p = ue({}, u), f, v;
        if (!this._beforeSaveEditData(u, l)) {
          switch (h) {
            case lr:
              v = {
                data: d,
                key: u.key,
                cancel: !1
              }, f = this._executeEditingAction("onRowRemoving", v, function() {
                return s.remove(u.key).done(function(C) {
                  a.push({
                    type: "remove",
                    key: C
                  });
                });
              });
              break;
            case cn:
              v = {
                data: c,
                cancel: !1
              }, f = this._executeEditingAction("onRowInserting", v, function() {
                return s.insert(v.data).done(function(C, b) {
                  x(b) && (p.key = b), C && De(C) && C !== v.data && (p.data = C), a.push({
                    type: "insert",
                    data: C,
                    index: 0
                  });
                });
              });
              break;
            case ys:
              v = {
                newData: c,
                oldData: d,
                key: u.key,
                cancel: !1
              }, f = this._executeEditingAction("onRowUpdating", v, function() {
                return s.update(u.key, v.newData).done(function(C, b) {
                  C && De(C) && C !== v.newData && (p.data = C), a.push({
                    type: "update",
                    key: b,
                    data: C
                  });
                });
              });
          }
          if (o[l] = p, f) {
            var m = new U();
            f.always(function(C) {
              r.push({
                key: u.key,
                result: C
              });
            }).always(m.resolve), n.push(m.promise());
          }
        }
      });
    },
    _processRemoveIfError: function(n, r) {
      var a = n[r];
      return (a == null ? void 0 : a.type) === lr && r >= 0 && n.splice(r, 1), !0;
    },
    _processRemove: function(n, r, a) {
      var o = n[r];
      if (!a || !o || o.type === lr)
        return this._processRemoveCore(n, r, !a || !o);
    },
    _processRemoveCore: function(n, r) {
      return r >= 0 && n.splice(r, 1), !0;
    },
    _processSaveEditDataResult: function(n) {
      for (var r = !1, a = [...this.getChanges()], o = a.length, s = 0; s < n.length; s++) {
        var l = n[s].result, u = l === "cancel", d = ae.getIndexByKey(n[s].key, a), c = a[d], h = l && l instanceof Error;
        if (h) {
          if (c && this._addInternalData({
            key: c.key,
            error: l
          }), this._fireDataErrorOccurred(l), this._processRemoveIfError(a, d))
            break;
        } else
          this._processRemove(a, d, u) && (r = !u);
      }
      return a.length < o && this._silentOption(Pn, a), r;
    },
    _fireSaveEditDataEvents: function(n) {
      B(n, (r, a) => {
        var {
          data: o,
          key: s,
          type: l
        } = a, u = this._addInternalData({
          key: s
        }), d = {
          key: s,
          data: o
        };
        switch (u.error && (d.error = u.error), l) {
          case lr:
            this.executeAction("onRowRemoved", T({}, d, {
              data: u.oldData
            }));
            break;
          case cn:
            this.executeAction("onRowInserted", d);
            break;
          case ys:
            this.executeAction("onRowUpdated", d);
        }
      }), this.executeAction("onSaved", {
        changes: n
      });
    },
    saveEditData: function() {
      var n = new U();
      return this.waitForDeferredOperations().done(() => {
        if (this.isSaving()) {
          this._resolveAfterSave(n);
          return;
        }
        ge(this._beforeSaveEditData()).done((r) => {
          if (r) {
            this._resolveAfterSave(n, {
              cancel: r
            });
            return;
          }
          this._saving = !0, this._saveEditDataInner().always(() => {
            this._saving = !1, this._refocusEditCell && this._focusEditingCell();
          }).done(n.resolve).fail(n.reject);
        }).fail(n.reject);
      }).fail(n.reject), n.promise();
    },
    _resolveAfterSave: function(n) {
      var {
        cancel: r,
        error: a
      } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      ge(this._afterSaveEditData(r)).done(function() {
        n.resolve(a);
      }).fail(n.reject);
    },
    _saveEditDataInner: function() {
      var n = new U(), r = [], a = [], o = [], s = this._dataController.dataSource();
      return ge(this._fireOnSaving()).done((l) => {
        var {
          cancel: u,
          changes: d
        } = l;
        if (u)
          return n.resolve().promise();
        if (this._processChanges(a, r, o, d), a.length)
          return this._refocusEditCell = !0, s == null || s.beginLoading(), ge(...a).done(() => {
            this._processSaveEditDataResult(r) ? this._endSaving(o, d, n) : (s == null || s.endLoading(), n.resolve());
          }).fail((c) => {
            s == null || s.endLoading(), n.resolve(c);
          }), n.always(() => {
            this._refocusEditCell = !0;
          }).promise();
        this._cancelSaving(n);
      }).fail(n.reject), n.promise();
    },
    _beforeEndSaving: function(n) {
      this._resetEditIndices();
    },
    _endSaving: function(n, r, a) {
      var o = this._dataController.dataSource();
      this._beforeEndSaving(r), o == null || o.endLoading(), this._refreshDataAfterSave(n, r, a);
    },
    _cancelSaving: function(n) {
      this.executeAction("onSaved", {
        changes: []
      }), this._resolveAfterSave(n);
    },
    _refreshDataAfterSave: function(n, r, a) {
      var o = this._dataController, s = this.option("editing.refreshMode"), l = s !== "reshape" && s !== "repaint";
      l || o.push(n), ge(o.refresh({
        selection: l,
        reload: l,
        load: s === "reshape",
        changesOnly: this.option("repaintChangesOnly")
      })).always(() => {
        this._fireSaveEditDataEvents(r);
      }).done(() => {
        this._resolveAfterSave(a);
      }).fail((u) => {
        this._resolveAfterSave(a, {
          error: u
        });
      });
    },
    isSaving: function() {
      return this._saving;
    },
    _updateEditColumn: function() {
      var n = this._isEditColumnVisible(), r = this.option("editing.useIcons"), a = XA + (r ? " " + Eb : "");
      this._columnsController.addCommandColumn({
        type: "buttons",
        command: "edit",
        visible: n,
        cssClass: a,
        width: "auto",
        alignment: "center",
        cellTemplate: this._getEditCommandCellTemplate(),
        fixedPosition: "right"
      }), this._columnsController.columnOption("command:edit", {
        visible: n,
        cssClass: a
      });
    },
    _isEditColumnVisible: function() {
      var n = this.option("editing");
      return n.allowDeleting;
    },
    _isEditButtonDisabled: function() {
      var n = this.hasChanges(), r = x(this.option("editing.editRowKey"));
      return !(r || n);
    },
    _updateEditButtons: function() {
      var n = this.getView("headerPanel"), r = this._isEditButtonDisabled();
      n && (n.setToolbarItemDisabled("saveButton", r), n.setToolbarItemDisabled("revertButton", r));
    },
    _applyModified: function(n) {
      n && n.addClass(wb);
    },
    _beforeCloseEditCellInBatchMode: $,
    cancelEditData: function() {
      var n = this.getChanges(), r = {
        cancel: !1,
        changes: n
      };
      this.executeAction("onEditCanceling", r), r.cancel || (this._cancelEditDataCore(), this.executeAction("onEditCanceled", {
        changes: n
      }));
    },
    _cancelEditDataCore: function() {
      var n = this._getVisibleEditRowIndex();
      this._beforeCancelEditData(), this.init(), this.resetChanges(), this._resetEditColumnName(), this._resetEditRowKey(), this._afterCancelEditData(n);
    },
    _afterCancelEditData: function(n) {
      var r = this._dataController;
      r.updateItems({
        repaintChangesOnly: this.option("repaintChangesOnly")
      });
    },
    _hideEditPopup: $,
    hasEditData: function() {
      return this.hasChanges();
    },
    update: function(n) {
      var r = this._dataController;
      r && this._pageIndex !== r.pageIndex() && (n === "refresh" && this.refresh({
        isPageChanged: !0
      }), this._pageIndex = r.pageIndex()), this._updateEditButtons();
    },
    _getRowIndicesForCascadeUpdating: function(n, r) {
      return r ? [] : [n.rowIndex];
    },
    addDeferred: function(n) {
      this._deferreds.indexOf(n) < 0 && (this._deferreds.push(n), n.always(() => {
        var r = this._deferreds.indexOf(n);
        r >= 0 && this._deferreds.splice(r, 1);
      }));
    },
    _prepareChange: function(n, r, a) {
      var o, s = {}, l = (o = n.row) === null || o === void 0 ? void 0 : o.data, u = n.key, d = new U();
      if (u !== void 0) {
        n.value = r;
        var c = Nt(n.column.setCellValue(s, r, T(!0, {}, l), a));
        c.done(function() {
          d.resolve({
            data: s,
            key: u,
            oldData: l,
            type: ys
          });
        }).fail(Hu(d)).fail((h) => this._fireDataErrorOccurred(h)), x(a) && n.column.displayValueMap && (n.column.displayValueMap[r] = a), this._updateRowValues(n), this.addDeferred(d);
      }
      return d;
    },
    _updateRowValues: function(n) {
      if (n.values) {
        var r = this._dataController, a = r.getRowIndexByKey(n.key), o = r.getVisibleRows()[a];
        o && (n.row.values = o.values, n.values = o.values), n.values[n.columnIndex] = n.value;
      }
    },
    updateFieldValue: function(n, r, a, o) {
      var s = n.key, l = new U();
      return s === void 0 && this._dataController.fireError("E1043"), n.column.setCellValue ? this._prepareChange(n, r, a).done((u) => {
        ge(this._applyChange(n, u, o)).always(() => {
          l.resolve();
        });
      }) : l.resolve(), l.promise();
    },
    _focusPreviousEditingCellIfNeed: function(n) {
      if (this.hasEditData() && !this.isEditCell(n.rowIndex, n.columnIndex))
        return this._focusEditingCell(), this._updateEditRow(n.row, !0), !0;
    },
    _needUpdateRow: function(n) {
      var r = this._columnsController.getVisibleColumns();
      n || (n = this._getEditColumn());
      var a = n && n.setCellValue !== n.defaultSetCellValue, o = r.some((s) => s.calculateCellValue !== s.defaultCalculateCellValue);
      return a || o;
    },
    _applyChange: function(n, r, a) {
      var o = ue({}, n, {
        forceUpdateRow: a
      });
      return this._addChange(r, o), this._updateEditButtons(), this._applyChangeCore(n, o.forceUpdateRow);
    },
    _applyChangeCore: function(n, r) {
      var a = n.column.setCellValue !== n.column.defaultSetCellValue, o = n.row;
      o && (r || a ? this._updateEditRow(o, r, a) : o.update && o.update());
    },
    _updateEditRowCore: function(n, r, a) {
      this._dataController.updateItems({
        changeType: "update",
        rowIndices: this._getRowIndicesForCascadeUpdating(n, r)
      });
    },
    _updateEditRow: function(n, r, a) {
      r ? this._updateRowImmediately(n, r, a) : this._updateRowWithDelay(n, a);
    },
    _updateRowImmediately: function(n, r, a) {
      this._updateEditRowCore(n, !r, a), this._validateEditFormAfterUpdate(n, a), r || this._focusEditingCell();
    },
    _updateRowWithDelay: function(n, r) {
      var a = new U();
      this.addDeferred(a), setTimeout(() => {
        var o, s = ((o = this._editForm) === null || o === void 0 ? void 0 : o.element()) || this.component.$element().get(0), l = g(ee.getActiveElement(s)), u = this._rowsView.getCellIndex(l, n.rowIndex), d = l.get(0), c = ae.getSelectionRange(d);
        if (this._updateEditRowCore(n, !1, r), this._validateEditFormAfterUpdate(n, r), u >= 0) {
          var h = this._rowsView._getCellElement(n.rowIndex, u);
          this._delayedInputFocus(h, () => {
            setTimeout(() => {
              var p;
              d = ee.getActiveElement((p = this.component.$element()) === null || p === void 0 ? void 0 : p.get(0)), c.selectionStart >= 0 && ae.setSelectionRange(d, c);
            });
          });
        }
        a.resolve();
      });
    },
    _validateEditFormAfterUpdate: $,
    _addChange: function(n, r) {
      var a, o = r == null ? void 0 : r.row, s = [...this.getChanges()], l = ae.getIndexByKey(n.key, s);
      l < 0 && (l = s.length, this._addInternalData({
        key: n.key,
        oldData: n.oldData
      }), delete n.oldData, s.push(n));
      var u = ue({}, s[l]);
      return u && (n.data && (u.data = yr(u.data, n.data)), (!u.type || !n.data) && n.type && (u.type = n.type), o && (o.oldData = this._getOldData(o.key), o.data = yr(o.data, n.data))), s[l] = u, this._silentOption(Pn, s), r && u !== ((a = this.getChanges()) === null || a === void 0 ? void 0 : a[l]) && (r.forceUpdateRow = !0), u;
    },
    _getFormEditItemTemplate: function(n, r) {
      return r.editCellTemplate || this._getDefaultEditorTemplate();
    },
    getColumnTemplate: function(n) {
      var r = n.column, a = n.row && n.row.rowIndex, o, s = this.isRowBasedEditMode(), l = this.isEditRow(a), u = this.isEditCell(a, n.columnIndex), d;
      if ((r.showEditorAlways || r.setCellValue && (l && r.allowEditing || u)) && (n.rowType === "data" || n.rowType === "detailAdaptive") && !r.command) {
        var c = this.allowUpdating(n);
        ((c || l) && r.allowEditing || u) && (l || !s) && (r.showEditorAlways && !s && (d = {
          cancel: !1,
          key: n.row.isNewRow ? void 0 : n.row.key,
          data: n.row.data,
          column: r
        }, this._isEditingStart(d)), (!d || !d.cancel) && (n.setValue = (h, p) => {
          this.updateFieldValue(n, h, p);
        })), o = r.editCellTemplate || this._getDefaultEditorTemplate();
      } else
        r.command === "detail" && n.rowType === "detail" && l && (o = this === null || this === void 0 ? void 0 : this.getEditFormTemplate(n));
      return o;
    },
    _createButton: function(n, r, a, o) {
      var s = yq[r.name], l = this.option("editing.useIcons"), u = this.option("useLegacyColumnButtonTemplate"), d = g("<a>").attr("href", "#").addClass(hq).addClass(r.cssClass);
      if (r.template && u)
        this._rowsView.renderTemplate(n, r.template, a, !0);
      else {
        if (r.template)
          d = g("<span>").addClass(r.cssClass);
        else if (l && s || r.icon) {
          s = r.icon || s;
          var c = kl(s);
          c === "image" || c === "svg" ? d = wa(s).addClass(r.cssClass) : d.addClass("dx-icon" + (c === "dxIcon" ? "-" : " ") + s).attr("title", r.text), d.addClass("dx-link-icon"), n.addClass(Eb);
          var h = this.getButtonLocalizationNames()[r.name];
          h && d.attr("aria-label", q.format(h));
        } else
          d.text(r.text);
        x(r.hint) && d.attr("title", r.hint), this._isButtonDisabled(r, a) ? d.addClass("dx-state-disabled") : (!r.template || r.onClick) && w.on(d, oe("click", vq), this.createAction(function(p) {
          var f;
          (f = r.onClick) === null || f === void 0 || f.call(r, T({}, p, {
            row: a.row,
            column: a.column
          })), p.event.preventDefault(), p.event.stopPropagation();
        })), n.append(d, "&nbsp;"), r.template && this._rowsView.renderTemplate(d, r.template, ue({}, a, {
          column: void 0
        }), !0, o);
      }
    },
    getButtonLocalizationNames: () => ({
      edit: "dxDataGrid-editingEditRow",
      save: "dxDataGrid-editingSaveRowChanges",
      delete: "dxDataGrid-editingDeleteRow",
      undelete: "dxDataGrid-editingUndeleteRow",
      cancel: "dxDataGrid-editingCancelRowChanges"
    }),
    prepareButtonItem: function(n, r, a, o) {
      var s = this.option("editing.texts") || {}, l = {
        revert: s.cancelAllChanges,
        save: s.saveAllChanges,
        addRow: s.addRow
      }, u = {
        revert: "cancel",
        save: "save",
        addRow: "addrow"
      }[r], d = l[r], c = (u === "save" || u === "cancel") && this._isEditButtonDisabled();
      return {
        widget: "dxButton",
        options: {
          onInitialized: (h) => {
            g(h.element).addClass(n._getToolbarButtonClass(fq + " " + this.addWidgetPrefix(u) + "-button"));
          },
          icon: "edit-button-" + u,
          disabled: c,
          onClick: () => {
            setTimeout(() => {
              this[a]();
            });
          },
          text: d,
          hint: d
        },
        showText: "inMenu",
        name: r + "Button",
        location: "after",
        locateInMenu: "auto",
        sortIndex: o
      };
    },
    prepareEditButtons: function(n) {
      var r = this.option("editing") || {}, a = [];
      return r.allowAdding && a.push(this.prepareButtonItem(n, "addRow", "addRow", 20)), a;
    },
    highlightDataCell: function(n, r) {
      this.shouldHighlightCell(r) && n.addClass(wb);
    },
    _afterInsertRow: $,
    _beforeSaveEditData: function(n) {
      if (n && !x(n.key) && x(n.type))
        return !0;
    },
    _afterSaveEditData: $,
    _beforeCancelEditData: $,
    _allowEditAction: function(n, r) {
      var a = this.option("editing." + n);
      return ce(a) && (a = a({
        component: this.component,
        row: r.row
      })), a;
    },
    allowUpdating: function(n, r) {
      var a = this.option("editing.startEditAction") || Cq, o = arguments.length > 1 ? a === r || r === "down" : !0;
      return o && this._allowEditAction("allowUpdating", n);
    },
    allowDeleting: function(n) {
      return this._allowEditAction("allowDeleting", n);
    },
    isCellModified: function(n) {
      var r = n.columnIndex, a = n.row && (n.row.isNewRow ? n.row.values : n.row.modifiedValues);
      return !!a && a[r] !== void 0;
    },
    isNewRowInEditMode: function() {
      var n = this._getVisibleEditRowIndex(), r = this._dataController.items();
      return n >= 0 ? r[n].isNewRow : !1;
    },
    shouldHighlightCell: function(n) {
      var r = this.isCellModified(n);
      return r && n.column.setCellValue && (this.getEditMode() !== Po || !n.row.isEditing);
    }
  };
  return i;
}()), Iq = {
  defaultOptions: function() {
    return {
      editing: {
        mode: "row",
        refreshMode: "full",
        newRowPosition: qA,
        allowAdding: !1,
        allowUpdating: !1,
        allowDeleting: !1,
        useIcons: !1,
        selectTextOnEditStart: !1,
        confirmDelete: !0,
        texts: {
          editRow: q.format("dxDataGrid-editingEditRow"),
          saveAllChanges: q.format("dxDataGrid-editingSaveAllChanges"),
          saveRowChanges: q.format("dxDataGrid-editingSaveRowChanges"),
          cancelAllChanges: q.format("dxDataGrid-editingCancelAllChanges"),
          cancelRowChanges: q.format("dxDataGrid-editingCancelRowChanges"),
          addRow: q.format("dxDataGrid-editingAddRow"),
          deleteRow: q.format("dxDataGrid-editingDeleteRow"),
          undeleteRow: q.format("dxDataGrid-editingUndeleteRow"),
          confirmDeleteMessage: q.format("dxDataGrid-editingConfirmDeleteMessage"),
          confirmDeleteTitle: ""
        },
        form: {
          colCount: 2
        },
        popup: {},
        startEditAction: "click",
        editRowKey: null,
        editColumnName: null,
        changes: []
      },
      useLegacyColumnButtonTemplate: !1
    };
  },
  controllers: {
    editing: wq
  },
  extenders: {
    controllers: {
      data: {
        init: function() {
          this._editingController = this.getController("editing"), this.callBase();
        },
        reload: function(e, t) {
          return !t && this._editingController.refresh(), this.callBase.apply(this, arguments);
        },
        repaintRows: function() {
          if (!this.getController("editing").isSaving())
            return this.callBase.apply(this, arguments);
        },
        _updateEditRow: function(e) {
          var t = this.option(Fi), i = ae.getIndexByKey(t, e), n = e[i];
          if (n) {
            var r;
            n.isEditing = !0, (r = this._updateEditItem) === null || r === void 0 || r.call(this, n);
          }
        },
        _updateItemsCore: function(e) {
          this.callBase(e), this._updateEditRow(this.items(!0));
        },
        _applyChangeUpdate: function(e) {
          this._updateEditRow(e.items), this.callBase(e);
        },
        _applyChangesOnly: function(e) {
          this._updateEditRow(e.items), this.callBase(e);
        },
        _processItems: function(e, t) {
          return e = this._editingController.processItems(e, t), this.callBase(e, t);
        },
        _processDataItem: function(e, t) {
          return this._editingController.processDataItem(e, t, this.generateDataValues), this.callBase(e, t);
        },
        _processItem: function(e, t) {
          return e = this.callBase(e, t), e.isNewRow && (t.dataIndex--, delete e.dataIndex), e;
        },
        _getChangedColumnIndices: function(e, t, i, n) {
          if (!(e.isNewRow !== t.isNewRow || e.removed !== t.removed))
            return this.callBase.apply(this, arguments);
        },
        _isCellChanged: function(e, t, i, n, r) {
          var a = this.getController("editing"), o = e.cells && e.cells[n], s = a && a.isEditCell(i, n);
          return r && s ? !1 : o && o.column && !o.column.showEditorAlways && o.isEditing !== s ? !0 : this.callBase.apply(this, arguments);
        },
        needToRefreshOnDataSourceChange: function(e) {
          var t = this.getController("editing"), i = Array.isArray(e.value) && e.value === e.previousValue && t.isSaving();
          return !i;
        },
        _handleDataSourceChange(e) {
          var t = this.callBase(e), i = this.option("editing.changes"), n = e.value;
          if (Array.isArray(n) && i.length) {
            var r = n.map((l) => this.keyOf(l)), a = i.filter((l) => l.type === "insert" || r.some((u) => et(l.key, u)));
            a.length !== i.length && this.option("editing.changes", a);
            var o = this.option("editing.editRowKey"), s = a.some((l) => l.type === "insert" && et(o, l.key));
            !s && r.every((l) => !et(o, l)) && this.option("editing.editRowKey", null);
          }
          return t;
        }
      }
    },
    views: {
      rowsView: {
        init: function() {
          this.callBase(), this._editingController = this.getController("editing");
        },
        getCellIndex: function(e, t) {
          if (!e.is("td") && t >= 0) {
            var i = this.getCellElements(t), n = -1;
            return B(i, function(r, a) {
              g(a).find(e).length && (n = r);
            }), n;
          }
          return this.callBase.apply(this, arguments);
        },
        publicMethods: function() {
          return this.callBase().concat(["cellValue"]);
        },
        _getCellTemplate: function(e) {
          var t = this._editingController.getColumnTemplate(e);
          return t || this.callBase(e);
        },
        _createRow: function(e) {
          var t = this.callBase.apply(this, arguments);
          if (e) {
            var i = !!e.removed, n = !!e.isNewRow, r = !!e.modified;
            n && t.addClass(gq), r && t.addClass(_q), (n || i) && t.removeClass(pq);
          }
          return t;
        },
        _getColumnIndexByElement: function(e) {
          for (var t = e.closest("table"), i = this.getTableElements(); t.length && !i.filter(t).length; )
            e = t.closest("td"), t = e.closest("table");
          return this._getColumnIndexByElementCore(e);
        },
        _getColumnIndexByElementCore: function(e) {
          var t = e.closest("." + sq + "> td:not(.dx-master-detail-cell)");
          return this.getCellIndex(t);
        },
        _editCellByClick: function(e, t) {
          var i = this._editingController, n = g(e.event.target), r = this._getColumnIndexByElement(n), a = this._dataController.items()[e.rowIndex], o = i.allowUpdating({
            row: a
          }, t) || a && a.isNewRow, s = this._columnsController.getVisibleColumns()[r], l = i.isEditCell(e.rowIndex, r), u = o && s && (s.allowEditing || l), d = this.option("editing.startEditAction") || "click", c = s && s.showEditorAlways;
          if (l)
            return !0;
          if (t === "down")
            return (ve.real().ios || ve.real().android) && Go(), c && u && i.editCell(e.rowIndex, r);
          if (t === "click" && d === "dblClick") {
            var h = a == null ? void 0 : a.isNewRow;
            i.closeEditCell(!1, h);
          }
          if (u && t === d)
            return i.editCell(e.rowIndex, r) || i.isEditRow(e.rowIndex);
        },
        _rowPointerDown: function(e) {
          this._pointerDownTimeout = setTimeout(() => {
            this._editCellByClick(e, "down");
          });
        },
        _rowClick: function(e) {
          var t = g(e.rowElement).hasClass(this.addWidgetPrefix(WA));
          e.event[GA] = this.component, !this._editCellByClick(e, "click") && !t && this.callBase.apply(this, arguments);
        },
        _rowDblClick: function(e) {
          this._editCellByClick(e, "dblClick") || this.callBase.apply(this, arguments);
        },
        _cellPrepared: function(e, t) {
          var i, n = this._editingController, r = !!t.column.command, a = t.setValue, o = n.isEditRow(t.rowIndex), s = YA(o, t);
          if (Ib(o, t)) {
            var l = t.column.alignment;
            e.toggleClass(this.addWidgetPrefix(cq), !a).toggleClass(mq, !a), l && e.find(KA).first().css("textAlign", l);
          }
          s && this._editCellPrepared(e);
          var u = !!((i = t.column) !== null && i !== void 0 && i.cellTemplate);
          t.column && !r && (!u || n.shouldHighlightCell(t)) && n.highlightDataCell(e, t), this.callBase.apply(this, arguments);
        },
        _editCellPrepared: $,
        _formItemPrepared: $,
        _getCellOptions: function(e) {
          var t = this.callBase(e);
          return t.isEditing = this._editingController.isEditCell(t.rowIndex, t.columnIndex), t;
        },
        _createCell: function(e) {
          var t = this.callBase(e), i = this._editingController.isEditRow(e.rowIndex);
          return Ib(i, e) && t.addClass(oq), t;
        },
        cellValue: function(e, t, i, n) {
          var r = this.getCellOptions(e, t);
          if (r) {
            if (i === void 0)
              return r.value;
            this._editingController.updateFieldValue(r, i, n, !0);
          }
        },
        dispose: function() {
          this.callBase.apply(this, arguments), clearTimeout(this._pointerDownTimeout);
        },
        _renderCore: function() {
          return this.callBase.apply(this, arguments), this.waitAsyncTemplates(!0).done(() => {
            this._editingController._focusEditorIfNeed();
          });
        }
      },
      headerPanel: {
        _getToolbarItems: function() {
          var e = this.callBase(), t = this.getController("editing").prepareEditButtons(this);
          return t.concat(e);
        },
        optionChanged: function(e) {
          var t = e.fullName;
          switch (e.name) {
            case "editing":
              var i = [fd, Pn, Bs, Fi], n = t && !i.some((r) => r === t);
              n && this._invalidate(), this.callBase(e);
              break;
            case "useLegacyColumnButtonTemplate":
              e.handled = !0;
              break;
            default:
              this.callBase(e);
          }
        },
        isVisible: function() {
          var e = this.getController("editing").option("editing");
          return this.callBase() || (e == null ? void 0 : e.allowAdding);
        }
      }
    }
  }
};
xe.registerModule("editing", T(!0, {}, Iq, {
  extenders: {
    controllers: {
      data: {
        _changeRowExpandCore(e) {
          const t = this._editingController;
          return Array.isArray(e) && t && t.refresh(), this.callBase.apply(this, arguments);
        }
      }
    }
  }
}));
var Tb = "dx-edit-row", Tq = {
  extenders: {
    controllers: {
      editing: {
        isRowEditMode: function() {
          return this.getEditMode() === Po;
        },
        _afterCancelEditData: function(e) {
          var t = this._dataController;
          this.isRowBasedEditMode() && e >= 0 ? t.updateItems({
            changeType: "update",
            rowIndices: [e, e + 1]
          }) : this.callBase.apply(this, arguments);
        },
        _isDefaultButtonVisible: function(e, t) {
          var i = this.isRowBasedEditMode(), n = t.row && et(t.row.key, this.option(Fi));
          if (i)
            switch (e.name) {
              case "edit":
                return !n && this.allowUpdating(t);
              case "delete":
                return this.callBase.apply(this, arguments) && !n;
              case "save":
              case "cancel":
                return n;
              default:
                return this.callBase.apply(this, arguments);
            }
          return this.callBase.apply(this, arguments);
        },
        isEditRow: function(e) {
          return this.isRowBasedEditMode() && this.isEditRowByIndex(e);
        },
        _cancelSaving: function() {
          this.isRowBasedEditMode() && (this.hasChanges() || this._cancelEditDataCore()), this.callBase.apply(this, arguments);
        },
        _refreshCore: function(e) {
          var {
            allowCancelEditing: t
          } = e ?? {};
          if (this.isRowBasedEditMode()) {
            var i = this.getChanges().filter((n) => n.type === "update").length > 0;
            this.init(), t && i && this._cancelEditDataCore();
          }
          this.callBase.apply(this, arguments);
        },
        _isEditColumnVisible: function() {
          var e = this.callBase.apply(this, arguments), t = this.option("editing"), i = this.isRowEditMode(), n = t.allowUpdating || t.allowAdding;
          return e || i && n;
        },
        _focusEditorIfNeed: function() {
          var e = this.getEditMode();
          if (this._needFocusEditor) {
            if (dq.indexOf(e) !== -1) {
              var t = this.getFocusedCellInRow(this._getVisibleEditRowIndex());
              this._delayedInputFocus(t, () => {
                t && this.component.focus(t);
              });
            }
            this._needFocusEditor = !1;
          }
        }
      },
      data: {
        _getChangedColumnIndices: function(e, t, i, n) {
          var r = this.getController("editing");
          if (!(r.isRowBasedEditMode() && e.isEditing !== t.isEditing))
            return this.callBase.apply(this, arguments);
        }
      }
    },
    views: {
      rowsView: {
        _createRow: function(e) {
          var t = this.callBase.apply(this, arguments);
          if (e) {
            var i = this._editingController, n = i.isEditRow(e.rowIndex);
            n && (t.addClass(Tb), t.removeClass(xb), e.rowType === "detail" && t.addClass(this.addWidgetPrefix(WA)));
          }
          return t;
        },
        _update: function(e) {
          this.callBase(e), e.changeType === "updateSelection" && this.getTableElements().children("tbody").children("." + Tb).removeClass(xb);
        }
      }
    }
  }
};
xe.registerModule("editingRowBased", Tq);
class ZA {
  constructor() {
    this._map = {};
  }
  _findWidgetInstance(t) {
    var i;
    return B(this._map, function(n, r) {
      var {
        widgetInstance: a,
        item: o
      } = r;
      if (t(o))
        return i = a, !1;
    }), i;
  }
  _findFieldByCondition(t, i) {
    var n;
    return B(this._map, function(r, a) {
      if (t(a))
        return n = i === "guid" ? r : a[i], !1;
    }), n;
  }
  clear() {
    this._map = {};
  }
  removeItemsByItems(t) {
    B(t.getItems(), (i) => this.removeItemByKey(i));
  }
  removeItemByKey(t) {
    delete this._map[t];
  }
  add(t) {
    var i = t.guid || new Ot();
    return this._map[i] = t, i;
  }
  addItemsOrExtendFrom(t) {
    t.each((i, n) => {
      this._map[i] ? (n.widgetInstance && (this._map[i].widgetInstance = n.widgetInstance), this._map[i].$itemContainer = n.$itemContainer) : this.add({
        item: n.item,
        widgetInstance: n.widgetInstance,
        guid: i,
        $itemContainer: n.$itemContainer
      });
    });
  }
  extendRunTimeItemInfoByKey(t, i) {
    this._map[t] && (this._map[t] = T(this._map[t], i));
  }
  findWidgetInstanceByItem(t) {
    return this._findWidgetInstance((i) => i === t);
  }
  findGroupOrTabLayoutManagerByPath(t) {
    return this._findFieldByCondition((i) => {
      var {
        path: n
      } = i;
      return n === t;
    }, "layoutManager");
  }
  findKeyByPath(t) {
    return this._findFieldByCondition((i) => {
      var {
        path: n
      } = i;
      return n === t;
    }, "guid");
  }
  findWidgetInstanceByName(t) {
    return this._findWidgetInstance((i) => t === i.name);
  }
  findWidgetInstanceByDataField(t) {
    return this._findWidgetInstance((i) => t === (Te(i) ? i : i.dataField));
  }
  findItemContainerByItem(t) {
    for (var i in this._map)
      if (this._map[i].item === t)
        return this._map[i].$itemContainer;
    return null;
  }
  findItemIndexByItem(t) {
    return this._findFieldByCondition((i) => {
      var {
        item: n
      } = i;
      return n === t;
    }, "itemIndex");
  }
  findPreparedItemByItem(t) {
    return this._findFieldByCondition((i) => {
      var {
        item: n
      } = i;
      return n === t;
    }, "preparedItem");
  }
  getItems() {
    return this._map;
  }
  each(t) {
    B(this._map, function(i, n) {
      t(i, n);
    });
  }
  removeItemsByPathStartWith(t) {
    var i = Object.keys(this._map), n = i.filter((r) => this._map[r].path ? this._map[r].path.indexOf(t, 0) > -1 : !1);
    n.forEach((r) => this.removeItemByKey(r));
  }
}
var zu = {
  move(e, t) {
    kt(e, {
      left: t
    });
  }
}, tf = {
  moveTo(e, t, i, n) {
    ft.animate(e, {
      type: "slide",
      to: {
        left: t
      },
      duration: i,
      complete: n
    });
  },
  complete(e) {
    ft.stop(e, !0);
  }
}, Dq = "dx-multiview", Aq = "dx-multiview-wrapper", Oq = "dx-multiview-item-container", Db = "dx-multiview-item", Rq = "dx-multiview-item-hidden", Bq = "dxMultiViewItemData", kq = 200, Ab = (e) => +e, Fq = (e) => Mi(e).left, QA = Lv.inherit({
  _activeStateUnit: "." + Db,
  _supportedKeys: function() {
    return T(this.callBase(), {
      pageUp: $,
      pageDown: $
    });
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      selectedIndex: 0,
      swipeEnabled: !0,
      animationEnabled: !0,
      loop: !1,
      deferRendering: !0,
      _itemAttributes: {
        role: "tabpanel"
      },
      loopItemFocus: !1,
      selectOnFocus: !0,
      selectionMode: "single",
      selectionRequired: !0,
      selectionByClick: !1
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }]);
  },
  _itemClass: function() {
    return Db;
  },
  _itemDataKey: function() {
    return Bq;
  },
  _itemContainer: function() {
    return this._$itemContainer;
  },
  _itemElements: function() {
    return this._itemContainer().children(this._itemSelector());
  },
  _itemWidth: function() {
    return this._itemWidthValue || (this._itemWidthValue = Ae(this._$wrapper)), this._itemWidthValue;
  },
  _clearItemWidthCache: function() {
    delete this._itemWidthValue;
  },
  _itemsCount: function() {
    return this.option("items").length;
  },
  _normalizeIndex: function(e) {
    var t = this._itemsCount();
    return e < 0 && (e += t), e >= t && (e -= t), e;
  },
  _getRTLSignCorrection: function() {
    return this.option("rtlEnabled") ? -1 : 1;
  },
  _init: function() {
    this.callBase.apply(this, arguments);
    var e = this.$element();
    e.addClass(Dq), this._$wrapper = g("<div>").addClass(Aq), this._$wrapper.appendTo(e), this._$itemContainer = g("<div>").addClass(Oq), this._$itemContainer.appendTo(this._$wrapper), this.option("loopItemFocus", this.option("loop")), this._initSwipeable();
  },
  _initMarkup: function() {
    this._deferredItems = [], this.callBase();
    var e = this._getSelectedItemIndices();
    this._updateItemsVisibility(e[0]);
  },
  _afterItemElementDeleted: function(e, t) {
    this.callBase(e, t), this._deferredItems && this._deferredItems.splice(t.itemIndex, 1);
  },
  _beforeItemElementInserted: function(e) {
    this.callBase.apply(this, arguments), this._deferredItems && this._deferredItems.splice(e.index, 0, null);
  },
  _executeItemRenderAction: function(e, t, i) {
    e = (this.option("items") || []).indexOf(t), this.callBase(e, t, i);
  },
  _renderItemContent: function(e) {
    var t = new U(), i = this, n = this.callBase, r = new U();
    return r.done(function() {
      var a = n.call(i, e);
      t.resolve(a);
    }), this._deferredItems[e.index] = r, this.option("deferRendering") || r.resolve(), t.promise();
  },
  _render: function() {
    this.callBase(), Bt(() => {
      var e = this._getSelectedItemIndices();
      this._updateItems(e[0]);
    });
  },
  _updateItems: function(e, t) {
    this._updateItemsPosition(e, t), this._updateItemsVisibility(e, t);
  },
  _modifyByChanges: function() {
    this.callBase.apply(this, arguments);
    var e = this._getSelectedItemIndices();
    this._updateItemsVisibility(e[0]);
  },
  _updateItemsPosition: function(e, t) {
    var i = this._itemElements(), n = x(t) ? -this._animationDirection(t, e) : void 0, r = i.eq(e);
    zu.move(r, 0), x(t) && zu.move(i.eq(t), 100 * n + "%");
  },
  _updateItemsVisibility: function(e, t) {
    var i = this._itemElements();
    i.each(function(n, r) {
      var a = g(r), o = n !== e && n !== t;
      o || this._renderSpecificItem(n), a.toggleClass(Rq, o), this.setAria("hidden", o || void 0, a);
    }.bind(this));
  },
  _renderSpecificItem: function(e) {
    var t = this._itemElements().eq(e), i = t.find(this._itemContentClass()).length > 0;
    x(e) && !i && (this._deferredItems[e].resolve(), _n(t));
  },
  _refreshItem: function(e, t) {
    this.callBase(e, t), this._updateItemsVisibility(this.option("selectedIndex"));
  },
  _setAriaSelected: $,
  _updateSelection: function(e, t) {
    var i = e[0], n = t[0];
    tf.complete(this._$itemContainer), this._updateItems(n, i);
    var r = this._animationDirection(i, n);
    this._animateItemContainer(r * this._itemWidth(), function() {
      zu.move(this._$itemContainer, 0), this._updateItems(i), Ae(this._$itemContainer);
    }.bind(this));
  },
  _animateItemContainer: function(e, t) {
    var i = this.option("animationEnabled") ? kq : 0;
    tf.moveTo(this._$itemContainer, e, i, t);
  },
  _animationDirection: function(e, t) {
    var i = Fq(this._$itemContainer), n = (t - e) * this._getRTLSignCorrection() * this._getItemFocusLoopSignCorrection(), r = i !== 0, a = r ? i : n;
    return ko(a);
  },
  _getSwipeDisabledState() {
    return !this.option("swipeEnabled") || this._itemsCount() <= 1;
  },
  _initSwipeable() {
    this._createComponent(this.$element(), Qd, {
      disabled: this._getSwipeDisabledState(),
      elastic: !1,
      itemSizeFunc: this._itemWidth.bind(this),
      onStart: (e) => this._swipeStartHandler(e.event),
      onUpdated: (e) => this._swipeUpdateHandler(e.event),
      onEnd: (e) => this._swipeEndHandler(e.event)
    });
  },
  _swipeStartHandler: function(e) {
    tf.complete(this._$itemContainer);
    var t = this.option("selectedIndex"), i = this.option("loop"), n = this._itemsCount() - 1, r = this.option("rtlEnabled");
    e.maxLeftOffset = Ab(i || (r ? t > 0 : t < n)), e.maxRightOffset = Ab(i || (r ? t < n : t > 0)), this._swipeDirection = null;
  },
  _swipeUpdateHandler: function(e) {
    var t = e.offset, i = ko(t) * this._getRTLSignCorrection();
    if (zu.move(this._$itemContainer, t * this._itemWidth()), i !== this._swipeDirection) {
      this._swipeDirection = i;
      var n = this.option("selectedIndex"), r = this._normalizeIndex(n - i);
      this._updateItems(n, r);
    }
  },
  _swipeEndHandler: function(e) {
    var t = e.targetOffset * this._getRTLSignCorrection();
    if (t) {
      this.option("selectedIndex", this._normalizeIndex(this.option("selectedIndex") - t));
      var i = this.itemElements().filter(".dx-item-selected");
      this.option("focusStateEnabled") && this.option("focusedElement", Ie(i));
    } else
      this._animateItemContainer(0, $);
  },
  _getItemFocusLoopSignCorrection: function() {
    return this._itemFocusLooped ? -1 : 1;
  },
  _moveFocus: function() {
    this.callBase.apply(this, arguments), this._itemFocusLooped = !1;
  },
  _prevItem: function(e) {
    var t = this.callBase.apply(this, arguments);
    return this._itemFocusLooped = t.is(e.last()), t;
  },
  _nextItem: function(e) {
    var t = this.callBase.apply(this, arguments);
    return this._itemFocusLooped = t.is(e.first()), t;
  },
  _dimensionChanged: function() {
    this._clearItemWidthCache();
  },
  _visibilityChanged: function(e) {
    e && this._dimensionChanged();
  },
  _updateSwipeDisabledState() {
    var e = this._getSwipeDisabledState();
    Qd.getInstance(this.$element()).option("disabled", e);
  },
  _optionChanged: function(e) {
    var t = e.value;
    switch (e.name) {
      case "loop":
        this.option("loopItemFocus", t);
        break;
      case "animationEnabled":
        break;
      case "swipeEnabled":
        this._updateSwipeDisabledState();
        break;
      case "deferRendering":
        this._invalidate();
        break;
      case "items":
        this._updateSwipeDisabledState(), this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxMultiView", QA);
var Pq = "dx-tabs-item-badge", Ob = "dx-badge", Mq = Na.inherit({
  _renderWatchers: function() {
    this.callBase(), this._startWatcher("badge", this._renderBadge.bind(this));
  },
  _renderBadge: function(e) {
    if (this._$element.children("." + Ob).remove(), !!e) {
      var t = g("<div>").addClass(Pq).addClass(Ob).text(e);
      this._$element.append(t);
    }
  }
}), Rb = "dx-tabs-expanded";
function JA(e) {
  return e.scrollWidth - e.clientWidth;
}
function Lq(e, t) {
  return Math.round(e) <= t;
}
function Vq(e, t, i) {
  return Math.round(JA(e) - t) <= i;
}
var Nq = "dx-tabs", $q = "dx-tabs-wrapper", Bb = "dx-tabs-stretched", Hq = "dx-tabs-scrollable", kb = "dx-tabs-nav-buttons", Fb = "dx-overflow-hidden", Pb = "dx-tab", zq = "dx-tab-selected", Wq = "dx-tabs-nav-button", Gq = "dx-tabs-nav-button-left", Kq = "dx-tabs-nav-button-right", Uq = "dx-tab-text", jq = "dxTabData", Mb = "chevronnext", Lb = "chevronprev", qq = 100, Vb = 5, Xq = 300, Nb = 30, Xv = Lv.inherit({
  _activeStateUnit: "." + Pb,
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      hoverStateEnabled: !0,
      showNavButtons: !0,
      scrollByContent: !0,
      scrollingEnabled: !0,
      selectionMode: "single",
      activeStateEnabled: !0,
      selectionRequired: !1,
      selectOnFocus: !0,
      loopItemFocus: !1,
      useInkRipple: !1,
      badgeExpr: function(e) {
        return e ? e.badge : void 0;
      },
      _itemAttributes: {
        role: "tab"
      }
    });
  },
  _defaultOptionsRules: function() {
    var e = rn();
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType !== "desktop";
      },
      options: {
        showNavButtons: !1
      }
    }, {
      device: {
        deviceType: "desktop"
      },
      options: {
        scrollByContent: !1
      }
    }, {
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }, {
      device: function() {
        return St(e);
      },
      options: {
        useInkRipple: !0,
        selectOnFocus: !1
      }
    }]);
  },
  _init: function() {
    this.callBase(), this.setAria("role", "tablist"), this.$element().addClass(Nq), this._renderWrapper(), this._renderMultiple(), this._feedbackHideTimeout = qq;
  },
  _initTemplates: function() {
    this.callBase(), this._templateManager.addDefaultTemplates({
      item: new $a(function(e, t) {
        Me(t) ? this._prepareDefaultItemTemplate(t, e) : e.text(String(t));
        var i = wa(t.icon);
        i && i.prependTo(e), e.wrapInner(g("<span>").addClass(Uq));
      }.bind(this), ["text", "html", "icon"], this.option("integrationOptions.watchMethod"))
    });
  },
  _createItemByTemplate: function(e, t) {
    var {
      itemData: i,
      container: n,
      index: r
    } = t;
    return this._deferredTemplates[r] = new U(), e.render({
      model: i,
      container: n,
      index: r,
      onRendered: () => this._deferredTemplates[r].resolve()
    });
  },
  _itemClass: function() {
    return Pb;
  },
  _selectedItemClass: function() {
    return zq;
  },
  _itemDataKey: function() {
    return jq;
  },
  _initMarkup: function() {
    this._deferredTemplates = [], this.callBase(), this.option("useInkRipple") && this._renderInkRipple(), this.$element().addClass(Fb);
  },
  _render: function() {
    this.callBase(), this._deferRenderScrolling();
  },
  _deferRenderScrolling() {
    ge.apply(this, this._deferredTemplates).done(() => this._renderScrolling());
  },
  _renderScrolling: function() {
    var e = [Bb, Rb, Fb];
    if (this.$element().removeClass(e.join(" ")), this.option("scrollingEnabled") && this._isItemsWidthExceeded()) {
      this._scrollable || (this._renderScrollable(), this._renderNavButtons());
      var t = this.getScrollable();
      if (t.update(), this.option("rtlEnabled")) {
        var i = JA(g(this.getScrollable().container()).get(0));
        t.scrollTo({
          left: i
        });
      }
      this._updateNavButtonsVisibility(), this._scrollToItem(this.option("selectedItem"));
    }
    this.option("scrollingEnabled") && this._isItemsWidthExceeded() || (this._cleanScrolling(), this._needStretchItems() && !this._isItemsWidthExceeded() && this.$element().addClass(Bb), this.$element().removeClass(kb).addClass(Rb));
  },
  _isItemsWidthExceeded: function() {
    var e = this._getSummaryItemsWidth(this._getVisibleItems(), !0);
    return e - 1 > Ae(this.$element());
  },
  _needStretchItems: function() {
    var e = this._getVisibleItems(), t = Ae(this.$element()), i = [];
    B(e, (r, a) => {
      i.push(Ge(a, !0));
    });
    var n = Math.max.apply(null, i);
    return n >= t / e.length;
  },
  _cleanNavButtons: function() {
    !this._leftButton || !this._rightButton || (this._leftButton.$element().remove(), this._rightButton.$element().remove(), this._leftButton = null, this._rightButton = null);
  },
  _cleanScrolling: function() {
    this._scrollable && (this._$wrapper.appendTo(this.$element()), this._scrollable.$element().remove(), this._scrollable = null, this._cleanNavButtons());
  },
  _renderInkRipple: function() {
    this._inkRipple = _v();
  },
  _toggleActiveState: function(e, t, i) {
    if (this.callBase.apply(this, arguments), !!this._inkRipple) {
      var n = {
        element: e,
        event: i
      };
      t ? this._inkRipple.showWave(n) : this._inkRipple.hideWave(n);
    }
  },
  _renderMultiple: function() {
    this.option("selectionMode") === "multiple" && this.option("selectOnFocus", !1);
  },
  _renderWrapper: function() {
    this._$wrapper = g("<div>").addClass($q), this.$element().append(this._$wrapper);
  },
  _itemContainer: function() {
    return this._$wrapper;
  },
  _renderScrollable: function() {
    var e = this.$element().wrapInner(g("<div>").addClass(Hq)).children();
    this._scrollable = this._createComponent(e, Si, {
      direction: "horizontal",
      showScrollbar: "never",
      useKeyboard: !1,
      useNative: !1,
      scrollByContent: this.option("scrollByContent"),
      onScroll: () => {
        this._updateNavButtonsVisibility();
      }
    }), this.$element().append(this._scrollable.$element());
  },
  _scrollToItem: function(e) {
    if (this._scrollable) {
      var t = this._editStrategy.getItemElement(e);
      this._scrollable.scrollToElement(t);
    }
  },
  _renderNavButtons: function() {
    if (this.$element().toggleClass(kb, this.option("showNavButtons")), !!this.option("showNavButtons")) {
      var e = this.option("rtlEnabled");
      this._leftButton = this._createNavButton(-Nb, e ? Mb : Lb);
      var t = this._leftButton.$element();
      t.addClass(Gq), this.$element().prepend(t), this._rightButton = this._createNavButton(Nb, e ? Lb : Mb);
      var i = this._rightButton.$element();
      i.addClass(Kq), this.$element().append(i);
    }
  },
  _updateNavButtonsVisibility: function() {
    var e = this.getScrollable();
    this._leftButton && this._leftButton.option("disabled", Lq(e.scrollLeft(), 1)), this._rightButton && this._rightButton.option("disabled", Vq(g(e.container()).get(0), e.scrollLeft(), 1));
  },
  _updateScrollPosition: function(e, t) {
    this._scrollable.update(), this._scrollable.scrollBy(e / t);
  },
  _createNavButton: function(e, t) {
    var i = this, n = i._createAction(function() {
      i._holdInterval = setInterval(function() {
        i._updateScrollPosition(e, Vb);
      }, Vb);
    }), r = oe(Br.name, "dxNavButton"), a = oe(je.up, "dxNavButton"), o = oe(je.out, "dxNavButton"), s = this._createComponent(g("<div>").addClass(Wq), Gt, {
      focusStateEnabled: !1,
      icon: t,
      onClick: function() {
        i._updateScrollPosition(e, 1);
      },
      integrationOptions: {}
    }), l = s.$element();
    return w.on(l, r, {
      timeout: Xq
    }, function(u) {
      n({
        event: u
      });
    }.bind(this)), w.on(l, a, function() {
      i._clearInterval();
    }), w.on(l, o, function() {
      i._clearInterval();
    }), s;
  },
  _clearInterval: function() {
    this._holdInterval && clearInterval(this._holdInterval);
  },
  _updateSelection: function(e) {
    this._scrollable && this._scrollable.scrollToElement(this.itemElements().eq(e[0]), {
      left: 1,
      right: 1
    });
  },
  _visibilityChanged: function(e) {
    e && this._dimensionChanged();
  },
  _dimensionChanged: function() {
    this._renderScrolling();
  },
  _itemSelectHandler: function(e) {
    this.option("selectionMode") === "single" && this.isItemSelected(e.currentTarget) || this.callBase(e);
  },
  _clean: function() {
    this._deferredTemplates = [], this._cleanScrolling(), this.callBase();
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "useInkRipple":
      case "scrollingEnabled":
      case "showNavButtons":
        this._invalidate();
        break;
      case "scrollByContent":
        this._scrollable && this._scrollable.option(e.name, e.value);
        break;
      case "width":
        this.callBase(e), this._dimensionChanged();
        break;
      case "selectionMode":
        this._renderMultiple(), this.callBase(e);
        break;
      case "badgeExpr":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  },
  _afterItemElementInserted() {
    this.callBase(), this._deferRenderScrolling();
  },
  _afterItemElementDeleted(e, t) {
    this.callBase(e, t), this._renderScrolling();
  },
  getScrollable() {
    return this._scrollable;
  }
});
Xv.ItemClass = Mq;
We("dxTabs", Xv);
class Yq extends Na {
  _renderWatchers() {
    return this._startWatcher("badge", $), super._renderWatchers();
  }
}
var Zq = "dx-tabpanel", Qq = "dx-tabpanel-tabs", Jq = "dx-tabpanel-container", e8 = "dx-tab-text", Yv = QA.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      itemTitleTemplate: "title",
      hoverStateEnabled: !0,
      showNavButtons: !1,
      scrollByContent: !0,
      scrollingEnabled: !0,
      onTitleClick: null,
      onTitleHold: null,
      onTitleRendered: null,
      badgeExpr: function(e) {
        return e ? e.badge : void 0;
      }
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return ve.real().deviceType === "desktop" && !ve.isSimulator();
      },
      options: {
        focusStateEnabled: !0
      }
    }, {
      device: function() {
        return !xa;
      },
      options: {
        swipeEnabled: !1
      }
    }, {
      device: {
        platform: "generic"
      },
      options: {
        animationEnabled: !1
      }
    }]);
  },
  _init: function() {
    this.callBase(), this.$element().addClass(Zq), this.setAria("role", "tabpanel");
  },
  _initMarkup: function() {
    this.callBase(), this._createTitleActions(), this._renderLayout();
  },
  _initTemplates: function() {
    this.callBase(), this._templateManager.addDefaultTemplates({
      title: new $a(function(e, t) {
        if (Me(t)) {
          var i = wa(t.icon);
          i && e.append(i), x(t.title) && !Me(t.title) && e.append(ee.createTextNode(t.title));
        } else
          x(t) && e.text(String(t));
        e.wrapInner(g("<span>").addClass(e8));
      }, ["title", "icon"], this.option("integrationOptions.watchMethod"))
    });
  },
  _createTitleActions: function() {
    this._createTitleClickAction(), this._createTitleHoldAction(), this._createTitleRenderedAction();
  },
  _createTitleClickAction: function() {
    this._titleClickAction = this._createActionByOption("onTitleClick");
  },
  _createTitleHoldAction: function() {
    this._titleHoldAction = this._createActionByOption("onTitleHold");
  },
  _createTitleRenderedAction: function() {
    this._titleRenderedAction = this._createActionByOption("onTitleRendered");
  },
  _renderContent: function() {
    var e = this;
    this.callBase(), this.option("templatesRenderAsynchronously") && (this._resizeEventTimer = setTimeout(function() {
      e._updateLayout();
    }, 0));
  },
  _renderLayout: function() {
    if (this._tabs) {
      this._updateLayout();
      return;
    }
    var e = this.$element();
    this._$tabContainer = g("<div>").addClass(Qq).appendTo(e);
    var t = g("<div>").appendTo(this._$tabContainer);
    this._tabs = this._createComponent(t, Xv, this._tabConfig()), this._$container = g("<div>").addClass(Jq).appendTo(e), this._$container.append(this._$wrapper), this._updateLayout();
  },
  _updateLayout: function() {
    if (Re()) {
      var e = Ne(this._$tabContainer);
      this._$container.css({
        marginTop: -e,
        paddingTop: e
      });
    }
  },
  _refreshActiveDescendant: function() {
    if (this._tabs) {
      var e = this._tabs, t = e.itemElements(), i = g(t[e.option("selectedIndex")]), n = this.getFocusedItemId();
      this.setAria("controls", void 0, g(t)), this.setAria("controls", n, i);
    }
  },
  _tabConfig: function() {
    return {
      selectOnFocus: !0,
      focusStateEnabled: this.option("focusStateEnabled"),
      hoverStateEnabled: this.option("hoverStateEnabled"),
      repaintChangesOnly: this.option("repaintChangesOnly"),
      tabIndex: this.option("tabIndex"),
      selectedIndex: this.option("selectedIndex"),
      badgeExpr: this.option("badgeExpr"),
      onItemClick: this._titleClickAction.bind(this),
      onItemHold: this._titleHoldAction.bind(this),
      itemHoldTimeout: this.option("itemHoldTimeout"),
      onSelectionChanged: function(e) {
        this.option("selectedIndex", e.component.option("selectedIndex")), this._refreshActiveDescendant();
      }.bind(this),
      onItemRendered: this._titleRenderedAction.bind(this),
      itemTemplate: this._getTemplateByOption("itemTitleTemplate"),
      items: this.option("items"),
      noDataText: null,
      scrollingEnabled: this.option("scrollingEnabled"),
      scrollByContent: this.option("scrollByContent"),
      showNavButtons: this.option("showNavButtons"),
      itemTemplateProperty: "tabTemplate",
      loopItemFocus: this.option("loop"),
      selectionRequired: !0,
      onOptionChanged: function(e) {
        if (e.name === "focusedElement")
          if (e.value) {
            var t = g(e.value), i = this._itemElements().eq(t.index());
            this.option("focusedElement", Ie(i));
          } else
            this.option("focusedElement", e.value);
      }.bind(this),
      onFocusIn: function(e) {
        this._focusInHandler(e.event);
      }.bind(this),
      onFocusOut: function(e) {
        this._isFocusOutHandlerExecuting || this._focusOutHandler(e.event);
      }.bind(this)
    };
  },
  _renderFocusTarget: function() {
    this._focusTarget().attr("tabIndex", -1);
  },
  _updateFocusState: function(e, t) {
    this.callBase(e, t), e.target === this._tabs._focusTarget().get(0) && this._toggleFocusClass(t, this._focusTarget());
  },
  _focusOutHandler: function(e) {
    this._isFocusOutHandlerExecuting = !0, this.callBase.apply(this, arguments), this._tabs._focusOutHandler(e), this._isFocusOutHandlerExecuting = !1;
  },
  _setTabsOption: function(e, t) {
    this._tabs && this._tabs.option(e, t);
  },
  _visibilityChanged: function(e) {
    e && (this._tabs._dimensionChanged(), this._updateLayout());
  },
  registerKeyHandler: function(e, t) {
    this.callBase(e, t), this._tabs && this._tabs.registerKeyHandler(e, t);
  },
  repaint: function() {
    this.callBase(), this._tabs.repaint();
  },
  _optionChanged: function(e) {
    var t = e.name, i = e.value, n = e.fullName;
    switch (t) {
      case "dataSource":
        this.callBase(e);
        break;
      case "items":
        this._setTabsOption(t, this.option(t)), this._updateLayout(), this.option("repaintChangesOnly") || this._tabs.repaint(), this.callBase(e);
        break;
      case "width":
        this.callBase(e), this._tabs.repaint();
        break;
      case "selectedIndex":
      case "selectedItem":
        if (this._setTabsOption(n, i), this.callBase(e), this.option("focusStateEnabled") === !0) {
          var r = this.option("selectedIndex"), a = this._itemElements().eq(r);
          this.option("focusedElement", Ie(a));
        }
        break;
      case "itemHoldTimeout":
      case "focusStateEnabled":
      case "hoverStateEnabled":
        this._setTabsOption(n, i), this.callBase(e);
        break;
      case "scrollingEnabled":
      case "scrollByContent":
      case "showNavButtons":
        this._setTabsOption(n, i);
        break;
      case "focusedElement":
        var o = i && g(i).index(), s = i && this._tabs._itemElements().eq(o);
        this._setTabsOption("focusedElement", Ie(s)), this.callBase(e);
        break;
      case "itemTitleTemplate":
        this._setTabsOption("itemTemplate", this._getTemplateByOption("itemTitleTemplate"));
        break;
      case "onTitleClick":
        this._createTitleClickAction(), this._setTabsOption("onItemClick", this._titleClickAction.bind(this));
        break;
      case "onTitleHold":
        this._createTitleHoldAction(), this._setTabsOption("onItemHold", this._titleHoldAction.bind(this));
        break;
      case "onTitleRendered":
        this._createTitleRenderedAction(), this._setTabsOption("onItemRendered", this._titleRenderedAction.bind(this));
        break;
      case "loop":
        this._setTabsOption("loopItemFocus", i);
        break;
      case "badgeExpr":
        this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  },
  _clean: function() {
    clearTimeout(this._resizeEventTimer), this.callBase();
  }
});
Yv.ItemClass = Yq;
We("dxTabPanel", Yv);
class Ga {
  constructor(t) {
    this._options = t, this._itemsRunTimeInfo = this._options.itemsRunTimeInfo;
  }
  findInstance() {
    return this._itemsRunTimeInfo.findWidgetInstanceByItem(this._options.item);
  }
  findItemContainer() {
    return this._itemsRunTimeInfo.findItemContainerByItem(this._options.item);
  }
  findPreparedItem() {
    return this._itemsRunTimeInfo.findPreparedItemByItem(this._options.item);
  }
  tryExecute() {
    ze.abstract();
  }
}
var Fg = (e, t) => "".concat(t ? "tabs" : "items", "[").concat(e, "]"), eO = (e, t) => x(e) && x(t) ? "".concat(e, ".").concat(t) : e || t, Pg = (e) => e ? e.replace(/\s/g, "") : void 0, t8 = (e, t) => e ? e.dataField === t || e.name === t || Pg(e.title) === t || e.itemType === "group" && Pg(e.caption) === t : !1, ks = (e, t) => "".concat(e, ".").concat(t), $b = (e) => {
  var t = e.split(".");
  return t[t.length - 1].replace(/\[\d+]/, "");
}, i8 = (e) => {
  for (var t = e.split("."), i = [...t], n = t.length - 1; n >= 0; n--) {
    if (tO(t[n]))
      return i.join(".");
    i.splice(n, 1);
  }
  return "";
}, tO = (e) => e.indexOf("tabs") > -1, iO = (e, t, i) => {
  var n = e.indexOf(t);
  if (n > -1)
    return Fg(n, i);
  for (var r = 0; r < e.length; r++) {
    var a = e[r], o = a.tabs || a.items;
    if (o) {
      var s = iO(o, t, a.tabs);
      if (s)
        return eO(Fg(r, i), s);
    }
  }
};
function n8(e) {
  var {
    form: t,
    $formElement: i,
    formOptions: n,
    items: r,
    validationGroup: a,
    extendedLayoutManagerOptions: o,
    onFieldDataChanged: s,
    onContentReady: l,
    onDisposing: u,
    onFieldItemRendered: d
  } = e, c = {
    form: t,
    items: r,
    $formElement: i,
    validationGroup: a,
    onFieldDataChanged: s,
    onContentReady: l,
    onDisposing: u,
    onFieldItemRendered: d,
    validationBoundary: n.scrollingEnabled ? i : void 0,
    scrollingEnabled: n.scrollingEnabled,
    showRequiredMark: n.showRequiredMark,
    showOptionalMark: n.showOptionalMark,
    requiredMark: n.requiredMark,
    optionalMark: n.optionalMark,
    requiredMessage: n.requiredMessage,
    screenByWidth: n.screenByWidth,
    layoutData: n.formData,
    labelLocation: n.labelLocation,
    customizeItem: n.customizeItem,
    minColWidth: n.minColWidth,
    showColonAfterLabel: n.showColonAfterLabel,
    onEditorEnterKey: n.onEditorEnterKey,
    labelMode: n.labelMode
  }, h = T(c, {
    isRoot: o.isRoot,
    colCount: o.colCount,
    alignItemLabels: o.alignItemLabels,
    cssItemClass: o.cssItemClass,
    colCountByScreen: o.colCountByScreen,
    onLayoutChanged: o.onLayoutChanged,
    width: o.width
  });
  return h;
}
class r8 extends Ga {
  tryExecute() {
    var {
      value: t
    } = this._options, i = this.findInstance();
    return i ? (i.option(t), !0) : !1;
  }
}
class Hb extends Ga {
  tryExecute() {
    var t = this.findInstance();
    if (t) {
      var {
        optionName: i,
        item: n,
        value: r
      } = this._options, a = this._itemsRunTimeInfo.findItemIndexByItem(n);
      if (a >= 0)
        return t.option(ks("items[".concat(a, "]"), i), r), !0;
    }
    return !1;
  }
}
class a8 extends Ga {
  tryExecute() {
    return !1;
  }
}
class o8 extends Ga {
  tryExecute() {
    var t = this.findPreparedItem();
    return t != null && t._prepareGroupItemTemplate && t._renderGroupContentTemplate ? (t._prepareGroupItemTemplate(this._options.item.template), t._renderGroupContentTemplate(), !0) : !1;
  }
}
class s8 extends Ga {
  tryExecute() {
    var t = this.findInstance();
    if (t) {
      var {
        value: i
      } = this._options;
      return t.option("dataSource", i), !0;
    }
    return !1;
  }
}
class l8 extends Ga {
  tryExecute() {
    var {
      item: t
    } = this._options, i = this.findInstance(), n = i && dt(i.$element()[0], "dxValidator");
    if (n && t) {
      var r = (s) => s.type === "required", a = (n.option("validationRules") || []).some(r), o = (t.validationRules || []).some(r);
      if (!a && !o || a && o)
        return n.option("validationRules", t.validationRules), !0;
    }
    return !1;
  }
}
class u8 extends Ga {
  tryExecute() {
    var t = this.findItemContainer(), {
      previousValue: i,
      value: n
    } = this._options;
    return t ? (t.removeClass(i).addClass(n), !0) : !1;
  }
}
var d8 = (e, t) => {
  switch (e) {
    case "editorOptions":
    case "buttonOptions":
      return new r8(t);
    case "validationRules":
      return new l8(t);
    case "cssClass":
      return new u8(t);
    case "badge":
    case "disabled":
    case "icon":
    case "tabTemplate":
    case "title":
      return new Hb(T(t, {
        optionName: e
      }));
    case "tabs":
      return new s8(t);
    case "template":
      var i, n, r, a = (i = t == null || (n = t.item) === null || n === void 0 ? void 0 : n.itemType) !== null && i !== void 0 ? i : (r = t.itemsRunTimeInfo.findPreparedItemByItem(t == null ? void 0 : t.item)) === null || r === void 0 ? void 0 : r.itemType;
      return a === "simple" ? new a8(t) : a === "group" ? new o8(t) : new Hb(T(t, {
        optionName: e
      }));
    default:
      return null;
  }
}, nO = "dx-responsivebox", zb = nO + "-screen-", c8 = "dx-box-item", Wb = "dxBoxItemData", h8 = 1920, rO = Ha.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      rows: [],
      cols: [],
      screenByWidth: null,
      singleColumnScreen: "",
      height: "100%",
      width: "100%",
      activeStateEnabled: !1,
      focusStateEnabled: !1,
      onItemStateChanged: void 0,
      onLayoutChanged: null,
      currentScreenFactor: void 0
    });
  },
  _init: function() {
    this.option("screenByWidth") || this._options.silent("screenByWidth", __), this.callBase(), this._initLayoutChangedAction();
  },
  _initLayoutChangedAction: function() {
    this._layoutChangedAction = this._createActionByOption("onLayoutChanged", {
      excludeValidators: ["disabled", "readonly"]
    });
  },
  _itemClass: function() {
    return c8;
  },
  _itemDataKey: function() {
    return Wb;
  },
  _initMarkup: function() {
    this.callBase(), this.$element().addClass(nO);
  },
  _renderItems: function() {
    this._setScreenSize(), this._screenItems = this._itemsByScreen(), this._prepareGrid(), this._spreadItems(), this._layoutItems(), this._linkNodeToItem();
  },
  _itemOptionChanged: function(e) {
    var t = this._findItemElementByItem(e);
    t.length && (this._refreshItem(t, e), this._clearItemNodeTemplates(), this._update(!0));
  },
  _setScreenSize: function() {
    var e = this._getCurrentScreen();
    this._removeScreenSizeClass(), this.$element().addClass(zb + e), this.option("currentScreenFactor", e);
  },
  _removeScreenSizeClass: function() {
    var e = this.option("currentScreenFactor");
    e && this.$element().removeClass(zb + e);
  },
  _prepareGrid: function() {
    var e = this._grid = [];
    this._prepareRowsAndCols(), B(this._rows, function() {
      var t = [];
      e.push(t), B(this._cols, function() {
        t.push(this._createEmptyCell());
      }.bind(this));
    }.bind(this));
  },
  getSingleColumnRows: function() {
    var e = this.option("rows"), t = this._screenItems.length;
    if (e.length) {
      for (var i = this._filterByScreen(e), n = [], r = 0; r < t; r++) {
        var a = this._defaultSizeConfig();
        r < i.length && x(i[r].shrink) && (a.shrink = i[r].shrink), n.push(a);
      }
      return n;
    } else
      return this._defaultSizeConfig(t);
  },
  _prepareRowsAndCols: function() {
    this._isSingleColumnScreen() ? (this._prepareSingleColumnScreenItems(), this._rows = this.getSingleColumnRows(), this._cols = this._defaultSizeConfig(1)) : (this._rows = this._sizesByScreen(this.option("rows")), this._cols = this._sizesByScreen(this.option("cols")));
  },
  _isSingleColumnScreen: function() {
    return this._screenRegExp().test(this.option("singleColumnScreen")) || !this.option("rows").length || !this.option("cols").length;
  },
  _prepareSingleColumnScreenItems: function() {
    this._screenItems.sort(function(e, t) {
      return e.location.row - t.location.row || e.location.col - t.location.col;
    }), B(this._screenItems, function(e, t) {
      T(t.location, {
        row: e,
        col: 0,
        rowspan: 1,
        colspan: 1
      });
    });
  },
  _sizesByScreen: function(e) {
    return wt(this._filterByScreen(e), function(t) {
      return T(this._defaultSizeConfig(), t);
    }.bind(this));
  },
  _createDefaultSizeConfig: function() {
    return {
      ratio: 1,
      baseSize: 0,
      minSize: 0,
      maxSize: 0
    };
  },
  _defaultSizeConfig: function(e) {
    var t = this._createDefaultSizeConfig();
    if (!arguments.length)
      return t;
    for (var i = [], n = 0; n < e; n++)
      i.push(t);
    return i;
  },
  _filterByScreen: function(e) {
    var t = this._screenRegExp();
    return li(e, function(i) {
      return !i.screen || t.test(i.screen);
    });
  },
  _screenRegExp: function() {
    var e = this._getCurrentScreen();
    return new RegExp("(^|\\s)" + e + "($|\\s)", "i");
  },
  _getCurrentScreen: function() {
    var e = this._screenWidth();
    return this.option("screenByWidth")(e);
  },
  _screenWidth: function() {
    return Re() ? Ae(ke()) : h8;
  },
  _createEmptyCell: function() {
    return {
      item: {},
      location: {
        colspan: 1,
        rowspan: 1
      }
    };
  },
  _spreadItems: function() {
    B(this._screenItems, function(e, t) {
      var i = t.location || {}, n = i.col, r = i.row, a = this._grid[r], o = a && a[n];
      this._occupyCells(o, t);
    }.bind(this));
  },
  _itemsByScreen: function() {
    return this.option("items").reduce((e, t) => {
      var i = t.location || {};
      return i = Me(i) ? [i] : i, this._filterByScreen(i).forEach((n) => {
        e.push({
          item: t,
          location: T({
            rowspan: 1,
            colspan: 1
          }, n)
        });
      }), e;
    }, []);
  },
  _occupyCells: function(e, t) {
    !e || this._isItemCellOccupied(e, t) || (T(e, t), this._markSpanningCell(e));
  },
  _isItemCellOccupied: function(e, t) {
    if (!$i(e.item))
      return !0;
    var i = !1;
    return this._loopOverSpanning(t.location, function(n) {
      i = i || !$i(n.item);
    }), i;
  },
  _loopOverSpanning: function(e, t) {
    var i = e.row + e.rowspan - 1, n = e.col + e.colspan - 1, r = Math.min(i, this._rows.length - 1), a = Math.min(n, this._cols.length - 1);
    e.rowspan -= i - r, e.colspan -= n - a;
    for (var o = e.row; o <= r; o++)
      for (var s = e.col; s <= a; s++)
        (o !== e.row || s !== e.col) && t(this._grid[o][s]);
  },
  _markSpanningCell: function(e) {
    this._loopOverSpanning(e.location, function(t) {
      T(t, {
        item: e.item,
        spanningCell: e
      });
    });
  },
  _linkNodeToItem: function() {
    B(this._itemElements(), function(e, t) {
      var i = g(t), n = i.data(Wb);
      n.box || (n.node = i.children());
    });
  },
  _layoutItems: function() {
    var e = this._grid.length, t = e && this._grid[0].length;
    if (!(!e && !t)) {
      var i = this._layoutBlock({
        direction: "col",
        row: {
          start: 0,
          end: e - 1
        },
        col: {
          start: 0,
          end: t - 1
        }
      }), n = this._prepareBoxConfig(i.box || {
        direction: "row",
        items: [T(i, {
          ratio: 1
        })]
      });
      T(n, this._rootBoxConfig(n.items)), this._$root = g("<div>").appendTo(this._itemContainer()), this._createComponent(this._$root, kr, n);
    }
  },
  _rootBoxConfig: function(e) {
    var t = B(e, function(i, n) {
      this._needApplyAutoBaseSize(n) && T(n, {
        baseSize: "auto"
      });
    }.bind(this));
    return {
      width: "100%",
      height: "100%",
      items: t,
      itemTemplate: this._getTemplateByOption("itemTemplate"),
      itemHoldTimeout: this.option("itemHoldTimeout"),
      onItemHold: this._createActionByOption("onItemHold"),
      onItemClick: this._createActionByOption("onItemClick"),
      onItemContextMenu: this._createActionByOption("onItemContextMenu"),
      onItemRendered: this._createActionByOption("onItemRendered")
    };
  },
  _needApplyAutoBaseSize: function(e) {
    return !e.baseSize && (!e.minSize || e.minSize === "auto") && (!e.maxSize || e.maxSize === "auto");
  },
  _prepareBoxConfig: function(e) {
    return T(e || {}, {
      crossAlign: "stretch",
      onItemStateChanged: this.option("onItemStateChanged")
    });
  },
  _layoutBlock: function(e) {
    return this._isSingleItem(e) ? this._itemByCell(e.row.start, e.col.start) : this._layoutDirection(e);
  },
  _isSingleItem: function(e) {
    var t = this._grid[e.row.start][e.col.start].location, i = e.row.end - e.row.start === t.rowspan - 1, n = e.col.end - e.col.start === t.colspan - 1;
    return i && n;
  },
  _itemByCell: function(e, t) {
    var i = this._grid[e][t];
    return i.spanningCell ? null : i.item;
  },
  _layoutDirection: function(e) {
    for (var t = [], i = e.direction, n = this._crossDirection(i), r; r = this._nextBlock(e); ) {
      if (this._isBlockIndivisible(e.prevBlockOptions, r))
        throw $e.Error("E1025");
      var a = this._layoutBlock({
        direction: n,
        row: r.row,
        col: r.col,
        prevBlockOptions: e
      });
      a && (T(a, this._blockSize(r, n)), t.push(a)), e[n].start = r[n].end + 1;
    }
    return {
      box: this._prepareBoxConfig({
        direction: i,
        items: t
      })
    };
  },
  _isBlockIndivisible: function(e, t) {
    return e && e.col.start === t.col.start && e.col.end === t.col.end && e.row.start === t.row.start && e.row.end === t.row.end;
  },
  _crossDirection: function(e) {
    return e === "col" ? "row" : "col";
  },
  _nextBlock: function(e) {
    var t = e.direction, i = this._crossDirection(t), n = e[t].start, r = e[t].end, a = e[i].start;
    if (a > e[i].end)
      return null;
    for (var o = 1, s = a; s < a + o; s++) {
      for (var l = 1, u = n; u <= r; u++) {
        var d = this._cellByDirection(t, u, s);
        l = Math.max(l, d.location[i + "span"]);
      }
      var c = s + l, h = a + o;
      c > h && (o += c - h);
    }
    var p = {};
    return p[t] = {
      start: n,
      end: r
    }, p[i] = {
      start: a,
      end: a + o - 1
    }, p;
  },
  _cellByDirection: function(e, t, i) {
    return e === "col" ? this._grid[i][t] : this._grid[t][i];
  },
  _blockSize: function(e, t) {
    for (var i = t === "row" ? "auto" : 0, n = t === "row" ? this._rows : this._cols, r = T(this._createDefaultSizeConfig(), {
      ratio: 0
    }), a = e[t].start; a <= e[t].end; a++) {
      var o = n[a];
      r.ratio += o.ratio, r.baseSize += o.baseSize, r.minSize += o.minSize, r.maxSize += o.maxSize, x(o.shrink) && (r.shrink = o.shrink);
    }
    return r.minSize = r.minSize ? r.minSize : i, r.maxSize = r.maxSize ? r.maxSize : "auto", this._isSingleColumnScreen() && (r.baseSize = "auto"), r;
  },
  _update: function(e) {
    var t = this._$root;
    this._renderItems(), t && (e ? t.remove() : (t.detach(), this._saveAssistantRoot(t))), this._layoutChangedAction();
  },
  _saveAssistantRoot: function(e) {
    this._assistantRoots = this._assistantRoots || [], this._assistantRoots.push(e);
  },
  _dispose: function() {
    this._clearItemNodeTemplates(), this._cleanUnusedRoots(), this.callBase.apply(this, arguments);
  },
  _cleanUnusedRoots: function() {
    this._assistantRoots && B(this._assistantRoots, function(e, t) {
      g(t).remove();
    });
  },
  _clearItemNodeTemplates: function() {
    B(this.option("items"), function() {
      delete this.node;
    });
  },
  _attachClickEvent: $,
  _optionChanged: function(e) {
    switch (e.name) {
      case "rows":
      case "cols":
      case "screenByWidth":
      case "singleColumnScreen":
        this._clearItemNodeTemplates(), this._invalidate();
        break;
      case "width":
      case "height":
        this.callBase(e), this._update();
        break;
      case "onLayoutChanged":
        this._initLayoutChangedAction();
        break;
      case "itemTemplate":
        this._clearItemNodeTemplates(), this.callBase(e);
        break;
      case "currentScreenFactor":
        break;
      default:
        this.callBase(e);
    }
  },
  _dimensionChanged: function() {
    this._getCurrentScreen() !== this.option("currentScreenFactor") && this._update();
  },
  repaint: function() {
    this._update();
  }
});
We("dxResponsiveBox", rO);
var p8 = "dx-form", nf = "dx-form-group", f8 = "dx-form-group-caption", Gb = "dx-col-", aO = "dx-field-item", Kb = "dx-layout-manager-one-col", oO = "dx-field-item-label-content", g8 = "dx-layout-manager", sO = "dx-field-item-label", Mg = "dx-field-item-content", _8 = "dx-single-column-item-content", lO = "dx-root-simple-item", v8 = "dx-form-group-content", m8 = "dx-field-item-has-group", C8 = "dx-field-item-has-tabs", x8 = "dx-form-group-with-caption", Ub = "dx-field-item-tab", jb = "dx-group-colcount-", qb = "group-col-count", y8 = "dx-form-validation-summary", b8 = "dx-form-styling-mode-underlined", Lg = "simple", S8 = ze.inherit({
  ctor(e, t) {
    this.editor = e, this.validator = t, this.validationRequestsCallbacks = [];
    var i = (n) => {
      this.validationRequestsCallbacks.forEach((r) => r(n));
    };
    e.validationRequest.add(i), e.on("disposing", function() {
      e.validationRequest.remove(i);
    });
  },
  getValue() {
    return this.editor.option("value");
  },
  getCurrentValidationError() {
    return this.editor.option("validationError");
  },
  bypass() {
    return this.editor.option("disabled");
  },
  applyValidationResults(e) {
    this.editor.option({
      validationErrors: e.brokenRules,
      validationStatus: e.status
    });
  },
  reset() {
    this.editor.reset();
  },
  focus() {
    this.editor.focus();
  }
}), E8 = "dx-validator", Xb = "valid", w8 = "invalid", rf = "pending", jc = wn.inherit({
  _initOptions: function(e) {
    this.callBase.apply(this, arguments), this.option(Ze.initValidationOptions(e));
  },
  _getDefaultOptions() {
    return T(this.callBase(), {
      validationRules: []
    });
  },
  _init() {
    this.callBase(), this._initGroupRegistration(), this.focused = qe(), this._initAdapter(), this._validationInfo = {
      result: null,
      deferred: null,
      skipValidation: !1
    };
  },
  _initGroupRegistration() {
    var e = this._findGroup();
    this._groupWasInit || this.on("disposing", function(t) {
      Ze.removeRegisteredValidator(t.component._validationGroup, t.component);
    }), (!this._groupWasInit || this._validationGroup !== e) && (Ze.removeRegisteredValidator(this._validationGroup, this), this._groupWasInit = !0, this._validationGroup = e, Ze.registerValidatorInGroup(e, this));
  },
  _setOptionsByReference() {
    this.callBase(), T(this._optionsByReference, {
      validationGroup: !0
    });
  },
  _getEditor() {
    var e = this.$element()[0];
    return dt(e, "dx-validation-target");
  },
  _initAdapter() {
    var e = this._getEditor(), t = this.option("adapter");
    if (!t) {
      if (e) {
        t = new S8(e, this), t.validationRequestsCallbacks.push((n) => {
          this._validationInfo.skipValidation || this.validate(n);
        }), this.option("adapter", t);
        return;
      }
      throw $e.Error("E0120");
    }
    var i = t.validationRequestsCallbacks;
    i && i.push((n) => {
      this.validate(n);
    });
  },
  _toggleRTLDirection(e) {
    var t, i, n, r = (t = (i = this.option("adapter")) === null || i === void 0 || (n = i.editor) === null || n === void 0 ? void 0 : n.option("rtlEnabled")) !== null && t !== void 0 ? t : e;
    this.callBase(r);
  },
  _initMarkup() {
    this.$element().addClass(E8), this.callBase();
  },
  _render() {
    this.callBase(), this._toggleAccessibilityAttributes();
  },
  _toggleAccessibilityAttributes() {
    var e = this._getEditor();
    if (e) {
      var t = this.option("validationRules") || [], i = t.some((n) => {
        var {
          type: r
        } = n;
        return r === "required";
      }) || null;
      e.isInitialized() && e.setAria("required", i), e.option("_onMarkupRendered", () => {
        e.setAria("required", i);
      });
    }
  },
  _visibilityChanged(e) {
    e && this._initGroupRegistration();
  },
  _optionChanged(e) {
    switch (e.name) {
      case "validationGroup":
        this._initGroupRegistration();
        return;
      case "validationRules":
        this._resetValidationRules(), this._toggleAccessibilityAttributes(), this.option("isValid") !== void 0 && this.validate();
        return;
      case "adapter":
        this._initAdapter();
        break;
      case "isValid":
      case "validationStatus":
        this.option(Ze.synchronizeValidationOptions(e, this.option()));
        break;
      default:
        this.callBase(e);
    }
  },
  _getValidationRules() {
    return this._validationRules || (this._validationRules = wt(this.option("validationRules"), (e, t) => T({}, e, {
      validator: this,
      index: t
    }))), this._validationRules;
  },
  _findGroup() {
    var e = this.$element();
    return this.option("validationGroup") || Ze.findGroup(e, this._modelByElement(e));
  },
  _resetValidationRules() {
    delete this._validationRules;
  },
  validate(e) {
    var t = this.option("adapter"), i = this.option("name"), n = t.bypass && t.bypass(), r = e && e.value !== void 0 ? e.value : t.getValue(), a = t.getCurrentValidationError && t.getCurrentValidationError(), o = this._getValidationRules(), s = this._validationInfo && this._validationInfo.result;
    if (s && s.status === rf && s.value === r)
      return T({}, s);
    var l;
    return n ? l = {
      isValid: !0,
      status: Xb
    } : a && a.editorSpecific ? (a.validator = this, l = {
      isValid: !1,
      status: w8,
      brokenRule: a,
      brokenRules: [a]
    }) : l = Ze.validate(r, o, i), l.id = new Ot().toString(), this._applyValidationResult(l, t), l.complete && l.complete.then((u) => {
      u.id === this._validationInfo.result.id && this._applyValidationResult(u, t);
    }), T({}, this._validationInfo.result);
  },
  reset() {
    var e = this.option("adapter"), t = {
      id: null,
      isValid: !0,
      brokenRule: null,
      brokenRules: null,
      pendingRules: null,
      status: Xb,
      complete: null
    };
    this._validationInfo.skipValidation = !0, e.reset(), this._validationInfo.skipValidation = !1, this._resetValidationRules(), this._applyValidationResult(t, e);
  },
  _updateValidationResult(e) {
    if (!this._validationInfo.result || this._validationInfo.result.id !== e.id) {
      var t = this._validationInfo.deferred && this._validationInfo.result.complete;
      this._validationInfo.result = T({}, e, {
        complete: t
      });
    } else
      for (var i in e)
        i !== "id" && i !== "complete" && (this._validationInfo.result[i] = e[i]);
  },
  _applyValidationResult(e, t) {
    var i = this._createActionByOption("onValidated", {
      excludeValidators: ["readOnly"]
    });
    if (e.validator = this, this._updateValidationResult(e), t.applyValidationResults && t.applyValidationResults(this._validationInfo.result), this.option({
      validationStatus: this._validationInfo.result.status
    }), this._validationInfo.result.status === rf) {
      this._validationInfo.deferred || (this._validationInfo.deferred = new U(), this._validationInfo.result.complete = this._validationInfo.deferred.promise()), this._eventsStrategy.fireEvent("validating", [this._validationInfo.result]);
      return;
    }
    this._validationInfo.result.status !== rf && (i(e), this._validationInfo.deferred && (this._validationInfo.deferred.resolve(e), this._validationInfo.deferred = null));
  },
  focus() {
    var e = this.option("adapter");
    e && e.focus && e.focus();
  },
  _useTemplates: function() {
    return !1;
  }
});
We("dxValidator", jc);
var I8 = ["dxTagBox", "dxRangeSlider"], T8 = ["dxCalendar", "dxCheckBox", "dxHtmlEditor", "dxRadioGroup", "dxRangeSlider", "dxSlider", "dxSwitch"];
function D8(e) {
  var {
    $parent: t,
    rootElementCssClassList: i,
    formOrLayoutManager: n,
    createComponentCallback: r,
    item: a,
    template: o,
    labelTemplate: s,
    name: l,
    formLabelLocation: u,
    requiredMessageTemplate: d,
    validationGroup: c,
    editorValue: h,
    canAssignUndefinedValueToEditor: p,
    editorValidationBoundary: f,
    editorStylingMode: v,
    showColonAfterLabel: m,
    managerLabelLocation: C,
    itemId: b,
    managerMarkOptions: A,
    labelMode: R,
    onLabelTemplateRendered: k
  } = e, H = x(a.isRequired) ? a.isRequired : !!R8(a.validationRules), K = a.itemType === Lg, j = a.helpText ? "dx-" + new Ot() : null, z = B8({
    item: a,
    id: b,
    isRequired: H,
    managerMarkOptions: A,
    showColonAfterLabel: m,
    labelLocation: C,
    formLabelMode: R,
    labelTemplate: s,
    onLabelTemplateRendered: k
  }), re = z.visible && (z.text || z.labelTemplate && K), {
    location: he,
    labelID: P
  } = z, V = he !== "top" && ["dxTextArea", "dxRadioGroup", "dxCalendar", "dxHtmlEditor"].includes(a.editorType), E = O8({
    editorType: a.editorType,
    editorValue: h,
    defaultEditorName: a.dataField,
    canAssignUndefinedValueToEditor: p,
    externalEditorOptions: a.editorOptions,
    editorInputId: b,
    editorValidationBoundary: f,
    editorStylingMode: v,
    formLabelMode: R,
    labelText: z.textWithoutColon,
    labelMark: z.markOptions.showRequiredMark ? String.fromCharCode(160) + z.markOptions.requiredMark : ""
  }), J = z.markOptions.showOptionalMark && !z.visible && E.labelMode !== "hidden" && !x(a.helpText), Oe = J ? z.markOptions.optionalMark : a.helpText;
  return {
    $parent: t,
    rootElementCssClassList: i,
    formOrLayoutManager: n,
    createComponentCallback: r,
    labelOptions: z,
    labelNeedBaselineAlign: V,
    labelLocation: he,
    needRenderLabel: re,
    item: a,
    isSimpleItem: K,
    isRequired: H,
    template: o,
    helpID: j,
    labelID: P,
    name: l,
    helpText: Oe,
    formLabelLocation: u,
    requiredMessageTemplate: d,
    validationGroup: c,
    editorOptions: E
  };
}
function A8(e) {
  var {
    showRequiredMark: t,
    requiredMark: i,
    showOptionalMark: n,
    optionalMark: r
  } = e;
  return !t && !n ? "" : String.fromCharCode(160) + (t ? i : r);
}
function uO(e, t) {
  var {
    showRequiredMark: i,
    requiredMark: n,
    showOptionalMark: r,
    optionalMark: a
  } = e;
  return {
    showRequiredMark: i && t,
    requiredMark: n,
    showOptionalMark: r && !t,
    optionalMark: a
  };
}
function O8(e) {
  var {
    editorType: t,
    defaultEditorName: i,
    editorValue: n,
    canAssignUndefinedValueToEditor: r,
    externalEditorOptions: a,
    editorInputId: o,
    editorValidationBoundary: s,
    editorStylingMode: l,
    formLabelMode: u,
    labelText: d,
    labelMark: c
  } = e, h = {};
  (n !== void 0 || r) && (h.value = n), I8.indexOf(t) !== -1 && (h.value = h.value || []);
  var p = a == null ? void 0 : a.labelMode;
  x(p) || (p = u === "outside" ? "hidden" : u);
  var f = (a == null ? void 0 : a.stylingMode) || l, v = T(!0, h, a, {
    inputAttr: {
      id: o
    },
    validationBoundary: s,
    stylingMode: f,
    label: d,
    labelMode: p,
    labelMark: c
  });
  return a && (v.dataSource && (v.dataSource = a.dataSource), v.items && (v.items = a.items)), i && !v.name && (v.name = i), v;
}
function R8(e) {
  var t;
  return e && e.length && B(e, function(i, n) {
    if (n.type === "required")
      return t = !0, !1;
  }), t;
}
function B8(e) {
  var {
    item: t,
    id: i,
    isRequired: n,
    managerMarkOptions: r,
    showColonAfterLabel: a,
    labelLocation: o,
    labelTemplate: s,
    formLabelMode: l,
    onLabelTemplateRendered: u
  } = e, d = T8.includes(t.editorType), c = T({
    showColon: a,
    location: o,
    id: i,
    visible: l === "outside" || d && l !== "hidden",
    isRequired: n
  }, t ? t.label : {}, {
    markOptions: uO(r, n),
    labelTemplate: s,
    onLabelTemplateRendered: u
  });
  return ["dxRadioGroup", "dxCheckBox", "dxLookup", "dxSlider", "dxRangeSlider", "dxSwitch", "dxHtmlEditor"].includes(t.editorType) && (c.labelID = "dx-label-".concat(new Ot())), !c.text && t.dataField && (c.text = va(t.dataField)), c.text && (c.textWithoutColon = c.text, c.text += c.showColon ? ":" : ""), c;
}
var k8 = "dx-field-item-required-mark", dO = "dx-field-item-label-location-", F8 = "dx-field-item-optional-mark", P8 = "dx-field-item-label-text";
function M8(e) {
  var {
    text: t,
    id: i,
    location: n,
    alignment: r,
    labelID: a = null,
    markOptions: o = {},
    labelTemplate: s,
    labelTemplateData: l,
    onLabelTemplateRendered: u
  } = e;
  if ((!x(t) || t.length <= 0) && !x(s))
    return null;
  var d = g("<label>").addClass(sO + " " + dO + n).attr("for", i).attr("id", a).css("textAlign", r), c = g("<span>").addClass(oO), h = g("<span>").addClass(P8).text(t);
  return s && (h = g("<div>").addClass("dx-field-item-custom-label-content"), l.text = t, s.render({
    container: Ie(h),
    model: l,
    onRendered() {
      u == null || u();
    }
  })), d.append(c.append(h, L8(o)));
}
function L8(e) {
  var t = A8(e);
  return t === "" ? null : g("<span>").addClass(e.showRequiredMark ? k8 : F8).text(t);
}
function V8(e, t, i) {
  var n = "".concat(t, " > .").concat(sO, ":not(.").concat(dO, "top) > .").concat(oO), r = e.find(n), a = r.length, o, s, l = 0;
  for (s = 0; s < a; s++)
    o = N8(r[s]), o > l && (l = o);
  for (s = 0; s < a; s++)
    r[s].style.width = l + "px";
}
function N8(e) {
  for (var t = 0, i = e.children.length, n = 0; n < i; n++) {
    var r = e.children[n];
    t += r.offsetWidth;
  }
  return t;
}
var $8 = "dx-flex-layout", H8 = "dx-field-item-optional", z8 = "dx-field-item-required", cO = "dx-field-item-content-wrapper", W8 = "dx-field-item-content-location-", G8 = "dx-field-item-label-align", K8 = "dx-field-item-help-text", U8 = "dx-label-v-align", j8 = "dx-label-h-align", q8 = "dx-toggle-controls-paddings", X8 = "dx-template-wrapper", Vg = "dx-validation-target", Y8 = "dx-invalid";
function Z8(e) {
  var {
    $parent: t,
    rootElementCssClassList: i,
    formOrLayoutManager: n,
    createComponentCallback: r,
    labelOptions: a,
    labelNeedBaselineAlign: o,
    labelLocation: s,
    needRenderLabel: l,
    formLabelLocation: u,
    item: d,
    editorOptions: c,
    isSimpleItem: h,
    isRequired: p,
    template: f,
    helpID: v,
    labelID: m,
    name: C,
    helpText: b,
    requiredMessageTemplate: A,
    validationGroup: R
  } = e, k = g("<div>").addClass(i.join(" ")).appendTo(t);
  k.addClass(p ? z8 : H8), h && k.addClass($8), h && o && k.addClass(G8);
  var H = g("<div>");
  H.data("dx-form-item", d), H.addClass(Mg).addClass(W8 + {
    right: "left",
    left: "right",
    top: "bottom"
  }[u]);
  var K = null;
  if (l && (a.labelTemplate && (a.labelTemplateData = Qb(d, c, n)), K = M8(a)), K) {
    var {
      editorType: j
    } = d;
    k.append(K), (s === "top" || s === "left") && k.append(H), s === "right" && k.prepend(H), s === "top" ? k.addClass(U8) : k.addClass(j8), (j === "dxCheckBox" || j === "dxSwitch") && w.on(K, Xe, function() {
      w.trigger(H.children(), Xe);
    });
    var z = ["dxCheckBox", "dxSwitch", "dxRadioGroup"].includes(j), re = a.alignment, he = re === "left" || !re, P = !f, V = s === "top";
    P && z && V && he && H.addClass(q8);
  } else
    k.append(H);
  var E;
  if (f)
    f.render({
      container: Ie(H),
      model: Qb(d, c, n),
      onRendered() {
        var I = Yb(H), D = Q8(I);
        Zb(D);
      }
    });
  else {
    var J = g("<div>").appendTo(H);
    try {
      E = r(J, d.editorType, c), E.setAria("describedby", v), m && E.setAria("labelledby", m), E.setAria("required", p);
    } catch (I) {
      $e.log("E1035", I.message);
    }
  }
  var Oe = Yb(H), pe = Oe && Oe.data(Vg);
  if (pe) {
    var Ue = d.label && d.label.text, _e = Ue ? null : C, Ve = Ue ? d.label.text : _e && va(_e), ie;
    if (h)
      if (d.validationRules)
        ie = d.validationRules;
      else {
        var te = Ji(A, Ve || "");
        ie = d.isRequired ? [{
          type: "required",
          message: te
        }] : null;
      }
    Array.isArray(ie) && ie.length && r(Oe, jc, {
      validationRules: ie,
      validationGroup: R,
      dataGetter: function() {
        return {
          formItem: d
        };
      }
    }), Zb(pe);
  }
  if (b && h) {
    var y = H.parent();
    y.append(g("<div>").addClass(cO).append(H).append(g("<div>").addClass(K8).attr("id", v).text(b)));
  }
  return {
    $fieldEditorContainer: H,
    $rootElement: k,
    widgetInstance: E
  };
}
function Yb(e) {
  var t = e.children().first();
  return t.hasClass(X8) ? t.children().first() : t;
}
function Q8(e) {
  var t, i;
  return (e == null ? void 0 : e.data(Vg)) || (e == null || (t = e.parent) === null || t === void 0 || (i = t.call(e)) === null || i === void 0 ? void 0 : i.data(Vg));
}
function Zb(e) {
  if (e && St()) {
    var t = ".".concat(cO), i = (n) => {
      var {
        element: r,
        component: a
      } = n, {
        isValid: o,
        validationMessageMode: s
      } = a.option();
      g(r).parents(t).toggleClass(Y8, o === !1 && (a._isFocused() || s === "always"));
    };
    e.on("optionChanged", (n) => {
      n.name === "isValid" && i(n);
    }), e.on("focusIn", i).on("focusOut", i).on("enterKey", i);
  }
}
function Qb(e, t, i) {
  return {
    dataField: e.dataField,
    editorType: e.editorType,
    editorOptions: t,
    component: i,
    name: e.name
  };
}
var J8 = "dx-field-button-item";
function eX(e) {
  var {
    item: t,
    $parent: i,
    rootElementCssClassList: n,
    validationGroup: r,
    createComponentCallback: a
  } = e, o = g("<div>").appendTo(i).addClass(n.join(" ")).addClass(J8).css("textAlign", tX(t.horizontalAlignment));
  i.css("justifyContent", iX(t.verticalAlignment));
  var s = g("<div>").appendTo(o);
  return {
    $rootElement: o,
    buttonInstance: a(s, "dxButton", T({
      validationGroup: r
    }, t.buttonOptions))
  };
}
function tX(e) {
  return x(e) ? e : "right";
}
function iX(e) {
  switch (e) {
    case "center":
      return "center";
    case "bottom":
      return "flex-end";
    default:
      return "flex-start";
  }
}
var nX = "dx-field-empty-item";
function Jb(e) {
  var {
    $parent: t,
    rootElementCssClassList: i
  } = e;
  return g("<div>").addClass(nX).html("&nbsp;").addClass(i.join(" ")).appendTo(t);
}
var rX = "dxTextBox", aX = "dx-first-row", oX = "dx-last-row", sX = "dx-first-col", lX = "dx-last-col", uX = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      layoutData: {},
      readOnly: !1,
      colCount: 1,
      colCountByScreen: void 0,
      labelLocation: "left",
      onFieldDataChanged: null,
      onEditorEnterKey: null,
      customizeItem: null,
      alignItemLabels: !0,
      minColWidth: 200,
      showRequiredMark: !0,
      screenByWidth: null,
      showOptionalMark: !1,
      requiredMark: "*",
      labelMode: "outside",
      optionalMark: q.format("dxForm-optionalMark"),
      requiredMessage: q.getFormatter("dxForm-requiredMessage")
    });
  },
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      layoutData: !0,
      validationGroup: !0
    });
  },
  _init: function() {
    var e = this.option("layoutData");
    this.callBase(), this._itemWatchers = [], this._itemsRunTimeInfo = new ZA(), this._updateReferencedOptions(e), this._initDataAndItems(e);
  },
  _dispose: function() {
    this.callBase(), this._cleanItemWatchers();
  },
  _initDataAndItems: function(e) {
    this._syncDataWithItems(), this._updateItems(e);
  },
  _syncDataWithItems: function() {
    var e = this.option("layoutData"), t = this.option("items");
    x(t) && t.forEach((i) => {
      if (i.dataField && this._getDataByField(i.dataField) === void 0) {
        var n;
        i.editorOptions && (n = i.editorOptions.value), (x(n) || i.dataField in e) && this._updateFieldValue(i.dataField, n);
      }
    });
  },
  _getDataByField: function(e) {
    return e ? this.option("layoutData." + e) : null;
  },
  _isCheckboxUndefinedStateEnabled: function(e) {
    var {
      allowIndeterminateState: t,
      editorType: i,
      dataField: n
    } = e;
    if (t === !0 && i === "dxCheckBox") {
      var r = ["layoutData", ...n.split(".")], a = r.pop(), o = this.option(r.join("."));
      return o && a in o;
    }
    return !1;
  },
  _updateFieldValue: function(e, t) {
    var i = this.option("layoutData"), n = t;
    !ii.isWrapped(i[e]) && x(e) ? this.option("layoutData." + e, n) : ii.isWritableWrapped(i[e]) && (n = ce(n) ? n() : n, i[e](n)), this._triggerOnFieldDataChanged({
      dataField: e,
      value: n
    });
  },
  _triggerOnFieldDataChanged: function(e) {
    this._createActionByOption("onFieldDataChanged")(e);
  },
  _updateItems: function(e) {
    var t = this, i = this.option("items"), n = x(i), r = t.option("customizeItem"), a = n ? i : this._generateItemsByData(e);
    if (x(a)) {
      var o = [];
      B(a, function(s, l) {
        t._isAcceptableItem(l) && (l = t._processItem(l), r && r(l), De(l) && ii.unwrap(l.visible) !== !1 && o.push(l));
      }), (!t._itemWatchers.length || !n) && t._updateItemWatchers(a), this._setItems(o), this._sortItems();
    }
  },
  _cleanItemWatchers: function() {
    this._itemWatchers.forEach(function(e) {
      e();
    }), this._itemWatchers = [];
  },
  _updateItemWatchers: function(e) {
    var t = this, i = t._getWatch();
    e.forEach(function(n) {
      De(n) && x(n.visible) && ce(i) && t._itemWatchers.push(i(function() {
        return ii.unwrap(n.visible);
      }, function() {
        t._updateItems(t.option("layoutData")), t.repaint();
      }, {
        skipImmediate: !0
      }));
    });
  },
  _generateItemsByData: function(e) {
    var t = [];
    return x(e) && B(e, function(i) {
      t.push({
        dataField: i
      });
    }), t;
  },
  _isAcceptableItem: function(e) {
    var t = e.dataField || e, i = this._getDataByField(t);
    return !(ce(i) && !ii.isWrapped(i));
  },
  _processItem: function(e) {
    if (typeof e == "string" && (e = {
      dataField: e
    }), typeof e == "object" && !e.itemType && (e.itemType = Lg), !x(e.editorType) && x(e.dataField)) {
      var t = this._getDataByField(e.dataField);
      e.editorType = x(t) ? this._getEditorTypeByDataType(Ei(t)) : rX;
    }
    if (e.editorType === "dxCheckBox") {
      var i;
      e.allowIndeterminateState = (i = e.allowIndeterminateState) !== null && i !== void 0 ? i : !0;
    }
    return e;
  },
  _getEditorTypeByDataType: function(e) {
    switch (e) {
      case "number":
        return "dxNumberBox";
      case "date":
        return "dxDateBox";
      case "boolean":
        return "dxCheckBox";
      default:
        return "dxTextBox";
    }
  },
  _sortItems: function() {
    Is(this._items, "visibleIndex"), this._sortIndexes();
  },
  _sortIndexes: function() {
    this._items.sort(function(e, t) {
      var i = e.visibleIndex, n = t.visibleIndex, r;
      return i > n ? r = 1 : i < n ? r = -1 : r = 0, r;
    });
  },
  _initMarkup: function() {
    this._itemsRunTimeInfo.clear(), this.$element().addClass(g8), this.callBase(), this._renderResponsiveBox();
  },
  _renderResponsiveBox: function() {
    var e = [];
    if (this._items && this._items.length) {
      var t = this._getColCount(), i = g("<div>").appendTo(this.$element());
      this._prepareItemsWithMerging(t);
      var n = this._generateLayoutItems();
      this._responsiveBox = this._createComponent(i, rO, this._getResponsiveBoxConfig(n, t, e)), Re() || this._renderTemplates(e);
    }
  },
  _itemStateChangedHandler: function(e) {
    this._refresh();
  },
  _renderTemplates: function(e) {
    var t = this, i = 0;
    e.forEach((n) => {
      var r, {
        item: a
      } = n;
      a != null && (r = a.label) !== null && r !== void 0 && r.template && i++;
    }), B(e, function(n, r) {
      switch (r.itemType) {
        case "empty":
          Jb(r);
          break;
        case "button":
          t._renderButtonItem(r);
          break;
        default:
          t._renderFieldItem(r, i);
      }
    });
  },
  _getResponsiveBoxConfig: function(e, t, i) {
    var n = this, r = n.option("colCountByScreen"), a = r && r.xs;
    return {
      onItemStateChanged: this._itemStateChangedHandler.bind(this),
      onLayoutChanged: function() {
        var o = n.option("onLayoutChanged"), s = n.isSingleColumnMode();
        o && (n.$element().toggleClass(Kb, s), o(s));
      },
      onContentReady: function(o) {
        Re() && n._renderTemplates(i), n.option("onLayoutChanged") && n.$element().toggleClass(Kb, n.isSingleColumnMode(o.component));
      },
      itemTemplate: function(o, s, l) {
        if (o.location) {
          var u = g(l), d = o.location.row * t, c = n._items[o.location.col + d];
          if (c) {
            var h = [c.cssClass];
            u.toggleClass(_8, n.isSingleColumnMode(this)), o.location.row === 0 && h.push(aX), o.location.col === 0 && h.push(sX), c.itemType === Lg && n.option("isRoot") && u.addClass(lO);
            var p = o.location.col === t - 1 || o.location.col + o.location.colspan === t, f = n._getRowsCount(), v = o.location.row === f - 1;
            p && h.push(lX), v && h.push(oX), c.itemType !== "empty" && (h.push(aO), h.push(n.option("cssItemClass")), x(c.col) && h.push("dx-col-" + c.col)), i.push({
              itemType: c.itemType,
              item: c,
              $parent: u,
              rootElementCssClassList: h
            });
          }
        }
      },
      cols: n._generateRatio(t),
      rows: n._generateRatio(n._getRowsCount(), !0),
      dataSource: e,
      screenByWidth: n.option("screenByWidth"),
      singleColumnScreen: a ? !1 : "xs"
    };
  },
  _getColCount: function() {
    var e = this.option("colCount"), t = this.option("colCountByScreen");
    if (t) {
      var i = this.option("form").getTargetScreenFactor();
      i || (i = Re() ? nw(this.option("screenByWidth")) : "lg"), e = t[i] || e;
    }
    if (e === "auto") {
      if (this._cashedColCount)
        return this._cashedColCount;
      this._cashedColCount = e = this._getMaxColCount();
    }
    return e < 1 ? 1 : e;
  },
  _getMaxColCount: function() {
    if (!Re())
      return 1;
    var e = this.option("minColWidth"), t = Ae(this.$element()), i = this._items.length, n = Math.floor(t / e) || 1;
    return i < n ? i : n;
  },
  isCachedColCountObsolete: function() {
    return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;
  },
  _prepareItemsWithMerging: function(e) {
    var t = this._items.slice(0), i, n, r = [], a, o;
    for (o = 0; o < t.length; o++)
      if (i = t[o], r.push(i), (this.option("alignItemLabels") || i.alignItemLabels || i.colSpan) && (i.col = this._getColByIndex(r.length - 1, e)), i.colSpan > 1 && i.col + i.colSpan <= e) {
        for (n = [], a = 0; a < i.colSpan - 1; a++)
          n.push({
            merged: !0
          });
        r = r.concat(n);
      } else
        delete i.colSpan;
    this._setItems(r);
  },
  _getColByIndex: function(e, t) {
    return e % t;
  },
  _setItems: function(e) {
    this._items = e, this._cashedColCount = null;
  },
  _generateLayoutItems: function() {
    var e = this._items, t = this._getColCount(), i = [], n, r;
    for (r = 0; r < e.length; r++)
      if (n = e[r], !n.merged) {
        var a = {
          location: {
            row: parseInt(r / t),
            col: this._getColByIndex(r, t)
          }
        };
        x(n.disabled) && (a.disabled = n.disabled), x(n.visible) && (a.visible = n.visible), x(n.colSpan) && (a.location.colspan = n.colSpan), x(n.rowSpan) && (a.location.rowspan = n.rowSpan), i.push(a);
      }
    return i;
  },
  _renderEmptyItem: function(e) {
    Jb({
      $container: e
    });
  },
  _renderButtonItem: function(e) {
    var {
      item: t,
      $parent: i,
      rootElementCssClassList: n
    } = e, {
      $rootElement: r,
      buttonInstance: a
    } = eX({
      item: t,
      $parent: i,
      rootElementCssClassList: n,
      validationGroup: this.option("validationGroup"),
      createComponentCallback: this._createComponent.bind(this)
    });
    this._itemsRunTimeInfo.add({
      item: t,
      widgetInstance: a,
      guid: t.guid,
      $itemContainer: r
    });
  },
  _renderFieldItem: function(e, t) {
    var i, n, {
      item: r,
      $parent: a,
      rootElementCssClassList: o
    } = e, s = this._getDataByField(r.dataField), l = !1;
    if (s === void 0) {
      var {
        allowIndeterminateState: u,
        editorType: d,
        dataField: c
      } = r;
      l = this._isCheckboxUndefinedStateEnabled({
        allowIndeterminateState: u,
        editorType: d,
        dataField: c
      });
    }
    var h = r.dataField || r.name, p = this._getFormOrThis(), {
      $fieldEditorContainer: f,
      widgetInstance: v,
      $rootElement: m
    } = Z8(D8({
      $parent: a,
      rootElementCssClassList: o,
      item: r,
      name: h,
      editorValue: s,
      canAssignUndefinedValueToEditor: l,
      formOrLayoutManager: this._getFormOrThis(),
      createComponentCallback: this._createComponent.bind(this),
      formLabelLocation: this.option("labelLocation"),
      requiredMessageTemplate: this.option("requiredMessage"),
      validationGroup: this.option("validationGroup"),
      editorValidationBoundary: this.option("validationBoundary"),
      editorStylingMode: this.option("form") && this.option("form").option("stylingMode"),
      showColonAfterLabel: this.option("showColonAfterLabel"),
      managerLabelLocation: this.option("labelLocation"),
      template: r.template ? this._getTemplate(r.template) : null,
      labelTemplate: (i = r.label) !== null && i !== void 0 && i.template ? this._getTemplate(r.label.template) : null,
      itemId: this.option("form") && this.option("form").getItemID(h),
      managerMarkOptions: this._getMarkOptions(),
      labelMode: this.option("labelMode"),
      onLabelTemplateRendered: () => {
        this._incTemplateRenderedCallCount(), this._shouldAlignLabelsOnTemplateRendered(p, t) && p._alignLabels(this, this.isSingleColumnMode(p));
      }
    }));
    (n = this.option("onFieldItemRendered")) === null || n === void 0 || n(), v && r.dataField && this._bindDataField(v, r.dataField, r.editorType, f), this._itemsRunTimeInfo.add({
      item: r,
      widgetInstance: v,
      guid: r.guid,
      $itemContainer: m
    });
  },
  _incTemplateRenderedCallCount() {
    var e;
    this._labelTemplateRenderedCallCount = ((e = this._labelTemplateRenderedCallCount) !== null && e !== void 0 ? e : 0) + 1;
  },
  _shouldAlignLabelsOnTemplateRendered(e, t) {
    return e.option("templatesRenderAsynchronously") && this._labelTemplateRenderedCallCount === t;
  },
  _getMarkOptions: function() {
    return {
      showRequiredMark: this.option("showRequiredMark"),
      requiredMark: this.option("requiredMark"),
      showOptionalMark: this.option("showOptionalMark"),
      optionalMark: this.option("optionalMark")
    };
  },
  _getFormOrThis: function() {
    return this.option("form") || this;
  },
  _bindDataField: function(e, t, i, n) {
    var r = this._getFormOrThis();
    e.on("enterKey", function(a) {
      r._createActionByOption("onEditorEnterKey")(T(a, {
        dataField: t
      }));
    }), this._createWatcher(e, n, t), this.linkEditorToDataField(e, t, i);
  },
  _createWatcher: function(e, t, i) {
    var n = this, r = n._getWatch();
    if (ce(r)) {
      var a = r(function() {
        return n._getDataByField(i);
      }, function() {
        var o = n._getDataByField(i);
        if (e.NAME === "dxTagBox") {
          var s = e.option("value");
          if (o !== s && function(l, u) {
            if (!Array.isArray(l) || !Array.isArray(u) || l.length !== u.length)
              return !1;
            for (var d = 0; d < l.length; d++)
              if (l[d] !== u[d])
                return !1;
            return !0;
          }(o, s))
            return;
        }
        e.option("value", o);
      }, {
        deep: !0,
        skipImmediate: !0
      });
      w.on(t, Sn, a);
    }
  },
  _getWatch: function() {
    if (!x(this._watch)) {
      var e = this.option("form");
      this._watch = e && e.option("integrationOptions.watchMethod");
    }
    return this._watch;
  },
  _createComponent: function(e, t, i) {
    var n = this.option("readOnly"), r = this.callBase(e, t, i);
    return n && r.option("readOnly", n), this.on("optionChanged", function(a) {
      a.name === "readOnly" && !x(i.readOnly) && r.option(a.name, a.value);
    }), r;
  },
  _generateRatio: function(e, t) {
    var i = [], n, r;
    for (r = 0; r < e; r++)
      n = {
        ratio: 1
      }, t && (n.baseSize = "auto"), i.push(n);
    return i;
  },
  _getRowsCount: function() {
    return Math.ceil(this._items.length / this._getColCount());
  },
  _updateReferencedOptions: function(e) {
    var t = this.option("layoutData");
    De(t) && Object.getOwnPropertyNames(t).forEach((i) => delete this._optionsByReference["layoutData." + i]), De(e) && Object.getOwnPropertyNames(e).forEach((i) => this._optionsByReference["layoutData." + i] = !0);
  },
  _resetWidget(e) {
    this._disableEditorValueChangedHandler = !0, e.reset(), this._disableEditorValueChangedHandler = !1, e.option("isValid", !0);
  },
  _optionChanged(e) {
    if (e.fullName.search("layoutData.") !== 0)
      switch (e.name) {
        case "showRequiredMark":
        case "showOptionalMark":
        case "requiredMark":
        case "optionalMark":
          this._cashedRequiredConfig = null, this._invalidate();
          break;
        case "layoutData":
          this._updateReferencedOptions(e.value), this.option("items") ? $i(e.value) || this._itemsRunTimeInfo.each((t, i) => {
            if (x(i.item)) {
              var n = i.item.dataField;
              if (n && x(i.widgetInstance)) {
                var r = tt(n), a = r(e.value), {
                  allowIndeterminateState: o,
                  editorType: s
                } = i.item;
                a !== void 0 || this._isCheckboxUndefinedStateEnabled({
                  allowIndeterminateState: o,
                  editorType: s,
                  dataField: n
                }) ? i.widgetInstance.option("value", a) : this._resetWidget(i.widgetInstance);
              }
            }
          }) : (this._initDataAndItems(e.value), this._invalidate());
          break;
        case "items":
          this._cleanItemWatchers(), this._initDataAndItems(e.value), this._invalidate();
          break;
        case "alignItemLabels":
        case "labelLocation":
        case "labelMode":
        case "requiredMessage":
          this._invalidate();
          break;
        case "customizeItem":
          this._updateItems(this.option("layoutData")), this._invalidate();
          break;
        case "colCount":
        case "colCountByScreen":
          this._resetColCount();
          break;
        case "minColWidth":
          this.option("colCount") === "auto" && this._resetColCount();
          break;
        case "readOnly":
          break;
        case "width":
          this.callBase(e), this.option("colCount") === "auto" && this._resetColCount();
          break;
        case "onFieldDataChanged":
          break;
        default:
          this.callBase(e);
      }
  },
  _resetColCount: function() {
    this._cashedColCount = null, this._invalidate();
  },
  linkEditorToDataField(e, t) {
    this.on("optionChanged", (i) => {
      i.fullName === "layoutData.".concat(t) && e._setOptionWithoutOptionChange("value", i.value);
    }), e.on("valueChanged", (i) => {
      var n = De(i.value) || Array.isArray(i.value);
      !this._disableEditorValueChangedHandler && !(n && i.value === i.previousValue) && this._updateFieldValue(t, i.value);
    });
  },
  _dimensionChanged: function() {
    this.option("colCount") === "auto" && this.isCachedColCountObsolete() && this._eventsStrategy.fireEvent("autoColCountChanged");
  },
  updateData: function(e, t) {
    var i = this;
    De(e) ? B(e, function(n, r) {
      i._updateFieldValue(n, r);
    }) : typeof e == "string" && i._updateFieldValue(e, t);
  },
  getEditor: function(e) {
    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(e) || this._itemsRunTimeInfo.findWidgetInstanceByName(e);
  },
  isSingleColumnMode: function(e) {
    var t = this._responsiveBox || e;
    if (t)
      return t.option("currentScreenFactor") === t.option("singleColumnScreen");
  },
  getItemsRunTimeInfo: function() {
    return this._itemsRunTimeInfo;
  }
});
We("dxLayoutManager", uX);
var Zv = "dx-validationsummary", dX = Zv + "-item", cX = Zv + "-item-data", hO = Ha.inherit({
  _getDefaultOptions() {
    return T(this.callBase(), {
      focusStateEnabled: !1,
      noDataText: null
    });
  },
  _setOptionsByReference() {
    this.callBase(), T(this._optionsByReference, {
      validationGroup: !0
    });
  },
  _init() {
    this.callBase(), this._initGroupRegistration();
  },
  _initGroupRegistration() {
    var e = this.$element(), t = this.option("validationGroup") || Ze.findGroup(e, this._modelByElement(e)), i = Ze.addGroup(t);
    this._unsubscribeGroup(), this._groupWasInit = !0, this._validationGroup = t, this.groupSubscription = this._groupValidationHandler.bind(this), i.on("validated", this.groupSubscription);
  },
  _unsubscribeGroup() {
    var e = Ze.getGroupConfig(this._validationGroup);
    e && e.off("validated", this.groupSubscription);
  },
  _getOrderedItems(e, t) {
    var i = [];
    return B(e, function(n, r) {
      var a = li(t, function(o) {
        if (o.validator === r)
          return !0;
      });
      a.length && (i = i.concat(a));
    }), i;
  },
  _groupValidationHandler(e) {
    var t = this._getOrderedItems(e.validators, wt(e.brokenRules, function(i) {
      return {
        text: i.message,
        validator: i.validator,
        index: i.index
      };
    }));
    this.validators = e.validators, B(this.validators, (i, n) => {
      if (n._validationSummary !== this) {
        var r = this._itemValidationHandler.bind(this);
        n.on("validated", r), n.on("disposing", function() {
          n.off("validated", r), n._validationSummary = null, r = null;
        }), n._validationSummary = this;
      }
    }), this.option("items", t);
  },
  _itemValidationHandler(e) {
    for (var {
      isValid: t,
      validator: i,
      brokenRules: n
    } = e, r = this.option("items"), a = !1, o = 0, s = function() {
      var u = r[o];
      if (u.validator === i) {
        var d = li(n || [], function(c) {
          return c.index === u.index;
        })[0];
        if (t || !d)
          return r.splice(o, 1), a = !0, "continue";
        d.message !== u.text && (u.text = d.message, a = !0);
      }
      o++;
    }; o < r.length; )
      var l = s();
    B(n, function(u, d) {
      var c = li(r, function(h) {
        return h.validator === i && h.index === d.index;
      })[0];
      c || (r.push({
        text: d.message,
        validator: i,
        index: d.index
      }), a = !0);
    }), a && (r = this._getOrderedItems(this.validators, r), this.option("items", r));
  },
  _initMarkup() {
    this.$element().addClass(Zv), this.callBase();
  },
  _optionChanged(e) {
    switch (e.name) {
      case "validationGroup":
        this._initGroupRegistration();
        break;
      default:
        this.callBase(e);
    }
  },
  _itemClass: () => dX,
  _itemDataKey: () => cX,
  _postprocessRenderItem(e) {
    w.on(e.itemElement, "click", function() {
      e.itemData.validator && e.itemData.validator.focus && e.itemData.validator.focus();
    });
  },
  _dispose() {
    this.callBase(), this._unsubscribeGroup();
  },
  refreshValidationGroup() {
    this._initGroupRegistration();
  }
});
We("dxValidationSummary", hO);
var eS = "dx-validationgroup", hX = "dx-validator", pX = "dx-validationsummary";
class fX extends wn {
  _getDefaultOptions() {
    return super._getDefaultOptions();
  }
  _init() {
    super._init(), Ze.addGroup(this);
  }
  _initMarkup() {
    var t = this.$element();
    t.addClass(eS), t.find(".".concat(hX)).each(function(i, n) {
      jc.getInstance(g(n))._initGroupRegistration();
    }), t.find(".".concat(pX)).each(function(i, n) {
      hO.getInstance(g(n)).refreshValidationGroup();
    }), super._initMarkup();
  }
  validate() {
    return Ze.validateGroup(this);
  }
  reset() {
    return Ze.resetGroup(this);
  }
  _dispose() {
    Ze.removeGroup(this), this.$element().removeClass(eS), super._dispose();
  }
  _useTemplates() {
    return !1;
  }
}
We("dxValidationGroup", fX);
var tS = "dx-state-focused", gX = ["items", "isRequired", "validationRules", "visible"], Qv = Mt.inherit({
  _init: function() {
    this.callBase(), this._cachedColCountOptions = [], this._itemsRunTimeInfo = new ZA(), this._groupsColCount = [], this._attachSyncSubscriptions();
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      formID: "dx-" + new Ot(),
      formData: {},
      colCount: 1,
      screenByWidth: __,
      colCountByScreen: void 0,
      labelLocation: "left",
      readOnly: !1,
      onFieldDataChanged: null,
      customizeItem: null,
      onEditorEnterKey: null,
      minColWidth: 200,
      alignItemLabels: !0,
      alignItemLabelsInAllGroups: !0,
      alignRootItemLabels: !0,
      showColonAfterLabel: !0,
      showRequiredMark: !0,
      showOptionalMark: !1,
      requiredMark: "*",
      optionalMark: q.format("dxForm-optionalMark"),
      requiredMessage: q.getFormatter("dxForm-requiredMessage"),
      showValidationSummary: !1,
      items: void 0,
      scrollingEnabled: !1,
      validationGroup: void 0,
      stylingMode: st().editorStylingMode,
      labelMode: "outside"
    });
  },
  _defaultOptionsRules: function() {
    return this.callBase().concat([{
      device: function() {
        return St();
      },
      options: {
        showColonAfterLabel: !1,
        labelLocation: "top"
      }
    }]);
  },
  _setOptionsByReference: function() {
    this.callBase(), T(this._optionsByReference, {
      formData: !0,
      validationGroup: !0
    });
  },
  _getGroupColCount: function(e) {
    return parseInt(e.attr(qb));
  },
  _applyLabelsWidthByCol: function(e, t) {
    var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n = i.inOneColumn ? aO : Gb + t, r = i.excludeTabbed ? ":not(.".concat(Ub, ")") : "";
    V8(e, ".".concat(n).concat(r));
  },
  _applyLabelsWidth: function(e, t, i, n, r) {
    n = i ? 1 : n || this._getGroupColCount(e);
    var a = {
      excludeTabbed: t,
      inOneColumn: i
    }, o;
    for (o = 0; o < n; o++)
      this._applyLabelsWidthByCol(e, o, a, r);
  },
  _getGroupElementsInColumn: function(e, t, i) {
    var n = x(i) ? "." + jb + i : "", r = "." + Gb + t + " > ." + Mg + " > ." + nf + n;
    return e.find(r);
  },
  _applyLabelsWidthWithGroups: function(e, t, i, n) {
    if (this.option("alignRootItemLabels") === !0)
      for (var r = e.find(".".concat(lO)), a = 0; a < t; a++)
        this._applyLabelsWidthByCol(r, a, i, n);
    var o = this.option("alignItemLabelsInAllGroups");
    if (o)
      this._applyLabelsWidthWithNestedGroups(e, t, i, n);
    else {
      var s = this.$element().find("." + nf), l;
      for (l = 0; l < s.length; l++)
        this._applyLabelsWidth(s.eq(l), i, void 0, void 0, n);
    }
  },
  _applyLabelsWidthWithNestedGroups: function(e, t, i, n) {
    var r = {
      excludeTabbed: i
    }, a, o, s, l;
    for (a = 0; a < t; a++)
      for (l = this._getGroupElementsInColumn(e, a), this._applyLabelsWidthByCol(l, 0, r, n), o = 0; o < this._groupsColCount.length; o++) {
        l = this._getGroupElementsInColumn(e, a, this._groupsColCount[o]);
        var u = this._getGroupColCount(l);
        for (s = 1; s < u; s++)
          this._applyLabelsWidthByCol(l, s, r, n);
      }
  },
  _labelLocation: function() {
    return this.option("labelLocation");
  },
  _alignLabelsInColumn: function(e) {
    var {
      layoutManager: t,
      inOneColumn: i,
      $container: n,
      excludeTabbed: r,
      items: a
    } = e;
    if (!(!Re() || this._labelLocation() === "top")) {
      var o = uO(t._getMarkOptions());
      i ? this._applyLabelsWidth(n, r, !0, void 0, o) : this._checkGrouping(a) ? this._applyLabelsWidthWithGroups(n, t._getColCount(), r, o) : this._applyLabelsWidth(n, r, !1, t._getColCount(), o);
    }
  },
  _prepareFormData: function() {
    x(this.option("formData")) || this.option("formData", {});
  },
  _setStylingModeClass: function() {
    this.option("stylingMode") === "underlined" && this.$element().addClass(b8);
  },
  _initMarkup: function() {
    Ze.addGroup(this._getValidationGroup()), this._clearCachedInstances(), this._prepareFormData(), this.$element().addClass(p8), this._setStylingModeClass(), this.callBase(), this.setAria("role", "form", this.$element()), this.option("scrollingEnabled") && this._renderScrollable(), this._renderLayout(), this._renderValidationSummary(), this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor(), this._attachResizeObserverSubscription();
  },
  _attachResizeObserverSubscription: function() {
    if (Re()) {
      var e = this.$element().get(0);
      fa.unobserve(e), fa.observe(e, () => {
        this._resizeHandler();
      });
    }
  },
  _resizeHandler: function() {
    this._cachedLayoutManagers.length && B(this._cachedLayoutManagers, (e, t) => {
      var i;
      (i = t.option("onLayoutChanged")) === null || i === void 0 || i(t.isSingleColumnMode());
    });
  },
  _getCurrentScreenFactor: function() {
    return Re() ? nw(this.option("screenByWidth")) : "lg";
  },
  _clearCachedInstances: function() {
    this._itemsRunTimeInfo.clear(), this._cachedLayoutManagers = [];
  },
  _alignLabels: function(e, t) {
    this._alignLabelsInColumn({
      $container: this.$element(),
      layoutManager: e,
      excludeTabbed: !0,
      items: this.option("items"),
      inOneColumn: t
    }), _n(this.$element().find(".".concat(aA)));
  },
  _clean: function() {
    this._clearValidationSummary(), this.callBase(), this._groupsColCount = [], this._cachedColCountOptions = [], this._lastMarkupScreenFactor = void 0, fa.unobserve(this.$element().get(0));
  },
  _renderScrollable: function() {
    var e = this.option("useNativeScrolling");
    this._scrollable = new Si(this.$element(), {
      useNative: !!e,
      useSimulatedScrollbar: !e,
      useKeyboard: !1,
      direction: "both",
      bounceEnabled: !1
    });
  },
  _getContent: function() {
    return this.option("scrollingEnabled") ? g(this._scrollable.content()) : this.$element();
  },
  _clearValidationSummary: function() {
    var e;
    (e = this._$validationSummary) === null || e === void 0 || e.remove(), this._$validationSummary = void 0, this._validationSummary = void 0;
  },
  _renderValidationSummary: function() {
    this._clearValidationSummary(), this.option("showValidationSummary") && (this._$validationSummary = g("<div>").addClass(y8).appendTo(this._getContent()), this._validationSummary = this._$validationSummary.dxValidationSummary({
      validationGroup: this._getValidationGroup()
    }).dxValidationSummary("instance"));
  },
  _prepareItems(e, t, i, n) {
    if (e) {
      for (var r = [], a = 0; a < e.length; a++) {
        var o = e[a], s = eO(i, Fg(a, n)), l = {
          item: o,
          itemIndex: a,
          path: s
        }, u = this._itemsRunTimeInfo.add(l);
        if (Te(o) && (o = {
          dataField: o
        }), De(o)) {
          var d = ue({}, o);
          l.preparedItem = d, d.guid = u, this._tryPrepareGroupItem(d), this._tryPrepareTabbedItem(d, s), this._tryPrepareItemTemplate(d), t && (d.cssItemClass = Ub), d.items && (d.items = this._prepareItems(d.items, t, s)), r.push(d);
        } else
          r.push(o);
      }
      return r;
    }
  },
  _tryPrepareGroupItem: function(e) {
    e.itemType === "group" && (e.alignItemLabels = ct(e.alignItemLabels, !0), e._prepareGroupItemTemplate = (t) => {
      e.template && (e.groupContentTemplate = this._getTemplate(t)), e.template = this._itemGroupTemplate.bind(this, e);
    }, e._prepareGroupItemTemplate(e.template));
  },
  _tryPrepareTabbedItem: function(e, t) {
    e.itemType === "tabbed" && (e.template = this._itemTabbedTemplate.bind(this, e), e.tabs = this._prepareItems(e.tabs, !0, t, !0));
  },
  _tryPrepareItemTemplate: function(e) {
    e.template && (e.template = this._getTemplate(e.template));
  },
  _checkGrouping: function(e) {
    if (e)
      for (var t = 0; t < e.length; t++) {
        var i = e[t];
        if (i.itemType === "group")
          return !0;
      }
  },
  _renderLayout: function() {
    var e = this, t = e.option("items"), i = e._getContent();
    t = e._prepareItems(t), e._rootLayoutManager = e._renderLayoutManager(i, this._createLayoutManagerOptions(t, {
      isRoot: !0,
      colCount: e.option("colCount"),
      alignItemLabels: e.option("alignItemLabels"),
      screenByWidth: this.option("screenByWidth"),
      colCountByScreen: this.option("colCountByScreen"),
      onLayoutChanged: function(n) {
        e._alignLabels.bind(e)(e._rootLayoutManager, n);
      },
      onContentReady: function(n) {
        e._alignLabels(n.component, n.component.isSingleColumnMode());
      }
    }));
  },
  _tryGetItemsForTemplate: function(e) {
    return e.items || [];
  },
  _itemTabbedTemplate: function(e, t, i) {
    var n, r = g("<div>").appendTo(i), a = T({}, e.tabPanelOptions, {
      dataSource: e.tabs,
      onItemRendered: (l) => {
        var u, d;
        (u = e.tabPanelOptions) === null || u === void 0 || (d = u.onItemRendered) === null || d === void 0 || d.call(u, l), A_(l.itemElement);
      },
      itemTemplate: (l, u, d) => {
        var c = g(d), h = ct(l.alignItemLabels, !0), p = this._renderLayoutManager(c, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(l), {
          colCount: l.colCount,
          alignItemLabels: h,
          screenByWidth: this.option("screenByWidth"),
          colCountByScreen: l.colCountByScreen,
          cssItemClass: l.cssItemClass,
          onLayoutChanged: (f) => {
            this._alignLabelsInColumn({
              $container: c,
              layoutManager: p,
              items: l.items,
              inOneColumn: f
            });
          }
        }));
        this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(l.guid, {
          layoutManager: p
        }), h && this._alignLabelsInColumn({
          $container: c,
          layoutManager: p,
          items: l.items,
          inOneColumn: p.isSingleColumnMode()
        });
      }
    }), o = (l, u) => {
      Array.isArray(l) && l.forEach((d) => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(d.guid, {
        widgetInstance: u
      }));
    }, s = this._createComponent(r, Yv, a);
    g(i).parent().addClass(C8), s.on("optionChanged", (l) => {
      l.fullName === "dataSource" && o(l.value, l.component);
    }), o([{
      guid: e.guid
    }, ...(n = e.tabs) !== null && n !== void 0 ? n : []], s);
  },
  _itemGroupTemplate: function(e, t, i) {
    var n = g("<div>").toggleClass(x8, x(e.caption) && e.caption.length).addClass(nf).appendTo(i);
    g(i).parent().addClass(m8);
    var r, a;
    e.caption && g("<span>").addClass(f8).text(e.caption).appendTo(n);
    var o = g("<div>").addClass(v8).appendTo(n);
    e.groupContentTemplate ? (e._renderGroupContentTemplate = () => {
      o.empty();
      var s = {
        formData: this.option("formData"),
        component: this
      };
      e.groupContentTemplate.render({
        model: s,
        container: Ie(o)
      });
    }, e._renderGroupContentTemplate()) : (a = this._renderLayoutManager(o, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(e), {
      colCount: e.colCount,
      colCountByScreen: e.colCountByScreen,
      alignItemLabels: e.alignItemLabels,
      cssItemClass: e.cssItemClass
    })), this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(e.guid, {
      layoutManager: a
    }), r = a._getColCount(), this._groupsColCount.includes(r) || this._groupsColCount.push(r), n.addClass(jb + r), n.attr(qb, r));
  },
  _createLayoutManagerOptions: function(e, t) {
    return n8({
      form: this,
      formOptions: this.option(),
      $formElement: this.$element(),
      items: e,
      validationGroup: this._getValidationGroup(),
      extendedLayoutManagerOptions: t,
      onFieldDataChanged: (i) => {
        this._isDataUpdating || this._triggerOnFieldDataChanged(i);
      },
      onContentReady: (i) => {
        this._itemsRunTimeInfo.addItemsOrExtendFrom(i.component._itemsRunTimeInfo), t.onContentReady && t.onContentReady(i);
      },
      onDisposing: (i) => {
        var {
          component: n
        } = i, r = n.getItemsRunTimeInfo();
        this._itemsRunTimeInfo.removeItemsByItems(r);
      },
      onFieldItemRendered: () => {
        var i;
        (i = this._validationSummary) === null || i === void 0 || i.refreshValidationGroup();
      }
    });
  },
  _renderLayoutManager: function(e, t) {
    var i = {
      lg: t.colCount,
      md: t.colCount,
      sm: t.colCount,
      xs: 1
    };
    this._cachedColCountOptions.push({
      colCountByScreen: T(i, t.colCountByScreen)
    });
    var n = g("<div>");
    n.appendTo(e);
    var r = this._createComponent(n, "dxLayoutManager", t);
    return r.on("autoColCountChanged", () => {
      this._clearAutoColCountChangedTimeout(), this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0);
    }), this._cachedLayoutManagers.push(r), r;
  },
  _getValidationGroup: function() {
    return this.option("validationGroup") || this;
  },
  _createComponent: function(e, t, i) {
    return i = i || {}, this._extendConfig(i, {
      readOnly: this.option("readOnly")
    }), this.callBase(e, t, i);
  },
  _attachSyncSubscriptions: function() {
    var e = this;
    e.on("optionChanged", function(t) {
      var i = t.fullName;
      i === "formData" && (x(t.value) || e._options.silent("formData", t.value = {}), e._triggerOnFieldDataChangedByDataSet(t.value)), e._cachedLayoutManagers.length && B(e._cachedLayoutManagers, function(n, r) {
        i === "formData" && (e._isDataUpdating = !0, r.option("layoutData", t.value), e._isDataUpdating = !1), (t.name === "readOnly" || t.name === "disabled") && r.option(i, t.value);
      });
    });
  },
  _optionChanged: function(e) {
    var t = e.fullName.split(".");
    t.length > 1 && t[0].search("items") !== -1 && this._itemsOptionChangedHandler(e) || t.length > 1 && t[0].search("formData") !== -1 && this._formDataOptionChangedHandler(e) || this._defaultOptionChangedHandler(e);
  },
  _defaultOptionChangedHandler: function(e) {
    switch (e.name) {
      case "formData":
        this.option("items") ? $i(e.value) && this._resetValues() : this._invalidate();
        break;
      case "onFieldDataChanged":
        break;
      case "items":
      case "colCount":
      case "onEditorEnterKey":
      case "labelLocation":
      case "labelMode":
      case "alignItemLabels":
      case "showColonAfterLabel":
      case "customizeItem":
      case "alignItemLabelsInAllGroups":
      case "showRequiredMark":
      case "showOptionalMark":
      case "requiredMark":
      case "optionalMark":
      case "requiredMessage":
      case "scrollingEnabled":
      case "formID":
      case "colCountByScreen":
      case "screenByWidth":
      case "stylingMode":
        this._invalidate();
        break;
      case "showValidationSummary":
        this._renderValidationSummary();
        break;
      case "minColWidth":
        this.option("colCount") === "auto" && this._invalidate();
        break;
      case "alignRootItemLabels":
      case "readOnly":
        break;
      case "width":
        this.callBase(e), this._rootLayoutManager.option(e.name, e.value), this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
        break;
      case "validationGroup":
        Ze.removeGroup(e.previousValue || this), this._invalidate();
        break;
      default:
        this.callBase(e);
    }
  },
  _itemsOptionChangedHandler: function(e) {
    var t = e.fullName.split("."), i = e.value, n = this._getItemPath(t), r = this.option(n), a = e.fullName.replace(n + ".", ""), o = a.split(".")[0].replace(/\[\d+]/, ""), s = this._tryCreateItemOptionAction(o, r, r[o], e.previousValue, n), l = this._tryExecuteItemOptionAction(s) || this._tryChangeLayoutManagerItemOption(e.fullName, i);
    if (!l && r) {
      this._changeItemOption(r, a, i);
      var u = this._generateItemsFromData(this.option("items"));
      this.option("items", u), l = !0;
    }
    return l;
  },
  _formDataOptionChangedHandler: function(e) {
    var t = e.fullName.split("."), i = e.value, n = t.slice(1).join("."), r = this.getEditor(n);
    return r ? r.option("value", i) : this._triggerOnFieldDataChanged({
      dataField: n,
      value: i
    }), !0;
  },
  _tryCreateItemOptionAction: function(e, t, i, n, r) {
    return e === "tabs" && (this._itemsRunTimeInfo.removeItemsByPathStartWith("".concat(r, ".tabs")), i = this._prepareItems(i, !0, r, !0)), d8(e, {
      item: t,
      value: i,
      previousValue: n,
      itemsRunTimeInfo: this._itemsRunTimeInfo
    });
  },
  _tryExecuteItemOptionAction: function(e) {
    return e && e.tryExecute();
  },
  _updateValidationGroupAndSummaryIfNeeded: function(e) {
    var t = $b(e);
    if (gX.indexOf(t) > -1 && (Ze.addGroup(this._getValidationGroup()), this.option("showValidationSummary"))) {
      var i;
      (i = this._validationSummary) === null || i === void 0 || i.refreshValidationGroup();
    }
  },
  _setLayoutManagerItemOption(e, t, i, n) {
    if (this._updateLockCount > 0) {
      !e._updateLockCount && e.beginUpdate();
      var r = this._itemsRunTimeInfo.findKeyByPath(n);
      this.postponedOperations.add(r, () => (!e._disposed && e.endUpdate(), new U().resolve()));
    }
    var a = (o) => {
      if (o.component.off("contentReady", a), tO(n)) {
        var s = i8(n), l = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(s);
        l && this._alignLabelsInColumn({
          items: l.option("items"),
          layoutManager: l,
          $container: l.$element(),
          inOneColumn: l.isSingleColumnMode()
        });
      } else
        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
    };
    e.on("contentReady", a), e.option(t, i), this._updateValidationGroupAndSummaryIfNeeded(t);
  },
  _tryChangeLayoutManagerItemOption(e, t) {
    var i = e.split("."), n = $b(e);
    if (n === "items" && i.length > 1) {
      var r = this._getItemPath(i), a = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(r);
      if (a) {
        this._itemsRunTimeInfo.removeItemsByItems(a.getItemsRunTimeInfo());
        var o = this._prepareItems(t, !1, r);
        return this._setLayoutManagerItemOption(a, n, o, r), !0;
      }
    } else if (i.length > 2) {
      var s = i.length - 2, l = this._getItemPath(i.slice(0, s)), u = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(l);
      if (u) {
        var d = ks(i[s], n);
        if (n === "editorType" && u.option(d) !== t)
          return !1;
        if (n === "visible") {
          var c = this.option(ks(l, "items"));
          if (c && c.length) {
            var h = u.option("items");
            c.forEach((p, f) => {
              var v = h[f];
              v.visibleIndex = p.visibleIndex;
            });
          }
        }
        return this._setLayoutManagerItemOption(u, d, t, l), !0;
      }
    }
    return !1;
  },
  _tryChangeLayoutManagerItemOptions(e, t) {
    var i;
    return this.beginUpdate(), B(t, (n, r) => {
      if (i = this._tryChangeLayoutManagerItemOption(ks(e, n), r), !i)
        return !1;
    }), this.endUpdate(), i;
  },
  _getItemPath: function(e) {
    var t = e[0], i;
    for (i = 1; i < e.length && e[i].search(/items\[\d+]|tabs\[\d+]/) !== -1; i++)
      t += "." + e[i];
    return t;
  },
  _triggerOnFieldDataChanged: function(e) {
    this._createActionByOption("onFieldDataChanged")(e);
  },
  _triggerOnFieldDataChangedByDataSet: function(e) {
    var t = this;
    e && De(e) && B(e, function(i, n) {
      t._triggerOnFieldDataChanged({
        dataField: i,
        value: n
      });
    });
  },
  _updateFieldValue: function(e, t) {
    if (x(this.option("formData"))) {
      var i = this.getEditor(e);
      if (this.option("formData." + e, t), i) {
        var n = i.option("value");
        n !== t && i.option("value", t);
      }
    }
  },
  _generateItemsFromData: function(e) {
    var t = this.option("formData"), i = [];
    return !e && x(t) && B(t, function(n) {
      i.push({
        dataField: n
      });
    }), e && B(e, function(n, r) {
      De(r) ? i.push(r) : i.push({
        dataField: r
      });
    }), i;
  },
  _getItemByField: function(e, t) {
    var i = this, n = De(e) ? e : i._getFieldParts(e), r = n.fieldName, a = n.fieldPath, o;
    return t.length && B(t, function(s, l) {
      var u = l.itemType;
      if (a.length) {
        var d = a.slice();
        l = i._getItemByFieldPath(d, r, l);
      } else if (u === "group" && !(l.caption || l.name) || u === "tabbed" && !l.name) {
        var c = i._getSubItemField(u);
        l.items = i._generateItemsFromData(l.items), l = i._getItemByField({
          fieldName: r,
          fieldPath: a
        }, l[c]);
      }
      if (t8(l, r))
        return o = l, !1;
    }), o;
  },
  _getFieldParts: function(e) {
    for (var t = e, i = t.indexOf("."), n = []; i !== -1; )
      n.push(t.substr(0, i)), t = t.substr(i + 1), i = t.indexOf(".");
    return {
      fieldName: t,
      fieldPath: n.reverse()
    };
  },
  _getItemByFieldPath: function(e, t, i) {
    var n = i.itemType, r = this._getSubItemField(n), a = n === "group" || n === "tabbed" || i.title, o;
    do
      if (a) {
        var s = i.name || i.caption || i.title, l = x(s), u = Pg(s), d = void 0;
        if (i[r] = this._generateItemsFromData(i[r]), l && (d = e.pop()), !e.length && (o = this._getItemByField(t, i[r]), o))
          break;
        (!l || l && u === d) && e.length && (o = this._searchItemInEverySubItem(e, t, i[r]));
      } else
        break;
    while (e.length && !x(o));
    return o;
  },
  _getSubItemField: function(e) {
    return e === "tabbed" ? "tabs" : "items";
  },
  _searchItemInEverySubItem: function(e, t, i) {
    var n = this, r;
    return B(i, function(a, o) {
      if (r = n._getItemByFieldPath(e.slice(), t, o), r)
        return !1;
    }), r || (r = !1), r;
  },
  _changeItemOption: function(e, t, i) {
    De(e) && (e[t] = i);
  },
  _dimensionChanged: function() {
    var e = this._getCurrentScreenFactor();
    this._lastMarkupScreenFactor !== e && (this._isColCountChanged(this._lastMarkupScreenFactor, e) && (this._targetScreenFactor = e, this._refresh(), this._targetScreenFactor = void 0), this._lastMarkupScreenFactor = e);
  },
  _isColCountChanged: function(e, t) {
    var i = !1;
    return B(this._cachedColCountOptions, function(n, r) {
      if (r.colCountByScreen[e] !== r.colCountByScreen[t])
        return i = !0, !1;
    }), i;
  },
  _refresh: function() {
    var e = "." + tS + " input, ." + tS + " textarea";
    w.trigger(this.$element().find(e), "change"), this.callBase();
  },
  _resetValues: function() {
    this._itemsRunTimeInfo.each(function(e, t) {
      x(t.widgetInstance) && nn.isEditor(t.widgetInstance) && (t.widgetInstance.reset(), t.widgetInstance.option("isValid", !0));
    }), Ze.resetGroup(this._getValidationGroup());
  },
  _updateData: function(e, t, i) {
    var n = this, r = i ? t : e;
    De(r) ? B(r, function(a, o) {
      n._updateData(i ? e + "." + a : a, o, De(o));
    }) : Te(e) && n._updateFieldValue(e, t);
  },
  registerKeyHandler: function(e, t) {
    this.callBase(e, t), this._itemsRunTimeInfo.each(function(i, n) {
      x(n.widgetInstance) && n.widgetInstance.registerKeyHandler(e, t);
    });
  },
  _focusTarget: function() {
    return this.$element().find("." + Mg + " [tabindex]").first();
  },
  _visibilityChanged: function() {
    this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());
  },
  _clearAutoColCountChangedTimeout: function() {
    this.autoColCountChangedTimeoutId && (clearTimeout(this.autoColCountChangedTimeoutId), this.autoColCountChangedTimeoutId = void 0);
  },
  _dispose: function() {
    this._clearAutoColCountChangedTimeout(), Ze.removeGroup(this._getValidationGroup()), this.callBase();
  },
  resetValues: function() {
    this._resetValues();
  },
  updateData: function(e, t) {
    this._updateData(e, t);
  },
  getEditor: function(e) {
    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(e) || this._itemsRunTimeInfo.findWidgetInstanceByName(e);
  },
  getButton: function(e) {
    return this._itemsRunTimeInfo.findWidgetInstanceByName(e);
  },
  updateDimensions: function() {
    var e = this, t = new U();
    return e._scrollable ? e._scrollable.update().done(function() {
      t.resolveWith(e);
    }) : t.resolveWith(e), t.promise();
  },
  itemOption: function(e, t, i) {
    var n = this._generateItemsFromData(this.option("items")), r = this._getItemByField(e, n), a = iO(n, r);
    if (r)
      switch (arguments.length) {
        case 1:
          return r;
        case 3:
          var o = this._tryCreateItemOptionAction(t, r, i, r[t], a);
          this._changeItemOption(r, t, i);
          var s = ks(a, t);
          !this._tryExecuteItemOptionAction(o) && !this._tryChangeLayoutManagerItemOption(s, i) && this.option("items", n);
          break;
        default:
          if (De(t) && !this._tryChangeLayoutManagerItemOptions(a, t)) {
            var l;
            B(t, (u, d) => {
              var c = this._tryCreateItemOptionAction(u, r, d, r[u], a);
              this._changeItemOption(r, u, d), !l && !this._tryExecuteItemOptionAction(c) && (l = !0);
            }), l && this.option("items", n);
          }
      }
  },
  validate: function() {
    return Ze.validateGroup(this._getValidationGroup());
  },
  getItemID: function(e) {
    return "dx_" + this.option("formID") + "_" + (e || new Ot());
  },
  getTargetScreenFactor: function() {
    return this._targetScreenFactor;
  }
});
We("dxForm", Qv);
var _X = !!Si.IS_RENOVATED_WIDGET, iS = "edit-form-item", vX = "edit-popup", mX = "edit-popup-form", CX = _X ? "dx-scrollable" : "dx-scrollable-container", xX = "dx-button", yX = "form-buttons-container", bX = (e) => {
  var t, i = e.column;
  return e.isCustomEditorType ? e.editorType : (t = i.formItem) === null || t === void 0 ? void 0 : t.editorType;
}, pO = (e, t) => {
  e.forEach((i) => {
    i.items || i.tabs ? pO(i.items || i.tabs, t) : t(i);
  });
}, SX = {
  extenders: {
    controllers: {
      editing: {
        init: function() {
          this._editForm = null, this._updateEditFormDeferred = null, this.callBase.apply(this, arguments);
        },
        isFormOrPopupEditMode: function() {
          return this.isPopupEditMode() || this.isFormEditMode();
        },
        isPopupEditMode: function() {
          var e = this.option("editing.mode");
          return e === qv;
        },
        isFormEditMode: function() {
          var e = this.option("editing.mode");
          return e === Uc;
        },
        getFirstEditableColumnIndex: function() {
          var e = this._firstFormItem;
          if (this.isFormEditMode() && e) {
            var t = this.option(Fi), i = this._dataController.getRowIndexByKey(t), n = this._rowsView.getCellElements(i);
            return this._rowsView._getEditFormEditorVisibleIndex(n, e.column);
          }
          return this.callBase.apply(this, arguments);
        },
        getEditFormRowIndex: function() {
          return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments);
        },
        _isEditColumnVisible: function() {
          var e = this.callBase.apply(this, arguments), t = this.option("editing");
          return this.isFormOrPopupEditMode() && t.allowUpdating || e;
        },
        _handleDataChanged: function(e) {
          if (this.isPopupEditMode()) {
            var t, i, n = this.option("editing.editRowKey"), r = e == null || (t = e.items) === null || t === void 0 ? void 0 : t.some((o) => et(o.key, n)), a = ((i = e.changeTypes) === null || i === void 0 ? void 0 : i.length) && e.changeTypes.every((o) => o === "insert");
            (e.changeType === "refresh" || r && e.isOptionChanged) && !a && this._repaintEditPopup();
          }
          this.callBase.apply(this, arguments);
        },
        getPopupContent: function() {
          var e, t = (e = this._editPopup) === null || e === void 0 ? void 0 : e.option("visible");
          if (this.isPopupEditMode() && t)
            return this._$popupContent;
        },
        _showAddedRow: function(e) {
          this.isPopupEditMode() ? this._showEditPopup(e) : this.callBase.apply(this, arguments);
        },
        _cancelEditDataCore: function() {
          this.callBase.apply(this, arguments), this.isPopupEditMode() && this._hideEditPopup();
        },
        _updateEditRowCore: function(e, t, i) {
          var n = this._editForm;
          if (this.isPopupEditMode())
            if (this.option("repaintChangesOnly")) {
              var r;
              (r = e.update) === null || r === void 0 || r.call(e, e), this._rowsView.renderDelayedTemplates();
            } else
              n && (this._updateEditFormDeferred = new U().done(() => n.repaint()), this._updateLockCount || this._updateEditFormDeferred.resolve());
          else
            this.callBase.apply(this, arguments);
        },
        _showEditPopup: function(e, t) {
          var i = ve.current().deviceType !== "desktop", n = this.addWidgetPrefix(vX), r = T({
            showTitle: !1,
            fullScreen: i,
            wrapperAttr: {
              class: n
            },
            toolbarItems: [{
              toolbar: "bottom",
              location: "after",
              widget: "dxButton",
              options: this._getSaveButtonConfig()
            }, {
              toolbar: "bottom",
              location: "after",
              widget: "dxButton",
              options: this._getCancelButtonConfig()
            }],
            contentTemplate: this._getPopupEditFormTemplate(e)
          }, this.option(fd));
          if (!this._editPopup) {
            var a = g("<div>").appendTo(this.component.$element()).addClass(n);
            this._editPopup = this._createComponent(a, an), this._editPopup.on("hiding", this._getEditPopupHiddenHandler()), this._editPopup.on("shown", (o) => {
              if (w.trigger(o.component.$content().find(UA).not(".".concat(CX)).first(), "focus"), t) {
                var s;
                (s = this._editForm) === null || s === void 0 || s.repaint();
              }
            });
          }
          this._editPopup.option(r), this._editPopup.show(), this.callBase.apply(this, arguments);
        },
        _getPopupEditFormTemplate: function(e) {
          var t = this.component.getVisibleRows()[e], i = {
            row: t,
            values: t.values,
            rowType: t.rowType,
            key: t.key,
            rowIndex: e
          };
          return this._rowsView._addWatchMethod(i, t), (n) => {
            var r = this.getEditFormTemplate(), a = this._createComponent(g("<div>").appendTo(n), Si);
            this._$popupContent = g(a.content()), r(this._$popupContent, i, {
              isPopupForm: !0
            }), this._rowsView.renderDelayedTemplates();
          };
        },
        _repaintEditPopup: function() {
          var e = this._getVisibleEditRowIndex();
          if (e >= 0) {
            var t, i, n = (t = this._editPopup) === null || t === void 0 ? void 0 : t.option("animation");
            (i = this._editPopup) === null || i === void 0 || i.option("animation", null), this._showEditPopup(e, !0), n !== void 0 && this._editPopup.option("animation", n);
          }
        },
        _hideEditPopup: function() {
          var e;
          (e = this._editPopup) === null || e === void 0 || e.option("visible", !1);
        },
        optionChanged: function(e) {
          if (e.name === "editing" && this.isFormOrPopupEditMode()) {
            var t = e.fullName;
            t.indexOf(Jp) === 0 ? (this._handleFormOptionChange(e), e.handled = !0) : t.indexOf(fd) === 0 && (this._handlePopupOptionChange(e), e.handled = !0);
          }
          this.callBase.apply(this, arguments);
        },
        _handleFormOptionChange: function(e) {
          var t;
          if (this.isFormEditMode()) {
            var i = this._getVisibleEditRowIndex();
            i >= 0 && this._dataController.updateItems({
              changeType: "update",
              rowIndices: [i]
            });
          } else
            (t = this._editPopup) !== null && t !== void 0 && t.option("visible") && e.fullName.indexOf(Jp) === 0 && this._repaintEditPopup();
        },
        _handlePopupOptionChange: function(e) {
          var t = this._editPopup;
          if (t) {
            var i = e.fullName.slice(fd.length + 1);
            i ? t.option(i, e.value) : t.option(e.value);
          }
        },
        renderFormEditorTemplate: function(e, t, i, n, r) {
          var a = this, o = g(n), s = t.column, l = bX(t), u = e == null ? void 0 : e.row.data, d = i.component, {
            label: c,
            labelMark: h,
            labelMode: p
          } = i.editorOptions || {}, f = T({}, e, {
            data: u,
            cellElement: null,
            isOnForm: !0,
            item: t,
            id: d.getItemID(t.name || t.dataField),
            column: T({}, s, {
              editorType: l,
              editorOptions: T({
                label: c,
                labelMark: h,
                labelMode: p
              }, s.editorOptions, t.editorOptions)
            }),
            columnIndex: s.index,
            setValue: !r && s.allowEditing && function(m, C) {
              a.updateFieldValue(f, m, C);
            }
          });
          f.value = s.calculateCellValue(u);
          var v = this._getFormEditItemTemplate.bind(this)(f, s);
          return this._rowsView.renderTemplate(o, v, f, !!mc(o)).done(() => {
            this._rowsView._updateCell(o, f);
          }), f;
        },
        getFormEditorTemplate: function(e, t) {
          var i = this.component.columnOption(t.dataField);
          return (n, r) => {
            var a, o, s = g(r);
            (a = (o = e.row).watch) === null || a === void 0 || a.call(o, function() {
              return i.selector(e.row.data);
            }, () => {
              var l, u = s.find(".dx-widget").first(), d = u.data("dxValidator"), c = (l = d) === null || l === void 0 ? void 0 : l.option();
              s.contents().remove(), e = this.renderFormEditorTemplate.bind(this)(e, t, n, s), u = s.find(".dx-widget").first(), d = u.data("dxValidator"), c && !d && u.dxValidator({
                validationRules: c.validationRules,
                validationGroup: c.validationGroup,
                dataGetter: c.dataGetter
              });
            }), e = this.renderFormEditorTemplate.bind(this)(e, t, n, s);
          };
        },
        getEditFormOptions: function(e) {
          var t, i = (t = this._getValidationGroupsInForm) === null || t === void 0 ? void 0 : t.call(this, e), n = this.option("editing.form.customizeItem"), r = this.addWidgetPrefix(iS), a = this.option("editing.form.items"), o = {};
          if (a)
            pO(a, (l) => {
              var u = (l == null ? void 0 : l.name) || (l == null ? void 0 : l.dataField);
              u && (o[u] = !!l.editorType);
            });
          else {
            var s = this.getController("columns").getColumns();
            a = [], B(s, function(l, u) {
              !u.isBand && !u.type && a.push({
                column: u,
                name: u.name,
                dataField: u.dataField
              });
            });
          }
          return T({}, i, {
            items: a,
            formID: "dx-" + new Ot(),
            customizeItem: (l) => {
              var u, d = l.name || l.dataField;
              if ((l.column || d) && (u = l.column || this._columnsController.columnOption(l.name ? "name:" + l.name : "dataField:" + l.dataField)), u) {
                if (l.label = l.label || {}, l.label.text = l.label.text || u.caption, u.dataType === "boolean" && l.label.visible === void 0) {
                  var c = this.option("editing.form.labelMode");
                  (c === "floating" || c === "static") && (l.label.visible = !0);
                }
                l.template = l.template || this.getFormEditorTemplate(e, l), l.column = u, l.isCustomEditorType = o[d], u.formItem && T(l, u.formItem), l.isRequired === void 0 && u.validationRules && (l.isRequired = u.validationRules.some(function(p) {
                  return p.type === "required";
                }), l.validationRules = []);
                var h = x(l.visible) ? l.visible : !0;
                !this._firstFormItem && h && (this._firstFormItem = l);
              }
              n == null || n.call(this, l), l.cssClass = Te(l.cssClass) ? l.cssClass + " " + r : r;
            }
          });
        },
        getEditFormTemplate: function() {
          return (e, t, i) => {
            var n = this.option(Jp), r = this.getEditFormOptions(t), a = g("<div>").appendTo(e), o = i == null ? void 0 : i.isPopupForm;
            if (this._firstFormItem = void 0, o && a.addClass(this.addWidgetPrefix(mX)), this._editForm = this._createComponent(a, Qv, T({}, n, r)), !o) {
              var s = g("<div>").addClass(this.addWidgetPrefix(yX)).appendTo(e);
              this._createComponent(g("<div>").appendTo(s), Gt, this._getSaveButtonConfig()), this._createComponent(g("<div>").appendTo(s), Gt, this._getCancelButtonConfig());
            }
            this._editForm.on("contentReady", () => {
              var l;
              this._rowsView.renderDelayedTemplates(), (l = this._editPopup) === null || l === void 0 || l.repaint();
            });
          };
        },
        getEditForm: function() {
          return this._editForm;
        },
        _endUpdateCore: function() {
          var e;
          (e = this._updateEditFormDeferred) === null || e === void 0 || e.resolve();
        },
        _beforeEndSaving: function() {
          if (this.callBase.apply(this, arguments), this.isPopupEditMode()) {
            var e;
            (e = this._editPopup) === null || e === void 0 || e.hide();
          }
        },
        _processDataItemCore: function(e, t) {
          var {
            type: i
          } = t;
          this.isPopupEditMode() && i === cn && (e.visible = !1), this.callBase.apply(this, arguments);
        },
        _editRowFromOptionChangedCore: function(e, t) {
          var i = this.isPopupEditMode();
          this.callBase(e, t, i), i && this._showEditPopup(t);
        }
      },
      data: {
        _updateEditItem: function(e) {
          this._editingController.isFormEditMode() && (e.rowType = "detail");
        },
        _getChangedColumnIndices: function(e, t, i, n) {
          if (!(n === !1 && t.isEditing && this._editingController.isFormEditMode()))
            return this.callBase.apply(this, arguments);
        }
      }
    },
    views: {
      rowsView: {
        _renderCellContent: function(e, t) {
          t.rowType === "data" && this._editingController.isPopupEditMode() && t.row.visible === !1 || this.callBase.apply(this, arguments);
        },
        getCellElements: function(e) {
          var t = this.callBase(e), i = this._editingController, n = i.getEditForm(), r = i.getEditFormRowIndex();
          return r === e && t && n ? n.$element().find("." + this.addWidgetPrefix(iS) + ", ." + xX) : t;
        },
        _getVisibleColumnIndex: function(e, t, i) {
          var n = this._editingController.getEditFormRowIndex();
          if (n === t && Te(i)) {
            var r = this._columnsController.columnOption(i);
            return this._getEditFormEditorVisibleIndex(e, r);
          }
          return this.callBase.apply(this, arguments);
        },
        _getEditFormEditorVisibleIndex: function(e, t) {
          var i = -1;
          return B(e, function(n, r) {
            var a = g(r).find(".dx-field-item-content").data("dx-form-item");
            if (a != null && a.column && t && a.column.index === t.index)
              return i = n, !1;
          }), i;
        },
        _isFormItem: function(e) {
          var t = e.rowType === "detail" || e.rowType === "detailAdaptive", i = e.rowType === "data" && this._editingController.isPopupEditMode();
          return (t || i) && e.item;
        },
        _updateCell: function(e, t) {
          this._isFormItem(t) ? this._formItemPrepared(t, e) : this.callBase(e, t);
        }
      }
    }
  }
};
xe.registerModule("editingFormBased", SX);
var EX = "focus-overlay", wX = "addrow-button", IX = "dx-dropdowneditor-overlay", TX = "dx-editor-cell", DX = "dx-row", AX = "dx-cell-modified", OX = "dx-data-row", RX = "dx-row-removed", BX = "editing.editRowKey", nS = "editing.editColumnName", kX = "remove";
const FX = {
  extenders: {
    controllers: {
      editing: {
        init: function() {
          var e = !this._saveEditorHandler;
          if (this.callBase.apply(this, arguments), e) {
            var t, i;
            this._pointerUpEditorHandler = () => {
              var n;
              i = (n = this.getController("columnsResizer")) === null || n === void 0 ? void 0 : n.isResizing();
            }, this._pointerDownEditorHandler = (n) => t = g(n.target), this._saveEditorHandler = this.createAction(function(n) {
              var r = n.event, a = g(r.target), o = r[GA], s = this.component;
              if (t && t.is("input") && !t.is(a))
                return;
              function l(f) {
                if (!f)
                  return !1;
                var v = f.closest(".".concat(IX)), m = s.$element();
                return v.length > 0 && m.closest(v).length === 0;
              }
              if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {
                var u = l(a) || l(o == null ? void 0 : o.$element()), d = o && !o._disposed && o !== this.component, c = !!a.closest(".".concat(this.addWidgetPrefix(wX))).length, h = a.hasClass(this.addWidgetPrefix(EX)), p = this.isCellEditMode();
                !i && !u && !h && !(c && p && this.isEditing()) && (mc(a) || d) && this._closeEditItem.bind(this)(a);
              }
            }), w.on(ee.getDocument(), je.up, this._pointerUpEditorHandler), w.on(ee.getDocument(), je.down, this._pointerDownEditorHandler), w.on(ee.getDocument(), Xe, this._saveEditorHandler);
          }
        },
        isCellEditMode: function() {
          return this.option("editing.mode") === jA;
        },
        isBatchEditMode: function() {
          return this.option("editing.mode") === kg;
        },
        isCellOrBatchEditMode: function() {
          return this.isCellEditMode() || this.isBatchEditMode();
        },
        _needToCloseEditableCell: function(e) {
          var t = this.component.$element(), i = this.isEditing(), n = !t || !!e.closest(t).length;
          if (n) {
            var r = e.closest("." + OX).length;
            if (r) {
              var a = this.getView("rowsView"), o = e.closest("." + DX + "> td"), s = a.getRowIndex(o.parent()), l = a.getCellElements(s).index(o), u = this._columnsController.getVisibleColumns(), d = u[l] && u[l].allowEditing;
              i = i && !d && !this.isEditCell(s, l);
            }
          }
          return i || this.callBase.apply(this, arguments);
        },
        _closeEditItem: function(e) {
          this._needToCloseEditableCell(e) && this.closeEditCell();
        },
        _focusEditorIfNeed: function() {
          if (this._needFocusEditor && this.isCellOrBatchEditMode()) {
            var e, t = this._getVisibleEditColumnIndex(), i = (e = this._rowsView) === null || e === void 0 ? void 0 : e._getCellElement(this._getVisibleEditRowIndex(), t);
            i && !i.find(":focus").length ? this._focusEditingCell(() => {
              this._editCellInProgress = !1;
            }, i, !0) : this._editCellInProgress = !1, this._needFocusEditor = !1;
          } else
            this.callBase.apply(this, arguments);
        },
        isEditing: function() {
          if (this.isCellOrBatchEditMode()) {
            var e = x(this.option(BX)), t = x(this.option(nS));
            return e && t;
          }
          return this.callBase.apply(this, arguments);
        },
        _handleEditColumnNameChange: function(e) {
          var t = this._getVisibleEditRowIndex(e.previousValue);
          if (this.isCellOrBatchEditMode() && t !== -1 && x(e.value) && e.value !== e.previousValue) {
            var i = this._columnsController.getVisibleColumnIndex(e.value), n = this._columnsController.getVisibleColumnIndex(e.previousValue);
            this._editCellFromOptionChanged(i, n, t);
          }
        },
        _addRow: function(e, t) {
          if (this.isCellEditMode() && this.hasChanges()) {
            var i = new U();
            return this.saveEditData().done(() => {
              this.hasChanges() ? i.reject("cancel") : this.addRow(e).done(i.resolve).fail(i.reject);
            }), i.promise();
          }
          return this.callBase.apply(this, arguments);
        },
        editCell: function(e, t) {
          return this._editCell({
            rowIndex: e,
            columnIndex: t
          });
        },
        _editCell: function(e) {
          var t = new U(), i;
          return this.executeOperation(t, () => {
            i = this._editCellCore(e), ge(i).done(t.resolve).fail(t.reject);
          }), i !== void 0 ? i : t.promise();
        },
        _editCellCore: function(e) {
          var t = this._dataController, i = x(e.oldColumnIndex) || x(e.oldRowIndex), {
            columnIndex: n,
            rowIndex: r,
            column: a,
            item: o
          } = this._getNormalizedEditCellOptions(e), s = {
            data: o == null ? void 0 : o.data,
            cancel: !1,
            column: a
          };
          if (o.key === void 0) {
            this._dataController.fireError("E1043");
            return;
          }
          if (a && (o.rowType === "data" || o.rowType === "detailAdaptive") && !o.removed && this.isCellOrBatchEditMode()) {
            if (!i && this.isEditCell(r, n))
              return !0;
            var l = r + t.getRowIndexOffset();
            return ge(this._beforeEditCell(r, n, o)).done((u) => {
              u || this._prepareEditCell(s, o, n, l) || this._processCanceledEditingCell();
            });
          }
          return !1;
        },
        _beforeEditCell: function(e, t, i) {
          if (this.isCellEditMode() && !i.isNewRow && this.hasChanges()) {
            var n = new U();
            return this.saveEditData().always(() => {
              n.resolve(this.hasChanges());
            }), n;
          }
        },
        publicMethods: function() {
          var e = this.callBase.apply(this, arguments);
          return e.concat(["editCell", "closeEditCell"]);
        },
        _getNormalizedEditCellOptions: function(e) {
          var {
            oldColumnIndex: t,
            oldRowIndex: i,
            columnIndex: n,
            rowIndex: r
          } = e, a = this._columnsController, o = a.getVisibleColumns(), s = this._dataController.items(), l = s[r], u;
          x(t) ? u = o[t] : u = this._getEditColumn(), x(i) || (i = this._getVisibleEditRowIndex()), Te(n) && (n = a.columnOption(n, "index"), n = a.getVisibleIndex(n));
          var d = o[n];
          return {
            oldColumn: u,
            columnIndex: n,
            oldRowIndex: i,
            rowIndex: r,
            column: d,
            item: l
          };
        },
        _prepareEditCell: function(e, t, i, n) {
          if (t.isNewRow || (e.key = t.key), this._isEditingStart(e))
            return !1;
          if (this._pageIndex = this._dataController.pageIndex(), this._setEditRowKey(t.key), this._setEditColumnNameByIndex(i), !e.column.showEditorAlways) {
            var r;
            this._addInternalData({
              key: t.key,
              oldData: (r = t.oldData) !== null && r !== void 0 ? r : t.data
            });
          }
          return !0;
        },
        closeEditCell: function(e, t) {
          var i = ge(), n = this._getVisibleEditRowIndex();
          if (this.isCellOrBatchEditMode()) {
            var r = new U();
            i = new U(), this.executeOperation(r, () => {
              this._closeEditCellCore(e, n, t).always(i.resolve);
            });
          }
          return i.promise();
        },
        _closeEditCellCore: function(e, t, i) {
          var n = this._dataController, r = new U(), a = r.promise();
          if (this.isCellEditMode() && this.hasChanges()) {
            if (!i)
              return this.saveEditData().done((s) => {
                if (!this.hasChanges()) {
                  this.closeEditCell(!!s).always(r.resolve);
                  return;
                }
                r.resolve();
              }), a;
          } else if (this._resetEditRowKey(), this._resetEditColumnName(), t >= 0) {
            var o = [t];
            this._beforeCloseEditCellInBatchMode(o), e || n.updateItems({
              changeType: "update",
              rowIndices: o
            });
          }
          return r.resolve(), a;
        },
        _resetModifiedClassCells: function(e) {
          if (this.isBatchEditMode()) {
            var t = this._columnsController.getVisibleColumns().length;
            e.forEach((i) => {
              var {
                key: n
              } = i, r = this._dataController.getRowIndexByKey(n);
              if (r !== -1)
                for (var a = 0; a < t; a++)
                  this._rowsView._getCellElement(r, a).removeClass(AX);
            });
          }
        },
        _prepareChange: function(e, t, i) {
          var n = g(e.cellElement);
          return this.isBatchEditMode() && e.key !== void 0 && this._applyModified(n, e), this.callBase.apply(this, arguments);
        },
        _cancelSaving: function() {
          var e = this._dataController;
          this.isCellOrBatchEditMode() && (this.isBatchEditMode() && this._resetEditIndices(), e.updateItems()), this.callBase.apply(this, arguments);
        },
        optionChanged: function(e) {
          var t = e.fullName;
          e.name === "editing" && t === nS ? (this._handleEditColumnNameChange(e), e.handled = !0) : this.callBase(e);
        },
        _editCellFromOptionChanged: function(e, t, i) {
          var n = this._columnsController.getVisibleColumns();
          e > -1 && Bt(() => {
            this._repaintEditCell(n[e], n[t], i);
          });
        },
        _handleEditRowKeyChange: function(e) {
          if (this.isCellOrBatchEditMode()) {
            var t = this._getVisibleEditColumnIndex(), i = this._getEditRowIndexCorrection(), n = this._dataController.getRowIndexByKey(e.previousValue) + i;
            if (x(e.value) && e.value !== e.previousValue) {
              var r;
              (r = this._editCellFromOptionChanged) === null || r === void 0 || r.call(this, t, t, n);
            }
          } else
            this.callBase.apply(this, arguments);
        },
        deleteRow: function(e) {
          if (this.isCellEditMode() && this.isEditing()) {
            var t = this._dataController.items()[e].isNewRow, i = this._dataController.getKeyByRowIndex(e);
            this.closeEditCell(null, t).always(() => {
              e = this._dataController.getRowIndexByKey(i), this._checkAndDeleteRow(e);
            });
          } else
            this.callBase.apply(this, arguments);
        },
        _checkAndDeleteRow: function(e) {
          this.isBatchEditMode() ? this._deleteRowCore(e) : this.callBase.apply(this, arguments);
        },
        _refreshCore: function(e) {
          var {
            isPageChanged: t
          } = e ?? {}, i = this.isBatchEditMode() || t && this.option("scrolling.mode") !== "virtual";
          this.isCellOrBatchEditMode() ? i && (this._resetEditColumnName(), this._resetEditRowKey()) : this.callBase.apply(this, arguments);
        },
        _allowRowAdding: function(e) {
          return this.isBatchEditMode() ? !0 : this.callBase.apply(this, arguments);
        },
        _afterDeleteRow: function(e, t) {
          var i = this._dataController;
          return this.isBatchEditMode() ? (i.updateItems({
            changeType: "update",
            rowIndices: [t, e]
          }), new U().resolve()) : this.callBase.apply(this, arguments);
        },
        _updateEditRow: function(e, t, i) {
          this.isCellOrBatchEditMode() ? this._updateRowImmediately(e, t, i) : this.callBase.apply(this, arguments);
        },
        _isDefaultButtonVisible: function(e, t) {
          if (this.isCellOrBatchEditMode()) {
            var i = this.isBatchEditMode();
            switch (e.name) {
              case "save":
              case "cancel":
              case "edit":
                return !1;
              case "delete":
                return this.callBase.apply(this, arguments) && (!i || !t.row.removed);
              case "undelete":
                return i && this.allowDeleting(t) && t.row.removed;
              default:
                return this.callBase.apply(this, arguments);
            }
          }
          return this.callBase.apply(this, arguments);
        },
        _isRowDeleteAllowed: function() {
          var e = this.callBase.apply(this, arguments);
          return e || this.isBatchEditMode();
        },
        _beforeEndSaving: function(e) {
          if (this.isCellEditMode()) {
            var t;
            ((t = e[0]) === null || t === void 0 ? void 0 : t.type) !== "update" && this.callBase.apply(this, arguments);
          } else
            this.isBatchEditMode() && this._resetModifiedClassCells(e), this.callBase.apply(this, arguments);
        },
        prepareEditButtons: function(e) {
          var t = this.option("editing") || {}, i = this.callBase.apply(this, arguments);
          return (t.allowUpdating || t.allowAdding || t.allowDeleting) && this.isBatchEditMode() && (i.push(this.prepareButtonItem(e, "save", "saveEditData", 21)), i.push(this.prepareButtonItem(e, "revert", "cancelEditData", 22))), i;
        },
        _saveEditDataInner: function() {
          var e, t = this._dataController.getVisibleRows()[this.getEditRowIndex()], i = this._getEditColumn(), n = i == null ? void 0 : i.showEditorAlways, r = this.isCellEditMode() && !(t != null && t.isNewRow), a;
          return r && n && (a = new U(), this.addDeferred(a)), this.callBase.apply(this, arguments).always((e = a) === null || e === void 0 ? void 0 : e.resolve);
        },
        _applyChange: function(e, t, i) {
          var n = this.isCellEditMode() && e.row && !e.row.isNewRow, r = e.column.showEditorAlways, a = e.column.setCellValue !== e.column.defaultSetCellValue, o = r && !i && n && this.hasEditData() && !this.isEditCell(e.rowIndex, e.columnIndex);
          if (o) {
            this._focusEditingCell(), this._updateEditRow(e.row, !0, a);
            return;
          }
          return this.callBase.apply(this, arguments);
        },
        _applyChangeCore: function(e, t) {
          var i = e.column.showEditorAlways, n = this.isCellEditMode() && e.row && !e.row.isNewRow;
          if (i && !t) {
            if (n)
              return this._setEditRowKey(e.row.key, !0), this._setEditColumnNameByIndex(e.columnIndex, !0), this.saveEditData();
            if (this.isBatchEditMode())
              return t = this._needUpdateRow(e.column), this.callBase(e, t);
          }
          return this.callBase.apply(this, arguments);
        },
        _processDataItemCore: function(e, t) {
          var {
            data: i,
            type: n
          } = t;
          this.isBatchEditMode() && n === kX && (e.data = yr(e.data, i)), this.callBase.apply(this, arguments);
        },
        _processRemoveCore: function(e, t, i) {
          if (!(this.isBatchEditMode() && !i))
            return this.callBase.apply(this, arguments);
        },
        _processRemoveIfError: function() {
          if (!this.isBatchEditMode())
            return this.callBase.apply(this, arguments);
        },
        _beforeFocusElementInRow: function(e) {
          this.callBase.apply(this, arguments);
          var t = e >= 0 ? e : 0, i = this.getFirstEditableColumnIndex();
          i >= 0 && this.editCell(t, i);
        }
      }
    },
    views: {
      rowsView: {
        _createTable: function() {
          var e = this.callBase.apply(this, arguments), t = this._editingController;
          return t.isCellOrBatchEditMode() && this.option("editing.allowUpdating") && w.on(e, oe(Br.name, "dxDataGridRowsView"), "td:not(." + TX + ")", this.createAction(() => {
            t.isEditing() && t.closeEditCell();
          })), e;
        },
        _createRow: function(e) {
          var t = this.callBase.apply(this, arguments);
          if (e) {
            var i = this._editingController, n = !!e.removed;
            i.isBatchEditMode() && n && t.addClass(RX);
          }
          return t;
        }
      },
      headerPanel: {
        isVisible: function() {
          var e = this.getController("editing").option("editing");
          return this.callBase() || e && (e.allowUpdating || e.allowDeleting) && e.mode === kg;
        }
      }
    }
  }
};
xe.registerModule("editingCellBased", FX);
const rS = "__DX_INSERT_INDEX__", fO = ["popup", "form"], fi = {
  valid: "valid",
  invalid: "invalid",
  pending: "pending"
}, Fs = function(e) {
  return x(e) && e !== "cancel";
}, aS = function(e, t) {
  return e !== void 0 || e === void 0 && t && !t.isNewRow;
}, PX = at.Controller.inherit({
  init() {
    this._editingController = this.getController("editing"), this.createAction("onRowValidating"), this._validationState || this.initValidationState();
  },
  initValidationState() {
    this._validationState = [], this._validationStateCache = {};
  },
  _rowIsValidated(e) {
    const t = this._getValidationData(e == null ? void 0 : e.key);
    return !!t && !!t.validated;
  },
  _getValidationData(e, t) {
    const i = xn(e), n = De(i);
    let r;
    return n ? r = this._validationState.filter((a) => et(a.key, e))[0] : r = this._validationStateCache[i], !r && t && (r = {
      key: e,
      isValid: !0
    }, this._validationState.push(r), n || (this._validationStateCache[i] = r)), r;
  },
  _getBrokenRules(e, t) {
    let i;
    return t ? i = t.brokenRules || t.brokenRule && [t.brokenRule] : i = e.brokenRules || [], i;
  },
  _rowValidating(e, t) {
    const i = new U(), n = this._editingController.getChangeByKey(e == null ? void 0 : e.key), r = this._getBrokenRules(e, t), a = t ? t.isValid : e.isValid, o = {
      brokenRules: r,
      isValid: a,
      key: n.key,
      newData: n.data,
      oldData: this._editingController._getOldData(n.key),
      promise: null,
      errorText: this.getHiddenValidatorsErrorText(r)
    };
    return this.executeAction("onRowValidating", o), ge(Nt(o.promise)).always(() => {
      e.isValid = o.isValid, e.errorText = o.errorText, i.resolve(o);
    }), i.promise();
  },
  getHiddenValidatorsErrorText(e) {
    const t = [];
    return B(e, (i, n) => {
      const {
        column: r
      } = n, a = r && r.groupIndex !== void 0 && !r.showWhenGrouped, o = r && r.visible;
      !n.validator.$element().parent().length && (!o || a) && t.push(n.message);
    }), t.join(", ");
  },
  validate(e) {
    let t = !0;
    const i = this._editingController, n = new U(), r = [], a = i.getEditMode();
    if (e = e || a === "row", this._isValidationInProgress)
      return n.resolve(!1).promise();
    if (this._isValidationInProgress = !0, e) {
      i.addDeferred(n);
      const o = i.getChanges();
      B(o, (s, {
        type: l,
        key: u
      }) => {
        if (l !== "remove") {
          const d = this._getValidationData(u, !0), c = this.validateGroup(d);
          r.push(c), c.done((h) => {
            d.validated = !0, t = t && h.isValid;
          });
        }
      });
    } else if (this._currentCellValidator) {
      const o = this.validateGroup(this._currentCellValidator._findGroup());
      r.push(o), o.done((s) => {
        t = s.isValid;
      });
    }
    return ge(...r).done(() => {
      this._isValidationInProgress = !1, n.resolve(t);
    }), n.promise();
  },
  validateGroup(e) {
    const t = new U(), i = e && Ze.getGroupConfig(e);
    let n;
    return i != null && i.validators.length && (this.resetRowValidationResults(e), n = Ze.validateGroup(e)), ge((n == null ? void 0 : n.complete) || n).done((r) => {
      ge(this._rowValidating(e, r)).done(t.resolve);
    }), t.promise();
  },
  isRowDataModified: (e) => !$i(e.data),
  updateValidationState(e) {
    const t = this._editingController.getEditMode(), {
      key: i
    } = e, n = this._getValidationData(i, !0);
    if (fO.includes(t))
      n.isValid = !0;
    else {
      if (e.type === "insert" && !this.isRowDataModified(e)) {
        n.isValid = !0;
        return;
      }
      if (this.setDisableApplyValidationResults(!0), Ze.getGroupConfig(n)) {
        const a = Ze.validateGroup(n);
        ge(a.complete || a).done((o) => {
          n.isValid = o.isValid, n.brokenRules = o.brokenRules;
        });
      } else
        (!n.brokenRules || !n.brokenRules.length) && (n.isValid = !0);
      this.setDisableApplyValidationResults(!1);
    }
  },
  setValidator(e) {
    this._currentCellValidator = e;
  },
  renderCellPendingIndicator(e) {
    let t = e.find(".dx-pending-indicator");
    if (!t.length) {
      const i = e;
      t = g("<div>").appendTo(i).addClass("dx-pending-indicator"), this._createComponent(t, bi), e.addClass("dx-validation-pending");
    }
  },
  disposeCellPendingIndicator(e) {
    const t = e.find(".dx-pending-indicator");
    if (t.length) {
      const i = bi.getInstance(t);
      i && (i.dispose(), i.$element().remove()), e.removeClass("dx-validation-pending");
    }
  },
  validationStatusChanged(e) {
    const {
      validator: t
    } = e, i = t.option("validationGroup"), {
      column: n
    } = t.option("dataGetter")();
    this.updateCellValidationResult({
      rowKey: i.key,
      columnIndex: n.index,
      validationResult: e
    });
  },
  validatorInitialized(e) {
    e.component.on("validating", this.validationStatusChanged.bind(this)), e.component.on("validated", this.validationStatusChanged.bind(this));
  },
  validatorDisposing(e) {
    const t = e.component, i = t.option("validationGroup"), {
      column: n
    } = t.option("dataGetter")(), r = this.getCellValidationResult({
      rowKey: i == null ? void 0 : i.key,
      columnIndex: n.index
    });
    Fs(r) && r.status === fi.pending && this.cancelCellValidationResult({
      change: i,
      columnIndex: n.index
    });
  },
  applyValidationResult(e, t) {
    const {
      validator: i
    } = t, n = i.option("validationGroup"), {
      column: r
    } = i.option("dataGetter")();
    if (t.brokenRules && t.brokenRules.forEach((a) => {
      a.columnIndex = r.index, a.column = r;
    }), e) {
      const a = this.getCellValidationResult({
        rowKey: n.key,
        columnIndex: r.index
      }), o = Fs(a) && a.disabledPendingId === t.id;
      if (this._disableApplyValidationResults || o)
        return;
      if (t.status === fi.invalid) {
        const l = e.find(":focus");
        Or(l) || (w.trigger(l, "focus"), w.trigger(l, je.down));
      }
      const s = !r.editCellTemplate && this.getController("editorFactory").getEditorInstance(e);
      t.status === fi.pending ? s ? s.option("validationStatus", fi.pending) : this.renderCellPendingIndicator(e) : s ? s.option("validationStatus", fi.valid) : this.disposeCellPendingIndicator(e), e.toggleClass(this.addWidgetPrefix("invalid"), t.status === fi.invalid);
    }
  },
  _syncInternalEditingData(e) {
    var t;
    const i = this._editingController, n = i.getChangeByKey(e.key), r = i._getOldData(e.key), a = (t = e.row) === null || t === void 0 ? void 0 : t.oldData;
    n && a && !r && i._addInternalData({
      key: e.key,
      oldData: a
    });
  },
  createValidator(e, t) {
    var i, n;
    const r = this._editingController, {
      column: a
    } = e;
    let {
      showEditorAlways: o
    } = a;
    if (x(a.command) || !a.validationRules || !Array.isArray(a.validationRules) || !a.validationRules.length)
      return;
    let l = r.getIndexByKey(e.key, r.getChanges()) > -1;
    if (!l) {
      if (!o) {
        const c = this.getController("columns");
        o = ((c == null ? void 0 : c.getVisibleColumns()) || []).some((p) => p.showEditorAlways);
      }
      const u = et(this.option("editing.editRowKey"), e.key), d = r.isCellOrBatchEditMode() && r.allowUpdating({
        row: e.row
      });
      l = u || d && o, d && o && r._addInternalData({
        key: e.key,
        oldData: (n = (i = e.row) === null || i === void 0 ? void 0 : i.oldData) !== null && n !== void 0 ? n : e.data
      });
    }
    if (l) {
      if (t && !t.length) {
        $e.log("E1050");
        return;
      }
      this._syncInternalEditingData(e);
      const u = this._getValidationData(e.key, !0), d = () => {
        const p = r.getChangeByKey(u == null ? void 0 : u.key), f = a.calculateCellValue((p == null ? void 0 : p.data) || {});
        return f !== void 0 ? f : e.value;
      }, c = t && t.hasClass("dx-widget");
      t && t.addClass(this.addWidgetPrefix("validator"));
      const h = new jc(t || g("<div>"), {
        name: a.caption,
        validationRules: T(!0, [], a.validationRules),
        validationGroup: u,
        adapter: c ? null : {
          getValue: d,
          applyValidationResults: (p) => {
            this.applyValidationResult(t, p);
          }
        },
        dataGetter() {
          const p = u == null ? void 0 : u.key, f = r.getChangeByKey(p), v = r._getOldData(p);
          return {
            data: yr(v, f == null ? void 0 : f.data),
            column: a
          };
        },
        onInitialized: this.validatorInitialized.bind(this),
        onDisposing: this.validatorDisposing.bind(this)
      });
      if (c) {
        const p = h.option("adapter");
        if (p) {
          const f = p.bypass, v = () => e.row.isNewRow && !this._isValidationInProgress && !r.isCellModified(e);
          p.getValue = d, p.validationRequestsCallbacks = [], p.bypass = () => f.call(p) || v();
        }
      }
      return h;
    }
  },
  setDisableApplyValidationResults(e) {
    this._disableApplyValidationResults = e;
  },
  getDisableApplyValidationResults() {
    return this._disableApplyValidationResults;
  },
  isCurrentValidatorProcessing({
    rowKey: e,
    columnIndex: t
  }) {
    return this._currentCellValidator && et(this._currentCellValidator.option("validationGroup").key, e) && this._currentCellValidator.option("dataGetter")().column.index === t;
  },
  validateCell(e) {
    const t = {
      rowKey: e.option("validationGroup").key,
      columnIndex: e.option("dataGetter")().column.index
    };
    let i = this.getCellValidationResult(t);
    const n = Fs(i), r = e.option("adapter");
    if (!n)
      i = e.validate();
    else {
      const o = r.getValue();
      et(o, i.value) || (i = e.validate());
    }
    const a = new U();
    return n && i.status === fi.pending && (this.updateCellValidationResult(t), r.applyValidationResults(i)), ge(i.complete || i).done((o) => {
      n && r.applyValidationResults(o), a.resolve(o);
    }), a.promise();
  },
  updateCellValidationResult({
    rowKey: e,
    columnIndex: t,
    validationResult: i
  }) {
    const n = this._getValidationData(e);
    if (!n)
      return;
    n.validationResults || (n.validationResults = {});
    let r;
    if (i) {
      if (r = T({}, i), n.validationResults[t] = r, i.status === fi.pending && (this._editingController.getEditMode() === "cell" && (r.deferred = new U(), r.complete.always(() => {
        r.deferred.resolve();
      }), this._editingController.addDeferred(r.deferred)), this._disableApplyValidationResults)) {
        r.disabledPendingId = i.id;
        return;
      }
    } else
      r = n.validationResults[t];
    r && r.disabledPendingId && delete r.disabledPendingId;
  },
  getCellValidationResult({
    rowKey: e,
    columnIndex: t
  }) {
    var i;
    const n = this._getValidationData(e, !0);
    return (i = n == null ? void 0 : n.validationResults) === null || i === void 0 ? void 0 : i[t];
  },
  removeCellValidationResult({
    change: e,
    columnIndex: t
  }) {
    const i = this._getValidationData(e == null ? void 0 : e.key);
    i && i.validationResults && (this.cancelCellValidationResult({
      change: e,
      columnIndex: t
    }), delete i.validationResults[t]);
  },
  cancelCellValidationResult({
    change: e,
    columnIndex: t
  }) {
    const i = this._getValidationData(e.key);
    if (e && i.validationResults) {
      const n = i.validationResults[t];
      n && (n.deferred && n.deferred.reject("cancel"), i.validationResults[t] = "cancel");
    }
  },
  resetRowValidationResults(e) {
    e && (e.validationResults && delete e.validationResults, delete e.validated);
  },
  isInvalidCell({
    rowKey: e,
    columnIndex: t
  }) {
    const i = this.getCellValidationResult({
      rowKey: e,
      columnIndex: t
    });
    return Fs(i) && i.status === fi.invalid;
  },
  getCellValidator({
    rowKey: e,
    columnIndex: t
  }) {
    const i = this._getValidationData(e), n = i && Ze.getGroupConfig(i), r = n && n.validators;
    return r && r.filter((a) => {
      const {
        column: o
      } = a.option("dataGetter")();
      return o ? o.index === t : !1;
    })[0];
  },
  setCellValidationStatus(e) {
    const t = this.getCellValidationResult({
      rowKey: e.key,
      columnIndex: e.column.index
    });
    x(t) ? e.validationStatus = t !== "cancel" ? t.status : "cancel" : delete e.validationStatus;
  }
}), MX = {
  defaultOptions: () => ({
    editing: {
      texts: {
        validationCancelChanges: q.format("dxDataGrid-validationCancelChanges")
      }
    }
  }),
  controllers: {
    validating: PX
  },
  extenders: {
    controllers: {
      editing: {
        _addChange(e) {
          const t = this.callBase.apply(this, arguments), i = this.getController("validating");
          return t && e.type !== "remove" && i.updateValidationState(t), t;
        },
        _handleChangesChange(e) {
          this.callBase.apply(this, arguments);
          const t = this.getController("validating");
          e.value.forEach((i) => {
            t._getValidationData(i.key) === void 0 && t.updateValidationState(i);
          });
        },
        _updateRowAndPageIndices() {
          const e = this, t = e.getView("rowsView").getTopVisibleItemIndex();
          let i = t;
          B(e.getChanges(), (n, {
            key: r,
            type: a
          }) => {
            const o = this.getController("validating")._getValidationData(r);
            o && !o.isValid && o.pageIndex !== e._pageIndex && (o.pageIndex = e._pageIndex, a === "insert" ? o.rowIndex = t : o.rowIndex = i, i++);
          });
        },
        _getValidationGroupsInForm(e) {
          return {
            validationGroup: this.getController("validating")._getValidationData(e.key, !0)
          };
        },
        _validateEditFormAfterUpdate(e, t) {
          t && this._editForm && this._editForm.validate(), this.callBase.apply(this, arguments);
        },
        _prepareEditCell(e) {
          const t = this.callBase.apply(this, arguments), i = this.getController("validating");
          return t && e.column.showEditorAlways && i.updateValidationState({
            key: e.key
          }), t;
        },
        processItems(e, t) {
          const i = this.getChanges(), n = this.getController("data"), r = this.getController("validating");
          e = this.callBase(e, t);
          const a = e.length, o = function(s, l) {
            const u = {
              key: s.key
            };
            if (function(h, p) {
              let f = -1;
              const v = h.type === "insert", {
                key: m
              } = h;
              return B(p, (C, b) => {
                if (et(m, v ? b.key : n.keyOf(b)))
                  return f = C, !1;
              }), f;
            }(s, e) >= 0)
              return;
            l.rowIndex = l.rowIndex > a ? l.rowIndex % a : l.rowIndex;
            const {
              rowIndex: c
            } = l;
            u[rS] = 1, e.splice(c, 0, u);
          };
          return this.getEditMode() === "batch" && t !== "prepend" && t !== "append" && i.forEach((s) => {
            const {
              key: l
            } = s, u = r._getValidationData(l);
            u && s.type && u.pageIndex === this._pageIndex && (s == null ? void 0 : s.pageIndex) !== this._pageIndex && o(s, u);
          }), e;
        },
        processDataItem(e) {
          const t = e.data[rS], i = t ? e.data.key : e.key;
          if (this.getEditMode() === "batch" && t && i) {
            const r = this.getChanges(), a = ae.getIndexByKey(i, r);
            if (a >= 0) {
              const o = r[a];
              if (o.type !== "insert") {
                const s = this._getOldData(o.key);
                e.data = T(!0, {}, s, o.data), e.key = i;
              }
            }
          }
          this.callBase.apply(this, arguments);
        },
        _createInvisibleColumnValidators(e) {
          const t = this, i = this.getController("validating"), n = this.getController("columns"), r = n.getColumns(), a = n.getInvisibleColumns().filter((u) => !u.isBand), o = n.getGroupColumns().filter((u) => !u.showWhenGrouped && a.indexOf(u) === -1), s = [], l = (u, d) => this._dataController.getRowIndexByKey(d) >= 0 && a.indexOf(u) < 0;
          return a.push(...o), fO.includes(this.getEditMode()) || B(r, (u, d) => {
            e.forEach((c) => {
              let h;
              if (!l(d, c.key)) {
                if (c.type === "insert")
                  h = c.data;
                else if (c.type === "update") {
                  const p = t._getOldData(c.key);
                  h = yr(p, c.data);
                }
                if (h) {
                  const p = i.createValidator({
                    column: d,
                    key: c.key,
                    value: d.calculateCellValue(h)
                  });
                  p && s.push(p);
                }
              }
            });
          }), function() {
            s.forEach((u) => {
              u.dispose();
            });
          };
        },
        _beforeSaveEditData(e, t) {
          let i = this.callBase.apply(this, arguments);
          const n = this.getController("validating"), r = n._getValidationData(e == null ? void 0 : e.key);
          if (e) {
            const a = e.type === "remove" || r.isValid;
            i = i || !a;
          } else {
            const a = this._createInvisibleColumnValidators(this.getChanges());
            i = new U(), this.executeOperation(i, () => {
              n.validate(!0).done((o) => {
                switch (a(), this._updateRowAndPageIndices(), this.getEditMode()) {
                  case "cell":
                    o || this._focusEditingCell();
                    break;
                  case "batch":
                    o || (this._resetEditRowKey(), this._resetEditColumnName(), this.getController("data").updateItems());
                }
                i.resolve(!o);
              });
            });
          }
          return i.promise ? i.promise() : i;
        },
        _beforeEditCell(e, t, i) {
          const n = this.callBase(e, t, i);
          if (this.getEditMode() === "cell") {
            const r = this._rowsView._getCellElement(e, t), a = r && r.data("dxValidator"), o = r && r.closest(".dx-row").data("options"), s = a && a.option("adapter").getValue();
            if (a && aS(s, o)) {
              const l = this.getController("validating"), u = new U();
              return ge(l.validateCell(a), n).done((d, c) => {
                u.resolve(d.status === fi.valid && c);
              }), u.promise();
            }
            if (!a)
              return n;
          }
        },
        _afterSaveEditData(e) {
          let t;
          const i = this.getEditMode() === "cell";
          if (B(this.getChanges(), (n, r) => {
            const a = this._showErrorRow(r);
            t = t || a;
          }), t) {
            const n = this._rowsView.getScrollable();
            n && (n.update(), n.scrollToElement(t));
          }
          if (e && i && this._needUpdateRow()) {
            const n = this.getEditRowIndex();
            this._dataController.updateItems({
              changeType: "update",
              rowIndices: [n]
            }), this._focusEditingCell();
          } else if (!e) {
            let n = !0;
            i && (n = !(this.getController("columns").getColumns().filter((o) => {
              var s;
              return o.showEditorAlways && ((s = o.validationRules) === null || s === void 0 ? void 0 : s.length) > 0;
            }).length > 0)), n && this.getController("validating").initValidationState();
          }
        },
        _handleDataChanged(e) {
          const t = this.getController("validating")._validationState;
          this.option("scrolling.mode") === "standard" && this.resetRowAndPageIndices(), e.changeType === "prepend" && B(t, (i, n) => {
            n.rowIndex += e.items.length;
          }), this.callBase(e);
        },
        resetRowAndPageIndices() {
          const e = this.getController("validating")._validationState;
          B(e, (t, i) => {
            i.pageIndex !== this._pageIndex && (delete i.pageIndex, delete i.rowIndex);
          });
        },
        _beforeCancelEditData() {
          this.getController("validating").initValidationState(), this.callBase();
        },
        _showErrorRow(e) {
          let t;
          const i = this.getController("errorHandling"), n = this.getController("data").items(), r = this.getIndexByKey(e.key, n), a = this.getController("validating")._getValidationData(e.key);
          if (!(a != null && a.isValid) && (a != null && a.errorText) && r >= 0)
            return t = this.getPopupContent(), i && i.renderErrorRow(a == null ? void 0 : a.errorText, r, t);
        },
        updateFieldValue(e) {
          const t = this.getController("validating"), i = new U();
          return t.removeCellValidationResult({
            change: this.getChangeByKey(e.key),
            columnIndex: e.column.index
          }), this.callBase.apply(this, arguments).done(() => {
            const n = t.getCellValidator({
              rowKey: e.key,
              columnIndex: e.column.index
            });
            ge(n && t.validateCell(n)).done((r) => {
              this.getController("editorFactory").refocus(), i.resolve(r);
            });
          }), i.promise();
        },
        highlightDataCell(e, t) {
          this.callBase.apply(this, arguments);
          const i = this.getController("validating");
          i.setCellValidationStatus(t);
          const n = !!t.setValue, r = this.isCellModified(t), a = x(t.validationStatus);
          if (r && t.column.setCellValue || n && !r && !(t.row.isNewRow || !a)) {
            const s = e.data("dxValidator");
            s && ge(this.getController("validating").validateCell(s)).done(() => {
              i.setCellValidationStatus(t);
            });
          }
        },
        getChangeByKey(e) {
          const t = this.getChanges();
          return t[ae.getIndexByKey(e, t)];
        },
        isCellModified(e) {
          const t = this.callBase(e), i = this.getChangeByKey(e.key), n = !!e.row && this.getController("validating").isInvalidCell({
            rowKey: e.key,
            columnIndex: e.column.index
          });
          return t || this.getController("validating")._rowIsValidated(i) && n;
        }
      },
      editorFactory: {
        _showRevertButton(e) {
          var t;
          let i = (t = this._revertTooltip) === null || t === void 0 ? void 0 : t.$element();
          if (!e || !e.length) {
            i == null || i.remove(), this._revertTooltip = void 0;
            return;
          }
          if (e.find(i).length)
            return;
          const n = e.closest("." + this.addWidgetPrefix("content")), r = this.addWidgetPrefix("revert-tooltip");
          i == null || i.remove(), i = g("<div>").addClass(r).appendTo(e);
          const a = {
            animation: null,
            visible: !0,
            width: "auto",
            height: "auto",
            shading: !1,
            container: n,
            propagateOutsideClick: !0,
            hideOnOutsideClick: !1,
            wrapperAttr: {
              class: r
            },
            contentTemplate: () => {
              const o = g("<div>").addClass("dx-revert-button"), s = {
                icon: "revert",
                hint: this.option("editing.texts.validationCancelChanges"),
                onClick: () => {
                  this._editingController.cancelEditData();
                }
              };
              return new Gt(o, s).$element();
            },
            position: {
              my: "left top",
              at: "right top",
              offset: "1 0",
              collision: "flip",
              boundaryOffset: "0 0",
              boundary: this._rowsView.element(),
              of: e
            },
            onPositioned: this._positionedHandler.bind(this)
          };
          this._revertTooltip = new tn(i, a);
        },
        _hideFixedGroupCell(e, t) {
          let i, n;
          const r = this._rowsView.isFixedColumns(), a = this._editingController.isFormOrPopupEditMode();
          if (r && !a) {
            const o = e.closest(".dx-row").next().data("options");
            o && o.rowType === "group" && (i = g(this._rowsView.getRowElement(o.rowIndex)).last(), n = i.find(".dx-group-cell"), n.length && n.get(0).style.visibility !== "hidden" && (n.css("visibility", "hidden"), t.onDisposing = function() {
              n.css("visibility", "");
            }));
          }
        },
        _positionedHandler(e, t) {
          if (!e.component.__skipPositionProcessing) {
            const i = g(e.element).hasClass(this.addWidgetPrefix("revert-tooltip")), n = !i && this._rowsView.updateFreeSpaceRowHeight(), r = this._normalizeValidationMessagePositionAndMaxWidth(e, i, t);
            e.component.__skipPositionProcessing = !!(n || r), r ? e.component.option(r) : n && e.component.repaint();
          }
        },
        _showValidationMessage(e, t, i) {
          const n = e.find(".dx-dropdowneditor-overlay").data("dxPopup"), r = n && n.option("visible"), a = r ? "top right" : "top " + i, o = r ? "top left" : "bottom " + i, s = e.closest("." + this.addWidgetPrefix("content"));
          let l = "";
          t && t.forEach((h) => {
            l += (l.length ? "<br/>" : "") + d_(h);
          });
          const u = this.addWidgetPrefix("invalid-message");
          this._rowsView.element().find("." + u).remove();
          const d = g("<div>").addClass("dx-invalid-message").addClass("dx-invalid-message-always").addClass(u).html(l).appendTo(e), c = {
            container: s,
            shading: !1,
            width: "auto",
            height: "auto",
            visible: !0,
            animation: !1,
            propagateOutsideClick: !0,
            hideOnOutsideClick: !1,
            wrapperAttr: {
              class: "dx-invalid-message dx-invalid-message-always " + u
            },
            position: {
              collision: "flip",
              boundary: this._rowsView.element(),
              boundaryOffset: "0 0",
              offset: {
                x: 0,
                y: !r && lt.mozilla ? -1 : 0
              },
              my: a,
              at: o,
              of: e
            },
            onPositioned: (h) => {
              this._positionedHandler(h, r), this._shiftValidationMessageIfNeed(h.component.$content(), e);
            }
          };
          this._hideFixedGroupCell(e, c), new tn(d, c);
        },
        _hideValidationMessage() {
          var e;
          const t = (e = this._rowsView.element()) === null || e === void 0 ? void 0 : e.find(this._getValidationMessagesSelector());
          t == null || t.remove();
        },
        _normalizeValidationMessagePositionAndMaxWidth(e, t, i) {
          const n = this._columnsController.getFixedColumns();
          if (!n || !n.length)
            return;
          let r;
          const a = !t && function(c, h) {
            const p = g(h).closest("tr").index(), f = g(c._rowsView.getRowElement(p)).first().children().filter(":not(.dx-hidden-cell)");
            return c._rowsView._getWidths(f).reduce((v, m) => v + m, 0);
          }(this, e.element), o = e.component.$content(), s = Ge(o, !0), l = !t && s > a, u = this._rowsView.getCellIndex(g(e.element).closest("td")), d = function(c) {
            let h, p;
            return c.some((f, v) => {
              if (f.command === "transparent")
                return h = v === 0 ? -1 : v, p = v === c.length - 1 ? -1 : v + f.colspan - 1, !0;
            }), {
              startColumnIndex: h,
              endColumnIndex: p
            };
          }(n);
          return !t && (u === d.startColumnIndex || l) ? r = {
            collision: "none flip",
            my: "top left",
            at: i ? "top right" : "bottom left"
          } : u === d.endColumnIndex && (r = {
            collision: "none flip",
            my: "top right",
            at: t || i ? "top left" : "bottom right"
          }, t && (r.offset = "-1 0")), r && {
            position: r,
            maxWidth: l ? a - 2 : void 0
          };
        },
        _shiftValidationMessageIfNeed(e, t) {
          const i = this._revertTooltip && this._revertTooltip.$content();
          if (!i)
            return;
          const n = e.offset(), r = i.offset();
          if (n.top === r.top && n.left + Ae(e) > r.left) {
            const a = Ae(i) + 2;
            e.css("left", r.left < t.offset().left ? -a : a);
          }
        },
        _getRevertTooltipsSelector() {
          return ".dx-editor-cell ." + this.addWidgetPrefix("revert-tooltip");
        },
        _getValidationMessagesSelector() {
          const e = this.addWidgetPrefix("invalid-message");
          return `.dx-editor-cell .${e}, .dx-cell-modified .${e}`;
        },
        init() {
          this.callBase(), this._editingController = this.getController("editing"), this._columnsController = this.getController("columns"), this._rowsView = this.getView("rowsView");
        },
        loseFocus(e) {
          e || this.getController("validating").setValidator(null), this.callBase();
        },
        updateCellState(e, t, i) {
          var n;
          const r = e == null ? void 0 : e.closest(this._getFocusCellSelector()), a = r != null && r.is("td") ? r : null, o = r == null ? void 0 : r.closest(".dx-row").data("options"), s = o ? this.getController("editing").getChangeByKey(o.key) : null, l = a && this.getController("columns").getVisibleColumns()[a.index()], u = ((n = s == null ? void 0 : s.data) === null || n === void 0 ? void 0 : n[l == null ? void 0 : l.name]) !== void 0 && !this._editingController.isSaving();
          if (this._editingController.getEditMode() === "cell" && ((t == null ? void 0 : t.status) === fi.invalid || u ? this._showRevertButton(r) : this._revertTooltip && this._revertTooltip.$element().remove()), t && t.status === fi.invalid && a && l && t && t.brokenRules) {
            const c = [];
            t.brokenRules.forEach((h) => {
              h.message && c.push(h.message);
            }), c.length && this._showValidationMessage(r, c, l.alignment || "left");
          }
          !i && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight();
        },
        focus(e, t) {
          if (!arguments.length)
            return this.callBase();
          if (this._hideValidationMessage(), e != null && e.hasClass("dx-row") || e != null && e.hasClass("dx-master-detail-cell"))
            return this.callBase(e, t);
          const i = e == null ? void 0 : e.closest(this._getFocusCellSelector()), {
            callBase: n
          } = this, r = i && (i.data("dxValidator") || e.find("." + this.addWidgetPrefix("validator")).eq(0).data("dxValidator")), a = i && i.closest(".dx-row").data("options"), o = this.getController("editing"), s = a ? o.getChangeByKey(a.key) : null, l = this.getController("validating");
          let u;
          if (r) {
            l.setValidator(r);
            const d = r.option("adapter").getValue();
            if (aS(d, a) || l._rowIsValidated(s))
              return o.waitForDeferredOperations().done(() => {
                ge(l.validateCell(r)).done((c) => {
                  u = c;
                  const {
                    column: h
                  } = u.validator.option("dataGetter")();
                  s && h && !l.isCurrentValidatorProcessing({
                    rowKey: s.key,
                    columnIndex: h.index
                  }) || (u.status === fi.invalid && (t = !0), this.updateCellState(e, u, t), n.call(this, e, t));
                });
              }), this.callBase(e, t);
          }
          return this.updateCellState(e, u, t), this.callBase(e, t);
        },
        getEditorInstance(e) {
          const t = e.find(".dx-texteditor").eq(0);
          return ae.getWidgetInstance(t);
        }
      },
      data: {
        _getValidationStatus(e) {
          return (Fs(e) ? e.status : e) || fi.valid;
        },
        _isCellChanged(e, t, i, n, r) {
          var a, o;
          const s = (a = e.cells) === null || a === void 0 ? void 0 : a[n], l = this._getValidationStatus({
            status: s == null ? void 0 : s.validationStatus
          }), u = this.getController("validating"), d = u.getCellValidationResult({
            rowKey: e.key,
            columnIndex: n
          }), c = u._getValidationData(e.key), h = this._getValidationStatus(d), p = JSON.stringify(t.modifiedValues) !== JSON.stringify(e.modifiedValues), f = l !== h && p, v = g(s == null ? void 0 : s.cellElement).hasClass(this.addWidgetPrefix("invalid")), m = (o = s == null ? void 0 : s.column.validationRules) === null || o === void 0 ? void 0 : o.length, C = e.isEditing !== t.isEditing && m, b = f || c.isValid && v;
          return C || b ? !0 : this.callBase.apply(this, arguments);
        }
      }
    },
    views: {
      rowsView: {
        updateFreeSpaceRowHeight(e) {
          const t = this;
          let i, n, r;
          const a = t.element(), o = a && a.find(`.${t.addWidgetPrefix("invalid-message")} .dx-overlay-content`);
          if (t.callBase(e), o && o.length && (i = t._getRowElements(), r = t._getFreeSpaceRowElements(e), n = r.first(), n && i.length === 1 && (!n.is(":visible") || Ne(o) > Ne(n))))
            return r.show(), Dr(r, Ne(o)), !0;
        },
        _formItemPrepared(e, t) {
          this.callBase.apply(this, arguments), oi(() => {
            const i = t.find(".dx-widget").first();
            i.length && !i.children().length || this.getController("validating").createValidator(e, i);
          });
        },
        _cellPrepared(e, t) {
          this.getController("editing").isFormOrPopupEditMode() || this.getController("validating").createValidator(t, e), this.callBase.apply(this, arguments);
        },
        _restoreErrorRow(e) {
          const t = this.getController("editing");
          t && t.hasChanges() && this._getRowElements(e).each((i, n) => {
            const r = g(n).data("options");
            if (r) {
              const a = t.getChangeByKey(r.key);
              a && t._showErrorRow(a);
            }
          });
        }
      }
    }
  }
};
xe.registerModule("validating", MX);
var af = "scrolling.legacyMode", gO = (e) => e.option("scrolling.loadTwoPagesOnStart") || e._controller.isVirtual() || e._controller.getViewportItemIndex() > 0, gd = (e) => e._cache.length ? e._cache[0].pageIndex : -1, Ng = (e) => e._cache.length ? e._cache[e._cache.length - 1].pageIndex : -1, Jd = (e, t, i) => {
  e._isChangedFiring = !0, t(i), e._isChangedFiring = !1;
}, oS = (e, t, i) => {
  if (e._isDelayChanged)
    return e._isDelayChanged = !1, Jd(e, t, i), !0;
}, LX = (e) => {
  var t = e._dataOptions.pageSize(), i = e.option("scrolling.preventPreload");
  if (i)
    return 0;
  var n = e._controller.viewportSize();
  if (e._controller.isVirtualMode() && e.option("scrolling.removeInvisiblePages")) {
    n = 0;
    for (var r = e._controller.viewportSize() * e._controller.viewportItemSize(), a = e._controller.getContentOffset(), o = e._controller.getViewportPosition(), s = e._controller.virtualItemsCount(), l = e._dataOptions.totalItemsCount(), u = s.begin; u < l && !(a >= o + r); u++) {
      var d = e._controller.getItemSizes()[u] || e._controller.viewportItemSize();
      a += d, a >= o && n++;
    }
  }
  return t && n > 0 ? Math.ceil(n / t) : 1;
}, _d = (e, t) => {
  var i = e.option("scrolling.preloadEnabled"), n = LX(e), r = e._controller.isAppendMode();
  return n && (t ? n = i ? 1 : 0 : (i && n++, (r || !gO(e)) && n--)), n;
}, VX = (e) => {
  var t = -1, i = gd(e), n = e._dataOptions;
  if (i < 0)
    t = e._pageIndex;
  else if (!e._cache[e._pageIndex - i])
    t = e._pageIndex;
  else if (i >= 0 && e._controller.viewportSize() >= 0) {
    if (i > 0) {
      var r = Ng(e) + 1 === n.pageCount() && e._cache.length < _d(e) + 1, a = r || e._pageIndex === i && _d(e, !0);
      a && (t = i - 1);
    }
    if (t < 0) {
      var o = i + e._cache.length <= e._pageIndex + _d(e);
      o && (t = i + e._cache.length);
    }
  }
  return e._loadingPageIndexes[t] && (t = -1), t;
}, NX = (e, t) => {
  var i = e._dataOptions;
  if (t === e.pageIndex() || !i.isLoading() && t < i.pageCount() || !i.hasKnownLastPage() && t === i.pageCount())
    return i.pageIndex(t), e._loadingPageIndexes[t] = !0, ge(i.load()).always(() => {
      e._loadingPageIndexes[t] = !1;
    });
}, sS = (e, t, i, n, r) => {
  var a = e._dataOptions, o = a.items().slice(), s = De(i) ? i : void 0, l = i === "prepend", u = a.viewportItems();
  i && Te(i) && !e._isDelayChanged && (s = {
    changeType: i,
    items: o
  }, r && (s.removeCount = r.itemsCount, s.removeCount && a.correctCount && (s.removeCount = a.correctCount(u, s.removeCount, l))));
  var d = r ? r.itemsLength : 0;
  d && a.correctCount && (d = a.correctCount(u, d, l)), i === "append" ? (u.push.apply(u, o), r && u.splice(0, d)) : l ? (u.unshift.apply(u, o), r && u.splice(-d)) : e._dataOptions.viewportItems(o), a.updateLoading(), e._lastPageIndex = e.pageIndex(), e._isDelayChanged = n, n || Jd(e, t, s);
};
class $X {
  constructor(t, i) {
    this._controller = t, this._dataOptions = i, this._pageIndex = this._lastPageIndex = i.pageIndex(), this._cache = [], this._loadingPageIndexes = {};
  }
  option() {
    return this._controller.option.apply(this._controller, arguments);
  }
  viewportItemIndexChanged(t) {
    var i = this._dataOptions.pageSize(), n = this._dataOptions.pageCount(), r = this._controller.isVirtualMode(), a = this._controller.isAppendMode(), o = this._dataOptions.totalItemsCount(), s;
    if (i && (r || a) && o >= 0) {
      var l = this._controller.viewportSize();
      if (l && t + l >= o && !this._controller.isVirtual())
        if (this._dataOptions.hasKnownLastPage()) {
          s = n - 1;
          var u = o % i;
          s > 0 && u > 0 && u < l && s--;
        } else
          s = n;
      else {
        s = Math.floor(t / i);
        var d = n - 1;
        s = Math.max(s, 0), s = Math.min(s, d);
      }
      return this.pageIndex(s), this.load();
    }
  }
  pageIndex(t) {
    var i = this._controller.isVirtualMode(), n = this._controller.isAppendMode();
    return this.option(af) !== !1 && (i || n) ? (t !== void 0 && (this._pageIndex = t), this._pageIndex) : this._dataOptions.pageIndex(t);
  }
  beginPageIndex(t) {
    var i = gd(this);
    return i < 0 && (i = t !== void 0 ? t : this.pageIndex()), i;
  }
  endPageIndex() {
    var t = Ng(this);
    return t > 0 ? t : this._lastPageIndex;
  }
  pageSize() {
    return this._dataOptions.pageSize();
  }
  load() {
    var t = this._dataOptions, i, n = this._controller.isVirtualMode(), r = this._controller.isAppendMode();
    if (this.option(af) !== !1 && (n || r)) {
      var a = VX(this);
      if (a >= 0) {
        var o = NX(this, a);
        o && (i = new U(), o.done(() => {
          var s = this._delayDeferred;
          s ? s.done(i.resolve).fail(i.reject) : i.resolve();
        }).fail(i.reject), t.updateLoading());
      }
    } else
      i = t.load();
    return !i && this._lastPageIndex !== this.pageIndex() && this._dataOptions.onChanged({
      changeType: "pageIndex"
    }), i || new U().resolve();
  }
  loadIfNeed() {
    var t = this._controller.isVirtualMode(), i = this._controller.isAppendMode();
    if ((t || i) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {
      var n = this._controller.getViewportPosition();
      n > 0 ? this._controller._setViewportPositionCore(n) : this.load();
    }
  }
  handleDataChanged(t, i) {
    var n = this._dataOptions, r = this._cache.length, a, o, s = this._controller.isVirtualMode(), l = this._controller.isAppendMode();
    if (i && i.changes)
      Jd(this, t, i);
    else if (this.option(af) !== !1 && (s || l)) {
      var u = gd(this);
      if (u >= 0 && (s && u + this._cache.length !== n.pageIndex() && u - 1 !== n.pageIndex() && (r = 0, this._cache = []), l)) {
        if (n.pageIndex() === 0)
          this._cache = [];
        else if (n.pageIndex() < Ng(this)) {
          Jd(this, t, {
            changeType: "append",
            items: []
          });
          return;
        }
      }
      var d = {
        pageIndex: n.pageIndex(),
        itemsLength: n.items(!0).length,
        itemsCount: this.itemsCount(!0)
      };
      this.option("scrolling.removeInvisiblePages") && s ? o = this._cache.length > Math.max(_d(this) + (this.option("scrolling.preloadEnabled") ? 1 : 0), 2) : oS(this, t, {
        isDelayed: !0
      });
      var c;
      u === n.pageIndex() + 1 ? (o && (c = this._cache.pop()), a = "prepend", this._cache.unshift(d)) : (o && (c = this._cache.shift()), a = "append", this._cache.push(d));
      var h = s && r === 0 && gO(this);
      sS(this, t, this._cache.length > 1 ? a : void 0, h, c), this._delayDeferred = this.load().done(() => {
        oS(this, t) && this.load();
      });
    } else
      sS(this, t, i);
  }
  getDelayDeferred() {
    return this._delayDeferred;
  }
  itemsCount(t) {
    var i = 0, n = this._controller.isVirtualMode();
    return !t && n ? this._cache.forEach((r) => {
      i += r.itemsCount;
    }) : i = this._dataOptions.itemsCount(), i;
  }
  virtualItemsCount() {
    var t = gd(this);
    t < 0 && (t = this._dataOptions.pageIndex());
    var i = t * this._dataOptions.pageSize(), n = this._cache.length * this._dataOptions.pageSize(), r = Math.max(0, this._dataOptions.totalItemsCount() - n - i);
    return {
      begin: i,
      end: r
    };
  }
  reset() {
    this._loadingPageIndexes = {}, this._cache = [];
  }
}
var HX = "infinite", _O = "virtual", Wu = "scrolling.legacyMode", lS = (e) => e.option("scrolling.mode") === _O || e._isVirtual, zX = (e) => e.option("scrolling.mode") === HX && !e._isVirtual;
function vO(e, t, i) {
  var n, r = [], a = [];
  i = i || e;
  function o(d) {
    var c = d.element ? d.$element() : d, h = en.offset(c);
    return h ? d.scrollTop() - (h.top - e.offset().top) : e.offset().top;
  }
  var s = {
    on: function(d, c, h) {
      d.on("scroll", h);
    },
    off: function(d, c, h) {
      d.off("scroll", h);
    }
  };
  function l(d) {
    var c = d.get(0).nodeName === "#document", h = d.get(0).nodeType === ke().Node.ELEMENT_NODE, p = d.data("dxScrollable"), f = s;
    if (!(!p && (p = c && g(ke()) || h && d.css("overflowY") === "auto" && d, f = w, !p))) {
      var v = function(m) {
        return function() {
          var C = m.scrollTop() - o(m);
          C = C > 0 ? C : 0, t(C);
        };
      }(p);
      f.on(p, "scroll", v), r.push(function(m) {
        var C = o(p), b = p.scrollTo ? "scrollTo" : "scrollTop";
        m - C >= 0 && p[b](m + C);
      }), a.push(function() {
        f.off(p, "scroll", v);
      });
    }
  }
  var u = (d) => {
    var c;
    return g((c = d.get(0).parentNode) !== null && c !== void 0 ? c : d.get(0).host);
  };
  for (n = i.parent(); n.length; n = u(n))
    l(n);
  return {
    scrollTo: function(d) {
      B(r, function(c, h) {
        h(d);
      });
    },
    dispose: function() {
      B(a, function(d, c) {
        c();
      });
    }
  };
}
var mO = ze.inherit(function() {
  var e = {
    ctor: function(t, i, n) {
      this._dataOptions = i, this.component = t, this._viewportSize = t.option(Wu) === !1 ? 15 : 0, this._viewportItemSize = 20, this._viewportItemIndex = 0, this._position = 0, this._isScrollingBack = !1, this._contentSize = 0, this._itemSizes = {}, this._sizeRatio = 1, this._isVirtual = n, this.positionChanged = qe(), this._dataLoader = new $X(this, this._dataOptions);
    },
    getItemSizes: function() {
      return this._itemSizes;
    },
    option: function() {
      return this.component.option.apply(this.component, arguments);
    },
    isVirtual: function() {
      return this._isVirtual;
    },
    virtualItemsCount: function() {
      if (lS(this)) {
        var t = this._dataOptions, i = t.totalItemsCount();
        if (this.option(Wu) === !1 && i !== -1) {
          var n = this.getViewportParams(), r = t.loadedOffset(), a = t.loadedItemCount(), o = Math.max(n.skip, r), s = Math.min(n.take, a), l = Math.max(i - (o + s), 0);
          return {
            begin: o,
            end: l
          };
        }
        return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments);
      }
    },
    getScrollingTimeout: function() {
      var t = this.option("scrolling.renderAsync"), i = 0;
      if (!x(t))
        i = Math.min(this.option("scrolling.timeout") || 0, this._dataOptions.changingDuration()), i < this.option("scrolling.renderingThreshold") && (i = this.option("scrolling.minTimeout") || 0);
      else if (t) {
        var n;
        i = (n = this.option("scrolling.timeout")) !== null && n !== void 0 ? n : 0;
      }
      return i;
    },
    setViewportPosition: function(t) {
      var i = new U(), n = this.getScrollingTimeout();
      return clearTimeout(this._scrollTimeoutID), n > 0 ? this._scrollTimeoutID = setTimeout(() => {
        this._setViewportPositionCore(t), i.resolve();
      }, n) : (this._setViewportPositionCore(t), i.resolve()), i.promise();
    },
    getViewportPosition: function() {
      return this._position;
    },
    getItemIndexByPosition: function(t, i, n) {
      var r;
      t = (r = t) !== null && r !== void 0 ? r : this._position;
      for (var a = this.getItemSize(), o = 0, s = 0, l = Object.keys(this._itemSizes).concat(-1), u = 0; u < l.length && o < t; u++) {
        var d = parseInt(l[u]), c = (t - o) / a;
        if (d < 0 || s + c < d) {
          s += c, this._sizeRatio < 1 && x(i) && (s = i + n / this._viewportItemSize);
          break;
        } else
          c = d - s, o += c * a, s += c;
        var h = this._itemSizes[d];
        o += h, s += o < t ? 1 : (t - o + h) / h;
      }
      return Math.round(50 * s) / 50;
    },
    isScrollingBack: function() {
      return this._isScrollingBack;
    },
    _setViewportPositionCore: function(t) {
      var i = this._position || 0;
      this._position = t, i !== this._position && (this._isScrollingBack = this._position < i);
      var n = this.getItemIndexByPosition(), r = this.setViewportItemIndex(n);
      return this.positionChanged.fire(), r;
    },
    setContentItemSizes: function(t) {
      var i = this.virtualItemsCount();
      if (this._contentSize = t.reduce((a, o) => a + o, 0), i) {
        t.forEach((a, o) => {
          this._itemSizes[i.begin + o] = a;
        });
        var n = (i.begin + i.end + this.itemsCount()) * this._viewportItemSize, r = ae.getContentHeightLimit(lt);
        n > r ? this._sizeRatio = r / n : this._sizeRatio = 1;
      }
    },
    getItemSize: function() {
      return this._viewportItemSize * this._sizeRatio;
    },
    getItemOffset: function(t, i) {
      var n = this.virtualItemsCount(), r = t;
      if (!n)
        return 0;
      var a = 0, o = this._dataOptions.totalItemsCount();
      return Object.keys(this._itemSizes).forEach((s) => {
        r && (i ? s >= o - t : s < t) && (a += this._itemSizes[s], r--);
      }), Math.floor(a + r * this._viewportItemSize * this._sizeRatio);
    },
    getContentOffset: function(t) {
      var i = t === "end", n = this.virtualItemsCount();
      return n ? this.getItemOffset(i ? n.end : n.begin, i) : 0;
    },
    getVirtualContentSize: function() {
      var t = this.virtualItemsCount();
      return t ? this.getContentOffset("begin") + this.getContentOffset("end") + this._contentSize : 0;
    },
    getViewportItemIndex: function() {
      return this._viewportItemIndex;
    },
    setViewportItemIndex: function(t) {
      if (this._viewportItemIndex = t, this.option(Wu) !== !1)
        return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments);
    },
    viewportItemSize: function(t) {
      return t !== void 0 && (this._viewportItemSize = t), this._viewportItemSize;
    },
    viewportSize: function(t) {
      return t !== void 0 && (this._viewportSize = t), this._viewportSize;
    },
    viewportHeight: function(t, i) {
      var n = i ?? this._position, r = this.getItemIndexByPosition(n), a = this.getItemIndexByPosition(n + t, r, t);
      this.viewportSize(Math.ceil(a - r)), !x(i) && this._viewportItemIndex !== r && this._setViewportPositionCore(n);
    },
    reset: function(t) {
      this._dataLoader.reset(), t || (this._itemSizes = {});
    },
    subscribeToWindowScrollEvents: function(t) {
      this._windowScroll = this._windowScroll || vO(t, (i) => {
        this.viewportItemSize() && this.setViewportPosition(i);
      });
    },
    dispose: function() {
      clearTimeout(this._scrollTimeoutID), this._windowScroll && this._windowScroll.dispose(), this._windowScroll = null;
    },
    scrollTo: function(t) {
      this._windowScroll && this._windowScroll.scrollTo(t);
    },
    isVirtualMode: function() {
      return lS(this);
    },
    isAppendMode: function() {
      return zX(this);
    },
    getViewportParams: function() {
      var t, i = this.option("scrolling.mode") === _O, n = this._dataOptions.totalItemsCount(), r = this._dataOptions.hasKnownLastPage(), a = r && this._viewportItemIndex > n ? n : this._viewportItemIndex, o = this._viewportSize + a, s = this.option("scrolling.prerenderedRowChunkSize") || 1, l = this.isScrollingBack(), u = (t = this.option("scrolling.prerenderedRowCount")) !== null && t !== void 0 ? t : 1, d = l ? u : 0, c = l ? 0 : u, h = Math.floor(Math.max(0, a - d) / s) * s, p = Math.ceil((o + c - h) / s) * s;
      if (i) {
        var f = Math.max(0, n - h);
        p = Math.min(p, f);
      }
      return {
        skip: h,
        take: p
      };
    },
    itemsCount: function() {
      var t = 0;
      return this.option(Wu) ? t = this._dataLoader.itemsCount.apply(this._dataLoader, arguments) : t = this._dataOptions.itemsCount(), t;
    }
  };
  return ["pageIndex", "beginPageIndex", "endPageIndex", "pageSize", "load", "loadIfNeed", "handleDataChanged", "getDelayDeferred"].forEach(function(t) {
    e[t] = function() {
      return this._dataLoader[t].apply(this._dataLoader, arguments);
    };
  }), e;
}()), uS = "bottom-load-panel", WX = "table-content", GX = "group-space", KX = "content", dS = "dx-freespace-row", UX = "dx-column-lines", Gu = "dx-virtual-row", jX = "dx-row-inserted", qX = "infinite", XX = "virtual", CO = 300, He = "scrolling.legacyMode", of = "paging.pageIndex", ti = function(e) {
  return e.option("scrolling.mode") === XX;
}, Cn = function(e) {
  return e.option("scrolling.mode") === qX;
}, un = function(e) {
  return ti(e) || Cn(e);
}, cS = function(e, t, i, n) {
  for (var r = 0; r < t + 1; r++) {
    var a = e[i ? e.length - 1 - r : r];
    a && !n(a, r === t, i) && t++;
  }
  return t;
}, vd = function(e, t) {
  return e.rowType === "data" && !e.isNewRow || e.rowType === "group" && t.isGroupItemCountable(e.data);
}, YX = function(e) {
  return e.forEach(function(t, i) {
    t.rowIndex = i;
  }), e;
}, ZX = function() {
  var e = function(i) {
    var n = i._virtualScrollController.beginPageIndex(-1);
    ti(i) && (n < 0 || i.viewportSize() >= 0 && i.getViewportItemIndex() >= 0 && (n * i.pageSize() > i.getViewportItemIndex() || n * i.pageSize() + i.itemsCount() < i.getViewportItemIndex() + i.viewportSize()) && i._dataSource.isLoading() ? i._isLoading || (i._isLoading = !0, i.loadingChanged.fire(!0)) : i._isLoading && (i._isLoading = !1, i.loadingChanged.fire(!1)));
  }, t = {
    init: function() {
      this.callBase.apply(this, arguments), this._items = [], this._totalCount = -1, this._isLoaded = !0, this._loadPageCount = 1, this._virtualScrollController = new mO(this.component, this._getVirtualScrollDataOptions());
    },
    _getVirtualScrollDataOptions: function() {
      var i = this;
      return {
        pageSize: function() {
          return i.pageSize();
        },
        totalItemsCount: function() {
          return i.totalItemsCount();
        },
        hasKnownLastPage: function() {
          return i.hasKnownLastPage();
        },
        pageIndex: function(n) {
          return i._dataSource.pageIndex(n);
        },
        isLoading: function() {
          return i._dataSource.isLoading() && !i.isCustomLoading();
        },
        pageCount: function() {
          return i.pageCount();
        },
        load: function() {
          return i._dataSource.load();
        },
        updateLoading: function() {
          e(i);
        },
        itemsCount: function() {
          return i.itemsCount(!0);
        },
        items: function() {
          return i._dataSource.items();
        },
        viewportItems: function(n) {
          return n && (i._items = n), i._items;
        },
        onChanged: function(n) {
          i.changed.fire(n);
        },
        changingDuration: function(n) {
          return i.isLoading() ? CO : i._renderTime || 0;
        }
      };
    },
    _handleLoadingChanged: function(i) {
      if (this.option(He) === !1) {
        this.callBase.apply(this, arguments);
        return;
      }
      (!ti(this) || this._isLoadingAll) && (this._isLoading = i, this.callBase.apply(this, arguments)), i ? this._startLoadTime = /* @__PURE__ */ new Date() : this._startLoadTime = void 0;
    },
    _handleLoadError: function() {
      this.option(He) !== !1 && (this._isLoading = !1, this.loadingChanged.fire(!1)), this.callBase.apply(this, arguments);
    },
    _handleDataChanged: function(i) {
      if (this.option(He) === !1) {
        this._items = this._dataSource.items().slice(), this._totalCount = this._dataSourceTotalCount(!0), this.callBase.apply(this, arguments);
        return;
      }
      var n = this.callBase.bind(this);
      this._virtualScrollController.handleDataChanged(n, i);
    },
    _customizeRemoteOperations: function(i, n) {
      var r = this.option(He) === !1, a = this.option("scrolling.renderAsync");
      x(a) || (a = this._renderTime >= this.option("scrolling.renderingThreshold")), (ti(this) || Cn(this) && r) && !n.reload && (n.skip || r) && !a && (i.delay = void 0), this.callBase.apply(this, arguments);
    },
    items: function() {
      return this._items;
    },
    _dataSourceTotalCount: function(i) {
      return this.option(He) === !1 && ti(this) && !i ? this._totalCount : this.callBase();
    },
    itemsCount: function(i) {
      return i || this.option(He) === !1 ? this.callBase() : this._virtualScrollController.itemsCount();
    },
    load: function(i) {
      return this.option(He) === !1 || i ? this.callBase(i) : this._virtualScrollController.load();
    },
    isLoading: function() {
      return this.option(He) === !1 ? this._dataSource.isLoading() : this._isLoading;
    },
    isLoaded: function() {
      return this._dataSource.isLoaded() && this._isLoaded;
    },
    resetPagesCache: function(i) {
      i || this._virtualScrollController.reset(!0), this.callBase.apply(this, arguments);
    },
    _changeRowExpandCore: function() {
      var i = this.callBase.apply(this, arguments);
      return this.option(He) === !1 || (this.resetPagesCache(), e(this)), i;
    },
    reload: function() {
      this._dataSource.pageIndex(this.pageIndex());
      var i = this._virtualScrollController;
      if (this.option(He) !== !1 && i) {
        var n = new U();
        return this.callBase.apply(this, arguments).done(function(r) {
          var a = i.getDelayDeferred();
          a ? a.done(n.resolve).fail(n.reject) : n.resolve(r);
        }).fail(n.reject), n;
      } else
        return this.callBase.apply(this, arguments);
    },
    refresh: function(i, n) {
      if (this.option(He) !== !1) {
        var r = i.storeLoadOptions, a = this._dataSource;
        n.reload ? (this._virtualScrollController.reset(), a.items().length = 0, this._isLoaded = !1, e(this), this._isLoaded = !0, Cn(this) ? (this.pageIndex(0), a.pageIndex(0), r.pageIndex = 0, i.pageIndex = 0, r.skip = 0) : (a.pageIndex(this.pageIndex()), a.paginate() && (i.pageIndex = this.pageIndex(), r.skip = this.pageIndex() * this.pageSize()))) : Cn(this) && r.skip && this._totalCountCorrection < 0 && (r.skip += this._totalCountCorrection);
      }
      return this.callBase.apply(this, arguments);
    },
    dispose: function() {
      this._virtualScrollController.dispose(), this.callBase.apply(this, arguments);
    },
    loadPageCount: function(i) {
      if (!x(i))
        return this._loadPageCount;
      this._loadPageCount = i;
    },
    _handleDataLoading: function(i) {
      var n = this.loadPageCount(), r = this.pageSize(), a = this.option(He) === !1, o = i.storeLoadOptions, s = x(o.take);
      i.loadPageCount = n, !i.isCustomLoading && a && s && n > 1 && r > 0 && (o.take = n * r), this.callBase.apply(this, arguments);
    },
    _loadPageSize: function() {
      return this.callBase.apply(this, arguments) * this.loadPageCount();
    }
  };
  return ["beginPageIndex", "endPageIndex", "pageIndex"].forEach(function(i) {
    t[i] = function() {
      if (this.option(He) === !1) {
        var n = this._dataSource;
        return n.pageIndex.apply(n, arguments);
      }
      var r = this._virtualScrollController;
      return r[i].apply(r, arguments);
    };
  }), ["virtualItemsCount", "getContentOffset", "getVirtualContentSize", "setContentItemSizes", "setViewportPosition", "getViewportItemIndex", "setViewportItemIndex", "getItemIndexByPosition", "viewportSize", "viewportItemSize", "getItemSize", "getItemSizes", "loadIfNeed"].forEach(function(i) {
    t[i] = function() {
      var n = this._virtualScrollController;
      return n[i].apply(n, arguments);
    };
  }), t;
}(), QX = function() {
  var e = function(t, i) {
    var n = t.toArray().map((o) => g(o).parent("." + i).get(0)).filter((o) => o);
    n.length && (t = g(n));
    for (var r = i === dS ? t.length - 1 : t.length, a = 0; a < r; a++)
      t.eq(a).remove();
  };
  return {
    init: function() {
      var t, i = this.getController("data");
      this.callBase(), i.pageChanged.add((n) => {
        var r = this._scrollTop;
        this.scrollToPage(n ?? i.pageIndex()), this.option(He) === !1 && this._scrollTop === r && i.updateViewport();
      }), i.dataSourceChanged.add(() => {
        !this._scrollTop && this._scrollToCurrentPageOnResize();
      }), (t = i.stateLoaded) === null || t === void 0 || t.add(() => {
        this._scrollToCurrentPageOnResize();
      }), this._scrollToCurrentPageOnResize();
    },
    _scrollToCurrentPageOnResize: function() {
      var t = this.getController("data");
      if (t.pageIndex() > 0) {
        var i = () => {
          this.resizeCompleted.remove(i), this.scrollToPage(t.pageIndex());
        };
        this.resizeCompleted.add(i);
      }
    },
    scrollToPage: function(t) {
      var i = this._dataController, n = i ? i.pageSize() : 0, r;
      if (ti(this) || Cn(this)) {
        var a = i.getItemSize(), o = i.getItemSizes(), s = t * n;
        r = s * a;
        for (var l in o)
          l < s && (r += o[l] - a);
      } else
        r = 0;
      this.scrollTo({
        y: r,
        x: this._scrollLeft
      });
    },
    renderDelayedTemplates: function(t) {
      this.waitAsyncTemplates().done(() => {
        this._updateContentPosition(!0);
      }), this.callBase.apply(this, arguments);
    },
    _renderCore: function(t) {
      var i = /* @__PURE__ */ new Date(), n = this.callBase.apply(this, arguments), r = this._dataController._dataSource;
      if (r && t) {
        var a = t.items ? t.items.length : 20, o = this._dataController.viewportSize() || 20;
        ae.isVirtualRowRendering(this) && a > 0 && this.option(He) !== !1 ? r._renderTime = (/* @__PURE__ */ new Date() - i) * o / a : r._renderTime = /* @__PURE__ */ new Date() - i;
      }
      return n;
    },
    _getRowElements: function(t) {
      var i = this.callBase(t);
      return i && i.not("." + Gu);
    },
    _removeRowsElements: function(t, i, n) {
      var r = this._getRowElements(t).toArray();
      n === "append" ? r = r.slice(0, i) : r = r.slice(-i);
      var a = this.getController("errorHandling");
      r.map((o) => {
        var s = g(o);
        a && a.removeErrorRow(s.next()), s.remove();
      });
    },
    _updateContent: function(t, i) {
      var n, r = this._findContentElement(), a = i && i.changeType, o = U(), s = r.children().first();
      return a === "append" || a === "prepend" ? this.waitAsyncTemplates().done(() => {
        var l = this._getBodies(t);
        l.length === 1 ? this._getBodies(s)[a === "append" ? "append" : "prepend"](l.children()) : l[a === "append" ? "appendTo" : "prependTo"](s), t.remove(), n = this._getFreeSpaceRowElements(s), e(n, dS), i.removeCount && this._removeRowsElements(s, i.removeCount, a), this._restoreErrorRow(s), o.resolve();
      }).fail(o.reject) : this.callBase.apply(this, arguments).done(() => {
        a === "update" && this._restoreErrorRow(s), o.resolve();
      }).fail(o.reject), o.promise().done(() => {
        this._updateBottomLoading();
      });
    },
    _addVirtualRow: function(t, i, n, r) {
      if (r) {
        var a = this._createEmptyRow(Gu, i, r);
        a = this._wrapRowIfNeed(t, a), this._appendEmptyRow(t, a, n);
      }
    },
    _updateContentItemSizes: function() {
      var t = this._getRowHeights(), i = this._correctRowHeights(t);
      this._dataController.setContentItemSizes(i);
    },
    _updateViewportSize: function(t, i) {
      x(t) || (t = this._hasHeight ? Ne(this.element()) : Ne(ke())), this._dataController.viewportHeight(t, i);
    },
    _getRowHeights: function() {
      var t, i, n = (t = this.getController("editing")) === null || t === void 0 || (i = t.isPopupEditMode) === null || i === void 0 ? void 0 : i.call(t), r = this._getRowElements(this._tableElement).toArray();
      return n && (r = r.filter((a) => !g(a).hasClass(jX))), r.map((a) => Et(a).height);
    },
    _correctRowHeights: function(t) {
      for (var i = this._dataController, n = i._dataSource, r = [], a = i.getVisibleRows(), o = 0, s = !0, l = -1, u = 0; u < t.length; u++) {
        var d = a[u];
        x(d) && (this.option(He) === !1 ? (l >= 0 && l !== d.loadIndex && (r.push(o), o = 0), l = d.loadIndex) : vd(d, n) && (s ? s = !1 : (r.push(o), o = 0)), o += t[u]);
      }
      return o > 0 && r.push(o), r;
    },
    _updateContentPosition: function(t) {
      var i = this._dataController, n = this._rowHeight || 20;
      if (i.viewportItemSize(n), ti(this) || ae.isVirtualRowRendering(this)) {
        t || this._updateContentItemSizes();
        var r = i.getContentOffset("begin"), a = i.getContentOffset("end"), o = this.getTableElements(), s = o.children("tbody").children("." + Gu);
        e(s, Gu), o.each((l, u) => {
          var d = l > 0, c = this._isFixedTableRendering;
          this._isFixedTableRendering = d, this._addVirtualRow(g(u), d, "top", r), this._addVirtualRow(g(u), d, "bottom", a), this._isFixedTableRendering = c;
        });
      }
    },
    _isTableLinesDisplaysCorrect: function(t) {
      var i = t.find("." + UX).length > 0;
      return i === this.option("showColumnLines");
    },
    _isColumnElementsEqual: function(t, i) {
      var n = t.length === i.length;
      return n && B(t, function(r, a) {
        if (a.style.width !== i[r].style.width)
          return n = !1, n;
      }), n;
    },
    _getCellClasses: function(t) {
      var i = [], n = t.cssClass, r = t.command === "expand";
      return n && i.push(n), r && i.push(this.addWidgetPrefix(GX)), i;
    },
    _findBottomLoadPanel: function(t) {
      var i = t || this.element(), n = i && i.find("." + this.addWidgetPrefix(uS));
      if (n && n.length)
        return n;
    },
    _updateBottomLoading: function() {
      var t = ti(this), i = Cn(this), n = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (t || i), r = this._findContentElement(), a = this._findBottomLoadPanel(r);
      n ? a || g("<div>").addClass(this.addWidgetPrefix(uS)).append(this._createComponent(g("<div>"), bi).$element()).appendTo(r) : a && a.remove();
    },
    _handleScroll: function(t) {
      var i = this.option(He) === !0, n = t.scrollOffset.top === 0, r = this._scrollTop !== t.scrollOffset.top, a = r || t.forceUpdateScrollPosition, o = this._hasHeight || !i && n;
      if (a && o && this._rowHeight) {
        this._scrollTop = t.scrollOffset.top;
        var s = ti(this) || this.option("scrolling.rowRenderingMode") !== "standard";
        s && this.option(He) === !1 && (this._updateContentItemSizes(), this._updateViewportSize(null, this._scrollTop)), this._dataController.setViewportPosition(t.scrollOffset.top);
      }
      this.callBase.apply(this, arguments);
    },
    _needUpdateRowHeight: function(t) {
      return this.callBase.apply(this, arguments) || t > 0 && Cn(this) && !ae.isVirtualRowRendering(this);
    },
    _updateRowHeight: function() {
      if (this.callBase.apply(this, arguments), this._rowHeight) {
        this._updateContentPosition();
        var t = this._hasHeight ? Ne(this.element()) : Ne(ke()), i = this._dataController;
        this.option(He) === !1 ? (this._updateViewportSize(t), i.updateViewport()) : i.viewportSize(Math.ceil(t / this._rowHeight));
      }
    },
    updateFreeSpaceRowHeight: function() {
      var t = this.callBase.apply(this, arguments);
      return t && this._updateContentPosition(), t;
    },
    setLoading: function(t, i) {
      var n = this._dataController, r = n.pageIndex() > 0 && n.isLoaded() && !!this._findBottomLoadPanel();
      this.option(He) === !1 && t && n.isViewportChanging() || (r && (t = !1), this.callBase.call(this, t, i));
    },
    _resizeCore: function() {
      var t = this, i = t.element();
      t.callBase(), t.component.$element() && !t._windowScroll && mc(i) && (t._windowScroll = vO(i, function(n) {
        !t._hasHeight && t._rowHeight && t._dataController.setViewportPosition(n);
      }, t.component.$element()), t.on("disposing", function() {
        t._windowScroll.dispose();
      })), this.option(He) !== !1 && t.loadIfNeed();
    },
    loadIfNeed: function() {
      var t, i = this._dataController;
      i == null || (t = i.loadIfNeed) === null || t === void 0 || t.call(i);
    },
    setColumnWidths: function(t) {
      var i = this.getScrollable(), n;
      this.callBase.apply(this, arguments), this.option("scrolling.mode") === "virtual" && (n = i ? g(i.content()) : this.element(), this.callBase(t, n.children("." + this.addWidgetPrefix(KX)).children(":not(." + this.addWidgetPrefix(WX) + ")")));
    },
    _restoreErrorRow: function() {
      if (this.option(He) === !1) {
        var t = this.getController("errorHandling");
        t == null || t.removeErrorRow();
      }
      this.callBase.apply(this, arguments);
    },
    dispose: function() {
      clearTimeout(this._scrollTimeoutID), this.callBase();
    }
  };
}(), xO = {
  defaultOptions: function() {
    return {
      scrolling: {
        timeout: 300,
        updateTimeout: 300,
        minTimeout: 0,
        renderingThreshold: 100,
        removeInvisiblePages: !0,
        rowPageSize: 5,
        prerenderedRowChunkSize: 1,
        mode: "standard",
        preloadEnabled: !1,
        rowRenderingMode: "standard",
        loadTwoPagesOnStart: !1,
        legacyMode: !1,
        prerenderedRowCount: 1
      }
    };
  },
  extenders: {
    dataSourceAdapter: ZX,
    controllers: {
      data: function() {
        var e = {
          _refreshDataSource: function() {
            var t = this.callBase.apply(this, arguments) || new U().resolve().promise();
            return t.done(this.initVirtualRows.bind(this)), t;
          },
          _loadDataSource: function() {
            if (this._rowsScrollController && un(this)) {
              var t, {
                loadPageCount: i
              } = x(this._loadViewportParams) ? this.getLoadPageParams() : {};
              i >= 1 && ((t = this._dataSource) === null || t === void 0 || t.loadPageCount(i));
            }
            return this.callBase.apply(this, arguments);
          },
          getRowPageSize: function() {
            var t = this.option("scrolling.rowPageSize"), i = this.pageSize();
            return i && i < t ? i : t;
          },
          reload: function() {
            var t = this._rowsScrollController || this._dataSource, i = t && t.getItemIndexByPosition(), n = this.callBase.apply(this, arguments);
            return n && n.done(() => {
              if (ti(this) || ae.isVirtualRowRendering(this)) {
                var r = this.getRowIndexOffset(), a = Math.floor(i) - r, o = this.component, s = o.getScrollable && o.getScrollable(), l = this.dataSource().operationTypes().sorting;
                if (s && !l && a >= 0) {
                  var u = o.getRowElement(a), d = u && u[0] && g(u[0]), c = d && d.position().top, h = lt.chrome && lt.version >= 91, p = lt.mozilla || h ? 1 : 0;
                  c > p && (c = Math.round(c + Ne(d) * (i % 1)), s.scrollTo({
                    y: c
                  }));
                }
              }
            });
          },
          initVirtualRows: function() {
            var t = ae.isVirtualRowRendering(this);
            if (this._allItems = null, this._loadViewportParams = null, this.option("scrolling.mode") !== "virtual" && t !== !0 || t === !1 || this.option(He) !== !1 && !this.option("scrolling.rowPageSize")) {
              this._visibleItems = null, this._rowsScrollController = null;
              return;
            }
            var i = !ti(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();
            this._rowPageIndex = Math.ceil(i * this.pageSize() / this.getRowPageSize()), this._visibleItems = this.option(He) === !1 ? null : [], this._viewportChanging = !1, this._needUpdateViewportAfterLoading = !1, this._rowsScrollController || (this._rowsScrollController = new mO(this.component, this._getRowsScrollDataOptions(), !0), this._rowsScrollController.positionChanged.add(() => {
              var n;
              if (this.option(He) === !1) {
                this._viewportChanging = !0, this.loadViewport(), this._viewportChanging = !1;
                return;
              }
              (n = this._dataSource) === null || n === void 0 || n.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex());
            })), this.option(He) === !1 && this._updateLoadViewportParams(), this.isLoaded() && this.option(He) !== !1 && this._rowsScrollController.load();
          },
          isViewportChanging: function() {
            return this._viewportChanging;
          },
          _getRowsScrollDataOptions: function() {
            var t = this, i = function(n) {
              return vd(n, t._dataSource);
            };
            return {
              pageSize: function() {
                return t.getRowPageSize();
              },
              loadedOffset: function() {
                var n;
                return ti(t) && ((n = t._dataSource) === null || n === void 0 ? void 0 : n.lastLoadOptions().skip) || 0;
              },
              loadedItemCount: function() {
                return t._itemCount;
              },
              totalItemsCount: function() {
                return un(t) ? t.totalItemsCount() : t.option(He) === !1 ? t._itemCount : t._items.filter(i).length;
              },
              hasKnownLastPage: function() {
                return t.option(He) === !1 ? t.hasKnownLastPage() : !0;
              },
              pageIndex: function(n) {
                return n !== void 0 && (t._rowPageIndex = n), t._rowPageIndex;
              },
              isLoading: function() {
                return t.isLoading();
              },
              pageCount: function() {
                var n = Math.ceil(this.totalItemsCount() / this.pageSize());
                return n || 1;
              },
              load: function() {
                t._rowsScrollController.pageIndex() >= this.pageCount() && (t._rowPageIndex = this.pageCount() - 1, t._rowsScrollController.pageIndex(t._rowPageIndex)), !(!this.items().length && this.totalItemsCount()) && t._rowsScrollController.handleDataChanged((n) => {
                  n = n || {}, n.changeType = n.changeType || "refresh", n.items = n.items || t._visibleItems, t._visibleItems.forEach((r, a) => {
                    r.rowIndex = a;
                  }), t._fireChanged(n);
                });
              },
              updateLoading: function() {
              },
              itemsCount: function() {
                return this.items(!0).length;
              },
              correctCount: function(n, r, a) {
                return cS(n, r, a, (o, s, l) => o.isNewRow ? s && !l : s && l ? !o.isNewRow : i(o));
              },
              items: function(n) {
                var r = t._items;
                if (t.option(He)) {
                  var a = t.dataSource(), o = a == null ? void 0 : a.virtualItemsCount(), s = o ? o.begin : 0, l = t.getRowPageSize(), u = t._rowPageIndex * l - s, d = l;
                  if (u < 0)
                    return [];
                  u && (u = this.correctCount(r, u), r = r.slice(u)), d && (d = this.correctCount(r, d), r = r.slice(0, d));
                }
                return n ? r.filter(i) : r;
              },
              viewportItems: function(n) {
                return n && t.option(He) !== !1 && (t._visibleItems = n), t._visibleItems;
              },
              onChanged: function() {
              },
              changingDuration: function(n) {
                var r = t.dataSource();
                return r != null && r.isLoading() && t.option(He) !== !1 ? CO : (r == null ? void 0 : r._renderTime) || 0;
              }
            };
          },
          _updateItemsCore: function(t) {
            var i = this.getRowIndexDelta();
            if (this.callBase.apply(this, arguments), this.option(He) === !1 && ae.isVirtualRowRendering(this)) {
              t.changeType === "update" && t.rowIndices.length === 0 && t.cancelEmptyChanges && (t.cancel = !0);
              return;
            }
            var n = this._rowsScrollController;
            if (n) {
              var r = this._visibleItems, a = t.changeType === "refresh" || t.isLiveUpdate;
              if (t.changeType === "append" && t.items && !t.items.length)
                return;
              a || t.changeType === "append" || t.changeType === "prepend" ? (t.cancel = !0, a && n.reset(!0), n.load()) : (t.changeType === "update" ? t.rowIndices.forEach((o, s) => {
                var l = t.changeTypes[s], u = t.items[s];
                l === "update" ? r[o] = u : l === "insert" ? r.splice(o, 0, u) : l === "remove" && r.splice(o, 1);
              }) : (r.forEach((o, s) => {
                r[s] = this._items[s + i] || r[s];
              }), t.items = r), YX(r));
            }
          },
          _updateLoadViewportParams: function() {
            var t = this._rowsScrollController.getViewportParams(), i = this.pageSize();
            if (t && !un(this) && i > 0) {
              var n = this.pageIndex() * i;
              t.skip += n;
            }
            this._loadViewportParams = t;
          },
          _processItems: function(t) {
            var i = this.callBase.apply(this, arguments);
            if (this.option(He) === !1) {
              var n, r = this._dataSource, a = (n = r == null ? void 0 : r.lastLoadOptions().skip) !== null && n !== void 0 ? n : 0, o, s, l, u = !1, d = [];
              i.forEach((c) => {
                var h = c.rowType, p = vd(c, r), f = h === "group" && (o || p || s !== "group" && a > 0), v = h === "data" && p && (o || s !== "group");
                if (!c.isNewRow && x(o)) {
                  var m = l && !u;
                  (f || v) && !m && a++;
                }
                (f || v) && (u = !0), c.isNewRow ? d.push(c) : (d.forEach((C) => C.loadIndex = a), d = []), c.loadIndex = a, o = p, s = h, l = c.isNewRow;
              }), d.forEach((c) => c.loadIndex = a);
            }
            return i;
          },
          _afterProcessItems: function(t, i) {
            if (this._itemCount = t.filter((s) => vd(s, this._dataSource)).length, x(this._loadViewportParams)) {
              this._updateLoadViewportParams();
              var n = t;
              if (this._allItems = t, t.length) {
                var {
                  skipForCurrentPage: r
                } = this.getLoadPageParams(!0), a = t[0].loadIndex + r, o = this._loadViewportParams.take;
                n = t.filter((s) => {
                  var l = s.isNewRow && s.loadIndex === a && o === 0, u = s.loadIndex >= a, d = s.loadIndex < a + o || l;
                  return u && d;
                });
              }
              return n;
            }
            return this.callBase.apply(this, arguments);
          },
          _applyChange: function(t) {
            var i = this, n = t.items, r = t.changeType, a = t.removeCount;
            if (a) {
              var o = r === "prepend";
              a = cS(i._items, a, o, function(s, l) {
                return s.rowType === "data" && !s.isNewRow || s.rowType === "group" && (i._dataSource.isGroupItemCountable(s.data) || l);
              }), t.removeCount = a;
            }
            switch (r) {
              case "prepend":
                i._items.unshift.apply(i._items, n), a && i._items.splice(-a);
                break;
              case "append":
                i._items.push.apply(i._items, n), a && i._items.splice(0, a);
                break;
              default:
                i.callBase(t);
            }
          },
          items: function(t) {
            return t ? this._allItems || this._items : this._visibleItems || this._items;
          },
          getRowIndexDelta: function() {
            var t = 0;
            if (this.option(He)) {
              var i = this._visibleItems;
              i && i[0] && (t = this._items.indexOf(i[0]));
            }
            return t < 0 ? 0 : t;
          },
          getRowIndexOffset: function(t) {
            var i = 0, n = this.dataSource(), r = this._rowsScrollController, a = this.option(He) === !1, o = un(this);
            if (r && !t)
              if (a && x(this._loadViewportParams)) {
                var {
                  skipForCurrentPage: s,
                  pageIndex: l
                } = this.getLoadPageParams(!0), u = this.items(!0);
                if (i = o ? l * this.pageSize() : 0, u.length) {
                  var d = u[0].loadIndex;
                  i += u.filter((h) => h.loadIndex < d + s).length;
                }
              } else
                i = r.beginPageIndex() * r.pageSize();
            else if (o && a && n) {
              var c;
              i = (c = n.lastLoadOptions().skip) !== null && c !== void 0 ? c : 0;
            } else
              ti(this) && n && (i = n.beginPageIndex() * n.pageSize());
            return i;
          },
          getDataIndex: function(t) {
            return this.option(He) === !1 ? this.getRowIndexOffset(!0) : this.callBase.apply(this, arguments);
          },
          viewportSize: function() {
            var t = this._rowsScrollController, i = this._dataSource, n = t == null ? void 0 : t.viewportSize.apply(t, arguments);
            return this.option(He) === !1 ? n : i == null ? void 0 : i.viewportSize.apply(i, arguments);
          },
          viewportHeight: function(t, i) {
            var n;
            (n = this._rowsScrollController) === null || n === void 0 || n.viewportHeight(t, i);
          },
          viewportItemSize: function() {
            var t = this._rowsScrollController, i = this._dataSource, n = t == null ? void 0 : t.viewportItemSize.apply(t, arguments);
            return this.option(He) === !1 ? n : i == null ? void 0 : i.viewportItemSize.apply(i, arguments);
          },
          setViewportPosition: function() {
            var t = this._rowsScrollController, i = this._dataSource;
            this._isPaging = !1, t ? t.setViewportPosition.apply(t, arguments) : i == null || i.setViewportPosition.apply(i, arguments);
          },
          setContentItemSizes: function(t) {
            var i = this._rowsScrollController, n = this._dataSource, r = i == null ? void 0 : i.setContentItemSizes(t);
            return this.option(He) === !1 ? r : n == null ? void 0 : n.setContentItemSizes(t);
          },
          getPreloadedRowCount: function() {
            var t = this.option("scrolling.preloadedRowCount"), i = this.option("scrolling.preloadEnabled");
            if (x(t))
              return t;
            var n = this.viewportSize();
            return i ? 2 * n : n;
          },
          getLoadPageParams: function(t) {
            var i, n, r = this.pageSize(), a = this._loadViewportParams, o = (i = this._dataSource) === null || i === void 0 ? void 0 : i.lastLoadOptions(), s = (o == null ? void 0 : o.pageIndex) || 0, l = (o == null ? void 0 : o.take) || 0, u = this._rowsScrollController.isScrollingBack(), d = u ? this.getPreloadedRowCount() : 0, c = u ? 0 : this.getPreloadedRowCount(), h = ((n = this._dataSource) === null || n === void 0 ? void 0 : n.totalCountCorrection()) || 0, p = Math.max(0, a.skip - d), f = t ? s : Math.floor(r ? p / r : 0), v = f * r, m = a.skip - v, C = a.take + m + c - h, b = t ? l : C, A = Math.ceil(r ? b / r : 0);
            return {
              pageIndex: f,
              loadPageCount: Math.max(1, A),
              skipForCurrentPage: Math.max(0, m)
            };
          },
          _updateVisiblePageIndex: function(t) {
            if (this._rowsScrollController) {
              if (x(t)) {
                this._silentOption(of, t), this.pageChanged.fire();
                return;
              }
              var i = this._rowsScrollController.getViewportItemIndex(), n = Math.floor(i / this.pageSize());
              this.pageIndex() !== n && (this._silentOption(of, n), this.updateItems({
                changeType: "pageIndex"
              }));
            }
          },
          _getChangedLoadParams: function() {
            var t = this.getLoadPageParams(!0), {
              pageIndex: i,
              loadPageCount: n
            } = this.getLoadPageParams(), r = this._pageIndexIsValid(i), a = null;
            return !this._isLoading && r && (i !== t.pageIndex || n !== t.loadPageCount) && (a = {
              pageIndex: i,
              loadPageCount: n
            }), a;
          },
          _pageIndexIsValid: function(t) {
            var i = !0;
            return (Cn(this) && this.hasKnownLastPage() || ti(this)) && (i = t * this.pageSize() < this.totalItemsCount()), i;
          },
          _loadItems: function(t, i) {
            var n, r, a = un(this), o = this._dataSource, s = this._getChangedLoadParams(), l = (n = o == null ? void 0 : o.loadPageCount()) !== null && n !== void 0 ? n : 0, u = this.pageSize() * l, d = (r = o == null ? void 0 : o.pageIndex()) !== null && r !== void 0 ? r : 0, c = (s == null ? void 0 : s.pageIndex) === d, h = Cn(this) && this.totalItemsCount() < u, p = this.option("editing.refreshMode") === "repaint", f = (s == null ? void 0 : s.pageIndex) > d, v = !1;
            if (!o || a && t && (p && i || f || c && h))
              return v;
            if (a && this._isLoading && (this._needUpdateViewportAfterLoading = !0), a && s) {
              v = !0, o.pageIndex(s.pageIndex), o.loadPageCount(s.loadPageCount), this._repaintChangesOnly = !0, this._needUpdateDimensions = !0;
              var m = this._viewportChanging;
              this.load().always(() => {
                this._repaintChangesOnly = void 0, this._needUpdateDimensions = void 0;
              }).done(() => {
                var C = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;
                (m || C) && this._updateVisiblePageIndex(), this._needUpdateViewportAfterLoading && (this._needUpdateViewportAfterLoading = !1, this.loadViewport({
                  checkLoadedParamsOnly: !0
                }));
              });
            }
            return v;
          },
          loadViewport: function(t) {
            var {
              checkLoadedParamsOnly: i,
              checkLoading: n,
              viewportIsNotFilled: r
            } = t ?? {}, a = un(this);
            if (a || ae.isVirtualRowRendering(this)) {
              this._updateLoadViewportParams();
              var o = this._loadItems(n, !r), s = !(o || this._isLoading && n || i);
              if (s) {
                var l, u, d = !((l = this.getController("editing")) !== null && l !== void 0 && (u = l.getChanges()) !== null && u !== void 0 && u.length);
                this.updateItems({
                  repaintChangesOnly: !0,
                  needUpdateDimensions: !0,
                  useProcessedItemsCache: d,
                  cancelEmptyChanges: !0
                });
              }
            }
          },
          updateViewport: function() {
            var t, i, n = this.viewportSize(), r = this.items().length, a = n > r, o = (t = (i = this._loadViewportParams) === null || i === void 0 ? void 0 : i.take) !== null && t !== void 0 ? t : 0, s = this._rowsScrollController, l = s == null ? void 0 : s.getViewportParams().take;
            (a || o < l) && !this._isPaging && r && this.loadViewport({
              checkLoading: !0,
              viewportIsNotFilled: a
            });
          },
          loadIfNeed: function() {
            if (this.option(He) !== !1) {
              var t = this._rowsScrollController;
              t && t.loadIfNeed();
              var i = this._dataSource;
              return i && i.loadIfNeed();
            }
          },
          getItemSize: function() {
            var t = this._rowsScrollController;
            if (t)
              return t.getItemSize.apply(t, arguments);
            var i = this._dataSource;
            return i && i.getItemSize.apply(i, arguments);
          },
          getItemSizes: function() {
            var t = this._rowsScrollController;
            if (t)
              return t.getItemSizes.apply(t, arguments);
            var i = this._dataSource;
            return i && i.getItemSizes.apply(i, arguments);
          },
          getContentOffset: function() {
            var t = this._rowsScrollController;
            if (t)
              return t.getContentOffset.apply(t, arguments);
            var i = this._dataSource;
            return i && i.getContentOffset.apply(i, arguments);
          },
          refresh: function(t) {
            var i = this._dataSource;
            return i && t && t.load && Cn(this) && i.resetCurrentTotalCount(), this.callBase.apply(this, arguments);
          },
          dispose: function() {
            var t = this._rowsScrollController;
            t && t.dispose(), this.callBase.apply(this, arguments);
          },
          topItemIndex: function() {
            var t;
            return (t = this._loadViewportParams) === null || t === void 0 ? void 0 : t.skip;
          },
          bottomItemIndex: function() {
            var t = this._loadViewportParams;
            return t && t.skip + t.take;
          },
          virtualItemsCount: function() {
            var t = this._rowsScrollController;
            if (t)
              return t.virtualItemsCount.apply(t, arguments);
            var i = this._dataSource;
            return i == null ? void 0 : i.virtualItemsCount.apply(i, arguments);
          },
          pageIndex: function(t) {
            var i = un(this), n = this._rowsScrollController;
            if (this.option(He) === !1 && i && n && t === void 0) {
              var r;
              return (r = this.option(of)) !== null && r !== void 0 ? r : 0;
            }
            return this.callBase.apply(this, arguments);
          },
          _fireChanged: function(t) {
            this.callBase.apply(this, arguments);
            var {
              operationTypes: i
            } = t;
            if (this.option(He) === !1 && un(this) && i) {
              var {
                fullReload: n,
                pageIndex: r
              } = i;
              t.isDataChanged && !n && r && this._updateVisiblePageIndex(this._dataSource.pageIndex());
            }
          },
          _getPagingOptionValue: function(t) {
            var i = this.callBase.apply(this, arguments);
            return this.option(He) === !1 && un(this) && (i = this[t]()), i;
          },
          isEmpty: function() {
            return this.option(He) === !1 ? !this.items(!0).length : this.callBase(this, arguments);
          },
          isLastPageLoaded: function() {
            var t = !1;
            if (this.option(He) === !1 && un(this)) {
              var {
                pageIndex: i,
                loadPageCount: n
              } = this.getLoadPageParams(!0), r = this.pageCount();
              t = i + n >= r;
            } else
              t = this.callBase.apply(this, arguments);
            return t;
          },
          reset: function() {
            this._itemCount = 0, this._allItems = null, this.callBase.apply(this, arguments);
          },
          _applyFilter: function() {
            var t;
            (t = this._dataSource) === null || t === void 0 || t.loadPageCount(1), this.callBase.apply(this, arguments);
          }
        };
        return ae.proxyMethod(e, "getVirtualContentSize"), ae.proxyMethod(e, "setViewportItemIndex"), e;
      }(),
      resizing: {
        _updateMasterDataGridCore: function(e) {
          return ge(this.callBase.apply(this, arguments)).done((t) => {
            var i = ti(e) && e.option(He) === !1;
            if (!t && i) {
              var n = e.getScrollable();
              n && e.updateDimensions();
            }
          });
        },
        hasResizeTimeout: function() {
          return !!this._resizeTimeout;
        },
        resize: function() {
          var e = this.callBase, t;
          if (ti(this) || ae.isVirtualRowRendering(this)) {
            clearTimeout(this._resizeTimeout), this._resizeTimeout = null;
            var i = /* @__PURE__ */ new Date() - this._lastTime, n = this.option("scrolling.updateTimeout");
            this._lastTime && i < n ? (t = new U(), this._resizeTimeout = setTimeout(() => {
              this._resizeTimeout = null, e.apply(this).done(t.resolve).fail(t.reject), this._lastTime = /* @__PURE__ */ new Date();
            }, n), this._lastTime = /* @__PURE__ */ new Date()) : (t = e.apply(this), this._dataController.isLoaded() && (this._lastTime = /* @__PURE__ */ new Date()));
          } else
            t = e.apply(this);
          return t;
        },
        dispose: function() {
          this.callBase.apply(this, arguments), clearTimeout(this._resizeTimeout);
        }
      }
    },
    views: {
      rowsView: QX
    }
  }
};
xe.registerModule("virtualScrolling", xO);
Bl.extend(xO.extenders.dataSourceAdapter);
var JX = 0.9, yO = (e, t) => {
  var i = g(ke()), {
    top: n
  } = e.offset(), r;
  if (rt(t)) {
    if (t < n)
      return n - t;
    r = Dd(i) - t + i.scrollTop();
  } else {
    var a = n - i.scrollTop(), o = Dd(i) - a - Ne(e);
    r = Math.max(a, o);
  }
  return r * JX;
}, e9 = "dx-context-menu-content-delimiter", t9 = "dx-submenu";
class sf extends kv {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      orientation: "horizontal",
      tabIndex: null,
      onHoverStart: $
    });
  }
  _initDataAdapter() {
    this._dataAdapter = this.option("_dataAdapter"), this._dataAdapter || super._initDataAdapter();
  }
  _renderContentImpl() {
    this._renderContextMenuOverlay(), super._renderContentImpl();
    var t = this._dataAdapter.getNodeByKey(this.option("_parentKey"));
    t && this._renderItems(this._getChildNodes(t)), this._renderDelimiter();
  }
  _renderDelimiter() {
    this.$contentDelimiter = g("<div>").appendTo(this._itemContainer()).addClass(e9);
  }
  _getOverlayOptions() {
    return T(super._getOverlayOptions(), {
      onPositioned: this._overlayPositionedActionHandler.bind(this)
    });
  }
  _overlayPositionedActionHandler(t) {
    this._showDelimiter(t);
  }
  _hoverEndHandler(t) {
    super._hoverEndHandler(t), this._toggleFocusClass(!1, t.currentTarget);
  }
  _isMenuHorizontal() {
    return this.option("orientation") === "horizontal";
  }
  _hoverStartHandler(t) {
    var i = this.option("onHoverStart");
    i(t), super._hoverStartHandler(t), this._toggleFocusClass(!0, t.currentTarget);
  }
  _drawSubmenu(t) {
    this._actions.onShowing({
      rootItem: Ie(t),
      submenu: this
    }), super._drawSubmenu(t), this._actions.onShown({
      rootItem: Ie(t),
      submenu: this
    });
  }
  _hideSubmenu(t) {
    this._actions.onHiding({
      cancel: !0,
      rootItem: Ie(t),
      submenu: this
    }), super._hideSubmenu(t), this._actions.onHidden({
      rootItem: Ie(t),
      submenu: this
    });
  }
  _showDelimiter(t) {
    if (this.$contentDelimiter) {
      var i = this._itemContainer().children(".".concat(t9)).eq(0), n = this.option("position").of, r = {
        of: i
      }, a = t.position, o = a.v.location, s = a.h.location, l = n.offset(), u = Math.round(l.left), d = Math.round(l.top), c = Ae(n), h = Fe(n), p = Ae(i), f = Fe(i);
      this.$contentDelimiter.css("display", "block"), S_(this.$contentDelimiter, this._isMenuHorizontal() ? c < p ? c - 2 : p : 2), Dr(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : h < f ? h - 2 : f), this._isMenuHorizontal() ? o > d ? Math.round(s) === u ? (r.offset = "1 -1", r.at = r.my = "left top") : (r.offset = "-1 -1", r.at = r.my = "right top") : (Dr(this.$contentDelimiter, 5), Math.round(s) === u ? (r.offset = "1 4", r.at = r.my = "left bottom") : (r.offset = "-1 2", r.at = r.my = "right bottom")) : s > u ? Math.round(o) === d ? (r.offset = "-1 1", r.at = r.my = "left top") : (r.offset = "-1 -1", r.at = r.my = "left bottom") : Math.round(o) === d ? (r.offset = "1 1", r.at = r.my = "right top") : (r.offset = "1 -1", r.at = r.my = "right bottom"), en.setup(this.$contentDelimiter, r);
    }
  }
  _getContextMenuPosition() {
    return this.option("position");
  }
  isOverlayVisible() {
    return this._overlay.option("visible");
  }
  getOverlayContent() {
    return this._overlay.$content();
  }
}
var Ka = "dx-menu", i9 = Ka + "-vertical", hS = Ka + "-horizontal", $g = Ka + "-item", pS = Ka + "-items-container", lf = $g + "-expanded", md = "dx-context-menu", uf = md + "-container-border", n9 = "dx-context-menu-content-delimiter", r9 = "dx-submenu", a9 = "dx-state-disabled", fS = "dx-state-hover", o9 = "dx-state-active", Cd = Ka + "-adaptive-mode", gS = Ka + "-hamburger-button", s9 = Cd + "-overlay-wrapper", l9 = "up", u9 = "down", d9 = "left", c9 = "right", bs = "showSubmenu", uo = "nextItem", dr = "prevItem", h9 = {
  show: 50,
  hide: 300
}, _S = ["onSubmenuShowing", "onSubmenuShown", "onSubmenuHiding", "onSubmenuHidden", "onItemContextMenu", "onItemClick", "onSelectionChanged", "onItemRendered"];
class Hg extends Bv {
  _getDefaultOptions() {
    return T(super._getDefaultOptions(), {
      orientation: "horizontal",
      submenuDirection: "auto",
      showFirstSubmenuMode: {
        name: "onClick",
        delay: {
          show: 50,
          hide: 300
        }
      },
      hideSubmenuOnMouseLeave: !1,
      onSubmenuShowing: null,
      onSubmenuShown: null,
      onSubmenuHiding: null,
      onSubmenuHidden: null,
      adaptivityEnabled: !1
    });
  }
  _setOptionsByReference() {
    super._setOptionsByReference(), T(this._optionsByReference, {
      animation: !0,
      selectedItem: !0
    });
  }
  _itemElements() {
    var t = super._itemElements(), i = this._submenuItemElements();
    return t.add(i);
  }
  _submenuItemElements() {
    var t = [], i = ".".concat($g), n = this._submenus.length && this._submenus[0];
    return n && n.itemsContainer() && (t = n.itemsContainer().find(i)), t;
  }
  _focusTarget() {
    return this.$element();
  }
  _isMenuHorizontal() {
    return this.option("orientation") === "horizontal";
  }
  _moveFocus(t) {
    var i = this._getAvailableItems(), n = this._isMenuHorizontal(), r = this._getActiveItem(!0), a, o, s, l;
    switch (t) {
      case l9:
        o = n ? bs : this._getItemsNavigationOperation(dr), a = n ? r : i, s = this._getKeyboardNavigationAction(o, a), l = s();
        break;
      case u9:
        o = n ? bs : this._getItemsNavigationOperation(uo), a = n ? r : i, s = this._getKeyboardNavigationAction(o, a), l = s();
        break;
      case c9:
        o = n ? this._getItemsNavigationOperation(uo) : bs, a = n ? i : r, s = this._getKeyboardNavigationAction(o, a), l = s();
        break;
      case d9:
        o = n ? this._getItemsNavigationOperation(dr) : bs, a = n ? i : r, s = this._getKeyboardNavigationAction(o, a), l = s();
        break;
      default:
        return super._moveFocus(t);
    }
    l && l.length !== 0 && this.option("focusedElement", Ie(l));
  }
  _getItemsNavigationOperation(t) {
    var i = t;
    return this.option("rtlEnabled") && (i = t === dr ? uo : dr), i;
  }
  _getKeyboardNavigationAction(t, i) {
    var n = $;
    switch (t) {
      case bs:
        i.hasClass(a9) || (n = this._showSubmenu.bind(this, i));
        break;
      case uo:
        n = this._nextItem.bind(this, i);
        break;
      case dr:
        n = this._prevItem.bind(this, i);
    }
    return n;
  }
  _clean() {
    super._clean(), this.option("templatesRenderAsynchronously") && clearTimeout(this._resizeEventTimer);
  }
  _visibilityChanged(t) {
    t && (this._menuItemsWidth || this._updateItemsWidthCache(), this._dimensionChanged());
  }
  _isAdaptivityEnabled() {
    return this.option("adaptivityEnabled") && this.option("orientation") === "horizontal";
  }
  _updateItemsWidthCache() {
    var t = this.$element().find("ul").first().children("li").children(".".concat($g));
    this._menuItemsWidth = this._getSummaryItemsWidth(t, !0);
  }
  _dimensionChanged() {
    if (this._isAdaptivityEnabled()) {
      var t = Ge(this.$element());
      this._toggleAdaptiveMode(this._menuItemsWidth > t);
    }
  }
  _init() {
    super._init(), this._submenus = [];
  }
  _initActions() {
    this._actions = {}, B(_S, (t, i) => {
      this._actions[i] = this._createActionByOption(i);
    });
  }
  _initMarkup() {
    this._visibleSubmenu = null, this.$element().addClass(Ka), super._initMarkup(), this._addCustomCssClass(this.$element()), this.setAria("role", "menubar");
  }
  _render() {
    super._render(), this._initAdaptivity();
  }
  _renderHamburgerButton() {
    return this._hamburger = new Gt(g("<div>").addClass(gS), {
      icon: "menu",
      activeStateEnabled: !1,
      onClick: this._toggleTreeView.bind(this)
    }), this._hamburger.$element();
  }
  _toggleTreeView(t) {
    Me(t) && (t = !this._overlay.option("visible")), this._overlay.option("visible", t), this._toggleHamburgerActiveState(t);
  }
  _toggleHamburgerActiveState(t) {
    this._hamburger && this._hamburger.$element().toggleClass(o9, t);
  }
  _toggleAdaptiveMode(t) {
    var i = this.$element().find(".".concat(hS)), n = this.$element().find(".".concat(Cd));
    t ? this._hideVisibleSubmenu() : (this._treeView && this._treeView.collapseAll(), this._overlay && this._toggleTreeView(t)), i.toggle(!t), n.toggle(t);
  }
  _removeAdaptivity() {
    this._$adaptiveContainer && (this._toggleAdaptiveMode(!1), this._$adaptiveContainer.remove(), this._$adaptiveContainer = null, this._treeView = null, this._hamburger = null, this._overlay = null);
  }
  _treeviewItemClickHandler(t) {
    this._actions.onItemClick(t), t.node.children.length || this._toggleTreeView(!1);
  }
  _getAdaptiveOverlayOptions() {
    var t = this.option("rtlEnabled"), i = t ? "right" : "left";
    return {
      _ignoreFunctionValueDeprecation: !0,
      maxHeight: () => yO(this.$element()),
      deferRendering: !1,
      shading: !1,
      animation: !1,
      hideOnParentScroll: !0,
      onHidden: () => {
        this._toggleHamburgerActiveState(!1);
      },
      height: "auto",
      hideOnOutsideClick: (n) => !g(n.target).closest(".".concat(gS)).length,
      position: {
        collision: "flipfit",
        at: "bottom " + i,
        my: "top " + i,
        of: this._hamburger.$element()
      }
    };
  }
  _getTreeViewOptions() {
    var t = {};
    return B(["rtlEnabled", "width", "accessKey", "activeStateEnabled", "animation", "dataSource", "disabled", "displayExpr", "displayExpr", "focusStateEnabled", "hint", "hoverStateEnabled", "itemsExpr", "items", "itemTemplate", "selectedExpr", "selectionMode", "tabIndex", "visible"], (i, n) => {
      t[n] = this.option(n);
    }), B(["onItemContextMenu", "onSelectionChanged", "onItemRendered"], (i, n) => {
      t[n] = (r) => {
        this._actions[n](r);
      };
    }), T(t, {
      dataSource: this.getDataSource(),
      animationEnabled: !!this.option("animation"),
      onItemClick: this._treeviewItemClickHandler.bind(this),
      onItemExpanded: (i) => {
        this._overlay.repaint(), this._actions.onSubmenuShown(i);
      },
      onItemCollapsed: (i) => {
        this._overlay.repaint(), this._actions.onSubmenuHidden(i);
      },
      selectNodesRecursive: !1,
      selectByClick: this.option("selectByClick"),
      expandEvent: "click"
    });
  }
  _initAdaptivity() {
    if (this._isAdaptivityEnabled()) {
      this._$adaptiveContainer = g("<div>").addClass(Cd);
      var t = this._renderHamburgerButton();
      this._treeView = this._createComponent(g("<div>"), Ul, this._getTreeViewOptions()), this._overlay = this._createComponent(g("<div>"), tn, this._getAdaptiveOverlayOptions()), this._overlay.$content().append(this._treeView.$element()).addClass(Cd).addClass(this.option("cssClass")), this._overlay.$wrapper().addClass(s9), this._$adaptiveContainer.append(t), this._$adaptiveContainer.append(this._overlay.$element()), this.$element().append(this._$adaptiveContainer), this._updateItemsWidthCache(), this._dimensionChanged();
    }
  }
  _getDelay(t) {
    var i = this.option("showFirstSubmenuMode").delay;
    return x(i) ? De(i) ? i[t] : i : h9[t];
  }
  _keyboardHandler(t) {
    return super._keyboardHandler(t, !!this._visibleSubmenu);
  }
  _renderContainer() {
    var t = g("<div>");
    return t.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? hS : i9), super._renderContainer(t);
  }
  _renderSubmenuItems(t, i) {
    var n = this._createSubmenu(t, i);
    return this._submenus.push(n), this._renderBorderElement(i), n;
  }
  _getKeyboardListeners() {
    return super._getKeyboardListeners().concat(this._visibleSubmenu);
  }
  _createSubmenu(t, i) {
    var n = g("<div>").addClass(md).appendTo(i), r = this._getChildNodes(t), a = this._createComponent(n, sf, T(this._getSubmenuOptions(), {
      _dataAdapter: this._dataAdapter,
      _parentKey: t.internalFields.key,
      items: r,
      onHoverStart: this._clearTimeouts.bind(this),
      position: this.getSubmenuPosition(i)
    }));
    return this._attachSubmenuHandlers(i, a), a;
  }
  _getSubmenuOptions() {
    var t = g("<div>"), i = this._isMenuHorizontal();
    return {
      itemTemplate: this.option("itemTemplate"),
      target: t,
      orientation: this.option("orientation"),
      selectionMode: this.option("selectionMode"),
      cssClass: this.option("cssClass"),
      selectByClick: this.option("selectByClick"),
      hoverStateEnabled: this.option("hoverStateEnabled"),
      activeStateEnabled: this.option("activeStateEnabled"),
      focusStateEnabled: this.option("focusStateEnabled"),
      animation: this.option("animation"),
      showSubmenuMode: this.option("showSubmenuMode"),
      displayExpr: this.option("displayExpr"),
      disabledExpr: this.option("disabledExpr"),
      selectedExpr: this.option("selectedExpr"),
      itemsExpr: this.option("itemsExpr"),
      onFocusedItemChanged: (n) => {
        n.component.option("visible") && this.option("focusedElement", n.component.option("focusedElement"));
      },
      onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),
      onItemClick: this._nestedItemOnItemClickHandler.bind(this),
      onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),
      onLeftFirstItem: i ? null : this._moveMainMenuFocus.bind(this, dr),
      onLeftLastItem: i ? null : this._moveMainMenuFocus.bind(this, uo),
      onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, i ? dr : null),
      onExpandLastSubmenu: i ? this._moveMainMenuFocus.bind(this, uo) : null
    };
  }
  _getShowFirstSubmenuMode() {
    if (!this._isDesktopDevice())
      return "onClick";
    var t = this.option("showFirstSubmenuMode");
    return De(t) ? t.name : t;
  }
  _moveMainMenuFocus(t) {
    var i = this._getAvailableItems(), n = i.length, r = i.filter(".".concat(lf)).eq(0), a = i.index(r);
    this._hideSubmenu(this._visibleSubmenu), a += t === dr ? -1 : 1, a >= n ? a = 0 : a < 0 && (a = n - 1);
    var o = i.eq(a);
    this.option("focusedElement", Ie(o));
  }
  _nestedItemOnSelectionChangedHandler(t) {
    var i = t.addedItems.length && t.addedItems[0], n = sf.getInstance(t.element), r = this._actions.onSelectionChanged;
    r(t), i && this._clearSelectionInSubmenus(i[0], n), this._clearRootSelection(), this._setOptionWithoutOptionChange("selectedItem", i);
  }
  _clearSelectionInSubmenus(t, i) {
    var n = !arguments.length;
    B(this._submenus, (r, a) => {
      var o = a._itemContainer(), s = !o.is(i && i._itemContainer()), l = o.find(".".concat(this._selectedItemClass()));
      if (s && l.length || n) {
        l.removeClass(this._selectedItemClass());
        var u = this._getItemData(l);
        u && (u.selected = !1), a._clearSelectedItems();
      }
    });
  }
  _clearRootSelection() {
    var t = this.$element().find(".".concat(pS)).first().children().children().filter(".".concat(this._selectedItemClass()));
    if (t.length) {
      var i = this._getItemData(t);
      i.selected = !1, t.removeClass(this._selectedItemClass());
    }
  }
  _nestedItemOnItemClickHandler(t) {
    this._actions.onItemClick(t);
  }
  _nestedItemOnItemRenderedHandler(t) {
    this._actions.onItemRendered(t);
  }
  _attachSubmenuHandlers(t, i) {
    var n = i.getOverlayContent(), r = n.find(".".concat(r9)), a = oe(bc, this.NAME + "_submenu");
    i.option({
      onShowing: this._submenuOnShowingHandler.bind(this, t, i),
      onShown: this._submenuOnShownHandler.bind(this, t, i),
      onHiding: this._submenuOnHidingHandler.bind(this, t, i),
      onHidden: this._submenuOnHiddenHandler.bind(this, t, i)
    }), B(r, (o, s) => {
      w.off(s, a), w.on(s, a, null, this._submenuMouseLeaveHandler.bind(this, t));
    });
  }
  _submenuOnShowingHandler(t, i) {
    var n = t.children(".".concat(uf));
    this._actions.onSubmenuShowing({
      rootItem: Ie(t),
      submenu: i
    }), n.show(), t.addClass(lf);
  }
  _submenuOnShownHandler(t, i) {
    this._actions.onSubmenuShown({
      rootItem: Ie(t),
      submenu: i
    });
  }
  _submenuOnHidingHandler(t, i, n) {
    var r = t.children(".".concat(uf)), a = n;
    a.rootItem = Ie(t), a.submenu = i, this._actions.onSubmenuHiding(a), n = a, n.cancel || (this._visibleSubmenu === i && (this._visibleSubmenu = null), r.hide(), t.removeClass(lf));
  }
  _submenuOnHiddenHandler(t, i) {
    this._actions.onSubmenuHidden({
      rootItem: Ie(t),
      submenu: i
    });
  }
  _submenuMouseLeaveHandler(t, i) {
    var n = g(i.relatedTarget).parents(".".concat(md))[0], r = this._getSubmenuByRootElement(t).getOverlayContent()[0];
    this.option("hideSubmenuOnMouseLeave") && n !== r && (this._clearTimeouts(), setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay("hide")));
  }
  _hideSubmenuAfterTimeout() {
    if (this._visibleSubmenu) {
      var t = g(this._visibleSubmenu.$element().context).hasClass(fS), i = this._visibleSubmenu.getOverlayContent().find(".".concat(fS)).length, n = this._visibleSubmenu.getOverlayContent().get(0).querySelector(":hover");
      !n && !i && !t && this._visibleSubmenu.hide();
    }
  }
  _getSubmenuByRootElement(t) {
    if (!t)
      return !1;
    var i = t.children(".".concat(md));
    return i.length && sf.getInstance(i);
  }
  getSubmenuPosition(t) {
    var i = this._isMenuHorizontal(), n = this.option("submenuDirection").toLowerCase(), r = this.option("rtlEnabled"), a = {
      collision: "flip",
      of: t
    };
    switch (n) {
      case "leftortop":
        a.at = "left top", a.my = i ? "left bottom" : "right top";
        break;
      case "rightorbottom":
        a.at = i ? "left bottom" : "right top", a.my = "left top";
        break;
      default:
        i ? (a.at = r ? "right bottom" : "left bottom", a.my = r ? "right top" : "left top") : (a.at = r ? "left top" : "right top", a.my = r ? "right top" : "left top");
    }
    return a;
  }
  _renderBorderElement(t) {
    g("<div>").appendTo(t).addClass(uf).hide();
  }
  _itemPointerDownHandler(t) {
    var i = g(t.target), n = i.closest(this._itemElements());
    if (n.hasClass("dx-menu-item-has-submenu")) {
      this.option("focusedElement", null);
      return;
    }
    super._itemPointerDownHandler(t);
  }
  _hoverStartHandler(t) {
    var i = oe(je.move, this.NAME), n = this._getItemElementByEventArgs(t), r = this._dataAdapter.getNodeByItem(this._getItemData(n)), a = x(t.buttons) && t.buttons === 1 || !x(t.buttons) && t.which === 1;
    if (!this._isItemDisabled(n)) {
      if (w.off(n, i), !this._hasChildren(r)) {
        this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay("hide"));
        return;
      }
      if (this._getShowFirstSubmenuMode() === "onHover" && !a) {
        var o = this._getSubmenuByElement(n);
        this._clearTimeouts(), o.isOverlayVisible() || (w.on(n, i, this._itemMouseMoveHandler.bind(this)), this._showSubmenuTimer = this._getDelay("hide"));
      }
    }
  }
  _hoverEndHandler(t) {
    var i = this._getItemElementByEventArgs(t), n = g(t.relatedTarget);
    super._hoverEndHandler(t), this._clearTimeouts(), !this._isItemDisabled(i) && (n.hasClass(n9) || this.option("hideSubmenuOnMouseLeave") && !n.hasClass(pS) && (this._hideSubmenuTimer = setTimeout(() => {
      this._hideSubmenuAfterTimeout();
    }, this._getDelay("hide"))));
  }
  _hideVisibleSubmenu() {
    return this._visibleSubmenu ? (this._hideSubmenu(this._visibleSubmenu), !0) : !1;
  }
  _showSubmenu(t) {
    var i = this._getSubmenuByElement(t);
    this._visibleSubmenu !== i && this._hideVisibleSubmenu(), i && (this._clearTimeouts(), this.focus(), i.show(), this.option("focusedElement", i.option("focusedElement"))), this._visibleSubmenu = i, this._hoveredRootItem = t;
  }
  _hideSubmenu(t) {
    t && t.hide(), this._visibleSubmenu === t && (this._visibleSubmenu = null), this._hoveredRootItem = null;
  }
  _itemMouseMoveHandler(t) {
    if (!(t.pointers && t.pointers.length)) {
      var i = g(t.currentTarget);
      x(this._showSubmenuTimer) && (this._clearTimeouts(), this._showSubmenuTimer = setTimeout(() => {
        var n = this._getSubmenuByElement(i);
        n && !n.isOverlayVisible() && this._showSubmenu(i);
      }, this._getDelay("show")));
    }
  }
  _clearTimeouts() {
    clearTimeout(this._hideSubmenuTimer), clearTimeout(this._showSubmenuTimer);
  }
  _getSubmenuByElement(t, i) {
    var n = this._getSubmenuByRootElement(t);
    if (n)
      return n;
    i = i || this._getItemData(t);
    var r = this._dataAdapter.getNodeByItem(i);
    return this._hasChildren(r) && this._renderSubmenuItems(r, t);
  }
  _updateSubmenuVisibilityOnClick(t) {
    var i = t.args.length && t.args[0];
    if (!(!i || this._disabledGetter(i.itemData))) {
      var n = g(i.itemElement), r = this._getSubmenuByElement(n, i.itemData);
      if (this._updateSelectedItemOnClick(t), this._visibleSubmenu)
        if (this._visibleSubmenu === r) {
          this.option("showFirstSubmenuMode") === "onClick" && this._hideSubmenu(this._visibleSubmenu);
          return;
        } else
          this._hideSubmenu(this._visibleSubmenu);
      if (r && !r.isOverlayVisible()) {
        this._showSubmenu(n);
        return;
      }
    }
  }
  _optionChanged(t) {
    if (_S.indexOf(t.name) >= 0) {
      this._initActions();
      return;
    }
    switch (t.name) {
      case "orientation":
      case "submenuDirection":
        this._invalidate();
        break;
      case "showFirstSubmenuMode":
      case "hideSubmenuOnMouseLeave":
        break;
      case "showSubmenuMode":
        this._changeSubmenusOption(t.name, t.value);
        break;
      case "adaptivityEnabled":
        t.value ? this._initAdaptivity() : this._removeAdaptivity();
        break;
      case "width":
        this._isAdaptivityEnabled() && (this._treeView.option(t.name, t.value), this._overlay.option(t.name, t.value)), super._optionChanged(t), this._dimensionChanged();
        break;
      case "animation":
        this._isAdaptivityEnabled() && this._treeView.option("animationEnabled", !!t.value), super._optionChanged(t);
        break;
      default:
        this._isAdaptivityEnabled() && (t.name === t.fullName || t.name === "items") && this._treeView.option(t.fullName, t.value), super._optionChanged(t);
    }
  }
  _changeSubmenusOption(t, i) {
    B(this._submenus, (n, r) => {
      r.option(t, i);
    });
  }
  selectItem(t) {
    this._hideSubmenu(this._visibleSubmenu), super.selectItem(t);
  }
  unselectItem(t) {
    this._hideSubmenu(this._visibleSubmenu), super.selectItem(t);
  }
}
We("dxMenu", Hg);
var df = {
  "=": "filter-operation-equals",
  "<>": "filter-operation-not-equals",
  "<": "filter-operation-less",
  "<=": "filter-operation-less-equal",
  ">": "filter-operation-greater",
  ">=": "filter-operation-greater-equal",
  default: "filter-operation-default",
  notcontains: "filter-operation-not-contains",
  contains: "filter-operation-contains",
  startswith: "filter-operation-starts-with",
  endswith: "filter-operation-ends-with",
  between: "filter-operation-between"
}, vS = {
  "=": "equal",
  "<>": "notEqual",
  "<": "lessThan",
  "<=": "lessThanOrEqual",
  ">": "greaterThan",
  ">=": "greaterThanOrEqual",
  startswith: "startsWith",
  contains: "contains",
  notcontains: "notContains",
  endswith: "endsWith",
  between: "between"
}, p9 = 700, bO = 1, Ks = "filter-row", Ku = "filter-range-overlay", Uu = "filter-range-start", f9 = "filter-range-end", mS = "dx-menu", CS = "dx-editor-with-menu", Yr = "dx-editor-container", zg = "dx-editor-cell", g9 = "dx-filter-menu", _9 = "dx-apply-button", cf = "dx-highlight-outline", xS = "dx-focused", v9 = "dx-cell-focus-disabled", hf = "dx-filter-range-content", pf = "dx-filter-modified", Ss = "input:not([type='hidden'])", m9 = ["date", "datetime", "number"];
function Co(e) {
  return e.option("filterRow.applyFilter") === "onClick";
}
var ff = function(e) {
  var t = e && e.children(), i = t && t.data("dxComponents"), n = i && i.length && t.data(i[0]);
  if (n instanceof nn)
    return n;
}, C9 = function() {
  var e = function(a, o) {
    var s = "", l = "", u = t(a, o), d = ae.getFormatOptionsByColumn(o, "filterRow");
    return Array.isArray(u) ? (s = ae.formatValue(u[0], d), l = ae.formatValue(u[1], d), l !== "" && (s += " - " + l)) : x(u) && (s = ae.formatValue(u, d)), s;
  };
  function t(a, o) {
    if (o)
      return Co(a) && o.bufferedFilterValue !== void 0 ? o.bufferedFilterValue : o.filterValue;
  }
  var i = function(a, o) {
    if (o)
      return Co(a) && o.bufferedSelectedFilterOperation !== void 0 ? o.bufferedSelectedFilterOperation : o.selectedFilterOperation;
  }, n = function(a, o, s) {
    var l = a._columnsController.columnOption(o), u = t(a, l), d = s.closest("." + a.addWidgetPrefix(Ku)).length, c = s.hasClass(a.addWidgetPrefix(Uu));
    return u && Array.isArray(u) && i(a, l) === "between" ? c ? u[0] : u[1] : !d && function(h, p) {
      return p && m9.indexOf(p.dataType) >= 0 && Array.isArray(h) ? !1 : h !== void 0;
    }(u, l) ? u : null;
  }, r = function(a, o) {
    var s = o.value === "" ? null : o.value, l = o.container, u = a._columnsController.columnOption(o.column.index), d = n(a, u.index, l);
    if (!(!x(d) && !x(s))) {
      a._applyFilterViewController.setHighLight(l, d !== s);
      var c = Co(a) ? "bufferedFilterValue" : "filterValue", h = function(v, m, C, b) {
        if (i(v, C) === "between") {
          var A = t(v, C);
          return b.hasClass(v.addWidgetPrefix(Uu)) ? [m, Array.isArray(A) ? A[1] : void 0] : [Array.isArray(A) ? A[0] : A, m];
        }
        return m;
      }(a, s, u, l), p = i(a, u) === "between", f = o.notFireEvent || p && Array.isArray(h) && h.indexOf(void 0) >= 0;
      a._columnsController.columnOption(u.index, c, h, f);
    }
  };
  return {
    _updateEditorValue: function(a, o) {
      var s = ff(o);
      s && s.option("value", n(this, a.index, o));
    },
    _columnOptionChanged: function(a) {
      var o = a.optionNames, s, l, u, d;
      if (ae.checkChanges(o, ["filterValue", "bufferedFilterValue", "selectedFilterOperation", "bufferedSelectedFilterOperation", "filterValues", "filterType"]) && a.columnIndex !== void 0) {
        var c = this._columnsController.getVisibleIndex(a.columnIndex), h = this._columnsController.columnOption(a.columnIndex);
        if (s = this._getCellElement(this.element().find("." + this.addWidgetPrefix(Ks)).index(), c) || g(), l = s.find("." + Yr).first(), o.filterValue || o.bufferedFilterValue) {
          this._updateEditorValue(h, l);
          var p = s.find("." + this.addWidgetPrefix(Ku)).data("dxOverlay");
          p && (u = p.$content().find("." + Yr), this._updateEditorValue(h, u.first()), this._updateEditorValue(h, u.last())), (!p || !p.option("visible")) && this._updateFilterRangeContent(s, e(this, h));
        }
        (o.selectedFilterOperation || o.bufferedSelectedFilterOperation) && c >= 0 && h && (d = s.find("." + mS), d.length && (this._updateFilterOperationChooser(d, h, l), i(this, h) === "between" ? this._renderFilterRangeContent(s, h) : l.find("." + hf).length && (this._renderEditor(l, this._getEditorOptions(l, h)), this._hideFilterRange())));
        return;
      }
      this.callBase(a);
    },
    _renderCore: function() {
      return this._filterRangeOverlayInstance = null, this.callBase.apply(this, arguments);
    },
    _resizeCore: function() {
      this.callBase.apply(this, arguments), this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint();
    },
    isFilterRowVisible: function() {
      return this._isElementVisible(this.option("filterRow"));
    },
    isVisible: function() {
      return this.callBase() || this.isFilterRowVisible();
    },
    init: function() {
      this.callBase(), this._applyFilterViewController = this.getController("applyFilter");
    },
    _initFilterRangeOverlay: function(a, o) {
      var s = this, l = {}, u = a.find(".dx-editor-container"), d = s.addWidgetPrefix(Ku), c = g("<div>").addClass(d).appendTo(a);
      return s._createComponent(c, tn, {
        height: "auto",
        shading: !1,
        showTitle: !1,
        focusStateEnabled: !1,
        hideOnOutsideClick: !0,
        wrapperAttr: {
          class: d
        },
        animation: !1,
        position: {
          my: "top",
          at: "top",
          of: u.length && u || a,
          offset: "0 -1"
        },
        contentTemplate: function(h) {
          var p, f = g("<div>").addClass(Yr + " " + s.addWidgetPrefix(Uu)).appendTo(h);
          return o = s._columnsController.columnOption(o.index), p = s._getEditorOptions(f, o), p.sharedData = l, s._renderEditor(f, p), w.on(f.find(Ss), "keydown", function(v) {
            var m = a.find("[tabindex]").not(v.target).first();
            ht(v) === "tab" && v.shiftKey && (v.preventDefault(), s._hideFilterRange(), m.length || (m = a.prev().find("[tabindex]").last()), w.trigger(m, "focus"));
          }), f = g("<div>").addClass(Yr + " " + s.addWidgetPrefix(f9)).appendTo(h), p = s._getEditorOptions(f, o), p.sharedData = l, s._renderEditor(f, p), w.on(f.find(Ss), "keydown", function(v) {
            ht(v) === "tab" && !v.shiftKey && (v.preventDefault(), s._hideFilterRange(), w.trigger(a.next().find("[tabindex]").first(), "focus"));
          }), g(h).addClass(s.getWidgetContainerClass());
        },
        onShown: function(h) {
          var p = h.component.$content().find("." + Yr).first();
          w.trigger(p.find(Ss), "focus");
        },
        onHidden: function() {
          o = s._columnsController.columnOption(o.index), a.find("." + mS).parent().addClass(CS), i(s, o) === "between" && (s._updateFilterRangeContent(a, e(s, o)), s.component.updateDimensions());
        }
      });
    },
    _updateFilterRangeOverlay: function(a) {
      var o = this._filterRangeOverlayInstance;
      o && o.option(a);
    },
    _showFilterRange: function(a, o) {
      var s = a.children("." + this.addWidgetPrefix(Ku)), l = s.length && s.data("dxOverlay");
      !l && o && (l = this._initFilterRangeOverlay(a, o)), l.option("visible") || (this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide(), this._filterRangeOverlayInstance = l, this._updateFilterRangeOverlay({
        width: Ge(a, !0) + bO
      }), this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show());
    },
    _hideFilterRange: function() {
      var a = this._filterRangeOverlayInstance;
      a && a.hide();
    },
    getFilterRangeOverlayInstance: function() {
      return this._filterRangeOverlayInstance;
    },
    _createRow: function(a) {
      var o = this.callBase(a);
      return a.rowType === "filter" && (o.addClass(this.addWidgetPrefix(Ks)), this.option("useLegacyKeyboardNavigation") || w.on(o, "keydown", (s) => lv("filterRow", this, s))), o;
    },
    _getRows: function() {
      var a = this.callBase();
      return this.isFilterRowVisible() && a.push({
        rowType: "filter"
      }), a;
    },
    _renderFilterCell: function(a, o) {
      var s = o.column, l = g(a);
      this.component.option("showColumnHeaders") && this.setAria("describedby", s.headerId, l), this.setAria("label", q.format("dxDataGrid-ariaFilterCell"), l), l.addClass(zg);
      var u = g("<div>").appendTo(l), d = g("<div>").addClass(Yr).appendTo(u);
      if (i(this, s) === "between")
        this._renderFilterRangeContent(l, s);
      else {
        var c = this._getEditorOptions(d, s);
        this._renderEditor(d, c);
      }
      var h = s.alignment;
      h && h !== "center" && l.find(Ss).first().css("textAlign", s.alignment), s.filterOperations && s.filterOperations.length && this._renderFilterOperationChooser(u, s, d);
    },
    _renderCellContent: function(a, o) {
      var s = this, l = o.column;
      if (o.rowType === "filter") {
        if (l.command)
          a.html("&nbsp;");
        else if (l.allowFiltering) {
          s.renderTemplate(a, s._renderFilterCell.bind(s), o).done(() => {
            s._updateCell(a, o);
          });
          return;
        }
      }
      this.callBase.apply(this, arguments);
    },
    _getEditorOptions: function(a, o) {
      var s = this, l = {
        editorOptions: {
          inputAttr: s._getFilterInputAccessibilityAttributes(o)
        }
      }, u = T(l, o, {
        value: n(s, o.index, a),
        parentType: "filterRow",
        showAllText: s.option("filterRow.showAllText"),
        updateValueTimeout: s.option("filterRow.applyFilter") === "onClick" ? 0 : p9,
        width: null,
        setValue: function(d, c) {
          r(s, {
            column: o,
            value: d,
            container: a,
            notFireEvent: c
          });
        }
      });
      return i(s, o) === "between" && (a.hasClass(s.addWidgetPrefix(Uu)) ? u.placeholder = s.option("filterRow.betweenStartText") : u.placeholder = s.option("filterRow.betweenEndText")), u;
    },
    _getFilterInputAccessibilityAttributes: function(a) {
      var o = q.format("dxDataGrid-ariaFilterCell");
      return this.component.option("showColumnHeaders") ? {
        "aria-label": o,
        "aria-describedby": a.headerId
      } : {
        "aria-label": o
      };
    },
    _renderEditor: function(a, o) {
      a.empty();
      var s = g("<div>").appendTo(a), l = this.getController("editorFactory"), u = this.getController("data").dataSource(), d = this.getController("applyFilter");
      if (o.lookup && this.option("syncLookupFilterValues")) {
        d.setCurrentColumnForFiltering(o);
        var c = this.getController("data").getCombinedFilter();
        d.setCurrentColumnForFiltering(null);
        var h = ae.getWrappedLookupDataSource(o, u, c), p = ue({}, o, {
          lookup: ue({}, o.lookup, {
            dataSource: h
          })
        });
        return l.createEditor(s, p);
      } else
        return l.createEditor(s, o);
    },
    _renderFilterRangeContent: function(a, o) {
      var s = this, l = a.find("." + Yr).first();
      l.empty();
      var u = g("<div>").addClass(hf).attr("tabindex", this.option("tabIndex"));
      w.on(u, "focusin", function() {
        s._showFilterRange(a, o);
      }), u.appendTo(l), s._updateFilterRangeContent(a, e(s, o));
    },
    _updateFilterRangeContent: function(a, o) {
      var s = a.find("." + hf);
      s.length && (o === "" ? s.html("&nbsp;") : s.text(o));
    },
    _updateFilterOperationChooser: function(a, o, s) {
      var l = this, u, d = function() {
        var c = Hg.getInstance(a);
        c && c.option("focusedElement", null), u && l._focusEditor(s);
      };
      l._createComponent(a, Hg, {
        integrationOptions: {},
        activeStateEnabled: !1,
        selectionMode: "single",
        cssClass: l.getWidgetContainerClass() + " " + v9 + " " + g9,
        showFirstSubmenuMode: "onHover",
        hideSubmenuOnMouseLeave: !0,
        items: [{
          disabled: !(o.filterOperations && o.filterOperations.length),
          icon: df[i(l, o) || "default"],
          selectable: !1,
          items: l._getFilterOperationMenuItems(o)
        }],
        onItemClick: function(c) {
          var h = c.itemData.name, p = i(l, o), f = !1, v = Co(l), m = {};
          if (!(c.itemData.items || h && h === p)) {
            if (h ? (m[v ? "bufferedSelectedFilterOperation" : "selectedFilterOperation"] = h, (h === "between" || p === "between") && (f = h === "between", m[v ? "bufferedFilterValue" : "filterValue"] = null)) : (m[v ? "bufferedFilterValue" : "filterValue"] = null, m[v ? "bufferedSelectedFilterOperation" : "selectedFilterOperation"] = o.defaultSelectedFilterOperation || null), l._columnsController.columnOption(o.index, m), l._applyFilterViewController.setHighLight(s, !0), !h) {
              var C = ff(s);
              C && C.NAME === "dxDateBox" && !C.option("isValid") && (C.reset(), C.option("isValid", !0));
            }
            f ? l._showFilterRange(s.closest("." + zg), o) : l._focusEditor(s);
          }
        },
        onSubmenuShowing: function() {
          u = l._isEditorFocused(s), l.getController("editorFactory").loseFocus();
        },
        onSubmenuHiding: function() {
          w.trigger(a, "blur"), d();
        },
        onContentReady: function(c) {
          w.on(a, "blur", () => {
            var h = c.component;
            h._hideSubmenuAfterTimeout(), d();
          });
        },
        rtlEnabled: l.option("rtlEnabled")
      });
    },
    _isEditorFocused: function(a) {
      return a.hasClass(xS) || a.parents("." + xS).length;
    },
    _focusEditor: function(a) {
      this.getController("editorFactory").focus(a), w.trigger(a.find(Ss), "focus");
    },
    _renderFilterOperationChooser: function(a, o, s) {
      var l;
      this.option("filterRow.showOperationChooser") && (a.addClass(CS), l = g("<div>").prependTo(a), this._updateFilterOperationChooser(l, o, s));
    },
    _getFilterOperationMenuItems: function(a) {
      var o = this, s = [{}], l = o.option("filterRow"), u = l && l.operationDescriptions || {};
      if (a.filterOperations && a.filterOperations.length) {
        var d = a.filterOperations.filter(function(c) {
          return x(vS[c]);
        });
        s = wt(d, function(c) {
          var h = vS[c];
          return {
            name: c,
            selected: (i(o, a) || a.defaultFilterOperation) === c,
            text: u[h],
            icon: df[c]
          };
        }), s.push({
          name: null,
          text: l && l.resetOperationText,
          icon: df.default
        });
      }
      return s;
    },
    _handleDataChanged: function(a) {
      var o, s;
      if (this.callBase.apply(this, arguments), (o = a.operationTypes) !== null && o !== void 0 && o.filtering || (s = a.operationTypes) !== null && s !== void 0 && s.fullReload) {
        var l;
        this.updateLookupDataSource((l = a.operationTypes) === null || l === void 0 ? void 0 : l.filtering);
      }
    },
    updateLookupDataSource: function(a) {
      if (this.option("syncLookupFilterValues") && this.element()) {
        var o = this._columnsController.getVisibleColumns(), s = this._dataController.dataSource(), l = this._applyFilterViewController, u = this.element().find("." + this.addWidgetPrefix(Ks)).index();
        u !== -1 && o.forEach((d, c) => {
          if (!(!d.lookup || d.calculateCellValue !== d.defaultCalculateCellValue)) {
            var h = this._getCellElement(u, c), p = ff(h == null ? void 0 : h.find(".dx-editor-container"));
            if (p) {
              l.setCurrentColumnForFiltering(d);
              var f = this._dataController.getCombinedFilter() || null;
              l.setCurrentColumnForFiltering(null);
              var v = p.option("dataSource"), m = !a || !et(v.__dataGridSourceFilter, f);
              if (m) {
                var C = ae.getWrappedLookupDataSource(d, s, f);
                p.option("dataSource", C);
              }
            }
          }
        });
      }
    },
    optionChanged: function(a) {
      switch (a.name) {
        case "filterRow":
        case "showColumnLines":
          this._invalidate(!0, !0), a.handled = !0;
          break;
        case "syncLookupFilterValues":
          a.value ? this.updateLookupDataSource() : this.render(), a.handled = !0;
          break;
        default:
          this.callBase(a);
      }
    }
  };
}(), x9 = {
  skipCalculateColumnFilters: function() {
    return !1;
  },
  _calculateAdditionalFilter: function() {
    if (this.skipCalculateColumnFilters())
      return this.callBase();
    var e = [this.callBase()], t = this._columnsController.getVisibleColumns(null, !0), i = this.getController("applyFilter");
    return B(t, function() {
      var n, r = ((n = i.getCurrentColumnForFiltering()) === null || n === void 0 ? void 0 : n.index) === this.index;
      if (this.allowFiltering && this.calculateFilterExpression && x(this.filterValue) && !r) {
        var a = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, "filterRow");
        e.push(a);
      }
    }), ae.combineFilters(e);
  }
}, y9 = at.ViewController.inherit({
  _getHeaderPanel: function() {
    return this._headerPanel || (this._headerPanel = this.getView("headerPanel")), this._headerPanel;
  },
  setHighLight: function(e, t) {
    Co(this) && (e && e.toggleClass(cf, t) && e.closest("." + zg).toggleClass(pf, t), this._getHeaderPanel().enableApplyButton(t));
  },
  applyFilter: function() {
    var e = this.getController("columns"), t = e.getColumns();
    e.beginUpdate();
    for (var i = 0; i < t.length; i++) {
      var n = t[i];
      n.bufferedFilterValue !== void 0 && (e.columnOption(i, "filterValue", n.bufferedFilterValue), n.bufferedFilterValue = void 0), n.bufferedSelectedFilterOperation !== void 0 && (e.columnOption(i, "selectedFilterOperation", n.bufferedSelectedFilterOperation), n.bufferedSelectedFilterOperation = void 0);
    }
    e.endUpdate(), this.removeHighLights();
  },
  removeHighLights: function() {
    if (Co(this)) {
      var e = this.getView("columnHeadersView").element();
      e.find("." + this.addWidgetPrefix(Ks) + " ." + cf).removeClass(cf), e.find("." + this.addWidgetPrefix(Ks) + " ." + pf).removeClass(pf), this._getHeaderPanel().enableApplyButton(!1);
    }
  },
  setCurrentColumnForFiltering: function(e) {
    this._currentColumn = e;
  },
  getCurrentColumnForFiltering: function() {
    return this._currentColumn;
  }
}), b9 = {
  defaultOptions: function() {
    return {
      syncLookupFilterValues: !0,
      filterRow: {
        visible: !1,
        showOperationChooser: !0,
        showAllText: q.format("dxDataGrid-filterRowShowAllText"),
        resetOperationText: q.format("dxDataGrid-filterRowResetOperationText"),
        applyFilter: "auto",
        applyFilterText: q.format("dxDataGrid-applyFilterText"),
        operationDescriptions: {
          equal: q.format("dxDataGrid-filterRowOperationEquals"),
          notEqual: q.format("dxDataGrid-filterRowOperationNotEquals"),
          lessThan: q.format("dxDataGrid-filterRowOperationLess"),
          lessThanOrEqual: q.format("dxDataGrid-filterRowOperationLessOrEquals"),
          greaterThan: q.format("dxDataGrid-filterRowOperationGreater"),
          greaterThanOrEqual: q.format("dxDataGrid-filterRowOperationGreaterOrEquals"),
          startsWith: q.format("dxDataGrid-filterRowOperationStartsWith"),
          contains: q.format("dxDataGrid-filterRowOperationContains"),
          notContains: q.format("dxDataGrid-filterRowOperationNotContains"),
          endsWith: q.format("dxDataGrid-filterRowOperationEndsWith"),
          between: q.format("dxDataGrid-filterRowOperationBetween"),
          isBlank: q.format("dxFilterBuilder-filterOperationIsBlank"),
          isNotBlank: q.format("dxFilterBuilder-filterOperationIsNotBlank")
        },
        betweenStartText: q.format("dxDataGrid-filterRowOperationBetweenStartText"),
        betweenEndText: q.format("dxDataGrid-filterRowOperationBetweenEndText")
      }
    };
  },
  controllers: {
    applyFilter: y9
  },
  extenders: {
    controllers: {
      data: x9,
      columnsResizer: {
        _startResizing: function() {
          var e = this;
          if (e.callBase.apply(e, arguments), e.isResizing()) {
            var t = e._columnHeadersView.getFilterRangeOverlayInstance();
            if (t) {
              var i = t.$element().closest("td").index();
              (i === e._targetPoint.columnIndex || i === e._targetPoint.columnIndex + 1) && t.$content().hide();
            }
          }
        },
        _endResizing: function() {
          var e = this, t;
          if (e.isResizing()) {
            var i = e._columnHeadersView.getFilterRangeOverlayInstance();
            i && (t = i.$element().closest("td"), e._columnHeadersView._updateFilterRangeOverlay({
              width: Ge(t, !0) + bO
            }), i.$content().show());
          }
          e.callBase.apply(e, arguments);
        }
      },
      editing: {
        updateFieldValue(e) {
          return e.column.lookup && (this._needUpdateLookupDataSource = !0), this.callBase.apply(this, arguments);
        },
        _afterSaveEditData(e) {
          if (this._needUpdateLookupDataSource && !e) {
            var t;
            (t = this.getView("columnHeadersView")) === null || t === void 0 || t.updateLookupDataSource();
          }
          return this._needUpdateLookupDataSource = !1, this.callBase.apply(this, arguments);
        },
        _afterCancelEditData() {
          return this._needUpdateLookupDataSource = !1, this.callBase.apply(this, arguments);
        }
      }
    },
    views: {
      columnHeadersView: C9,
      headerPanel: {
        _getToolbarItems: function() {
          var e = this.callBase(), t = this._prepareFilterItem(e);
          return t.concat(e);
        },
        _prepareFilterItem: function() {
          var e = this, t = [];
          if (e._isShowApplyFilterButton()) {
            var i = e.option("filterRow.applyFilterText"), n = e._columnsController.getColumns(), r = !n.filter(function(o) {
              return o.bufferedFilterValue !== void 0;
            }).length, a = {
              widget: "dxButton",
              options: {
                icon: "apply-filter",
                disabled: r,
                onClick: function() {
                  e._applyFilterViewController.applyFilter();
                },
                hint: i,
                text: i,
                onInitialized: function(o) {
                  g(o.element).addClass(e._getToolbarButtonClass(_9));
                }
              },
              showText: "inMenu",
              name: "applyFilterButton",
              location: "after",
              locateInMenu: "auto",
              sortIndex: 10
            };
            t.push(a);
          }
          return t;
        },
        _isShowApplyFilterButton: function() {
          var e = this.option("filterRow");
          return e && e.visible && e.applyFilter === "onClick";
        },
        init: function() {
          this.callBase(), this._dataController = this.getController("data"), this._applyFilterViewController = this.getController("applyFilter");
        },
        enableApplyButton: function(e) {
          this.setToolbarItemDisabled("applyFilterButton", !e);
        },
        isVisible: function() {
          return this.callBase() || this._isShowApplyFilterButton();
        },
        optionChanged: function(e) {
          e.name === "filterRow" ? (this._invalidate(), e.handled = !0) : this.callBase(e);
        }
      }
    }
  }
};
xe.registerModule("filterRow", b9);
Ia.setEditorClass(Wl);
var yS = "dx-header-filter", bS = "dx-header-filter-menu", S9 = "text";
function SO(e) {
  e = e || [];
  for (var t = 0; t < e.length; t++)
    e[t].selected = !1, SO(e[t].items);
}
function SS(e, t) {
  if (!e.component.option("searchValue")) {
    var i = g(e.element).find(".dx-list-select-all-checkbox").data("dxCheckBox");
    i && t && t.length && i.option("value", void 0);
  }
}
function E9(e, t) {
  var i = t.headerFilter;
  return i && x(i.allowSearch) ? i.allowSearch : e.option("headerFilter.allowSearch");
}
function w9(e, t, i) {
  if (t ^ i) {
    if (e.selected = !0, i && e.items) {
      for (var n = 0; n < e.items.length; n++)
        if (!e.items[n].selected) {
          e.selected = void 0;
          break;
        }
    }
  } else
    (i || e.selected) && (e.selected = !1, SO(e.items));
}
var I9 = at.View.inherit({
  getPopupContainer: function() {
    return this._popupContainer;
  },
  getListContainer: function() {
    return this._listContainer;
  },
  applyHeaderFilter: function(e) {
    var t = this.getListContainer(), i = t.option("searchValue"), n = !i && !e.isFilterBuilder && t.$element().find(".dx-checkbox").eq(0).hasClass("dx-checkbox-checked"), r = [];
    n ? (e.type === "tree" && (e.filterType = "exclude"), Array.isArray(e.filterValues) && (e.filterValues = [])) : e.type === "tree" && (e.filterType && (e.filterType = "include"), function a(o, s, l) {
      B(s, function(u, d) {
        if (d.selected !== void 0 && !!d.selected ^ l) {
          var c = t._getNode(d), h = t._hasChildren(c), p = h && d.items && d.items.some((f) => f.selected);
          if (!i || !p) {
            o.push(d.value);
            return;
          }
        }
        d.items && d.items.length && a(o, d.items, l);
      });
    }(r, t.option("items"), !1), e.filterValues = r), e.filterValues && !e.filterValues.length && (e.filterValues = null), e.apply(), this.hideHeaderFilterMenu();
  },
  showHeaderFilterMenu: function(e, t) {
    if (t) {
      this._initializePopupContainer(t);
      var i = this.getPopupContainer();
      this.hideHeaderFilterMenu(), this.updatePopup(e, t), i.show();
    }
  },
  hideHeaderFilterMenu: function() {
    var e = this.getPopupContainer();
    e && e.hide();
  },
  updatePopup: function(e, t) {
    var i = this.option("showColumnLines"), n = t.alignment === "right" ^ !i ? "left" : "right";
    this._popupContainer.setAria({
      role: "dialog",
      label: q.format("dxDataGrid-headerFilterLabel")
    }), this._popupContainer && (this._cleanPopupContent(), this._popupContainer.option("position", {
      my: n + " top",
      at: n + " bottom",
      of: e,
      collision: "fit fit"
    }));
  },
  _getSearchExpr: function(e) {
    var t = e.lookup, i = e.useDefaultSearchExpr, n = e.headerFilter && e.headerFilter.dataSource;
    if (i || x(n) && !ce(n))
      return S9;
    if (t)
      return t.displayExpr || "this";
    if (e.dataSource) {
      var r = e.dataSource.group;
      if (Array.isArray(r) && r.length > 0)
        return r[0].selector;
      if (ce(r) && !e.remoteFiltering)
        return r;
    }
    return e.dataField || e.selector;
  },
  _cleanPopupContent: function() {
    this._popupContainer && this._popupContainer.$content().empty();
  },
  _initializePopupContainer: function(e) {
    var t = this, i = t.element(), n = t.option("headerFilter"), r = e.headerFilter && e.headerFilter.width || n && n.width, a = e.headerFilter && e.headerFilter.height || n && n.height, o = {
      width: r,
      height: a,
      visible: !1,
      shading: !1,
      showTitle: !1,
      showCloseButton: !1,
      hideOnParentScroll: !1,
      dragEnabled: !1,
      hideOnOutsideClick: !0,
      wrapperAttr: {
        class: bS
      },
      focusStateEnabled: !1,
      toolbarItems: [{
        toolbar: "bottom",
        location: "after",
        widget: "dxButton",
        options: {
          text: n.texts.ok,
          onClick: function() {
            t.applyHeaderFilter(e);
          }
        }
      }, {
        toolbar: "bottom",
        location: "after",
        widget: "dxButton",
        options: {
          text: n.texts.cancel,
          onClick: function() {
            t.hideHeaderFilterMenu();
          }
        }
      }],
      resizeEnabled: !0,
      onShowing: function(s) {
        s.component.$content().parent().addClass("dx-dropdowneditor-overlay"), t._initializeListContainer(e), e.onShowing && e.onShowing(s);
      },
      onShown: function() {
        t.getListContainer().focus();
      },
      onHidden: e.onHidden,
      onInitialized: function(s) {
        var l = s.component;
        l.option("animation", l._getDefaultOptions().animation);
      }
    };
    x(t._popupContainer) ? t._popupContainer.option(o) : t._popupContainer = t._createComponent(i, an, o);
  },
  _initializeListContainer: function(e) {
    var t = this, i = t._popupContainer.$content(), n = {
      searchEnabled: E9(t, e),
      searchTimeout: t.option("headerFilter.searchTimeout"),
      searchMode: e.headerFilter && e.headerFilter.searchMode || "",
      dataSource: e.dataSource,
      onContentReady: function() {
        t.renderCompleted.fire();
      },
      itemTemplate: function(a, o, s) {
        var l = g(s);
        return e.encodeHtml ? l.text(a.text) : l.html(a.text);
      }
    };
    function r(a) {
      a.fullName === "searchValue" && !e.isFilterBuilder && t.option("headerFilter.hideSelectAllOnSearch") !== !1 && (e.type === "tree" ? a.component.option("showCheckBoxesMode", a.value ? "normal" : "selectAll") : a.component.option("selectionMode", a.value ? "multiple" : "all"));
    }
    e.type === "tree" ? t._listContainer = t._createComponent(g("<div>").appendTo(i), Ul, T(n, {
      showCheckBoxesMode: e.isFilterBuilder ? "normal" : "selectAll",
      onOptionChanged: r,
      keyExpr: "id"
    })) : t._listContainer = t._createComponent(g("<div>").appendTo(i), jo, T(n, {
      searchExpr: t._getSearchExpr(e),
      pageLoadMode: "scrollBottom",
      showSelectionControls: !0,
      selectionMode: e.isFilterBuilder ? "multiple" : "all",
      onOptionChanged: r,
      onSelectionChanged: function(a) {
        var o = a.component.option("items"), s = a.component.option("selectedItems");
        if (!a.component._selectedItemsUpdating && !a.component.option("searchValue") && !e.isFilterBuilder) {
          var l = e.filterValues || [], u = e.filterType === "exclude";
          s.length === 0 && o.length && (l.length <= 1 || u && l.length === o.length - 1) ? (e.filterType = "include", e.filterValues = []) : s.length === o.length && (e.filterType = "exclude", e.filterValues = []);
        }
        B(o, function(d, c) {
          var h = ae.getIndexByKey(c, s, null) >= 0, p = !!c.selected;
          if (p !== h) {
            c.selected = h, e.filterValues = e.filterValues || [];
            var f = ae.getIndexByKey(c.value, e.filterValues, null);
            f >= 0 && e.filterValues.splice(f, 1), h ^ e.filterType === "exclude" && e.filterValues.push(c.value);
          }
        }), SS(a, e.filterValues);
      },
      onContentReady: function(a) {
        var o = a.component, s = o.option("items"), l = [];
        B(s, function() {
          this.selected && l.push(this);
        }), o._selectedItemsUpdating = !0, o.option("selectedItems", l), o._selectedItemsUpdating = !1, SS(a, e.filterValues);
      }
    }));
  },
  _renderCore: function() {
    this.element().addClass(bS);
  }
}), qc = function(e) {
  return x(e.allowHeaderFiltering) ? e.allowHeaderFiltering : e.allowFiltering;
}, EO = {
  _applyColumnState: function(e) {
    var t, i = e.rootElement, n = e.column;
    if (e.name === "headerFilter") {
      if (i.find("." + yS).remove(), qc(n)) {
        t = this.callBase(e).toggleClass("dx-header-filter-empty", this._isHeaderFilterEmpty(n)), this.option("useLegacyKeyboardNavigation") || t.attr("tabindex", this.option("tabindex") || 0);
        var r = q.format("dxDataGrid-headerFilterIndicatorLabel", n.caption);
        t.attr("aria-label", r), t.attr("aria-haspopup", "dialog"), t.attr("role", "button");
      }
      return t;
    }
    return this.callBase(e);
  },
  _isHeaderFilterEmpty: function(e) {
    return !e.filterValues || !e.filterValues.length;
  },
  _getIndicatorClassName: function(e) {
    return e === "headerFilter" ? yS : this.callBase(e);
  },
  _renderIndicator: function(e) {
    var t = e.container, i = e.indicator;
    if (e.name === "headerFilter") {
      var n = this.option("rtlEnabled");
      if (t.children().length && (!n && e.columnAlignment === "right" || n && e.columnAlignment === "left")) {
        t.prepend(i);
        return;
      }
    }
    this.callBase(e);
  },
  optionChanged: function(e) {
    if (e.name === "headerFilter") {
      var t = this.name === "columnHeadersView";
      this._invalidate(t, t), e.handled = !0;
    } else
      this.callBase(e);
  }
}, T9 = {
  month: function(e) {
    return Pe.getMonthNames()[e - 1];
  },
  quarter: function(e) {
    return Pe.format(new Date(2e3, 3 * e - 1), "quarter");
  }
};
function wO(e, t, i) {
  return t = t || [], i = i || [], e.forEach((n) => {
    if (x(n.key)) {
      var r = t.length === 1;
      if (t.push(r ? n.key - 1 : n.key), n.items)
        wO(n.items, t, i);
      else {
        var a = new Date(Date.UTC.apply(Date, t));
        i.push(a);
      }
      t.pop();
    } else
      i.push(null);
  }), i;
}
function D9(e, t) {
  var i = wO(e), n = ui(i), r = ae.getHeaderFilterGroupParameters(ue({}, t, {
    calculateCellValue: (a) => a
  }));
  return Qn.queryByOptions(n, {
    group: r
  }).toArray();
}
function A9(e) {
  return (e == null ? void 0 : e.slice(-1)) === "Z" || (e == null ? void 0 : e.slice(-3)) === "'Z'";
}
var O9 = at.ViewController.inherit({
  init: function() {
    this._columnsController = this.getController("columns"), this._dataController = this.getController("data"), this._headerFilterView = this.getView("headerFilterView");
  },
  _updateSelectedState: function(e, t) {
    for (var i = e.length, n = t.filterType === "exclude"; i--; ) {
      var r = e[i];
      "items" in e[i] && this._updateSelectedState(e[i].items, t), w9(r, ae.getIndexByKey(e[i].value, t.filterValues, null) > -1, n);
    }
  },
  _normalizeGroupItem: function(e, t, i) {
    var n, r, a = i.path, o = i.valueSelector, s = i.displaySelector, l = i.column;
    return o && s ? (n = o(e), r = s(e)) : (n = e.key, r = n), De(e) ? e = T({}, e) : e = {}, a.push(n), a.length === 1 ? e.value = a[0] : e.value = a.join("/"), e.text = this.getHeaderItemText(r, l, t, i.headerFilterOptions), e;
  },
  getHeaderItemText: function(e, t, i, n) {
    var r = ae.formatValue(e, function(a, o, s) {
      var l = Fo.getGroupInterval(o), u = ae.getFormatOptionsByColumn(o, "headerFilter");
      return l && (u.groupInterval = l[s], ae.isDateType(o.dataType) ? u.format = T9[l[s]] : o.dataType === "number" && (u.getDisplayFormat = function() {
        var d = {
          format: o.format,
          target: "headerFilter"
        }, c = ae.formatValue(a, d), h = a + l[s], p = ae.formatValue(h, d);
        return c && p ? c + " - " + p : "";
      })), u;
    }(e, t, i));
    return r || (r = n.texts.emptyValue), r;
  },
  _processGroupItems: function(e, t, i, n) {
    var r, a, o = n.column, s = o.lookup, l = n.level;
    i = i || [], t = t || 0, s && (r = tt(s.displayExpr), a = tt(s.valueExpr));
    for (var u = 0; u < e.length; u++)
      e[u] = this._normalizeGroupItem(e[u], t, {
        column: n.column,
        headerFilterOptions: n.headerFilterOptions,
        displaySelector: r,
        valueSelector: a,
        path: i
      }), "items" in e[u] && (t === l || !x(e[u].value) ? delete e[u].items : this._processGroupItems(e[u].items, t + 1, i, n)), i.pop();
  },
  getDataSource: function(e) {
    var t, i = this._dataController.dataSource(), n = i == null ? void 0 : i.remoteOperations().grouping, r = ae.getHeaderFilterGroupParameters(e, n), a = (t = e.headerFilter) === null || t === void 0 ? void 0 : t.dataSource, o = this.option("headerFilter"), s = !1, l = {
      component: this.component
    };
    if (i) {
      if (x(a) && !ce(a))
        l.dataSource = Uo(a);
      else if (e.lookup)
        if (s = !0, this.option("syncLookupFilterValues")) {
          this._currentColumn = e;
          var u = this._dataController.getCombinedFilter();
          this._currentColumn = null, l.dataSource = ae.getWrappedLookupDataSource(e, i, u);
        } else
          l.dataSource = ae.normalizeLookupDataSource(e.lookup);
      else {
        var d = Array.isArray(r) ? r.length - 1 : 0;
        this._currentColumn = e;
        var c = this._dataController.getCombinedFilter();
        this._currentColumn = null, l.dataSource = {
          filter: c,
          group: r,
          useDefaultSearch: !0,
          load: (f) => {
            var v = new U();
            return f.dataField = e.dataField || e.name, i.load(f).done(function(m) {
              var C = n && A9(e.serializationFormat) && d > 3;
              C && (m = D9(m, e)), p._processGroupItems(m, null, null, {
                level: d,
                column: e,
                headerFilterOptions: o
              }), v.resolve(m);
            }).fail(v.reject), v;
          }
        };
      }
      ce(a) && a.call(e, l);
      var h = l.dataSource.postProcess, p = this;
      return l.dataSource.postProcess = function(f) {
        var v = f;
        return s && (v = v.filter((m) => m[e.lookup.valueExpr] !== null), this.pageIndex() === 0 && !this.searchValue() && (v = v.slice(0), v.unshift(null)), p._processGroupItems(v, null, null, {
          level: 0,
          column: e,
          headerFilterOptions: o
        })), v = h && h.call(this, v) || v, p._updateSelectedState(v, e), v;
      }, l.dataSource;
    }
  },
  getCurrentColumn: function() {
    return this._currentColumn;
  },
  showHeaderFilterMenu: function(e, t) {
    var i = this._columnsController, n = T(!0, {}, this._columnsController.getColumns()[e]);
    if (n) {
      var r = i.getVisibleIndex(e), a = t ? this.getView("headerPanel") : this.getView("columnHeadersView"), o = o || a.getColumnElements().eq(t ? n.groupIndex : r);
      this.showHeaderFilterMenuBase({
        columnElement: o,
        column: n,
        applyFilter: !0,
        apply: function() {
          i.columnOption(e, {
            filterValues: this.filterValues,
            filterType: this.filterType
          });
        }
      });
    }
  },
  showHeaderFilterMenuBase: function(e) {
    var t = this, i = e.column;
    if (i) {
      var n = Fo.getGroupInterval(i), r = t._dataController.dataSource(), a = r && r.remoteOperations().filtering;
      T(e, i, {
        type: n && n.length > 1 ? "tree" : "list",
        remoteFiltering: a,
        onShowing: function(o) {
          var s = o.component.$overlayContent().dxResizable("instance");
          s && s.option("onResizeEnd", function(l) {
            var u = t.getController("columns"), d = u.columnOption(e.dataField, "headerFilter");
            d = d || {}, d.width = l.width, d.height = l.height, u.columnOption(e.dataField, "headerFilter", d, !0);
          });
        },
        onHidden: () => sv(this)
      }), e.dataSource = t.getDataSource(e), e.isFilterBuilder && (e.dataSource.filter = null, e.alignment = "right"), t._headerFilterView.showHeaderFilterMenu(e.columnElement, e);
    }
  },
  hideHeaderFilterMenu: function() {
    this._headerFilterView.hideHeaderFilterMenu();
  }
}), R9 = T({}, EO, {
  _renderCellContent: function(e, t) {
    var i = this, n, r = t.column;
    !r.command && qc(r) && i.option("headerFilter.visible") && t.rowType === "header" && (n = i._applyColumnState({
      name: "headerFilter",
      rootElement: e,
      column: r,
      showColumnLines: i.option("showColumnLines")
    }), n && i._subscribeToIndicatorEvent(n, r, "headerFilter")), this.callBase.apply(this, arguments);
  },
  _subscribeToIndicatorEvent: function(e, t, i) {
    i === "headerFilter" && w.on(e, Xe, this.createAction((n) => {
      n.event.stopPropagation(), _T(e, this), this.getController("headerFilter").showHeaderFilterMenu(t.index, !1);
    }));
  },
  _updateIndicator: function(e, t, i) {
    var n = this.callBase(e, t, i);
    n && this._subscribeToIndicatorEvent(n, t, i);
  },
  _updateHeaderFilterIndicators: function() {
    this.option("headerFilter.visible") && this._updateIndicators("headerFilter");
  },
  _needUpdateFilterIndicators: function() {
    return !0;
  },
  _columnOptionChanged: function(e) {
    var t = e.optionNames;
    if (ae.checkChanges(t, ["filterValues", "filterType"])) {
      this._needUpdateFilterIndicators() && this._updateHeaderFilterIndicators();
      return;
    }
    this.callBase(e);
  }
}), B9 = T({}, EO, {
  _createGroupPanelItem: function(e, t) {
    var i = this, n = i.callBase.apply(i, arguments), r;
    return !t.command && qc(t) && i.option("headerFilter.visible") && (r = i._applyColumnState({
      name: "headerFilter",
      rootElement: n,
      column: {
        alignment: $r(i.option("rtlEnabled")),
        filterValues: t.filterValues,
        allowHeaderFiltering: !0
      },
      showColumnLines: !0
    }), r && w.on(r, Xe, i.createAction(function(a) {
      var o = a.event;
      o.stopPropagation(), i.getController("headerFilter").showHeaderFilterMenu(t.index, !0);
    }))), n;
  }
}), k9 = {
  skipCalculateColumnFilters: function() {
    return !1;
  },
  _calculateAdditionalFilter: function() {
    if (this.skipCalculateColumnFilters())
      return this.callBase();
    var e = [this.callBase()], t = this._columnsController.getVisibleColumns(null, !0), i = this.getController("headerFilter"), n = i.getCurrentColumn();
    return B(t, function(r, a) {
      var o;
      if (!(n && n.index === a.index) && qc(a) && a.calculateFilterExpression && Array.isArray(a.filterValues) && a.filterValues.length) {
        var s = [];
        B(a.filterValues, function(l, u) {
          Array.isArray(u) ? o = u : (a.deserializeValue && !ae.isDateType(a.dataType) && a.dataType !== "number" && (u = a.deserializeValue(u)), o = a.createFilterExpression(u, "=", "headerFilter")), o && (o.columnIndex = a.index), s.push(o);
        }), s = ae.combineFilters(s, "or"), e.push(a.filterType === "exclude" ? ["!", s] : s);
      }
    }), ae.combineFilters(e);
  }
}, F9 = {
  defaultOptions: function() {
    return {
      syncLookupFilterValues: !0,
      headerFilter: {
        visible: !1,
        width: 252,
        height: 325,
        allowSearch: !1,
        searchTimeout: 500,
        texts: {
          emptyValue: q.format("dxDataGrid-headerFilterEmptyValue"),
          ok: q.format("dxDataGrid-headerFilterOK"),
          cancel: q.format("dxDataGrid-headerFilterCancel")
        }
      }
    };
  },
  controllers: {
    headerFilter: O9
  },
  views: {
    headerFilterView: I9
  },
  extenders: {
    controllers: {
      data: k9
    },
    views: {
      columnHeadersView: R9,
      headerPanel: B9
    }
  }
};
xe.registerModule("headerFilter", F9);
var Xc = "dx-filterbuilder-range", P9 = Xc + "-start", M9 = Xc + "-end", L9 = Xc + "-separator", IO = "–";
function V9(e, t) {
  var i = g("<div>").addClass(P9), n = g("<div>").addClass(M9), r = e.value || [], a = function(s) {
    return s && s.length > 0 ? s[0] : null;
  }, o = function(s) {
    return s && s.length === 2 ? s[1] : null;
  };
  t.append(i), t.append(g("<span>").addClass(L9).text(IO)), t.append(n), t.addClass(Xc), this._editorFactory.createEditor.call(this, i, T({}, e.field, e, {
    value: a(r),
    parentType: "filterBuilder",
    setValue: function(s) {
      r = [s, o(r)], e.setValue(r);
    }
  })), this._editorFactory.createEditor.call(this, n, T({}, e.field, e, {
    value: o(r),
    parentType: "filterBuilder",
    setValue: function(s) {
      r = [a(r), s], e.setValue(r);
    }
  }));
}
function ES(e, t) {
  return {
    name: "between",
    caption: e,
    icon: "range",
    valueSeparator: IO,
    dataTypes: ["number", "date", "datetime"],
    editorTemplate: V9.bind(t),
    notForLookup: !0
  };
}
var N9 = {
  "=": "equal",
  "<>": "notequal",
  "<": "less",
  "<=": "lessorequal",
  ">": "greater",
  ">=": "greaterorequal",
  notcontains: "doesnotcontain",
  contains: "contains",
  startswith: "startswith",
  endswith: "endswith",
  isblank: "isblank",
  isnotblank: "isnotblank"
}, $9 = {
  "=": "equal",
  "<>": "notEqual",
  "<": "lessThan",
  "<=": "lessThanOrEqual",
  ">": "greaterThan",
  ">=": "greaterThanOrEqual",
  startswith: "startsWith",
  contains: "contains",
  notcontains: "notContains",
  endswith: "endsWith",
  isblank: "isBlank",
  isnotblank: "isNotBlank",
  between: "between"
};
const TO = {
  getIconByFilterOperation: function(e) {
    return N9[e];
  },
  getNameByFilterOperation: function(e) {
    return $9[e];
  }
};
var Jv = "string", wS = "icon-none", Fr = "and", em = "=", H9 = "<>", z9 = {
  number: ["=", "<>", "<", ">", "<=", ">=", "isblank", "isnotblank"],
  string: ["contains", "notcontains", "startswith", "endswith", "=", "<>", "isblank", "isnotblank"],
  date: ["=", "<>", "<", ">", "<=", ">=", "isblank", "isnotblank"],
  datetime: ["=", "<>", "<", ">", "<=", ">=", "isblank", "isnotblank"],
  boolean: ["=", "<>", "isblank", "isnotblank"],
  object: ["isblank", "isnotblank"]
}, W9 = {
  date: "shortDate",
  datetime: "shortDateShortTime"
}, G9 = ["=", "<>", "isblank", "isnotblank"], K9 = ["caption", "customizeText", "dataField", "dataType", "editorTemplate", "falseText", "editorOptions", "filterOperations", "format", "lookup", "trueText", "calculateFilterExpression", "name"], U9 = "dx-filterbuilder", DO = U9 + "-text", j9 = DO + "-part", AO = DO + "-separator", q9 = AO + "-empty";
function X9(e, t) {
  var i = e.format || W9[e.dataType];
  return RI.format(t, i);
}
function Da(e) {
  return e && e.length > 1 && e[0] === "!" && !Kt(e);
}
function Gr(e) {
  return Da(e) ? e[1] : e;
}
function Y9(e, t) {
  return Da(e) ? e[1] = t : e = t, e;
}
function Z9(e, t) {
  (function(i) {
    return i.indexOf("!") !== -1;
  })(t) ? Da(e) || function(i) {
    var n = i.slice(0);
    i.length = 0, i.push("!", n);
  }(e) : Da(e) && function(i) {
    var n = Gr(i);
    i.length = 0, [].push.apply(i, n);
  }(e);
}
function Q9(e, t) {
  Z9(e, t);
  var i = Gr(e), n;
  return t = function(r) {
    return r.indexOf("!") === -1 ? r : r.substring(1);
  }(t), function(r, a) {
    for (n = 0; n < r.length; n++)
      Array.isArray(r[n]) || (r[n] = a);
  }(i, t), e;
}
function J9(e, t) {
  var i = Ua(e);
  return t.filter(function(n) {
    return n.value === i;
  })[0];
}
function OO(e) {
  if (Kt(e))
    return Fr;
  for (var t = "", i = 0; i < e.length; i++) {
    var n = e[i];
    if (!Array.isArray(n)) {
      if (t && t !== n)
        throw new At.Error("E4019");
      n !== "!" && (t = n);
    }
  }
  return t;
}
function Ua(e) {
  var t = Gr(e), i = OO(t);
  return i || (i = Fr), t !== e && (i = "!" + i), i;
}
function eY(e) {
  return e.lookup && G9 || z9[e.dataType || Jv];
}
function tY(e) {
  return Array.isArray(e) && e.length;
}
function RO(e) {
  var t = tY(e.filterOperations) ? e.filterOperations : eY(e);
  return T([], t);
}
function Wg(e, t) {
  var i = TO.getNameByFilterOperation(e);
  return t && t[i] ? t[i] : i;
}
function iY(e, t) {
  for (var i = 0; i < t.length; i++)
    if (t[i].value === e)
      return t[i];
  throw new $e.Error("E1048", e);
}
function jn(e, t) {
  var i = e.filter(function(n) {
    return n.name === t;
  });
  return i.length ? i[0] : null;
}
function nY(e, t, i) {
  var n = RO(e), r = !!e.lookup;
  return i.forEach(function(a) {
    if (!e.filterOperations && n.indexOf(a.name) === -1) {
      var o = a && a.dataTypes, s = r ? !!a.notForLookup : !1;
      !s && o && o.indexOf(e.dataType || Jv) >= 0 && n.push(a.name);
    }
  }), n.map(function(a) {
    var o = jn(i, a);
    return o ? {
      icon: o.icon || wS,
      text: o.caption || va(o.name),
      value: o.name,
      isCustom: !0
    } : {
      icon: TO.getIconByFilterOperation(a) || wS,
      text: Wg(a, t),
      value: a
    };
  });
}
function tm(e) {
  return e.defaultFilterOperation || RO(e)[0];
}
function rY(e, t) {
  var i = [e.dataField, "", ""], n = tm(e);
  return Kg(i, n, t), i;
}
function Gg(e, t) {
  var i = Gr(e), n = i.indexOf(t);
  return i.splice(n, 1), i.length !== 1 && i.splice(n, 1), e;
}
function BO(e) {
  var t = im(e), i = t ? nm(e) : e;
  return t ? ["!", [i]] : [i];
}
function ec(e, t) {
  var i = Gr(t), n = Ua(i);
  return i.length === 1 ? i.unshift(e) : i.push(e, n), t;
}
function tc(e, t) {
  for (var i = 0; i < t.length; i++)
    if (t[i].name === e || t[i].dataField.toLowerCase() === e.toLowerCase())
      return t[i];
  var n = VO(t, !0).filter(function(r) {
    return r.dataField.toLowerCase() === e.toLowerCase();
  });
  if (n.length > 0)
    return n[0];
  throw new $e.Error("E1047", e);
}
function Kr(e) {
  return Array.isArray(e) ? e.length < 2 || Array.isArray(e[0]) || Array.isArray(e[1]) : !1;
}
function Kt(e) {
  return Array.isArray(e) ? e.length > 1 && !Array.isArray(e[0]) && !Array.isArray(e[1]) : !1;
}
function IS(e, t, i) {
  i = i || Fr;
  for (var n = OO(e).toLowerCase() || i, r = [], a = 0; a < e.length; a++)
    Kr(e[a]) ? (r.push(rm(e[a], t, i)), r = _f(r, n)) : Kt(e[a]) && (r.push(ic(e[a], t)), r = _f(r, n));
  return r.length === 0 && (r = _f(r, n)), r;
}
function aY(e, t) {
  var i = jn(t, e[1]);
  return i && i.name === e[1];
}
function ic(e, t) {
  return aY(e, t) || e.length < 3 && (e[2] = e[1], e[1] = em), e;
}
function im(e) {
  return e.indexOf("not") !== -1;
}
function nm(e) {
  return e.substring(3).toLowerCase();
}
function gf(e, t) {
  var i = im(t);
  return t = i ? nm(t) : t, i ? ["!", e, t] : [e, t];
}
function _f(e, t) {
  var i = im(t);
  t = i ? nm(t) : t, e.push(t);
  var n = e;
  return i && (n = ["!", n]), n;
}
function rm(e, t, i) {
  return i = i || Fr, e ? (e = T(!0, [], e), Kt(e) ? gf(ic(e, t), i) : Da(e) ? ["!", Kt(e[1]) ? gf(ic(e[1], t), i) : Da(e[1]) ? gf(rm(e[1], t), i) : IS(e[1], t, i)] : IS(e, t, i)) : BO(i);
}
function oY(e) {
  return e.reduce(function(t, i) {
    if (x(i.dataField)) {
      var n = {};
      for (var r in i)
        i[r] && K9.indexOf(r) > -1 && (n[r] = i[r]);
      n.defaultCalculateFilterExpression = Fo.defaultCalculateFilterExpression, x(n.dataType) || (n.dataType = Jv), x(n.trueText) || (n.trueText = q.format("dxDataGrid-trueText")), x(n.falseText) || (n.falseText = q.format("dxDataGrid-falseText")), t.push(n);
    }
    return t;
  }, []);
}
function TS(e, t, i, n) {
  var r = tc(e[0], t), a = ic(e, i), o = i.length && jn(i, a[1]);
  return o && o.calculateFilterExpression ? o.calculateFilterExpression.apply(o, [a[2], r, t]) : r.createFilterExpression ? r.createFilterExpression.apply(r, [a[2], a[1], n]) : r.calculateFilterExpression ? r.calculateFilterExpression.apply(r, [a[2], a[1], n]) : r.defaultCalculateFilterExpression.apply(r, [a[2], a[1], n]);
}
function Mo(e, t, i, n) {
  if (!x(e))
    return null;
  if (Da(e)) {
    var r = Mo(e[1], t, i, n);
    return ["!", r];
  }
  var a = Gr(e);
  if (Kt(a))
    return TS(a, t, i, n) || null;
  for (var o = [], s, l = Ua(a), u = 0; u < a.length; u++)
    Kr(a[u]) ? (s = Mo(a[u], t, i, n), s && (u && o.push(l), o.push(s))) : Kt(a[u]) && (s = TS(a[u], t, i, n), s && (o.length && o.push(l), o.push(s)));
  return o.length === 1 && (o = o[0]), o.length ? o : null;
}
function Us(e) {
  var t = Gr(e), i;
  if (t.length === 0)
    return null;
  var n = [];
  for (i = 0; i < t.length; i++)
    if (Kr(t[i])) {
      var r = Us(t[i]);
      r ? t[i] = r : n.push(t[i]);
    } else
      Kt(t[i]) && (lY(t[i]) || n.push(t[i]));
  for (i = 0; i < n.length; i++)
    Gg(t, n[i]);
  return t.length === 1 || (t.splice(t.length - 1, 1), t.length === 1 && (e = Y9(e, t[0])), e.length === 0) ? null : e;
}
function kO(e, t, i) {
  if (t === "") {
    i("");
    return;
  }
  var n = e.lookup;
  if (n.items)
    i(n.calculateCellValue(t) || "");
  else {
    var r = ce(n.dataSource) ? n.dataSource({}) : n.dataSource, a = new Jn(r);
    a.loadSingle(n.valueExpr, t).done(function(o) {
      var s = "";
      o && (s = n.displayExpr ? tt(n.displayExpr)(o) : o), e.customizeText && (s = e.customizeText({
        value: t,
        valueText: s
      })), i(s);
    }).fail(function() {
      i("");
    });
  }
}
function FO(e, t, i, n, r) {
  var a;
  return t === !0 ? a = e.trueText || q.format("dxDataGrid-trueText") : t === !1 ? a = e.falseText || q.format("dxDataGrid-falseText") : a = X9(e, t), e.customizeText && (a = e.customizeText.call(e, {
    value: t,
    valueText: a,
    target: n
  })), i && i.customizeText && (a = i.customizeText.call(i, {
    value: t,
    valueText: a,
    field: e,
    target: n
  }, r)), a;
}
function sY(e, t, i, n) {
  var r = {
    values: t
  };
  return t.map((a) => FO(e, a, i, n, r));
}
function vf(e) {
  return e === "" || e === null;
}
function PO(e, t, i) {
  var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "filterBuilder";
  if (vf(t))
    return "";
  if (Array.isArray(t)) {
    var r = new U();
    return ge.apply(this, sY(e, t, i, n)).done(function() {
      for (var a = arguments.length, o = new Array(a), s = 0; s < a; s++)
        o[s] = arguments[s];
      var l = o.some((u) => !vf(u)) ? o.map((u) => vf(u) ? "?" : u) : "";
      r.resolve(l);
    }), r;
  } else
    return FO(e, t, i, n);
}
function DS(e, t) {
  return e.some(function(i) {
    return i.dataField === t;
  });
}
function MO(e, t, i) {
  var n = i.dataField;
  am(n) && (i.parentId = NO(n), !DS(t, i.parentId) && !DS(e, i.parentId) && MO(e, t, {
    id: i.parentId,
    dataType: "object",
    dataField: i.parentId,
    caption: LO(i.parentId, !0),
    filterOperations: ["isblank", "isnotblank"]
  })), t.push(i);
}
function LO(e, t) {
  var i = "";
  if (t)
    e = e.substring(e.lastIndexOf(".") + 1);
  else if (am(e))
    return e.split(".").forEach(function(n, r, a) {
      i += va(n), r !== a.length - 1 && (i += ".");
    }), i;
  return va(e);
}
function VO(e, t) {
  for (var i = [], n = 0; n < e.length; n++) {
    var r = T(!0, {
      caption: LO(e[n].dataField, t)
    }, e[n]);
    r.id = r.name || r.dataField, t ? MO(e, i, r) : i.push(r);
  }
  return i;
}
function am(e) {
  return e.lastIndexOf(".") !== -1;
}
function NO(e) {
  return e.substring(0, e.lastIndexOf("."));
}
function $O(e, t) {
  if (am(e.dataField)) {
    for (var i = NO(e.dataField), n = 0; n < t.length; n++)
      if (t[n].dataField === i)
        return $O(t[n], t) + "." + e.caption;
  }
  return e.caption;
}
function Kg(e, t, i) {
  var n = jn(i, t);
  return n ? (n.hasValue === !1 ? (e[1] = t, e.length = 2) : (e[1] = t, e[2] = ""), e) : (t === "isblank" ? (e[1] = em, e[2] = null) : t === "isnotblank" ? (e[1] = H9, e[2] = null) : (n = jn(i, e[1]), (n || e.length === 2 || e[2] === null) && (e[2] = ""), e[1] = t), e);
}
function AS(e) {
  var t;
  return e[2] === null ? e[1] === em ? t = "isblank" : t = "isnotblank" : t = e[1], t;
}
function lY(e) {
  return e[2] !== "";
}
function uY(e, t, i) {
  var n = T(!0, [], e), r = -1;
  return n.some(function(a, o) {
    if (a.name === "between")
      return r = o, !0;
  }), r !== -1 ? n[r] = T(ES(t, i), n[r]) : n.unshift(ES(t, i)), n;
}
function cl(e, t) {
  return e[0] === t;
}
function Ug(e, t) {
  if (!e || e.length === 0)
    return null;
  if (Kt(e)) {
    var i = cl(e, t);
    return i ? null : e;
  } else
    return HO(e, [t], !1);
}
function HO(e, t, i) {
  var n = [];
  return e.forEach(function(r) {
    Kt(r) ? cl(r, t[0]) ? i ? (n.push(t), i = !1) : n.splice(n.length - 1, 1) : n.push(r) : (n.length || Kr(r)) && n.push(r);
  }), n.length === 0 ? null : (i && (n.push(Fr), n.push(t)), n.length === 1 ? n[0] : n);
}
function OS(e, t) {
  if (e === null || e.length === 0)
    return t;
  if (Kt(e))
    return cl(e, t[0]) ? t : [e, Fr, t];
  var i = Ua(e);
  return i !== Fr ? [t, "and", e] : HO(e, t, !0);
}
function dY(e, t) {
  if (e === null || e.length === 0)
    return [];
  if (Kt(e))
    return cl(e, t) ? [e] : [];
  var i = Ua(e);
  if (i !== Fr)
    return [];
  var n = e.filter(function(r) {
    return Kt(r) && cl(r, t);
  });
  return n;
}
function zO(e, t) {
  return e === null || e.length === 0 ? !1 : Kt(e) ? e[0] === t : e.some(function(i) {
    return (Kt(i) || Kr(i)) && zO(i, t);
  });
}
var jg = function(e, t, i) {
  if (Array.isArray(t)) {
    var n = t.length - 1;
    e.empty(), t.forEach((r, a) => {
      g("<span>").addClass(j9).text(r).appendTo(e), a !== n && g("<span>").addClass(AO).text(i && i.valueSeparator ? i.valueSeparator : "|").addClass(q9).appendTo(e);
    });
  } else
    t ? e.text(t) : e.text(q.format("dxFilterBuilder-enterValueText"));
};
function WO(e) {
  var t = function(n, r) {
    return r ? r + "/" + n : n;
  }, i = e && e.getController("headerFilter");
  return {
    dataTypes: ["string", "date", "datetime", "number", "boolean", "object"],
    calculateFilterExpression: function(n, r, a) {
      var o = [], s = n.length - 1;
      return n && n.forEach(function(l, u) {
        if (Kt(l) || Kr(l)) {
          var d = Mo(l, a, [], "headerFilter");
          o.push(d);
        } else
          o.push(Mo([r.dataField, "=", l], a, [], "headerFilter"));
        u !== s && o.push("or");
      }), o.length === 1 && (o = o[0]), o;
    },
    editorTemplate: function(n, r) {
      var a = g("<div>").addClass("dx-filterbuilder-item-value-text").appendTo(r), o = T(!0, {}, e.columnOption(n.field.dataField));
      return jg(a, n.text && n.text.split("|")), o.filterType = "include", o.filterValues = n.value ? n.value.slice() : [], i.showHeaderFilterMenuBase({
        columnElement: a,
        column: o,
        apply: function() {
          s = this.filterValues, n.setValue(s);
          var s;
          i.hideHeaderFilterMenu(), n.closeEditor();
        },
        onHidden: function() {
          n.closeEditor();
        },
        isFilterBuilder: !0
      }), r;
    },
    customizeText: function(n, r) {
      r = r || {};
      var a = n.value, o = e.columnOption(n.field.dataField), s = o && o.headerFilter, l = o && o.lookup, u = r.values || [a];
      if (s && s.dataSource || l && l.dataSource) {
        var d = new U(), c = r.items || new U();
        if (!r.items) {
          o = T({}, o, {
            filterType: "include",
            filterValues: u
          });
          var h = i.getDataSource(o);
          h.paginate = !1;
          var p = new Jn(h), f = p.store().key();
          if (f) {
            var {
              values: v
            } = r;
            if (v && v.length > 1) {
              var m = v.reduce((b, A) => (b.length && b.push("or"), b.push([f, "=", A]), b), []);
              p.filter(m);
            } else
              p.filter([f, "=", n.value]);
          } else
            n.field.calculateDisplayValue && $e.log("W1017");
          r.items = c, p.load().done(c.resolve);
        }
        return c.done((b) => {
          var A = u.indexOf(n.value);
          d.resolve(function R(k, H) {
            var K = [];
            return k.forEach(function(j) {
              if (j.items) {
                var z = R(j.items, t(j.text, H));
                K = K.concat(z);
              }
              j.selected && K.push(t(j.text, H));
            }), K;
          }(b)[A]);
        }), d;
      } else {
        var C = i.getHeaderItemText(a, o, 0, e.option("headerFilter"));
        return C;
      }
    }
  };
}
function cY(e) {
  return T(WO(e), {
    name: "anyof",
    icon: "selectall",
    caption: q.format("dxFilterBuilder-filterOperationAnyOf")
  });
}
function hY(e) {
  var t = WO(e);
  return T({}, t, {
    calculateFilterExpression: function(i, n, r) {
      var a = t.calculateFilterExpression(i, n, r);
      return !a || a.length === 0 ? null : a[0] === "!" ? a : ["!", a];
    },
    name: "noneof",
    icon: "unselectall",
    caption: q.format("dxFilterBuilder-filterOperationNoneOf")
  });
}
var pY = ["=", "<>", "<", "<=", ">", ">=", "notcontains", "contains", "startswith", "endswith", "between"], RS = "include", js = "exclude";
function hn(e) {
  return e.name || e.dataField;
}
function fY(e) {
  e.forEach((t) => {
    var i = hn(t);
    if (!x(i) && t.allowFiltering)
      throw new $e.Error("E1049", t.caption);
  });
}
var gY = at.Controller.inherit(function() {
  var e = function() {
    return {
      filterType: RS,
      filterValues: void 0
    };
  }, t = function(o) {
    var s = o.filterValues || [];
    return !Fo.getGroupInterval(o) && !(o.headerFilter && o.headerFilter.dataSource) || s.length === 1 && s[0] === null;
  }, i = function(o) {
    var s = o.filterValue;
    if (x(s)) {
      var l = o.selectedFilterOperation || o.defaultFilterOperation || tm(o), u = [hn(o), l, o.filterValue];
      return u;
    } else
      return null;
  }, n = function(o) {
    var s, l, u = o.filterValues;
    return u ? (u.length === 1 && t(o) && !Array.isArray(u[0]) ? (o.filterType === js ? s = "<>" : s = "=", l = u[0]) : (o.filterType === js ? s = "noneof" : s = "anyof", l = u), [hn(o), s, l]) : null;
  }, r = function(o, s, l) {
    var u = function(d, c) {
      if (!d)
        return e();
      var h, p = d[1], f = d[2], v = Array.isArray(f);
      if (!v && !t(c))
        return e();
      switch (p) {
        case "anyof":
        case "=":
          h = RS;
          break;
        case "noneof":
        case "<>":
          h = js;
          break;
        default:
          return e();
      }
      return {
        filterType: h,
        filterValues: v ? f : [f]
      };
    }(l, s);
    o.columnOption(hn(s), u);
  }, a = function(o, s, l) {
    var u, d = l == null ? void 0 : l[1], c = l == null ? void 0 : l[2], h = s.filterOperations || s.defaultFilterOperations;
    (!h || h.indexOf(d) >= 0 || d === s.defaultFilterOperation) && pY.indexOf(d) >= 0 && c !== null ? (d === s.defaultFilterOperation && !x(s.selectedFilterOperation) && (d = s.selectedFilterOperation), u = {
      filterValue: c,
      selectedFilterOperation: d
    }) : u = {
      filterValue: void 0,
      selectedFilterOperation: void 0
    }, o.columnOption(hn(s), u);
  };
  return {
    syncFilterValue: function() {
      var o = this, s = o.getController("columns"), l = s.getFilteringColumns();
      this._skipSyncColumnOptions = !0, l.forEach(function(u) {
        var d = dY(o.option("filterValue"), hn(u));
        if (d.length === 1) {
          var c = d[0];
          r(s, u, c), a(s, u, c);
        } else
          x(u.filterValues) && r(s, u), x(u.filterValue) && a(s, u);
      }), this._skipSyncColumnOptions = !1;
    },
    _initSync: function() {
      var o = this.getController("columns").getColumns(), s = this.getController("data"), l = s.pageIndex();
      if (fY(o), !this.option("filterValue")) {
        var u = this.getController("columns").getFilteringColumns(), d = this.getFilterValueFromColumns(u);
        this.option("filterValue", d);
      }
      this.syncFilterValue(), s.pageIndex(l);
    },
    init: function() {
      var o = this.getController("data");
      o.isFilterSyncActive() && (this.getController("columns").isAllDataTypesDefined() ? this._initSync() : o.dataSourceChanged.add(() => this._initSync()));
    },
    _getSyncFilterRow: function(o, s) {
      var l = i(s);
      return x(l) ? OS(o, l) : Ug(o, hn(s));
    },
    _getSyncHeaderFilter: function(o, s) {
      var l = n(s);
      return l ? OS(o, l) : Ug(o, hn(s));
    },
    getFilterValueFromColumns: function(o) {
      if (!this.getController("data").isFilterSyncActive())
        return null;
      var s = ["and"];
      return o && o.forEach((l) => {
        var u = n(l), d = i(l);
        u && ec(u, s), d && ec(d, s);
      }), Us(s);
    },
    syncFilterRow: function(o, s) {
      this.option("filterValue", this._getSyncFilterRow(this.option("filterValue"), o));
    },
    syncHeaderFilter: function(o) {
      this.option("filterValue", this._getSyncHeaderFilter(this.option("filterValue"), o));
    },
    getCustomFilterOperations: function() {
      var o = this.option("filterBuilder.customOperations") || [];
      return [cY(this.component), hY(this.component)].concat(o);
    },
    publicMethods: function() {
      return ["getCustomFilterOperations"];
    }
  };
}()), _Y = {
  isFilterSyncActive: function() {
    var e = this.option("filterSyncEnabled");
    return e === "auto" ? this.option("filterPanel.visible") : e;
  },
  skipCalculateColumnFilters: function() {
    var e = this.getController("filterSync");
    return (x(this.option("filterValue")) || e._skipSyncColumnOptions) && this.isFilterSyncActive();
  },
  _calculateAdditionalFilter: function() {
    if (this.option("filterPanel.filterEnabled") === !1)
      return this.callBase();
    var e = [this.callBase()], t = this.getController("columns").getFilteringColumns(), i = this.option("filterValue");
    if (this.isFilterSyncActive()) {
      var n = this.getController("headerFilter").getCurrentColumn();
      n && i && (i = Ug(i, hn(n)));
    }
    var r = this.getController("filterSync").getCustomFilterOperations(), a = Mo(i, t, r, "filterBuilder");
    return a && e.push(a), ae.combineFilters(e);
  },
  _parseColumnPropertyName: function(e) {
    var t = e.match(/.*\.(.*)/);
    return t ? t[1] : null;
  },
  clearFilter: function(e) {
    this.component.beginUpdate(), arguments.length > 0 ? (e === "filterValue" && this.option("filterValue", null), this.callBase(e)) : (this.option("filterValue", null), this.callBase()), this.component.endUpdate();
  },
  optionChanged: function(e) {
    switch (e.name) {
      case "filterValue":
        this._applyFilter(), this.isFilterSyncActive() && this.getController("filterSync").syncFilterValue(), e.handled = !0;
        break;
      case "filterSyncEnabled":
        e.handled = !0;
        break;
      case "columns":
        if (this.isFilterSyncActive()) {
          var t = this.getController("columns").getColumnByPath(e.fullName), i = this.getController("filterSync");
          if (t && !i._skipSyncColumnOptions) {
            var n = this._parseColumnPropertyName(e.fullName);
            i._skipSyncColumnOptions = !0, n === "filterType" ? (js === e.value || js === e.previousValue) && i.syncHeaderFilter(t) : n === "filterValues" ? i.syncHeaderFilter(t) : ["filterValue", "selectedFilterOperation"].indexOf(n) > -1 && i.syncFilterRow(t, t.filterValue), i._skipSyncColumnOptions = !1;
          }
        }
        this.callBase(e);
        break;
      default:
        this.callBase(e);
    }
  }
}, vY = {
  _isHeaderFilterEmpty: function(e) {
    return this.getController("data").isFilterSyncActive() ? !zO(this.option("filterValue"), hn(e)) : this.callBase(e);
  },
  _needUpdateFilterIndicators: function() {
    return !this.getController("data").isFilterSyncActive();
  },
  optionChanged: function(e) {
    e.name === "filterValue" ? this._updateHeaderFilterIndicators() : this.callBase(e);
  }
}, mY = {
  defaultOptions: function() {
    return {
      filterValue: null,
      filterSyncEnabled: "auto"
    };
  },
  controllers: {
    filterSync: gY
  },
  extenders: {
    controllers: {
      data: _Y
    },
    views: {
      columnHeadersView: vY
    }
  }
};
xe.registerModule("filterSync", mY);
var Ti = "dx-filterbuilder", Lo = Ti + "-group", BS = Lo + "-item", kS = Lo + "-content", CY = Lo + "-operations", xY = Lo + "-operation", qg = Ti + "-action", FS = qg + "-icon", yY = "dx-icon-plus", bY = "dx-icon-remove", Es = Ti + "-text", SY = Ti + "-item-field", EY = Ti + "-item-operation", PS = Ti + "-item-value", wY = Ti + "-item-value-text", IY = Ti + "-overlay", TY = Ti + "-operations", DY = Ti + "-fields", AY = Ti + "-add-condition", ju = "dx-state-active", OY = Ti + "-menu-custom-operation", MS = "filterBuilder", RY = "dx-state-disabled", LS = "tab", mf = "enter", VS = "escape", BY = [{
  name: "onEditorPreparing",
  config: {
    excludeValidators: ["disabled", "readOnly"],
    category: "rendering"
  }
}, {
  name: "onEditorPrepared",
  config: {
    excludeValidators: ["disabled", "readOnly"],
    category: "rendering"
  }
}, {
  name: "onValueChanged",
  config: {
    excludeValidators: ["disabled", "readOnly"]
  }
}], NS = {
  and: "and",
  or: "or",
  notAnd: "!and",
  notOr: "!or"
}, kY = ze.inherit(HA), GO = Mt.inherit({
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      onEditorPreparing: null,
      onEditorPrepared: null,
      onValueChanged: null,
      fields: [],
      groupOperations: ["and", "or", "notAnd", "notOr"],
      maxGroupLevel: void 0,
      value: null,
      allowHierarchicalFields: !1,
      groupOperationDescriptions: {
        and: q.format("dxFilterBuilder-and"),
        or: q.format("dxFilterBuilder-or"),
        notAnd: q.format("dxFilterBuilder-notAnd"),
        notOr: q.format("dxFilterBuilder-notOr")
      },
      customOperations: [],
      closePopupOnTargetScroll: !0,
      filterOperationDescriptions: {
        between: q.format("dxFilterBuilder-filterOperationBetween"),
        equal: q.format("dxFilterBuilder-filterOperationEquals"),
        notEqual: q.format("dxFilterBuilder-filterOperationNotEquals"),
        lessThan: q.format("dxFilterBuilder-filterOperationLess"),
        lessThanOrEqual: q.format("dxFilterBuilder-filterOperationLessOrEquals"),
        greaterThan: q.format("dxFilterBuilder-filterOperationGreater"),
        greaterThanOrEqual: q.format("dxFilterBuilder-filterOperationGreaterOrEquals"),
        startsWith: q.format("dxFilterBuilder-filterOperationStartsWith"),
        contains: q.format("dxFilterBuilder-filterOperationContains"),
        notContains: q.format("dxFilterBuilder-filterOperationNotContains"),
        endsWith: q.format("dxFilterBuilder-filterOperationEndsWith"),
        isBlank: q.format("dxFilterBuilder-filterOperationIsBlank"),
        isNotBlank: q.format("dxFilterBuilder-filterOperationIsNotBlank")
      }
    });
  },
  _optionChanged: function(e) {
    switch (e.name) {
      case "closePopupOnTargetScroll":
        break;
      case "onEditorPreparing":
      case "onEditorPrepared":
      case "onValueChanged":
        this._initActions();
        break;
      case "customOperations":
        this._initCustomOperations(), this._invalidate();
        break;
      case "fields":
      case "maxGroupLevel":
      case "groupOperations":
      case "allowHierarchicalFields":
      case "groupOperationDescriptions":
      case "filterOperationDescriptions":
        this._invalidate();
        break;
      case "value":
        if (e.value !== e.previousValue) {
          var t = this._disableInvalidateForValue;
          t || (this._initModel(), this._invalidate()), this._disableInvalidateForValue = !1, this.executeAction("onValueChanged", {
            value: e.value,
            previousValue: e.previousValue
          }), this._disableInvalidateForValue = t;
        }
        break;
      default:
        this.callBase(e);
    }
  },
  getFilterExpression: function() {
    var e = this._getNormalizedFields(), t = T(!0, [], this._model);
    return Mo(Us(t), e, this._customOperations, MS);
  },
  _getNormalizedFields: function() {
    return oY(this.option("fields"));
  },
  _updateFilter: function() {
    this._disableInvalidateForValue = !0;
    var e = T(!0, [], this._model), t = Us(e), i = Us(this._getModel(this.option("value")));
    JSON.stringify(i) !== JSON.stringify(t) && this.option("value", t), this._disableInvalidateForValue = !1, this._fireContentReadyAction();
  },
  _init: function() {
    this._initCustomOperations(), this._initModel(), this._initEditorFactory(), this._initActions(), this.callBase();
  },
  _initEditorFactory: function() {
    this._editorFactory = new kY();
  },
  _initCustomOperations: function() {
    this._customOperations = uY(this.option("customOperations"), this.option("filterOperationDescriptions.between"), this);
  },
  _getDefaultGroupOperation: function() {
    var e, t;
    return (e = (t = this.option("groupOperations")) === null || t === void 0 ? void 0 : t[0]) !== null && e !== void 0 ? e : NS.and;
  },
  _getModel: function(e) {
    return rm(e, this._customOperations, this._getDefaultGroupOperation());
  },
  _initModel: function() {
    this._model = this._getModel(this.option("value"));
  },
  _initActions: function() {
    var e = this;
    e._actions = {}, BY.forEach(function(t) {
      var i = T({}, t.config);
      e._actions[t.name] = e._createActionByOption(t.name, i);
    });
  },
  executeAction: function(e, t) {
    var i = this._actions[e];
    return i && i(t);
  },
  _initMarkup: function() {
    this.$element().addClass(Ti), this.callBase(), this._createGroupElementByCriteria(this._model).appendTo(this.$element());
  },
  _createConditionElement: function(e, t) {
    return g("<div>").addClass(Lo).append(this._createConditionItem(e, t));
  },
  _createGroupElementByCriteria: function(e, t) {
    for (var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, n = this._createGroupElement(e, t, i), r = n.find("." + kS), a = Gr(e), o = 0; o < a.length; o++) {
      var s = a[o];
      Kr(s) ? this._createGroupElementByCriteria(s, e, i + 1).appendTo(r) : Kt(s) && this._createConditionElement(s, e).appendTo(r);
    }
    return n;
  },
  _createGroupElement: function(e, t, i) {
    var n = g("<div>").addClass(BS), r = g("<div>").addClass(kS), a = g("<div>").addClass(Lo).append(n).append(r);
    return t != null && this._createRemoveButton(() => {
      Gg(t, e), a.remove(), this._updateFilter();
    }).appendTo(n), this._createGroupOperationButton(e).appendTo(n), this._createAddButton(() => {
      var o = BO(this._getDefaultGroupOperation());
      ec(o, e), this._createGroupElement(o, e, i + 1).appendTo(r), this._updateFilter();
    }, () => {
      var o = this.option("fields")[0], s = rY(o, this._customOperations);
      ec(s, e), this._createConditionElement(s, e).appendTo(r), this._updateFilter();
    }, i).appendTo(n), a;
  },
  _createButton: function(e) {
    return g("<div>").text(e);
  },
  _createGroupOperationButton: function(e) {
    var t = this._getGroupOperations(e), i = J9(e, t), n = i.text, r = t && t.length < 2 ? this._createButton(n).addClass(RY) : this._createButtonWithMenu({
      caption: n,
      menu: {
        items: t,
        displayExpr: "text",
        keyExpr: "value",
        onItemClick: (a) => {
          i !== a.itemData && (Q9(e, a.itemData.value), r.text(a.itemData.text), i = a.itemData, this._updateFilter());
        },
        onContentReady: function(a) {
          a.component.selectItem(i);
        },
        cssClass: CY
      }
    });
    return r.addClass(Es).addClass(xY).attr("tabindex", 0);
  },
  _createButtonWithMenu: function(e) {
    var t = this, i = function() {
      t.$element().find("." + ju).removeClass(ju), t.$element().find(".dx-overlay .dx-treeview").remove(), t.$element().find(".dx-overlay").remove();
    }, n = this.option("rtlEnabled"), r = n ? "right" : "left", a = this._createButton(e.caption);
    T(e.menu, {
      focusStateEnabled: !0,
      selectionMode: "single",
      onItemClick: (o = e.menu.onItemClick, function(s) {
        o(s), s.event.type === "dxclick" && i();
      }),
      onHiding: function(s) {
        a.removeClass(ju);
      },
      position: {
        my: r + " top",
        at: r + " bottom",
        offset: "0 1",
        of: a,
        collision: "flip"
      },
      animation: null,
      onHidden: function() {
        i();
      },
      cssClass: IY + " " + e.menu.cssClass,
      rtlEnabled: n
    });
    var o;
    return e.popup = {
      onShown: function(s) {
        var l = g(s.component.content()).find(".dx-treeview"), u = l.dxTreeView("instance");
        w.on(l, "keyup keydown", function(d) {
          var c = ht(d);
          (d.type === "keydown" && c === LS || d.type === "keyup" && (c === VS || c === mf)) && (s.component.hide(), w.trigger(e.menu.position.of, "focus"));
        }), u.focus(), u.option("focusedElement", null);
      }
    }, this._subscribeOnClickAndEnterKey(a, function() {
      i(), t._createPopupWithTreeView(e, t.$element()), a.addClass(ju);
    }), a;
  },
  _hasValueButton: function(e) {
    var t = jn(this._customOperations, e[1]);
    return t ? t.hasValue !== !1 : e[2] !== null;
  },
  _createOperationButtonWithMenu: function(e, t) {
    var i = this, n = nY(t, this.option("filterOperationDescriptions"), this._customOperations), r = iY(AS(e), n), a = this._createButtonWithMenu({
      caption: r.text,
      menu: {
        items: n,
        displayExpr: "text",
        onItemRendered: function(o) {
          o.itemData.isCustom && g(o.itemElement).addClass(OY);
        },
        onContentReady: function(o) {
          o.component.selectItem(r);
        },
        onItemClick: (o) => {
          if (r !== o.itemData) {
            r = o.itemData, Kg(e, r.value, i._customOperations);
            var s = a.siblings().filter("." + PS);
            i._hasValueButton(e) ? (s.length !== 0 && s.remove(), i._createValueButton(e, t).appendTo(a.parent())) : s.remove(), a.html(r.text), this._updateFilter();
          }
        },
        cssClass: TY
      }
    }).addClass(Es).addClass(EY).attr("tabindex", 0);
    return a;
  },
  _createOperationAndValueButtons: function(e, t, i) {
    this._createOperationButtonWithMenu(e, t).appendTo(i), this._hasValueButton(e) && this._createValueButton(e, t).appendTo(i);
  },
  _createFieldButtonWithMenu: function(e, t, i) {
    var n = this, r = this.option("allowHierarchicalFields"), a = VO(e, r), o = tc(i.name || i.dataField, a), s = function(u, d) {
      return r ? $O(u, d) : u.caption;
    }, l = this._createButtonWithMenu({
      caption: s(o, a),
      menu: {
        items: a,
        dataStructure: "plain",
        keyExpr: "id",
        parentId: "parentId",
        displayExpr: "caption",
        onItemClick: (u) => {
          if (o !== u.itemData) {
            o = u.itemData, t[0] = o.name || o.dataField, t[2] = o.dataType === "object" ? null : "", Kg(t, tm(o), n._customOperations), l.siblings().filter("." + Es).remove(), n._createOperationAndValueButtons(t, o, l.parent());
            var d = s(o, u.component.option("items"));
            l.html(d), this._updateFilter();
          }
        },
        onContentReady: function(u) {
          u.component.selectItem(o);
        },
        cssClass: DY
      }
    }).addClass(Es).addClass(SY).attr("tabindex", 0);
    return l;
  },
  _createConditionItem: function(e, t) {
    var i = g("<div>").addClass(BS), n = this._getNormalizedFields(), r = tc(e[0], n);
    return this._createRemoveButton(() => {
      Gg(t, e);
      var a = i.parent().children().length === 1;
      a ? i.parent().remove() : i.remove(), this._updateFilter();
    }).appendTo(i), this._createFieldButtonWithMenu(n, e, r).appendTo(i), this._createOperationAndValueButtons(e, r, i), i;
  },
  _getGroupOperations: function(e) {
    var t = this.option("groupOperations"), i = this.option("groupOperationDescriptions");
    return (!t || !t.length) && (t = [Ua(e).replace("!", "not")]), t.map((n) => ({
      text: i[n],
      value: NS[n]
    }));
  },
  _createRemoveButton: function(e) {
    var t = g("<div>").addClass(FS).addClass(bY).addClass(qg).attr("tabindex", 0);
    return this._subscribeOnClickAndEnterKey(t, e), t;
  },
  _createAddButton: function(e, t, i) {
    var n, r = this.option("maxGroupLevel");
    return x(r) && i >= r ? (n = this._createButton(), this._subscribeOnClickAndEnterKey(n, t)) : n = this._createButtonWithMenu({
      menu: {
        items: [{
          caption: q.format("dxFilterBuilder-addCondition"),
          click: t
        }, {
          caption: q.format("dxFilterBuilder-addGroup"),
          click: e
        }],
        displayExpr: "caption",
        onItemClick: function(a) {
          a.itemData.click();
        },
        cssClass: AY
      }
    }), n.addClass(FS).addClass(yY).addClass(qg).attr("tabindex", 0);
  },
  _createValueText: function(e, t, i) {
    var n = this, r = g("<div>").html("&nbsp;").addClass(wY).attr("tabindex", 0).appendTo(i), a = e[2], o = jn(n._customOperations, e[1]);
    return !o && t.lookup ? kO(t, a, function(s) {
      jg(r, s);
    }) : ge(PO(t, a, o)).done((s) => {
      jg(r, s, o);
    }), n._subscribeOnClickAndEnterKey(r, function(s) {
      s.type === "keyup" && s.stopPropagation(), n._createValueEditorWithEvents(e, t, i);
    }), r;
  },
  _updateConditionValue: function(e, t, i) {
    var n = e[2] !== t;
    n && (e[2] = t), i(), this._updateFilter();
  },
  _addDocumentKeyUp: function(e, t) {
    var i = !1, n = !1, r = ee.getDocument(), a = (s) => {
      if (i || n) {
        n = !1;
        return;
      }
      t(s);
    };
    w.on(r, "keyup", a);
    var o = e.find("input");
    w.on(o, "compositionstart", () => {
      i = !0;
    }), w.on(o, "compositionend", () => {
      i = !1, n = !0;
    }), w.on(o, "keydown", (s) => {
      s.which !== 229 && (n = !1);
    }), this._documentKeyUpHandler = a;
  },
  _addDocumentClick: function(e, t) {
    var i = ee.getDocument(), n = (r) => {
      this._isFocusOnEditorParts(e, r.target) || (w.trigger(e.find("input"), "change"), t());
    };
    w.on(i, "dxpointerdown", n), this._documentClickHandler = n;
  },
  _isFocusOnEditorParts: function(e, t) {
    var i = t || ee.getActiveElement();
    return g(i).closest(e.children()).length || g(i).closest(".dx-dropdowneditor-overlay").length;
  },
  _removeEvents: function() {
    var e = ee.getDocument();
    x(this._documentKeyUpHandler) && w.off(e, "keyup", this._documentKeyUpHandler), x(this._documentClickHandler) && w.off(e, "dxpointerdown", this._documentClickHandler);
  },
  _dispose: function() {
    this._removeEvents(), this.callBase();
  },
  _createValueEditorWithEvents: function(e, t, i) {
    var n = e[2], r = () => (i.empty(), this._removeEvents(), this._createValueText(e, t, i)), a = () => {
      this._updateConditionValue(e, n, function() {
        r();
      });
    }, o = {
      value: n === "" ? null : n,
      filterOperation: AS(e),
      setValue: function(l) {
        n = l === null ? "" : l;
      },
      closeEditor: a,
      text: i.text()
    };
    i.empty();
    var s = this._createValueEditor(i, t, o);
    w.trigger(s.find("input").not(":hidden").eq(0), "focus"), this._removeEvents(), this._addDocumentClick(s, a), this._addDocumentKeyUp(s, (l) => {
      var u = ht(l);
      if (u === LS) {
        if (this._isFocusOnEditorParts(s))
          return;
        this._updateConditionValue(e, n, function() {
          r(), l.shiftKey && w.trigger(i.prev(), "focus");
        });
      }
      u === VS && w.trigger(r(), "focus"), u === mf && this._updateConditionValue(e, n, function() {
        w.trigger(r(), "focus");
      });
    }), this._fireContentReadyAction();
  },
  _createValueButton: function(e, t) {
    var i = g("<div>").addClass(Es).addClass(PS);
    return this._createValueText(e, t, i), i;
  },
  _createValueEditor: function(e, t, i) {
    var n = g("<div>").attr("tabindex", 0).appendTo(e), r = jn(this._customOperations, i.filterOperation), a = r && r.editorTemplate ? r.editorTemplate : t.editorTemplate;
    if (a) {
      var o = this._getTemplate(a);
      o.render({
        model: T({
          field: t
        }, i),
        container: n
      });
    } else
      this._editorFactory.createEditor.call(this, n, T({}, t, i, {
        parentType: MS
      }));
    return n;
  },
  _createPopupWithTreeView: function(e, t) {
    var i = this, n = g("<div>").addClass(e.menu.cssClass).appendTo(t);
    this._createComponent(n, an, {
      onHiding: e.menu.onHiding,
      onHidden: e.menu.onHidden,
      rtlEnabled: e.menu.rtlEnabled,
      position: e.menu.position,
      animation: e.menu.animation,
      contentTemplate: function(r) {
        var a = g("<div>").appendTo(r);
        i._createComponent(a, Ul, e.menu), this.repaint();
      },
      _ignoreFunctionValueDeprecation: !0,
      maxHeight: function() {
        return yO(e.menu.position.of);
      },
      visible: !0,
      focusStateEnabled: !1,
      hideOnParentScroll: this.option("closePopupOnTargetScroll"),
      hideOnOutsideClick: !0,
      onShown: e.popup.onShown,
      shading: !1,
      width: "auto",
      height: "auto",
      showTitle: !1,
      _wrapperClassExternal: e.menu.cssClass
    });
  },
  _subscribeOnClickAndEnterKey: function(e, t) {
    w.on(e, "dxclick", t), w.on(e, "keyup", function(i) {
      ht(i) === mf && t(i);
    });
  }
});
We("dxFilterBuilder", GO);
var FY = at.View.inherit({
  _renderCore: function() {
    this._updatePopupOptions();
  },
  _updatePopupOptions: function() {
    this.option("filterBuilderPopup.visible") ? this._initPopup() : this._filterBuilderPopup && this._filterBuilderPopup.hide();
  },
  _disposePopup: function() {
    this._filterBuilderPopup && (this._filterBuilderPopup.dispose(), this._filterBuilderPopup = void 0), this._filterBuilder && (this._filterBuilder.dispose(), this._filterBuilder = void 0);
  },
  _initPopup: function() {
    var e = this;
    e._disposePopup(), e._filterBuilderPopup = e._createComponent(e.element(), an, T({
      title: q.format("dxDataGrid-filterBuilderPopupTitle"),
      contentTemplate: function(t) {
        return e._getPopupContentTemplate(t);
      },
      onOptionChanged: function(t) {
        t.name === "visible" && e.option("filterBuilderPopup.visible", t.value);
      },
      toolbarItems: e._getPopupToolbarItems()
    }, e.option("filterBuilderPopup"), {
      onHidden: function(t) {
        sv(e), e._disposePopup();
      }
    }));
  },
  _getPopupContentTemplate: function(e) {
    var t = g(e), i = g("<div>").appendTo(g(e));
    this._filterBuilder = this._createComponent(i, GO, T({
      value: this.option("filterValue"),
      fields: this.getController("columns").getFilteringColumns()
    }, this.option("filterBuilder"), {
      customOperations: this.getController("filterSync").getCustomFilterOperations()
    })), this._createComponent(t, Mv, {
      direction: "both"
    });
  },
  _getPopupToolbarItems: function() {
    var e = this;
    return [{
      toolbar: "bottom",
      location: "after",
      widget: "dxButton",
      options: {
        text: q.format("OK"),
        onClick: function(t) {
          var i = e._filterBuilder.option("value");
          e.option("filterValue", i), e._filterBuilderPopup.hide();
        }
      }
    }, {
      toolbar: "bottom",
      location: "after",
      widget: "dxButton",
      options: {
        text: q.format("Cancel"),
        onClick: function(t) {
          e._filterBuilderPopup.hide();
        }
      }
    }];
  },
  optionChanged: function(e) {
    switch (e.name) {
      case "filterBuilder":
      case "filterBuilderPopup":
        this._invalidate(), e.handled = !0;
        break;
      default:
        this.callBase(e);
    }
  }
}), PY = {
  defaultOptions: function() {
    return {
      filterBuilder: {
        groupOperationDescriptions: {
          and: q.format("dxFilterBuilder-and"),
          or: q.format("dxFilterBuilder-or"),
          notAnd: q.format("dxFilterBuilder-notAnd"),
          notOr: q.format("dxFilterBuilder-notOr")
        },
        filterOperationDescriptions: {
          between: q.format("dxFilterBuilder-filterOperationBetween"),
          equal: q.format("dxFilterBuilder-filterOperationEquals"),
          notEqual: q.format("dxFilterBuilder-filterOperationNotEquals"),
          lessThan: q.format("dxFilterBuilder-filterOperationLess"),
          lessThanOrEqual: q.format("dxFilterBuilder-filterOperationLessOrEquals"),
          greaterThan: q.format("dxFilterBuilder-filterOperationGreater"),
          greaterThanOrEqual: q.format("dxFilterBuilder-filterOperationGreaterOrEquals"),
          startsWith: q.format("dxFilterBuilder-filterOperationStartsWith"),
          contains: q.format("dxFilterBuilder-filterOperationContains"),
          notContains: q.format("dxFilterBuilder-filterOperationNotContains"),
          endsWith: q.format("dxFilterBuilder-filterOperationEndsWith"),
          isBlank: q.format("dxFilterBuilder-filterOperationIsBlank"),
          isNotBlank: q.format("dxFilterBuilder-filterOperationIsNotBlank")
        }
      },
      filterBuilderPopup: {}
    };
  },
  views: {
    filterBuilderView: FY
  }
};
xe.registerModule("filterBuilder", PY);
var jl = "filter-panel", MY = jl + "-text", LY = jl + "-checkbox", VY = jl + "-clear-filter", NY = jl + "-left", $Y = "filterPanel", HY = at.View.inherit({
  isVisible: function() {
    return this.option("filterPanel.visible") && this.getController("data").dataSource();
  },
  init: function() {
    this.getController("data").dataSourceChanged.add(() => this.render());
  },
  _renderCore: function() {
    var e = this.element();
    e.empty().addClass(this.addWidgetPrefix(jl));
    var t = g("<div>").addClass(this.addWidgetPrefix(NY)).appendTo(e);
    this.option("filterValue") || this._filterValueBuffer ? (t.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement()), e.append(this._getRemoveButtonElement())) : t.append(this._getFilterElement()).append(this._getTextElement());
  },
  _getCheckElement: function() {
    var e = this, t = g("<div>").addClass(this.addWidgetPrefix(LY));
    return e._createComponent(t, Ta, {
      value: e.option("filterPanel.filterEnabled"),
      onValueChanged: function(i) {
        e.option("filterPanel.filterEnabled", i.value);
      }
    }), t.attr("title", this.option("filterPanel.texts.filterEnabledHint")), t;
  },
  _getFilterElement: function() {
    var e = this, t = g("<div>").addClass("dx-icon-filter");
    return w.on(t, "click", () => e._showFilterBuilder()), $s("filterPanel", e, t, void 0, () => e._showFilterBuilder()), e._addTabIndexToElement(t), t;
  },
  _getTextElement: function() {
    var e = this, t = g("<div>").addClass(e.addWidgetPrefix(MY)), i, n = e.option("filterValue");
    return n ? ge(e.getFilterText(n, e.getController("filterSync").getCustomFilterOperations())).done(function(r) {
      var a = e.option("filterPanel.customizeText");
      if (a) {
        var o = a({
          component: e.component,
          filterValue: n,
          text: r
        });
        typeof o == "string" && (r = o);
      }
      t.text(r);
    }) : (i = e.option("filterPanel.texts.createFilter"), t.text(i)), w.on(t, "click", () => e._showFilterBuilder()), $s("filterPanel", e, t, void 0, () => e._showFilterBuilder()), e._addTabIndexToElement(t), t;
  },
  _showFilterBuilder: function() {
    this.option("filterBuilderPopup.visible", !0);
  },
  _getRemoveButtonElement: function() {
    var e = this, t = () => e.option("filterValue", null), i = g("<div>").addClass(e.addWidgetPrefix(VY)).text(e.option("filterPanel.texts.clearFilter"));
    return w.on(i, "click", t), $s("filterPanel", this, i, void 0, t), e._addTabIndexToElement(i), i;
  },
  _addTabIndexToElement: function(e) {
    if (!this.option("useLegacyKeyboardNavigation")) {
      var t = this.option("tabindex") || 0;
      e.attr("tabindex", t);
    }
  },
  optionChanged: function(e) {
    switch (e.name) {
      case "filterValue":
        this._invalidate(), this.option("filterPanel.filterEnabled", !0), e.handled = !0;
        break;
      case "filterPanel":
        this._invalidate(), e.handled = !0;
        break;
      default:
        this.callBase(e);
    }
  },
  _getConditionText: function(e, t, i) {
    var n = "[".concat(e, "] ").concat(t);
    return x(i) && (n += i), n;
  },
  _getValueMaskedText: function(e) {
    return Array.isArray(e) ? "('".concat(e.join("', '"), "')") : " '".concat(e, "'");
  },
  _getValueText: function(e, t, i) {
    var n = new U(), r = t && t.customizeText;
    if (x(i) || r)
      if (!r && e.lookup)
        kO(e, i, (o) => {
          n.resolve(this._getValueMaskedText(o));
        });
      else {
        var a = Array.isArray(i) ? i : ae.getDisplayValue(e, i);
        ge(PO(e, a, t, $Y)).done((o) => {
          n.resolve(this._getValueMaskedText(o));
        });
      }
    else
      n.resolve("");
    return n.promise();
  },
  getConditionText: function(e, t) {
    var i = this, n = e[1], r = new U(), a = jn(t.customOperations, n), o, s = tc(e[0], t.columns), l = s.caption || "", u = e[2];
    return a ? o = a.caption || va(a.name) : u === null ? o = Wg(n === "=" ? "isblank" : "isnotblank", t.filterOperationDescriptions) : o = Wg(n, t.filterOperationDescriptions), this._getValueText(s, a, u).done((d) => {
      r.resolve(i._getConditionText(l, o, d));
    }), r;
  },
  getGroupText: function(e, t, i) {
    var n = this, r = new U(), a = [], o = Ua(e);
    return e.forEach((s) => {
      Kt(s) ? a.push(n.getConditionText(s, t)) : Kr(s) && a.push(n.getGroupText(s, t, !0));
    }), ge.apply(this, a).done(function() {
      for (var s, l = arguments.length, u = new Array(l), d = 0; d < l; d++)
        u[d] = arguments[d];
      if (o[0] === "!") {
        var c = t.groupOperationDescriptions["not" + o.substring(1, 2).toUpperCase() + o.substring(2)].split(" ");
        s = "".concat(c[0], " ").concat(u[0]);
      } else
        s = u.join(" ".concat(t.groupOperationDescriptions[o], " "));
      i && (s = "(".concat(s, ")")), r.resolve(s);
    }), r;
  },
  getFilterText: function(e, t) {
    var i = {
      customOperations: t,
      columns: this.getController("columns").getFilteringColumns(),
      filterOperationDescriptions: this.option("filterBuilder.filterOperationDescriptions"),
      groupOperationDescriptions: this.option("filterBuilder.groupOperationDescriptions")
    };
    return Kt(e) ? this.getConditionText(e, i) : this.getGroupText(e, i);
  }
}), zY = {
  defaultOptions: function() {
    return {
      filterPanel: {
        visible: !1,
        filterEnabled: !0,
        texts: {
          createFilter: q.format("dxDataGrid-filterPanelCreateFilter"),
          clearFilter: q.format("dxDataGrid-filterPanelClearFilter"),
          filterEnabledHint: q.format("dxDataGrid-filterPanelFilterEnabledHint")
        }
      }
    };
  },
  views: {
    filterPanelView: HY
  },
  extenders: {
    controllers: {
      data: {
        optionChanged: function(e) {
          switch (e.name) {
            case "filterPanel":
              this._applyFilter(), e.handled = !0;
              break;
            default:
              this.callBase(e);
          }
        }
      }
    }
  }
};
xe.registerModule("filterPanel", zY);
function $S(e) {
  return x(e.allowSearch) ? e.allowSearch : e.allowFiltering;
}
function HS(e, t) {
  const {
    lookup: i
  } = e;
  return e.parseValue ? i ? e.parseValue.call(i, t) : e.parseValue(t) : t;
}
const WY = {
  defaultOptions: () => ({
    searchPanel: {
      visible: !1,
      width: 160,
      placeholder: q.format("dxDataGrid-searchPanelPlaceholder"),
      highlightSearchText: !0,
      highlightCaseSensitive: !1,
      text: "",
      searchVisibleColumnsOnly: !1
    }
  }),
  extenders: {
    controllers: {
      data: {
        publicMethods() {
          return this.callBase().concat(["searchByText"]);
        },
        _calculateAdditionalFilter() {
          const e = this.callBase(), t = function(i, n) {
            let r, a;
            const o = i._columnsController.getColumns(), s = i.option("searchPanel.searchVisibleColumnsOnly");
            let l;
            const u = [];
            if (!n)
              return null;
            function d(c) {
              const h = tt(l.valueExpr);
              for (let p = 0; p < c.length; p++) {
                const f = h(c[p]);
                u.push(a.createFilterExpression(f, null, "search"));
              }
            }
            for (r = 0; r < o.length; r++)
              if (a = o[r], !(s && !a.visible) && $S(a) && a.calculateFilterExpression) {
                l = a.lookup;
                const c = HS(a, n);
                l && l.items ? ui(l.items).filter(a.createFilterExpression.call({
                  dataField: l.displayExpr,
                  dataType: l.dataType,
                  calculateFilterExpression: a.calculateFilterExpression
                }, c, null, "search")).enumerate().done(d) : c !== void 0 && u.push(a.createFilterExpression(c, null, "search"));
              }
            return u.length === 0 ? ["!"] : ae.combineFilters(u, "or");
          }(this, this.option("searchPanel.text"));
          return ae.combineFilters([e, t]);
        },
        searchByText(e) {
          this.option("searchPanel.text", e);
        },
        optionChanged(e) {
          const t = this;
          switch (e.fullName) {
            case "searchPanel.text":
            case "searchPanel":
              t._applyFilter(), e.handled = !0;
              break;
            default:
              t.callBase(e);
          }
        }
      }
    },
    views: {
      headerPanel: function() {
        const e = function(t) {
          return t.option("searchPanel");
        };
        return {
          _getToolbarItems() {
            const t = this.callBase();
            return this._prepareSearchItem(t);
          },
          _prepareSearchItem(t) {
            const i = this, n = i.getController("data"), r = e(i);
            if (r && r.visible) {
              const a = {
                template(o, s, l) {
                  const u = g("<div>").addClass(i.addWidgetPrefix("search-panel")).appendTo(l);
                  i.getController("editorFactory").createEditor(u, {
                    width: r.width,
                    placeholder: r.placeholder,
                    parentType: "searchPanel",
                    value: i.option("searchPanel.text"),
                    updateValueTimeout: 700,
                    setValue(d) {
                      n.searchByText(d);
                    },
                    editorOptions: {
                      inputAttr: {
                        "aria-label": q.format(i.component.NAME + "-ariaSearchInGrid")
                      }
                    }
                  }), i.resize();
                },
                name: "searchPanel",
                location: "after",
                locateInMenu: "never",
                sortIndex: 40
              };
              t.push(a);
            }
            return t;
          },
          getSearchTextEditor() {
            const t = this, i = t.element(), n = i.find("." + t.addWidgetPrefix("search-panel")).filter(function() {
              return g(this).closest("." + t.addWidgetPrefix("header-panel")).is(i);
            });
            return n.length ? n.dxTextBox("instance") : null;
          },
          isVisible() {
            const t = e(this);
            return this.callBase() || t && t.visible;
          },
          optionChanged(t) {
            if (t.name === "searchPanel") {
              if (t.fullName === "searchPanel.text") {
                const i = this.getSearchTextEditor();
                i && i.option("value", t.value);
              } else
                this._invalidate();
              t.handled = !0;
            } else
              this.callBase(t);
          }
        };
      }(),
      rowsView: {
        init() {
          this.callBase.apply(this, arguments), this._searchParams = [];
        },
        _getFormattedSearchText(e, t) {
          const i = HS(e, t), n = ae.getFormatOptionsByColumn(e, "search");
          return ae.formatValue(i, n);
        },
        _getStringNormalizer() {
          const e = this.option("searchPanel.highlightCaseSensitive");
          return function(t) {
            return e ? t : t.toLowerCase();
          };
        },
        _findHighlightingTextNodes(e, t, i) {
          const n = this;
          let r = t.parent(), a;
          const o = this._getStringNormalizer(), s = o(i), l = [];
          if (!r.length)
            r = g("<div>").append(t);
          else if (e)
            if (e.groupIndex >= 0 && !e.showWhenGrouped)
              a = t;
            else {
              const u = n._columnsController.getVisibleIndex(e.index);
              a = r.children("td").eq(u).find("*");
            }
          return a = a != null && a.length ? a : r.find("*"), a.each((u, d) => {
            const c = g(d).contents();
            for (let h = 0; h < c.length; h++) {
              const p = c.get(h);
              p.nodeType === 3 && o(p.textContent || p.nodeValue).indexOf(s) > -1 && l.push(p);
            }
          }), l;
        },
        _highlightSearchTextCore(e, t) {
          const i = this, n = g("<span>").addClass(i.addWidgetPrefix("search-text")), r = e.text(), a = e[0], o = this._getStringNormalizer(), s = o(r).indexOf(o(t));
          if (s >= 0)
            return a.textContent ? a.textContent = r.substr(0, s) : a.nodeValue = r.substr(0, s), e.after(n.text(r.substr(s, t.length))), e = g(ee.createTextNode(r.substr(s + t.length))).insertAfter(n), i._highlightSearchTextCore(e, t);
        },
        _highlightSearchText(e, t, i) {
          const n = this, r = this._getStringNormalizer();
          let a = n.option("searchPanel.text");
          t && i && (a = a && n._getFormattedSearchText(i, a)), a && n.option("searchPanel.highlightSearchText") && n._findHighlightingTextNodes(i, e, a).forEach((s) => {
            t ? r(g(s).text()) === r(a) && g(s).replaceWith(g("<span>").addClass(n.addWidgetPrefix("search-text")).text(g(s).text())) : n._highlightSearchTextCore(g(s), a);
          });
        },
        _renderCore() {
          const e = this.callBase.apply(this, arguments);
          return (this.option().rowTemplate || this.option("dataRowTemplate")) && (this.option("templatesRenderAsynchronously") ? (clearTimeout(this._highlightTimer), this._highlightTimer = setTimeout(() => {
            this._highlightSearchText(this.getTableElement());
          })) : this._highlightSearchText(this.getTableElement())), e;
        },
        _updateCell(e, t) {
          const {
            column: i
          } = t, r = (i.lookup && i.lookup.dataType || i.dataType) !== "string";
          $S(i) && !t.isOnForm && (this.option("templatesRenderAsynchronously") ? (this._searchParams.length || (clearTimeout(this._highlightTimer), this._highlightTimer = setTimeout(() => {
            this._searchParams.forEach((a) => {
              this._highlightSearchText.apply(this, a);
            }), this._searchParams = [];
          })), this._searchParams.push([e, r, i])) : this._highlightSearchText(e, r, i)), this.callBase(e, t);
        },
        dispose() {
          clearTimeout(this._highlightTimer), this.callBase();
        }
      }
    }
  }
};
xe.registerModule("search", WY);
class GY extends zl {
  _optionChanged(t) {
    switch (t.name) {
      case "pageIndex":
        var i = this.option("pageIndexChanged");
        i && i(t.value);
        break;
      case "pageSize":
        var n = this.option("pageSizeChanged");
        n && n(t.value);
    }
    super._optionChanged(t);
  }
}
function qn(e, t) {
  var i, n = (i = CA(t)) !== null && i !== void 0 ? i : {};
  return lA(n[e]);
}
function KY(e) {
  var t = qn("paddingLeft", e) + qn("paddingRight", e), i = qn("width", e);
  return i - t;
}
function xd(e) {
  var t = qn("marginLeft", e) + qn("marginRight", e), i = qn("width", e);
  return t + i;
}
function KO(e) {
  return qn("minWidth", e);
}
var UY = ["contentTemplate", "pagerProps"], jY = (e) => {
  var {
    contentAttributes: t,
    infoTextRef: i,
    infoTextVisible: n,
    isLargeDisplayMode: r,
    pageSizesRef: a,
    pagesRef: o,
    parentRef: s,
    props: {
      contentTemplate: l
    }
  } = e;
  return l(ue({
    rootElementRef: s,
    pageSizesRef: a,
    infoTextRef: i,
    pagesRef: o,
    infoTextVisible: n,
    isLargeDisplayMode: r
  }, t));
};
function qY(e) {
  var {
    pageSizes: t,
    pages: i,
    parent: n
  } = e;
  return n - (t + i) > 0;
}
function XY(e) {
  var {
    info: t,
    pageSizes: i,
    pages: n,
    parent: r
  } = e, a = i + n + t;
  return r - a > 0;
}
function YY(e) {
  var {
    info: t,
    pageSizes: i,
    pages: n,
    parent: r
  } = e, a = KY(r), o = xd(i), s = xd(t), l = xd(n);
  return {
    parent: a,
    pageSizes: o,
    info: s + qn("marginLeft", t) + qn("marginRight", t),
    pages: l
  };
}
var ZY = {}, QY = (e) => e && (e.defaultProps ? (t) => vi(ot(2, e, ue({}, t))) : e);
class UO extends In {
  constructor(t) {
    super(t), this.parentRef = zt(), this.pageSizesRef = zt(), this.infoTextRef = zt(), this.pagesRef = zt(), this.actualIsLargeDisplayMode = !0, this.actualInfoTextVisible = !0, this.state = {
      infoTextVisible: !0,
      isLargeDisplayMode: !0
    }, this.subscribeToResize = this.subscribeToResize.bind(this), this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this), this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this);
  }
  createEffects() {
    return [new ut(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new ut(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])];
  }
  updateEffects() {
    var t, i;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]), (i = this._effects[1]) === null || i === void 0 || i.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate]);
  }
  subscribeToResize() {
    var t = () => {
      this.parentWidth > 0 && this.updateAdaptivityProps();
    };
    return ma.add(t), () => {
      ma.remove(t);
    };
  }
  effectUpdateChildProps() {
    this.parentWidth > 0 && this.updateAdaptivityProps();
  }
  get contentAttributes() {
    var {
      className: t,
      displayMode: i,
      gridCompatibility: n,
      hasKnownLastPage: r,
      infoText: a,
      label: o,
      lightModeEnabled: s,
      maxPagesCount: l,
      onKeyDown: u,
      pageCount: d,
      pageIndex: c,
      pageIndexChange: h,
      pageSize: p,
      pageSizeChange: f,
      pageSizes: v,
      pagesCountText: m,
      pagesNavigatorVisible: C,
      rtlEnabled: b,
      showInfo: A,
      showNavigationButtons: R,
      showPageSizes: k,
      totalCount: H,
      visible: K
    } = this.props.pagerProps;
    return ue({}, this.restAttributes, {
      pageSize: p,
      pageIndex: c,
      pageIndexChange: h,
      pageSizeChange: f,
      gridCompatibility: n,
      className: t,
      showInfo: A,
      infoText: a,
      lightModeEnabled: s,
      displayMode: i,
      maxPagesCount: l,
      pageCount: d,
      pagesCountText: m,
      visible: K,
      hasKnownLastPage: r,
      pagesNavigatorVisible: C,
      showPageSizes: k,
      pageSizes: v,
      rtlEnabled: b,
      showNavigationButtons: R,
      totalCount: H,
      onKeyDown: u,
      label: o
    });
  }
  get parentWidth() {
    return this.parentRef.current ? xd(this.parentRef.current) : 0;
  }
  updateAdaptivityProps() {
    var t = YY({
      parent: this.parentRef.current,
      pageSizes: this.pageSizesRef.current,
      info: this.infoTextRef.current,
      pages: this.pagesRef.current
    });
    if (!(this.actualInfoTextVisible !== this.state.infoTextVisible || this.actualIsLargeDisplayMode !== this.state.isLargeDisplayMode)) {
      var i = !x(this.elementsWidth);
      i && (this.elementsWidth = {}), (i || this.state.isLargeDisplayMode) && (this.elementsWidth.pageSizes = t.pageSizes, this.elementsWidth.pages = t.pages), (i || this.state.infoTextVisible) && (this.elementsWidth.info = t.info), this.actualIsLargeDisplayMode = qY(ue({
        parent: t.parent
      }, {
        pageSizes: this.elementsWidth.pageSizes,
        pages: this.elementsWidth.pages
      })), this.actualInfoTextVisible = XY(ue({}, t, {
        info: this.elementsWidth.info
      })), this.setState((n) => ({
        infoTextVisible: this.actualInfoTextVisible
      })), this.setState((n) => ({
        isLargeDisplayMode: this.actualIsLargeDisplayMode
      }));
    }
  }
  get restAttributes() {
    var t = this.props, i = pt(t, UY);
    return i;
  }
  render() {
    var t = this.props;
    return jY({
      props: ue({}, t, {
        contentTemplate: QY(t.contentTemplate)
      }),
      infoTextVisible: this.state.infoTextVisible,
      isLargeDisplayMode: this.state.isLargeDisplayMode,
      parentRef: this.parentRef,
      pageSizesRef: this.pageSizesRef,
      infoTextRef: this.infoTextRef,
      pagesRef: this.pagesRef,
      contentAttributes: this.contentAttributes,
      parentWidth: this.parentWidth,
      updateAdaptivityProps: this.updateAdaptivityProps,
      restAttributes: this.restAttributes
    });
  }
}
UO.defaultProps = ZY;
var jO = {
  gridCompatibility: !0,
  showInfo: !1,
  displayMode: "adaptive",
  maxPagesCount: 10,
  pageCount: 10,
  visible: !0,
  hasKnownLastPage: !0,
  pagesNavigatorVisible: "auto",
  showPageSizes: !0,
  pageSizes: Object.freeze([5, 10]),
  showNavigationButtons: !1,
  totalCount: 0,
  get label() {
    return q.format("dxPager-ariaLabel");
  }
}, JY = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(jO), Object.getOwnPropertyDescriptors({
  defaultPageSize: 5,
  pageSizeChange: () => {
  },
  defaultPageIndex: 1,
  pageIndexChange: () => {
  }
}))), Vt = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(jO), Object.getOwnPropertyDescriptors({
  pageSize: 5,
  pageIndex: 1
}))), e7 = ["infoText", "pageCount", "pageIndex", "rootElementRef", "totalCount"], qO = "dx-info", t7 = (e) => {
  var {
    props: {
      rootElementRef: t
    },
    text: i
  } = e;
  return yt(1, "div", qO, i, 0, null, null, t);
}, i7 = {
  get pageIndex() {
    return Vt.pageIndex;
  },
  get pageCount() {
    return Vt.pageCount;
  },
  get totalCount() {
    return Vt.totalCount;
  }
};
class XO extends Gi {
  constructor(t) {
    super(t), this.state = {};
  }
  get infoText() {
    var t;
    return ((t = this.props.infoText) !== null && t !== void 0 ? t : "") || q.getFormatter("dxPager-infoText")();
  }
  get text() {
    var {
      pageCount: t,
      pageIndex: i,
      totalCount: n
    } = this.props;
    return Ji(this.infoText, (i + 1).toString(), t.toString(), n.toString());
  }
  get restAttributes() {
    var t = this.props, i = pt(t, e7);
    return i;
  }
  render() {
    var t = this.props;
    return t7({
      props: ue({}, t),
      infoText: this.infoText,
      text: this.text,
      restAttributes: this.restAttributes
    });
  }
}
XO.defaultProps = i7;
var qs = MD(void 0), n7 = ["children", "className", "label", "onClick", "selected", "tabIndex"], r7 = (e) => {
  var {
    props: {
      children: t,
      className: i,
      label: n,
      selected: r,
      tabIndex: a
    },
    widgetRef: o
  } = e;
  return yt(1, "div", i, t, 0, {
    tabIndex: a,
    role: "button",
    "aria-label": n,
    "aria-current": r ? "page" : void 0
  }, null, o);
}, a7 = {
  className: "",
  label: "",
  tabIndex: 0,
  selected: !1
};
class hl extends In {
  constructor(t) {
    super(t), this.state = {}, this.widgetRef = zt(), this.keyboardEffect = this.keyboardEffect.bind(this), this.subscribeToClick = this.subscribeToClick.bind(this);
  }
  get keyboardContext() {
    return this.context[qs.id] ? this.context[qs.id] : qs.defaultValue;
  }
  createEffects() {
    return [new ut(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new ut(this.subscribeToClick, [this.props.onClick])];
  }
  updateEffects() {
    var t, i;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.keyboardContext, this.props.onClick]), (i = this._effects[1]) === null || i === void 0 || i.update([this.props.onClick]);
  }
  keyboardEffect() {
    return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick);
  }
  subscribeToClick() {
    return ZW(this.widgetRef.current, this.props.onClick);
  }
  get restAttributes() {
    var t = this.props, i = pt(t, n7);
    return i;
  }
  render() {
    var t = this.props;
    return r7({
      props: ue({}, t),
      widgetRef: this.widgetRef,
      keyboardContext: this.keyboardContext,
      restAttributes: this.restAttributes
    });
  }
}
hl.defaultProps = a7;
var o7 = "dx-pager", s7 = "dx-light-mode", l7 = "dx-pages", u7 = "dx-page-indexes", d7 = "dx-page", YO = "dx-selection", ZO = "dx-page-size", c7 = "dx-page-sizes", h7 = "".concat(ZO, " ").concat(YO), p7 = "dx-first-child", f7 = ["className", "index", "onClick", "selected"], g7 = (e) => {
  var {
    className: t,
    label: i,
    props: {
      onClick: n,
      selected: r
    },
    value: a
  } = e;
  return ot(2, hl, {
    className: t,
    label: i,
    onClick: n,
    selected: r,
    children: a
  });
}, _7 = {
  index: 0,
  selected: !1,
  className: d7
};
class om extends Gi {
  constructor(t) {
    super(t), this.state = {};
  }
  get label() {
    return Ji(q.getFormatter("dxPager-page"), this.value);
  }
  get value() {
    return this.props.index + 1;
  }
  get className() {
    var {
      selected: t
    } = this.props;
    return Li({
      ["".concat(this.props.className)]: !!this.props.className,
      [YO]: !!t
    });
  }
  get restAttributes() {
    var t = this.props, i = pt(t, f7);
    return i;
  }
  render() {
    var t = this.props;
    return g7({
      props: ue({}, t),
      label: this.label,
      value: this.value,
      className: this.className,
      restAttributes: this.restAttributes
    });
  }
}
om.defaultProps = _7;
var v7 = ["pageIndexes"], m7 = ["maxPagesCount", "pageCount", "pageIndex", "pageIndexChange"], C7 = "dx-separator", x7 = (e) => {
  var {
    pages: t
  } = e, i = t.map((n) => {
    var {
      key: r,
      pageProps: a
    } = n;
    return a ? ot(2, om, {
      index: a.index,
      selected: a.selected,
      onClick: a.onClick
    }, r) : yt(1, "div", C7, ". . .", 16, null, r);
  });
  return nr(i, 0);
}, Zr = 4;
function zS(e, t, i) {
  return e === 1 ? "high" : e + t === i - 1 ? "low" : "both";
}
function QO(e, t, i) {
  var n = [], r = [];
  switch (i) {
    case "none":
      n = [...e];
      break;
    case "both":
      n = [0, "low", ...e, "high", t - 1], r = e.slice(1, -1);
      break;
    case "high":
      n = [0, ...e, "high", t - 1], r = e.slice(0, -1);
      break;
    case "low":
      n = [0, "low", ...e, t - 1], r = e.slice(1);
  }
  return {
    slidingWindowIndexes: e,
    indexesForReuse: r,
    pageIndexes: n
  };
}
function WS(e, t, i, n) {
  for (var r = [], a = 0; a < t; a += 1)
    r.push(a + e);
  return QO(r, i, n);
}
var y7 = {
  get pageIndex() {
    return Vt.pageIndex;
  },
  get maxPagesCount() {
    return Vt.maxPagesCount;
  },
  get pageCount() {
    return Vt.pageCount;
  }
};
class JO extends Gi {
  constructor(t) {
    super(t), this.state = {}, this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this), this.generatePageIndexes = this.generatePageIndexes.bind(this), this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this), this.onPageClick = this.onPageClick.bind(this);
  }
  get config() {
    return this.context[Xt.id] ? this.context[Xt.id] : Xt.defaultValue;
  }
  get slidingWindowState() {
    var t = this.slidingWindowStateHolder;
    return t || {
      indexesForReuse: [],
      slidingWindowIndexes: []
    };
  }
  canReuseSlidingWindow(t, i) {
    var {
      indexesForReuse: n
    } = this.slidingWindowState, r = n.slice(-1)[0] < t - 1, a = n.includes(i);
    return r && a;
  }
  generatePageIndexes() {
    var {
      pageCount: t,
      pageIndex: i
    } = this.props, n = 0, {
      slidingWindowIndexes: r
    } = this.slidingWindowState;
    i === r[0] ? n = i - 1 : i === r[r.length - 1] ? n = i + 2 - Zr : i < Zr ? n = 1 : i >= t - Zr ? n = t - Zr - 1 : n = i - 1;
    var a = Zr, o = zS(n, a, t), s = WS(n, a, t, o), {
      pageIndexes: l
    } = s, u = pt(s, v7);
    return this.slidingWindowStateHolder = u, l;
  }
  isSlidingWindowMode() {
    var {
      maxPagesCount: t,
      pageCount: i
    } = this.props;
    return i <= Zr || i <= t;
  }
  onPageClick(t) {
    this.props.pageIndexChange(t);
  }
  get pageIndexes() {
    var {
      pageCount: t
    } = this.props;
    if (this.isSlidingWindowMode())
      return WS(0, t, t, "none").pageIndexes;
    if (this.canReuseSlidingWindow(t, this.props.pageIndex)) {
      var {
        slidingWindowIndexes: i
      } = this.slidingWindowState, n = zS(i[0], Zr, t);
      return QO(i, t, n).pageIndexes;
    }
    return this.generatePageIndexes();
  }
  get pages() {
    var t, {
      pageIndex: i
    } = this.props, n = (a) => {
      var o = a === "low" || a === "high" ? null : {
        index: a,
        onClick: () => this.onPageClick(a),
        selected: i === a
      };
      return {
        key: a.toString(),
        pageProps: o
      };
    }, r = (t = this.config) !== null && t !== void 0 && t.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;
    return r.map((a) => n(a));
  }
  get restAttributes() {
    var t = this.props, i = pt(t, m7);
    return i;
  }
  render() {
    var t = this.props;
    return x7({
      props: ue({}, t),
      config: this.config,
      pageIndexes: this.pageIndexes,
      pages: this.pages,
      restAttributes: this.restAttributes
    });
  }
}
JO.defaultProps = y7;
var Io = {
  hoverStateEnabled: !0,
  activeStateEnabled: !0,
  get focusStateEnabled() {
    return ve.real().deviceType === "desktop" && !ve.isSimulator();
  }
}, nc = {
  label: "",
  get labelMode() {
    return St(rn()) ? "floating" : "static";
  }
}, b7 = ["accessKey", "activeStateEnabled", "className", "defaultValue", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "invalidValueMessage", "isValid", "label", "labelMode", "max", "min", "mode", "name", "onClick", "onFocusIn", "onKeyDown", "readOnly", "rtlEnabled", "showSpinButtons", "step", "tabIndex", "useLargeSpinButtons", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "valueChange", "visible", "width"], S7 = 0, E7 = (e) => {
  var {
    componentProps: t,
    restAttributes: i
  } = e;
  return vi(ot(2, Wc, ue({
    componentType: Yd,
    componentProps: t,
    templateNames: []
  }, i)));
}, Ci = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Ft), Object.getOwnPropertyDescriptors({
  defaultValue: S7,
  isReactComponentWrapper: !0
}))), w7 = {
  get defaultValue() {
    return Ci.defaultValue;
  },
  get readOnly() {
    return Ci.readOnly;
  },
  get name() {
    return Ci.name;
  },
  get validationError() {
    return Ci.validationError;
  },
  get validationErrors() {
    return Ci.validationErrors;
  },
  get validationMessageMode() {
    return Ci.validationMessageMode;
  },
  get validationMessagePosition() {
    return Ci.validationMessagePosition;
  },
  get validationStatus() {
    return Ci.validationStatus;
  },
  get isValid() {
    return Ci.isValid;
  },
  get className() {
    return Ci.className;
  },
  get activeStateEnabled() {
    return Io.activeStateEnabled;
  },
  get disabled() {
    return Ci.disabled;
  },
  get focusStateEnabled() {
    return Io.focusStateEnabled;
  },
  get hoverStateEnabled() {
    return Io.hoverStateEnabled;
  },
  get tabIndex() {
    return Ci.tabIndex;
  },
  get visible() {
    return Ci.visible;
  },
  get label() {
    return nc.label;
  },
  get labelMode() {
    return nc.labelMode;
  },
  isReactComponentWrapper: !0
};
class eR extends Gi {
  constructor(t) {
    super(t), this.state = {
      value: this.props.value !== void 0 ? this.props.value : this.props.defaultValue
    };
  }
  get componentProps() {
    return ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    });
  }
  get restAttributes() {
    var t = ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    }), i = pt(t, b7);
    return i;
  }
  render() {
    var t = this.props;
    return E7({
      props: ue({}, t, {
        value: this.props.value !== void 0 ? this.props.value : this.state.value
      }),
      componentProps: this.componentProps,
      restAttributes: this.restAttributes
    });
  }
}
eR.defaultProps = w7;
var I7 = 10;
function tR(e, t) {
  return e + I7 * Math.max(...t).toString().length;
}
var T7 = ["pageCount", "pageIndex", "pageIndexChange", "pagesCountText"], D7 = "".concat(qO, "  dx-info-text"), iR = "dx-page-index", A7 = "dx-light-pages", O7 = "dx-pages-count", R7 = (e) => {
  var {
    pageIndexRef: t,
    pagesCountText: i,
    props: {
      pageCount: n
    },
    selectLastPageIndex: r,
    value: a,
    valueChange: o,
    width: s
  } = e;
  return yt(1, "div", A7, [ot(2, eR, {
    className: iR,
    min: 1,
    max: n,
    width: s,
    value: a,
    valueChange: o
  }), yt(1, "span", D7, i, 0), ot(2, om, {
    className: O7,
    selected: !1,
    index: n - 1,
    onClick: r
  })], 4, null, null, t);
}, B7 = {
  get pageIndex() {
    return Vt.pageIndex;
  },
  get pageCount() {
    return Vt.pageCount;
  }
};
class nR extends In {
  constructor(t) {
    super(t), this.pageIndexRef = zt(), this.state = {
      minWidth: 10
    }, this.updateWidth = this.updateWidth.bind(this), this.selectLastPageIndex = this.selectLastPageIndex.bind(this), this.valueChange = this.valueChange.bind(this);
  }
  createEffects() {
    return [new ut(this.updateWidth, [this.state.minWidth])];
  }
  updateEffects() {
    var t;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.state.minWidth]);
  }
  updateWidth() {
    var t, i = (t = this.pageIndexRef.current) === null || t === void 0 ? void 0 : t.querySelector(".".concat(iR));
    this.setState((n) => ({
      minWidth: i && KO(i) || n.minWidth
    }));
  }
  get value() {
    return this.props.pageIndex + 1;
  }
  get width() {
    var {
      pageCount: t
    } = this.props;
    return tR(this.state.minWidth, [t]);
  }
  get pagesCountText() {
    var t;
    return ((t = this.props.pagesCountText) !== null && t !== void 0 ? t : "") || q.getFormatter("dxPager-pagesCountText")();
  }
  selectLastPageIndex() {
    this.props.pageIndexChange(this.props.pageCount - 1);
  }
  valueChange(t) {
    this.props.pageIndexChange(t - 1);
  }
  get restAttributes() {
    var t = this.props, i = pt(t, T7);
    return i;
  }
  render() {
    var t = this.props;
    return R7({
      props: ue({}, t),
      pageIndexRef: this.pageIndexRef,
      value: this.value,
      width: this.width,
      pagesCountText: this.pagesCountText,
      selectLastPageIndex: this.selectLastPageIndex,
      valueChange: this.valueChange,
      restAttributes: this.restAttributes
    });
  }
}
nR.defaultProps = B7;
var k7 = ["hasKnownLastPage", "isLargeDisplayMode", "maxPagesCount", "pageCount", "pageIndex", "pageIndexChange", "pagesCountText", "showNavigationButtons", "totalCount"], qu = "dx-navigate-button", GS = "dx-prev-button", KS = "dx-next-button", US = "dx-button-disable", F7 = () => q.getFormatter("dxPager-nextPage")(), P7 = () => q.getFormatter("dxPager-prevPage")(), M7 = {
  nextEnabledClass: "".concat(qu, " ").concat(KS),
  prevEnabledClass: "".concat(qu, " ").concat(GS),
  nextDisabledClass: "".concat(US, " ").concat(qu, " ").concat(KS),
  prevDisabledClass: "".concat(US, " ").concat(qu, " ").concat(GS)
}, L7 = {
  next: "prev",
  prev: "next"
}, V7 = (e) => {
  var {
    nextButtonProps: t,
    pageIndexChange: i,
    prevButtonProps: n,
    props: {
      isLargeDisplayMode: r,
      maxPagesCount: a,
      pageCount: o,
      pageIndex: s,
      pagesCountText: l
    },
    renderNextButton: u,
    renderPrevButton: d
  } = e;
  return nr([d && ot(2, hl, {
    label: P7(),
    className: n.className,
    tabIndex: n.tabIndex,
    onClick: n.navigate
  }), r && ot(2, JO, {
    maxPagesCount: a,
    pageCount: o,
    pageIndex: s,
    pageIndexChange: i
  }), !r && ot(2, nR, {
    pageCount: o,
    pageIndex: s,
    pageIndexChange: i,
    pagesCountText: l
  }), u && ot(2, hl, {
    label: F7(),
    className: t.className,
    tabIndex: t.tabIndex,
    onClick: t.navigate
  })], 0);
};
function N7(e) {
  return e === "next" ? 1 : -1;
}
var $7 = {
  isLargeDisplayMode: !0
}, H7 = {
  get pageIndex() {
    return Vt.pageIndex;
  },
  get maxPagesCount() {
    return Vt.maxPagesCount;
  },
  get pageCount() {
    return Vt.pageCount;
  },
  get hasKnownLastPage() {
    return Vt.hasKnownLastPage;
  },
  get showNavigationButtons() {
    return Vt.showNavigationButtons;
  },
  get totalCount() {
    return Vt.totalCount;
  },
  get isLargeDisplayMode() {
    return $7.isLargeDisplayMode;
  }
};
class rR extends Gi {
  constructor(t) {
    super(t), this.state = {}, this.__getterCache = {}, this.pageIndexChange = this.pageIndexChange.bind(this), this.getButtonProps = this.getButtonProps.bind(this), this.canNavigateToPage = this.canNavigateToPage.bind(this), this.getNextPageIndex = this.getNextPageIndex.bind(this), this.canNavigateTo = this.canNavigateTo.bind(this), this.navigateToPage = this.navigateToPage.bind(this);
  }
  get config() {
    return this.context[Xt.id] ? this.context[Xt.id] : Xt.defaultValue;
  }
  pageIndexChange(t) {
    this.canNavigateToPage(t) && this.props.pageIndexChange(t);
  }
  getButtonProps(t) {
    var i, n = (i = this.config) !== null && i !== void 0 && i.rtlEnabled ? L7[t] : t, r = this.canNavigateTo(n), a = M7["".concat(t).concat(r ? "Enabled" : "Disabled", "Class")];
    return {
      className: a,
      tabIndex: r ? 0 : -1,
      navigate: () => this.navigateToPage(n)
    };
  }
  canNavigateToPage(t) {
    return this.props.hasKnownLastPage ? t >= 0 && t <= this.props.pageCount - 1 : t >= 0;
  }
  getNextPageIndex(t) {
    return this.props.pageIndex + N7(t);
  }
  canNavigateTo(t) {
    return this.canNavigateToPage(this.getNextPageIndex(t));
  }
  navigateToPage(t) {
    this.pageIndexChange(this.getNextPageIndex(t));
  }
  get renderPrevButton() {
    var {
      isLargeDisplayMode: t,
      showNavigationButtons: i
    } = this.props;
    return !t || i;
  }
  get renderNextButton() {
    return this.renderPrevButton || !this.props.hasKnownLastPage;
  }
  get prevButtonProps() {
    return this.__getterCache.prevButtonProps !== void 0 ? this.__getterCache.prevButtonProps : this.__getterCache.prevButtonProps = (() => this.getButtonProps("prev"))();
  }
  get nextButtonProps() {
    return this.__getterCache.nextButtonProps !== void 0 ? this.__getterCache.nextButtonProps : this.__getterCache.nextButtonProps = (() => this.getButtonProps("next"))();
  }
  get restAttributes() {
    var t = this.props, i = pt(t, k7);
    return i;
  }
  componentWillUpdate(t, i, n) {
    (this.context[Xt.id] !== n[Xt.id] || this.props.hasKnownLastPage !== t.hasKnownLastPage || this.props.pageCount !== t.pageCount || this.props.pageIndex !== t.pageIndex || this.props.pageIndexChange !== t.pageIndexChange) && (this.__getterCache.prevButtonProps = void 0), (this.context[Xt.id] !== n[Xt.id] || this.props.hasKnownLastPage !== t.hasKnownLastPage || this.props.pageCount !== t.pageCount || this.props.pageIndex !== t.pageIndex || this.props.pageIndexChange !== t.pageIndexChange) && (this.__getterCache.nextButtonProps = void 0);
  }
  render() {
    var t = this.props;
    return V7({
      props: ue({}, t),
      config: this.config,
      pageIndexChange: this.pageIndexChange,
      renderPrevButton: this.renderPrevButton,
      renderNextButton: this.renderNextButton,
      prevButtonProps: this.prevButtonProps,
      nextButtonProps: this.nextButtonProps,
      restAttributes: this.restAttributes
    });
  }
}
rR.defaultProps = H7;
var z7 = ["accessKey", "activeStateEnabled", "className", "dataSource", "defaultValue", "disabled", "displayExpr", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "isValid", "label", "labelMode", "name", "onClick", "onFocusIn", "onKeyDown", "placeholder", "readOnly", "rtlEnabled", "searchEnabled", "tabIndex", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "valueChange", "valueExpr", "visible", "width"], W7 = (e) => {
  var {
    componentProps: t,
    restAttributes: i
  } = e;
  return vi(ot(2, Wc, ue({
    componentType: jv,
    componentProps: t,
    templateNames: ["dropDownButtonTemplate", "groupTemplate", "itemTemplate"]
  }, i)));
}, ni = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Ft), Object.getOwnPropertyDescriptors({
  placeholder: "",
  hoverStateEnabled: !0,
  searchEnabled: !1,
  defaultValue: null,
  isReactComponentWrapper: !0
}))), G7 = {
  get placeholder() {
    return ni.placeholder;
  },
  get hoverStateEnabled() {
    return Io.hoverStateEnabled;
  },
  get searchEnabled() {
    return ni.searchEnabled;
  },
  get defaultValue() {
    return ni.defaultValue;
  },
  get readOnly() {
    return ni.readOnly;
  },
  get name() {
    return ni.name;
  },
  get validationError() {
    return ni.validationError;
  },
  get validationErrors() {
    return ni.validationErrors;
  },
  get validationMessageMode() {
    return ni.validationMessageMode;
  },
  get validationMessagePosition() {
    return ni.validationMessagePosition;
  },
  get validationStatus() {
    return ni.validationStatus;
  },
  get isValid() {
    return ni.isValid;
  },
  get className() {
    return ni.className;
  },
  get activeStateEnabled() {
    return Io.activeStateEnabled;
  },
  get disabled() {
    return ni.disabled;
  },
  get focusStateEnabled() {
    return Io.focusStateEnabled;
  },
  get tabIndex() {
    return ni.tabIndex;
  },
  get visible() {
    return ni.visible;
  },
  get label() {
    return nc.label;
  },
  get labelMode() {
    return nc.labelMode;
  },
  isReactComponentWrapper: !0
};
class aR extends Gi {
  constructor(t) {
    super(t), this.state = {
      value: this.props.value !== void 0 ? this.props.value : this.props.defaultValue
    };
  }
  get componentProps() {
    return ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    });
  }
  get restAttributes() {
    var t = ue({}, this.props, {
      value: this.props.value !== void 0 ? this.props.value : this.state.value
    }), i = pt(t, z7);
    return i;
  }
  render() {
    var t = this.props;
    return W7({
      props: ue({}, t, {
        value: this.props.value !== void 0 ? this.props.value : this.state.value
      }),
      componentProps: this.componentProps,
      restAttributes: this.restAttributes
    });
  }
}
aR.defaultProps = G7;
var K7 = ["pageSize", "pageSizeChange", "pageSizes", "parentRef"], U7 = (e) => {
  var {
    props: {
      pageSize: t,
      pageSizeChange: i,
      pageSizes: n
    },
    width: r
  } = e;
  return ot(2, aR, {
    displayExpr: "text",
    valueExpr: "value",
    dataSource: n,
    value: t,
    valueChange: i,
    width: r
  });
}, j7 = {
  get pageSize() {
    return Vt.pageSize;
  }
};
class oR extends In {
  constructor(t) {
    super(t), this.state = {
      minWidth: 10
    }, this.updateWidth = this.updateWidth.bind(this);
  }
  createEffects() {
    return [new ut(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])];
  }
  updateEffects() {
    var t;
    (t = this._effects[0]) === null || t === void 0 || t.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes]);
  }
  updateWidth() {
    this.setState((t) => ({
      minWidth: KO(this.props.parentRef.current) || t.minWidth
    }));
  }
  get width() {
    return tR(this.state.minWidth, this.props.pageSizes.map((t) => t.value));
  }
  get restAttributes() {
    var t = this.props, i = pt(t, K7);
    return i;
  }
  render() {
    var t = this.props;
    return U7({
      props: ue({}, t),
      width: this.width,
      restAttributes: this.restAttributes
    });
  }
}
oR.defaultProps = j7;
var q7 = ["pageSize", "pageSizeChange", "pageSizes"], X7 = (e) => {
  var {
    pageSizesText: t
  } = e;
  return nr(t.map((i) => {
    var {
      className: n,
      click: r,
      label: a,
      text: o
    } = i;
    return ot(2, hl, {
      className: n,
      label: a,
      onClick: r,
      children: o
    }, o);
  }), 0);
}, Y7 = {
  get pageSize() {
    return Vt.pageSize;
  }
};
class sR extends Gi {
  constructor(t) {
    super(t), this.state = {}, this.__getterCache = {}, this.onPageSizeChange = this.onPageSizeChange.bind(this);
  }
  get pageSizesText() {
    return this.__getterCache.pageSizesText !== void 0 ? this.__getterCache.pageSizesText : this.__getterCache.pageSizesText = (() => {
      var {
        pageSize: t,
        pageSizes: i
      } = this.props;
      return i.map((n, r) => {
        var {
          text: a,
          value: o
        } = n, s = o === t, l = Li({
          [s ? h7 : ZO]: !0,
          [p7]: r === 0
        });
        return {
          className: l,
          click: this.onPageSizeChange(o),
          label: Ji(q.getFormatter("dxPager-pageSize"), o || q.getFormatter("dxPager-pageSizesAllText")),
          text: a
        };
      });
    })();
  }
  onPageSizeChange(t) {
    return () => (this.props.pageSizeChange(t), this.props.pageSize);
  }
  get restAttributes() {
    var t = this.props, i = pt(t, q7);
    return i;
  }
  componentWillUpdate(t, i, n) {
    (this.props.pageSize !== t.pageSize || this.props.pageSizes !== t.pageSizes || this.props.pageSizeChange !== t.pageSizeChange) && (this.__getterCache.pageSizesText = void 0);
  }
  render() {
    var t = this.props;
    return X7({
      props: ue({}, t),
      pageSizesText: this.pageSizesText,
      restAttributes: this.restAttributes
    });
  }
}
sR.defaultProps = Y7;
var Z7 = ["isLargeDisplayMode", "pageSize", "pageSizeChange", "pageSizes", "rootElementRef"], Q7 = (e) => {
  var {
    htmlRef: t,
    normalizedPageSizes: i,
    props: {
      isLargeDisplayMode: n,
      pageSize: r,
      pageSizeChange: a
    }
  } = e;
  return yt(1, "div", c7, [n && ot(2, sR, {
    pageSizes: i,
    pageSize: r,
    pageSizeChange: a
  }), !n && ot(2, oR, {
    parentRef: t,
    pageSizes: i,
    pageSize: r,
    pageSizeChange: a
  })], 0, null, null, t);
};
function J7() {
  return q.getFormatter("dxPager-pageSizesAllText")();
}
var eZ = {
  isLargeDisplayMode: !0
}, tZ = {
  get pageSize() {
    return Vt.pageSize;
  },
  get pageSizes() {
    return Vt.pageSizes;
  },
  get isLargeDisplayMode() {
    return eZ.isLargeDisplayMode;
  }
};
class lR extends In {
  constructor(t) {
    super(t), this.state = {}, this.htmlRef = zt(), this.__getterCache = {}, this.setRootElementRef = this.setRootElementRef.bind(this);
  }
  createEffects() {
    return [new ut(this.setRootElementRef, [])];
  }
  setRootElementRef() {
    var {
      rootElementRef: t
    } = this.props;
    t && (t.current = this.htmlRef.current);
  }
  get normalizedPageSizes() {
    return this.__getterCache.normalizedPageSizes !== void 0 ? this.__getterCache.normalizedPageSizes : this.__getterCache.normalizedPageSizes = (() => {
      var {
        pageSizes: t
      } = this.props;
      return t.map((i) => i === "all" || i === 0 ? {
        text: J7(),
        value: 0
      } : {
        text: String(i),
        value: i
      });
    })();
  }
  get restAttributes() {
    var t = this.props, i = pt(t, Z7);
    return i;
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), this.props.pageSizes !== t.pageSizes && (this.__getterCache.normalizedPageSizes = void 0);
  }
  render() {
    var t = this.props;
    return Q7({
      props: ue({}, t),
      htmlRef: this.htmlRef,
      normalizedPageSizes: this.normalizedPageSizes,
      restAttributes: this.restAttributes
    });
  }
}
lR.defaultProps = tZ;
var iZ = ["className", "displayMode", "gridCompatibility", "hasKnownLastPage", "infoText", "infoTextRef", "infoTextVisible", "isLargeDisplayMode", "label", "lightModeEnabled", "maxPagesCount", "onKeyDown", "pageCount", "pageIndex", "pageIndexChange", "pageSize", "pageSizeChange", "pageSizes", "pageSizesRef", "pagesCountText", "pagesNavigatorVisible", "pagesRef", "rootElementRef", "rtlEnabled", "showInfo", "showNavigationButtons", "showPageSizes", "totalCount", "visible"], nZ = (e) => {
  var {
    aria: t,
    classes: i,
    infoVisible: n,
    isLargeDisplayMode: r,
    pageIndexSelectorVisible: a,
    pagesContainerVisibility: o,
    pagesContainerVisible: s,
    props: {
      hasKnownLastPage: l,
      infoText: u,
      infoTextRef: d,
      maxPagesCount: c,
      pageCount: h,
      pageIndex: p,
      pageIndexChange: f,
      pageSize: v,
      pageSizeChange: m,
      pageSizes: C,
      pageSizesRef: b,
      pagesCountText: A,
      pagesRef: R,
      rtlEnabled: k,
      showNavigationButtons: H,
      showPageSizes: K,
      totalCount: j,
      visible: z
    },
    restAttributes: re,
    widgetRootElementRef: he
  } = e;
  return vi(ot(2, Nc, ue({
    rootElementRef: he,
    rtlEnabled: k,
    classes: i,
    visible: z,
    aria: t
  }, re, {
    children: [K && ot(2, lR, {
      rootElementRef: b,
      isLargeDisplayMode: r,
      pageSize: v,
      pageSizeChange: m,
      pageSizes: C
    }), s && yt(1, "div", l7, [n && ot(2, XO, {
      rootElementRef: d,
      infoText: u,
      pageCount: h,
      pageIndex: p,
      totalCount: j
    }), a && yt(1, "div", u7, ot(2, rR, {
      hasKnownLastPage: l,
      isLargeDisplayMode: r,
      maxPagesCount: c,
      pageCount: h,
      pageIndex: p,
      pageIndexChange: f,
      pagesCountText: A,
      showNavigationButtons: H,
      totalCount: j
    }), 2, null, null, R)], 0, {
      style: Iv({
        visibility: o
      })
    })]
  })));
}, rZ = Object.create(Object.prototype, ue(Object.getOwnPropertyDescriptors(Vt), Object.getOwnPropertyDescriptors({
  infoTextVisible: !0,
  isLargeDisplayMode: !0
})));
class uR extends In {
  constructor(t) {
    super(t), this.state = {}, this.widgetRootElementRef = zt(), this.__getterCache = {}, this.setRootElementRef = this.setRootElementRef.bind(this), this.createFakeInstance = this.createFakeInstance.bind(this);
  }
  createEffects() {
    return [new ut(this.setRootElementRef, [])];
  }
  getChildContext() {
    return ue({}, this.context, {
      [qs.id]: this.keyboardAction || qs.defaultValue
    });
  }
  setRootElementRef() {
    var {
      rootElementRef: t
    } = this.props;
    t && (t.current = this.widgetRootElementRef.current);
  }
  createFakeInstance() {
    return {
      option: () => !1,
      element: () => this.widgetRootElementRef.current,
      _createActionByOption: () => (t) => {
        var i, n;
        (i = (n = this.props).onKeyDown) === null || i === void 0 || i.call(n, t);
      }
    };
  }
  get keyboardAction() {
    return this.__getterCache.keyboardAction !== void 0 ? this.__getterCache.keyboardAction : this.__getterCache.keyboardAction = (() => ({
      registerKeyboardAction: (t, i) => {
        var n = this.createFakeInstance();
        return CT("pager", n, t, void 0, i);
      }
    }))();
  }
  get infoVisible() {
    var {
      infoTextVisible: t,
      showInfo: i
    } = this.props;
    return i && t;
  }
  get pageIndexSelectorVisible() {
    return this.props.pageSize !== 0;
  }
  get normalizedDisplayMode() {
    var {
      displayMode: t,
      lightModeEnabled: i
    } = this.props;
    return t === "adaptive" && i !== void 0 ? i ? "compact" : "full" : t;
  }
  get pagesContainerVisible() {
    return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0;
  }
  get pagesContainerVisibility() {
    if (this.props.pagesNavigatorVisible === "auto" && this.props.pageCount === 1 && this.props.hasKnownLastPage)
      return "hidden";
  }
  get isLargeDisplayMode() {
    var t = this.normalizedDisplayMode, i = !1;
    return t === "adaptive" ? i = this.props.isLargeDisplayMode : i = t === "full", i;
  }
  get classes() {
    var t = {
      ["".concat(this.props.className)]: !!this.props.className,
      [o7]: !0,
      [s7]: !this.isLargeDisplayMode
    };
    return Li(t);
  }
  get aria() {
    return {
      role: "navigation",
      label: this.props.label
    };
  }
  get restAttributes() {
    var t = this.props, i = pt(t, iZ);
    return i;
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), this.props.onKeyDown !== t.onKeyDown && (this.__getterCache.keyboardAction = void 0);
  }
  render() {
    var t = this.props;
    return nZ({
      props: ue({}, t),
      widgetRootElementRef: this.widgetRootElementRef,
      keyboardAction: this.keyboardAction,
      infoVisible: this.infoVisible,
      pageIndexSelectorVisible: this.pageIndexSelectorVisible,
      pagesContainerVisible: this.pagesContainerVisible,
      pagesContainerVisibility: this.pagesContainerVisibility,
      isLargeDisplayMode: this.isLargeDisplayMode,
      classes: this.classes,
      aria: this.aria,
      restAttributes: this.restAttributes
    });
  }
}
uR.defaultProps = rZ;
var aZ = ["className", "defaultPageIndex", "defaultPageSize", "displayMode", "gridCompatibility", "hasKnownLastPage", "infoText", "label", "lightModeEnabled", "maxPagesCount", "onKeyDown", "pageCount", "pageIndex", "pageIndexChange", "pageSize", "pageSizeChange", "pageSizes", "pagesCountText", "pagesNavigatorVisible", "rtlEnabled", "showInfo", "showNavigationButtons", "showPageSizes", "totalCount", "visible"], oZ = (e) => {
  var {
    pagerProps: t,
    restAttributes: i
  } = e;
  return vi(ot(2, UO, ue({
    contentTemplate: uR,
    pagerProps: t
  }, i)));
};
let dR = class extends $l {
  constructor(t) {
    super(t), this.__getterCache = {}, this.state = {
      pageSize: this.props.pageSize !== void 0 ? this.props.pageSize : this.props.defaultPageSize,
      pageIndex: this.props.pageIndex !== void 0 ? this.props.pageIndex : this.props.defaultPageIndex
    }, this.pageIndexChange = this.pageIndexChange.bind(this), this.pageSizeChange = this.pageSizeChange.bind(this);
  }
  createEffects() {
    return [Hl()];
  }
  pageIndexChange(t) {
    if (this.props.gridCompatibility) {
      var i;
      this.setState((r) => (i = t + 1, {
        pageIndex: i
      })), this.props.pageIndexChange(i);
    } else {
      var n;
      this.setState((r) => (n = t, {
        pageIndex: n
      })), this.props.pageIndexChange(n);
    }
  }
  get pageIndex() {
    return this.props.gridCompatibility ? (this.props.pageIndex !== void 0 ? this.props.pageIndex : this.state.pageIndex) - 1 : this.props.pageIndex !== void 0 ? this.props.pageIndex : this.state.pageIndex;
  }
  pageSizeChange(t) {
    var i;
    this.setState((n) => (i = t, {
      pageSize: i
    })), this.props.pageSizeChange(i);
  }
  get className() {
    return this.props.gridCompatibility ? Li({
      "dx-datagrid-pager": !0,
      ["".concat(this.props.className)]: !!this.props.className
    }) : this.props.className;
  }
  get pagerProps() {
    return this.__getterCache.pagerProps !== void 0 ? this.__getterCache.pagerProps : this.__getterCache.pagerProps = (() => ue({}, ue({}, this.props, {
      pageSize: this.props.pageSize !== void 0 ? this.props.pageSize : this.state.pageSize,
      pageIndex: this.props.pageIndex !== void 0 ? this.props.pageIndex : this.state.pageIndex
    }), {
      className: this.className,
      pageIndex: this.pageIndex,
      pageIndexChange: (t) => this.pageIndexChange(t),
      pageSizeChange: (t) => this.pageSizeChange(t)
    }))();
  }
  get restAttributes() {
    var t = ue({}, this.props, {
      pageSize: this.props.pageSize !== void 0 ? this.props.pageSize : this.state.pageSize,
      pageIndex: this.props.pageIndex !== void 0 ? this.props.pageIndex : this.state.pageIndex
    }), i = pt(t, aZ);
    return i;
  }
  componentWillUpdate(t, i, n) {
    super.componentWillUpdate(), (this.props !== t || this.props.gridCompatibility !== t.gridCompatibility || this.props.className !== t.className || this.state.pageIndex !== i.pageIndex || this.props.pageIndex !== t.pageIndex || this.props.pageIndexChange !== t.pageIndexChange || this.props.pageSizeChange !== t.pageSizeChange) && (this.__getterCache.pagerProps = void 0);
  }
  render() {
    var t = this.props;
    return oZ({
      props: ue({}, t, {
        pageSize: this.props.pageSize !== void 0 ? this.props.pageSize : this.state.pageSize,
        pageIndex: this.props.pageIndex !== void 0 ? this.props.pageIndex : this.state.pageIndex
      }),
      pageIndexChange: this.pageIndexChange,
      pageIndex: this.pageIndex,
      pageSizeChange: this.pageSizeChange,
      className: this.className,
      pagerProps: this.pagerProps,
      restAttributes: this.restAttributes
    });
  }
};
dR.defaultProps = JY;
class cR extends GY {
  getProps() {
    var t = super.getProps();
    return t.onKeyDown = this._wrapKeyDownHandler(t.onKeyDown), t;
  }
  get _propsInfo() {
    return {
      twoWay: [
        ["pageSize", "defaultPageSize", "pageSizeChange"],
        ["pageIndex", "defaultPageIndex", "pageIndexChange"]
      ],
      allowNull: [],
      elements: [],
      templates: [],
      props: ["defaultPageSize", "pageSizeChange", "defaultPageIndex", "pageIndexChange", "gridCompatibility", "className", "showInfo", "infoText", "lightModeEnabled", "displayMode", "maxPagesCount", "pageCount", "pagesCountText", "visible", "hasKnownLastPage", "pagesNavigatorVisible", "showPageSizes", "pageSizes", "rtlEnabled", "showNavigationButtons", "totalCount", "label", "onKeyDown", "pageSize", "pageIndex"]
    };
  }
  get _viewComponent() {
    return dR;
  }
}
We("dxPager", cR);
const jS = function(e) {
  return 1 + (parseInt(e.pageIndex()) || 0);
}, sZ = at.View.inherit({
  init() {
    const e = this.getController("data");
    e.changed.add((t) => {
      if (t && t.repaintChangesOnly) {
        const i = this._pager;
        i ? i.option({
          pageIndex: jS(e),
          pageSize: e.pageSize(),
          pageCount: e.pageCount(),
          totalCount: e.totalCount(),
          hasKnownLastPage: e.hasKnownLastPage()
        }) : this.render();
      } else
        (!t || t.changeType !== "update" && t.changeType !== "updateSelection" && t.changeType !== "updateFocusedRow") && (this._pager = null, this.render());
    });
  },
  _renderCore() {
    const e = this, t = e.element().addClass(e.addWidgetPrefix("pager")), i = e.option("pager") || {}, n = e.getController("data"), r = e.getController("keyboardNavigation"), a = {
      maxPagesCount: 10,
      pageIndex: jS(n),
      pageCount: n.pageCount(),
      pageSize: n.pageSize(),
      showPageSizes: i.showPageSizeSelector,
      showInfo: i.showInfo,
      displayMode: i.displayMode,
      pagesNavigatorVisible: i.visible,
      showNavigationButtons: i.showNavigationButtons,
      label: i.label,
      pageSizes: e.getPageSizes(),
      totalCount: n.totalCount(),
      hasKnownLastPage: n.hasKnownLastPage(),
      pageIndexChanged(o) {
        n.pageIndex() !== o - 1 && n.pageIndex(o - 1);
      },
      pageSizeChanged(o) {
        n.pageSize(o);
      },
      onKeyDown: (o) => r && r.executeAction("onKeyDown", o),
      useLegacyKeyboardNavigation: this.option("useLegacyKeyboardNavigation"),
      useKeyboard: this.option("keyboardNavigation.enabled")
    };
    if (x(i.infoText) && (a.infoText = i.infoText), this._pager) {
      this._pager.repaint();
      return;
    }
    Re() ? this._pager = e._createComponent(t, cR, a) : t.addClass("dx-pager").html('<div class="dx-pages"><div class="dx-page"></div></div>');
  },
  getPager() {
    return this._pager;
  },
  getPageSizes() {
    const e = this, t = e.getController("data"), i = e.option("pager"), n = i && i.allowedPageSizes, r = t.pageSize();
    return (!x(e._pageSizes) || !e._pageSizes.includes(r)) && (e._pageSizes = [], i && (Array.isArray(n) ? e._pageSizes = n : n && r > 1 && (e._pageSizes = [Math.floor(r / 2), r, 2 * r]))), e._pageSizes;
  },
  isVisible() {
    const e = this.getController("data"), t = this.option("pager");
    let i = t && t.visible;
    const n = this.option("scrolling");
    return i === "auto" && (n && (n.mode === "virtual" || n.mode === "infinite") ? i = !1 : i = e.pageCount() > 1 || e.isLoaded() && !e.hasKnownLastPage()), i;
  },
  getHeight() {
    return this.getElementHeight();
  },
  optionChanged(e) {
    const {
      name: t
    } = e, i = t === "pager", n = t === "paging", r = t === "dataSource", a = t === "scrolling", o = this.getController("data");
    if (i || n || a || r) {
      if (e.handled = !0, o.skipProcessingPagingChange(e.fullName))
        return;
      (i || n) && (this._pageSizes = null), r || (this._pager = null, this._invalidate(), Re() && i && this.component && this.component.resize());
    }
  },
  dispose() {
    this._pager = null;
  }
}), lZ = {
  defaultOptions: () => ({
    pager: {
      visible: "auto",
      showPageSizeSelector: !1,
      allowedPageSizes: "auto",
      label: q.format("dxPager-ariaLabel")
    }
  }),
  views: {
    pagerView: sZ
  }
};
xe.registerModule("pager", lZ);
var uZ = "columns-separator", qS = "columns-separator-transparent", XS = "drag-header", dZ = "text-content", Xg = "drag-action", YS = "tracker", ZS = "drop-highlight", QS = "dx-block-separator", JS = "dx-header-row", cZ = "dx-widget", hZ = "dx-drag-command-cell", gi = "dxDataGridResizingReordering", pZ = 10, eE = 5, Cf = 0.5, Xs = function(e) {
  return e.option("allowColumnResizing") || e.getController("columns").isColumnOptionUsed("allowResizing");
}, hR = function(e) {
  return e.option("allowColumnReordering") || e.getController("columns").isColumnOptionUsed("allowReordering");
}, fZ = at.View.inherit({
  _renderCore: function() {
    var e = this.callBase();
    return this.element().addClass(this.addWidgetPrefix(YS)), this.hide(), e;
  },
  _unsubscribeFromCallback: function() {
    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);
  },
  _subscribeToCallback: function() {
    var e = this;
    e._positionChanged = function(t) {
      var i = e.element();
      i && i.hasClass(e.addWidgetPrefix(YS)) && (i.css({
        top: t.top
      }), Dr(i, t.height));
    }, this._tablePositionController.positionChanged.add(e._positionChanged);
  },
  optionChanged: function(e) {
    e.name === "allowColumnResizing" && (this._unsubscribeFromCallback(), e.value && (this._subscribeToCallback(), this._invalidate())), this.callBase(e);
  },
  init: function() {
    this.callBase(), this._tablePositionController = this.getController("tablePosition"), this._subscribeToCallback();
  },
  isVisible: function() {
    return Xs(this);
  },
  show: function() {
    this.element().show();
  },
  hide: function() {
    this.element() && this.element().hide();
  },
  setHeight: function(e) {
    Dr(this.element(), e);
  },
  dispose: function() {
    this._unsubscribeFromCallback(), this.callBase();
  }
}), pR = at.View.inherit({
  _renderSeparator: function() {
  },
  _renderCore: function(e) {
    var t = this.callBase(e);
    return this._isShown = !0, this._renderSeparator(), this.hide(), t;
  },
  show: function() {
    this._isShown = !0;
  },
  hide: function() {
    this._isShown = !1;
  },
  height: function(e) {
    var t = this.element();
    if (t)
      if (x(e))
        Dr(t, e);
      else
        return Fe(t);
  },
  width: function(e) {
    var t = this.element();
    if (t)
      if (x(e))
        S_(t, e);
      else
        return Ae(t);
  }
}), gZ = pR.inherit({
  _renderSeparator: function() {
    this.callBase();
    var e = this.element();
    e.addClass(this.addWidgetPrefix(uZ));
  },
  _subscribeToCallback: function() {
    var e = this, t;
    e._positionChanged = function(i) {
      t = e.element(), t && (t.css({
        top: i.top
      }), Dr(t, i.height));
    }, e._tablePositionController.positionChanged.add(e._positionChanged);
  },
  _unsubscribeFromCallback: function() {
    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);
  },
  _init: function() {
    this._isTransparent = Xs(this), this.isVisible() && this._subscribeToCallback();
  },
  isVisible: function() {
    return this.option("showColumnHeaders") && (hR(this) || Xs(this));
  },
  optionChanged: function(e) {
    e.name === "allowColumnResizing" && (e.value ? (this._init(), this._invalidate(), this.hide(!0)) : (this._unsubscribeFromCallback(), this._isTransparent = Xs(this), this.hide(!0))), this.callBase(e);
  },
  init: function() {
    this.callBase(), this._tablePositionController = this.getController("tablePosition"), this._init();
  },
  show: function() {
    var e = this.element();
    e && !this._isShown && (this._isTransparent ? e.removeClass(this.addWidgetPrefix(qS)) : e.show()), this.callBase();
  },
  hide: function(e) {
    var t = this.element(), i = this.addWidgetPrefix(qS);
    t && (this._isShown || e) && (this._isTransparent ? (t.addClass(i), t.css("left", ""), t.show()) : (t.hasClass(i) && t.removeClass(i), t.hide())), this.callBase();
  },
  moveByX: function(e) {
    var t = this.element();
    t && t.css("left", e === null ? 0 : e - this._parentElement().offset().left);
  },
  changeCursor: function(e) {
    e = x(e) ? e : "";
    var t = this.element();
    t && t.css("cursor", e);
  },
  dispose: function() {
    this._unsubscribeFromCallback(), this.callBase();
  }
}), _Z = pR.inherit({
  init: function() {
    var e = this;
    this.callBase(), this.getController("data").loadingChanged.add(function(t) {
      t || e.hide();
    });
  },
  _renderSeparator: function() {
    this.callBase(), this.element().addClass(QS).html("&nbsp;");
  },
  hide: function() {
    var e = this._parentElement(), t = this.element();
    t && this._isShown && t.css("display", "none"), e && !e.children("." + QS).length && e.prepend(this.element()), this.callBase();
  },
  isVisible: function() {
    var e = this.option("groupPanel"), t = this.option("columnChooser");
    return e && e.visible || t && t.enabled;
  },
  show: function(e) {
    var t = this.element(), i = function(n) {
      ft.stop(t, !0), ft.animate(t, {
        type: "slide",
        from: {
          width: 0,
          display: n.display
        },
        to: n,
        duration: 300,
        easing: "swing"
      });
    };
    if (t && !this._isShown)
      switch (e) {
        case "group":
          i({
            width: "50px",
            display: "inline-block"
          });
          break;
        case "columnChooser":
          i({
            width: "100%",
            display: "block"
          });
          break;
        default:
          t.css("display", "");
      }
    this.callBase();
  }
}), vZ = at.View.inherit({
  _isDragging: !1,
  isDragging: function() {
    return this._isDragging;
  },
  _getDraggingPanelByPos: function(e) {
    var t;
    return B(this._dragOptions.draggingPanels, function(i, n) {
      if (n) {
        var r = n.getBoundingRect();
        if (r && (r.bottom === void 0 || e.y < r.bottom) && (r.top === void 0 || e.y > r.top) && (r.left === void 0 || e.x > r.left) && (r.right === void 0 || e.x < r.right))
          return t = n, !1;
      }
    }), t;
  },
  _renderCore: function() {
    this.element().addClass(this.addWidgetPrefix(XS) + " " + this.addWidgetPrefix(dZ) + " " + cZ).hide();
  },
  _resetTargetColumnOptions: function() {
    var e = this._dropOptions;
    e.targetColumnIndex = -1, delete e.targetColumnElement, delete e.isLast, delete e.posX, delete e.posY;
  },
  _getVisibleIndexObject: function(e, t) {
    return x(e) ? {
      columnIndex: t,
      rowIndex: e
    } : t;
  },
  dispose: function() {
    var e = this.element();
    this._dragOptions = null, e && e.parent().find("." + this.addWidgetPrefix(XS)).remove();
  },
  isVisible: function() {
    var e = this.getController("columns"), t = e.getCommonSettings();
    return this.option("showColumnHeaders") && (hR(this) || t.allowGrouping || t.allowHiding);
  },
  init: function() {
    var e = this;
    this.callBase(), this._controller = this.getController("draggingHeader"), this._columnsResizerViewController = this.getController("columnsResizer"), this.getController("data").loadingChanged.add(function(t) {
      var i = e.element();
      !t && i && i.hide();
    });
  },
  dragHeader: function(e) {
    var t = e.columnElement, i = !!e.sourceColumn.type;
    this._isDragging = !0, this._dragOptions = e, this._dropOptions = {
      sourceIndex: e.index,
      sourceColumnIndex: this._getVisibleIndexObject(e.rowIndex, e.columnIndex),
      sourceColumnElement: e.columnElement,
      sourceLocation: e.sourceLocation
    };
    var n = ee.getDocument();
    this._onSelectStart = n.onselectstart, n.onselectstart = function() {
      return !1;
    }, this._controller.drag(this._dropOptions), this.element().css({
      textAlign: t && t.css("textAlign"),
      height: t && (i && t.get(0).clientHeight || Fe(t)),
      width: t && (i && t.get(0).clientWidth || Ae(t)),
      whiteSpace: t && t.css("whiteSpace")
    }).addClass(this.addWidgetPrefix(Xg)).toggleClass(hZ, i).text(i ? "" : e.sourceColumn.caption), this.element().appendTo(oT.getSwatchContainer(t));
  },
  moveHeader: function(e) {
    var t = e.event, i = t.data.that, n = _t(t), r = i._columnsResizerViewController ? i._columnsResizerViewController.isResizing() : !1, a = i._dragOptions;
    if (i._isDragging && !r) {
      var o = i.element(), s = Math.abs(n.x - a.columnElement.offset().left - a.deltaX), l = Math.abs(n.y - a.columnElement.offset().top - a.deltaY);
      if (o.is(":visible") || s > eE || l > eE) {
        o.show();
        var u = n.x - a.deltaX, d = n.y - a.deltaY;
        o.css({
          left: u,
          top: d
        }), i.dockHeader(n);
      }
      t.preventDefault();
    }
  },
  dockHeader: function(e) {
    var t = this._getDraggingPanelByPos(e), i = this._controller, n = this._dropOptions, r = this._dragOptions;
    if (t) {
      var a = this.option("rtlEnabled"), o = t.getName() === "columnChooser", s = o ? "y" : "x", l = t.getName(), u = l === "headers" ? r.rowIndex : void 0, d = r.sourceColumn, c = t.getColumnElements(u, d == null ? void 0 : d.ownerBand) || [], h = r.pointsByTarget = r.pointsByTarget || {}, p = l === "columnChooser" ? [] : h[l] || i._generatePointsByColumns(T({}, r, {
        targetDraggingPanel: t,
        columns: t.getColumns(u),
        columnElements: c,
        isVerticalOrientation: o,
        startColumnIndex: l === "headers" && g(c[0]).index()
      }));
      if (h[l] = p, n.targetLocation = l, p.length > 0)
        for (var f = 0; f < p.length; f++) {
          var v = p[f + 1] && (p[f][s] + p[f + 1][s]) / 2;
          if (v === void 0 || (a && s === "x" ? e[s] > v : e[s] < v)) {
            n.targetColumnIndex = this._getVisibleIndexObject(u, p[f].columnIndex), c[f] ? (n.targetColumnElement = c.eq(f), n.isLast = !1) : (n.targetColumnElement = c.last(), n.isLast = !0), n.posX = p[f].x, n.posY = p[f].y, i.dock(n);
            break;
          }
        }
      else
        this._resetTargetColumnOptions(), i.dock(n);
    }
  },
  dropHeader: function(e) {
    var t = e.event, i = t.data.that, n = i._controller;
    i.element().hide(), n && i._isDragging && n.drop(i._dropOptions), i.element().appendTo(i._parentElement()), i._dragOptions = null, i._dropOptions = null, i._isDragging = !1, ee.getDocument().onselectstart = i._onSelectStart || null;
  }
}), xf = function(e) {
  return e.option("columnResizingMode") !== "widget";
}, mZ = at.ViewController.inherit({
  _isHeadersRowArea: function(e) {
    if (this._columnHeadersView) {
      var t = this._columnHeadersView.element();
      if (t) {
        var i = t.offset().top, n = this._columnHeadersView.getHeadersRowHeight();
        return e >= i && e <= i + n;
      }
    }
    return !1;
  },
  _isRtlParentStyle: function() {
    var e;
    return this.option("rtlEnabled") && ((e = this._$parentContainer) === null || e === void 0 ? void 0 : e.parent().css("direction")) === "rtl";
  },
  _pointCreated: function(e, t, i) {
    var n = xf(this), r = this.option("rtlEnabled"), a = this._isRtlParentStyle(), o = !n && r && !a ? 0 : 1;
    if (e.index >= o && e.index < t + (!n && (!r || a) ? 1 : 0)) {
      e.columnIndex -= o;
      var s = i[e.columnIndex] || {}, l = i[e.columnIndex + 1] || {};
      return !(n ? s.allowResizing && l.allowResizing : s.allowResizing);
    }
    return !0;
  },
  _getTargetPoint: function(e, t, i) {
    if (e) {
      for (var n = 0; n < e.length; n++)
        if (!(e[n].x === e[0].x && e[n + 1] && e[n].x === e[n + 1].x) && e[n].x - i <= t && t <= e[n].x + i)
          return e[n];
    }
    return null;
  },
  _moveSeparator: function(e) {
    var t, i = e.event, n = i.data, r = n._columnsSeparatorView.width(), a = xf(n), o = r / 2, s = n._$parentContainer.offset(), l = s.left, u = _t(i), d = n.option("rtlEnabled"), c = this._isRtlParentStyle(), h = (t = n._draggingHeaderView) === null || t === void 0 ? void 0 : t.isDragging();
    if (n._isResizing && n._resizingInfo) {
      if ((l <= u.x || !a && c) && (!a || u.x <= l + Ae(n._$parentContainer)) && n._updateColumnsWidthIfNeeded(u.x)) {
        var p = n._columnHeadersView.getColumnElements().eq(n._resizingInfo.currentColumnIndex), f = p[0];
        if (f) {
          var v = f.getBoundingClientRect().width;
          n._columnsSeparatorView.moveByX(p.offset().left + ((a || c) && d ? 0 : v)), n._tablePositionController.update(n._targetPoint.y), i.preventDefault();
        }
      }
    } else
      h || (n._isHeadersRowArea(u.y) ? (n._previousParentOffset && (n._previousParentOffset.left !== s.left || n._previousParentOffset.top !== s.top) && n.pointsByColumns(null), n._targetPoint = n._getTargetPoint(n.pointsByColumns(), u.x, r), n._previousParentOffset = s, n._isReadyResizing = !1, n._targetPoint ? (n._columnsSeparatorView.changeCursor("col-resize"), n._columnsSeparatorView.moveByX(n._targetPoint.x - o), n._tablePositionController.update(n._targetPoint.y), n._isReadyResizing = !0, i.preventDefault()) : (n._columnsSeparatorView.changeCursor(), n._columnsSeparatorView.moveByX(null))) : (n.pointsByColumns(null), n._isReadyResizing = !1, n._columnsSeparatorView.changeCursor(), n._columnsSeparatorView.moveByX(null)));
  },
  _endResizing: function(e) {
    var t = e.event, i = t.data;
    i._isResizing && (i.pointsByColumns(null), i._resizingInfo = null, i._columnsSeparatorView.hide(), i._columnsSeparatorView.changeCursor(), i._trackerView.hide(), i._isReadyResizing = !1, i._isResizing = !1);
  },
  _getNextColumnIndex: function(e) {
    return e + 1;
  },
  _setupResizingInfo: function(e) {
    var t = this._targetPoint.columnIndex, i = this._getNextColumnIndex(t), n = this._columnHeadersView.getHeaderElement(t), r = this._columnHeadersView.getHeaderElement(i);
    this._resizingInfo = {
      startPosX: e,
      currentColumnIndex: t,
      currentColumnWidth: n && n.length > 0 ? Et(n[0]).width : 0,
      nextColumnIndex: i,
      nextColumnWidth: r && r.length > 0 ? Et(r[0]).width : 0
    };
  },
  _startResizing: function(e) {
    var t = e.event, i = t.data, n = _t(t);
    if (xl(t) && (i._isHeadersRowArea(n.y) ? (i._targetPoint = i._getTargetPoint(i.pointsByColumns(), n.x, pZ), i._targetPoint && (i._columnsSeparatorView.moveByX(i._targetPoint.x - i._columnsSeparatorView.width() / 2), i._isReadyResizing = !0)) : i._isReadyResizing = !1), i._isReadyResizing) {
      i._setupResizingInfo(n.x), i._isResizing = !0, i._tablePositionController.update(i._targetPoint.y), i._columnsSeparatorView.show(), i._trackerView.show();
      var r = i.component.getScrollable();
      r && i._isRtlParentStyle() && (i._scrollRight = Ae(r.$content()) - Ae(r.container()) - r.scrollLeft()), t.preventDefault(), t.stopPropagation();
    }
    this.isResizing() && this.getController("editorFactory").loseFocus();
  },
  _generatePointsByColumns: function() {
    var e = this, t = e._columnsController ? e._columnsController.getVisibleColumns() : [], i = e._columnHeadersView.getColumnElements(), n = [];
    i && i.length > 0 && (n = ae.getPointsByColumns(i, function(r) {
      return e._pointCreated(r, i.length, t);
    })), e._pointsByColumns = n;
  },
  _unsubscribeFromEvents: function() {
    this._moveSeparatorHandler && w.off(ee.getDocument(), oe(je.move, gi), this._moveSeparatorHandler), this._startResizingHandler && w.off(this._$parentContainer, oe(je.down, gi), this._startResizingHandler), this._endResizingHandler && (w.off(this._columnsSeparatorView.element(), oe(je.up, gi), this._endResizingHandler), w.off(ee.getDocument(), oe(je.up, gi), this._endResizingHandler));
  },
  _subscribeToEvents: function() {
    this._moveSeparatorHandler = this.createAction(this._moveSeparator), this._startResizingHandler = this.createAction(this._startResizing), this._endResizingHandler = this.createAction(this._endResizing), w.on(ee.getDocument(), oe(je.move, gi), this, this._moveSeparatorHandler), w.on(this._$parentContainer, oe(je.down, gi), this, this._startResizingHandler), w.on(this._columnsSeparatorView.element(), oe(je.up, gi), this, this._endResizingHandler), w.on(ee.getDocument(), oe(je.up, gi), this, this._endResizingHandler);
  },
  _updateColumnsWidthIfNeeded: function(e) {
    var t, i, n = this._rowsView.contentWidth(), r = this._resizingInfo, a = this._columnsController, o = a.getVisibleColumns(), s = this._columnsSeparatorView.width(), l = xf(this), u = l && this.option("adaptColumnWidthByRatio") && !this.option("columnAutoWidth"), d = this.option("rtlEnabled"), c = this._isRtlParentStyle(), h = o[r.currentColumnIndex], p = o[r.nextColumnIndex];
    function f(j) {
      return Te(j) && j.slice(-1) === "%";
    }
    function v(j, z, re, he) {
      if (j) {
        var P = j.width;
        P && (he = f(P)), he ? (a.columnOption(j.index, "visibleWidth", z), a.columnOption(j.index, "width", (z / re * 100).toFixed(3) + "%")) : (a.columnOption(j.index, "visibleWidth", null), a.columnOption(j.index, "width", z));
      }
    }
    t = e - r.startPosX, (l || c) && d && (t = -t);
    var {
      cellWidth: m,
      nextCellWidth: C
    } = function(j) {
      var z, re, he, P = r.currentColumnWidth + j, V = h && h.minWidth || s, E = {};
      return P >= V ? E.cellWidth = P : (E.cellWidth = V, he = !0), l && (re = r.nextColumnWidth - j, z = p && p.minWidth || s, re >= z ? he ? E.nextCellWidth = r.nextColumnWidth - (j + V - P) : E.nextCellWidth = re : (E.nextCellWidth = z, E.cellWidth = r.currentColumnWidth + (j - z + re))), E;
    }(t);
    if (i = h.width !== m, i) {
      if (a.beginUpdate(), m = Math.floor(m), n = function(j, z) {
        var re = z.every((P) => P.width);
        if (re) {
          var he = z.reduce((P, V) => (f(V.width) && (P += parseFloat(V.width)), P), 0);
          he > 100 && (j = j / he * 100);
        }
        return j;
      }(n, o), v(h, m, n, u), l)
        C = Math.floor(C), v(p, C, n, u);
      else {
        var b = this._columnHeadersView.getColumnWidths();
        b[r.currentColumnIndex] = m;
        var A = b.reduce((j, z) => j + z, 0) > this._rowsView.contentWidth();
        if (!A) {
          var R = ae.getLastResizableColumnIndex(o);
          R >= 0 && a.columnOption(o[R].index, "visibleWidth", "auto");
        }
        for (var k = 0; k < b.length; k++)
          o[k] && o[k] !== h && o[k].width === void 0 && a.columnOption(o[k].index, "width", b[k]);
      }
      if (a.endUpdate(), !l) {
        this.component.updateDimensions();
        var H = this.component.getScrollable();
        if (H && c) {
          var K = Ae(H.$content()) - Ae(H.container()) - this._scrollRight;
          H.scrollTo({
            left: K
          });
        }
      }
    }
    return i;
  },
  _subscribeToCallback: function(e, t) {
    e.add(t), this._subscribesToCallbacks.push({
      callback: e,
      handler: t
    });
  },
  _unsubscribeFromCallbacks: function() {
    for (var e = 0; e < this._subscribesToCallbacks.length; e++) {
      var t = this._subscribesToCallbacks[e];
      t.callback.remove(t.handler);
    }
    this._subscribesToCallbacks = [];
  },
  _unsubscribes: function() {
    this._unsubscribeFromEvents(), this._unsubscribeFromCallbacks();
  },
  _init: function() {
    var e = this, t = function() {
      e._isResizing || e.pointsByColumns(null);
    }, i = function(a) {
      e._scrollLeft !== a.left && (e._scrollLeft = a.left, e.pointsByColumns(null));
    };
    e._columnsSeparatorView = e.getView("columnsSeparatorView"), e._columnHeadersView = e.getView("columnHeadersView"), e._trackerView = e.getView("trackerView"), e._rowsView = e.getView("rowsView"), e._columnsController = e.getController("columns"), e._tablePositionController = e.getController("tablePosition"), e._$parentContainer = e.component.$element(), e._draggingHeaderView = e.component.getView("draggingHeaderView"), e._subscribeToCallback(e._columnHeadersView.renderCompleted, t), e._subscribeToCallback(e._columnHeadersView.resizeCompleted, t), e._subscribeToCallback(e._columnsSeparatorView.renderCompleted, function() {
      e._unsubscribeFromEvents(), e._subscribeToEvents();
    }), e._subscribeToCallback(e._rowsView.renderCompleted, function() {
      e._rowsView.scrollChanged.remove(i), e._rowsView.scrollChanged.add(i);
    });
    var n = e._rowsView.getScrollbarWidth() !== 0, r = 0;
    e._subscribeToCallback(e.getController("tablePosition").positionChanged, function(a) {
      if (e._isResizing && !e._rowsView.isResizing) {
        var o = e._rowsView.getScrollbarWidth() !== 0;
        n !== o || r && r !== a.height ? (n = o, r = a.height, e.component.updateDimensions()) : e._rowsView.updateFreeSpaceRowHeight();
      }
      r = a.height;
    });
  },
  optionChanged: function(e) {
    this.callBase(e), e.name === "allowColumnResizing" && (e.value ? (this._init(), this._subscribeToEvents()) : this._unsubscribes());
  },
  isResizing: function() {
    return this._isResizing;
  },
  init: function() {
    this._subscribesToCallbacks = [], Xs(this) && this._init();
  },
  pointsByColumns: function(e) {
    if (e !== void 0)
      this._pointsByColumns = e;
    else
      return this._pointsByColumns || this._generatePointsByColumns(), this._pointsByColumns;
  },
  dispose: function() {
    this._unsubscribes(), this.callBase();
  }
}), CZ = at.ViewController.inherit({
  update: function(e) {
    var t = {}, i = this._columnHeadersView.element(), n = i && i.offset(), r = n && n.top || 0, a = x(e) ? Math.abs(e - r) : 0, o = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0, s = this._rowsView.getScrollbarWidth(!0), l = this._rowsView ? this._rowsView.height() - s : 0, u = this.component.getController("columnsResizer"), d = this.component.getView("draggingHeaderView");
    t.height = o;
    var c = u.isResizing() || d.isDragging();
    c && (t.height += l - a), e !== null && i && i.length && (t.top = i[0].offsetTop + a), this.positionChanged.fire(t);
  },
  init: function() {
    var e = this;
    e.callBase(), e._columnHeadersView = this.getView("columnHeadersView"), e._rowsView = this.getView("rowsView"), e._pagerView = this.getView("pagerView"), e._rowsView.resizeCompleted.add(function() {
      if (e.option("allowColumnResizing")) {
        var t = e.getController("columnsResizer")._targetPoint;
        e.update(t ? t.y : null);
      }
    });
  },
  ctor: function(e) {
    this.callBase(e), this.positionChanged = qe();
  }
}), xZ = at.ViewController.inherit({
  _generatePointsByColumns: function(e) {
    var t = this;
    return ae.getPointsByColumns(e.columnElements, function(i) {
      return t._pointCreated(i, e.columns, e.targetDraggingPanel.getName(), e.sourceColumn);
    }, e.isVerticalOrientation, e.startColumnIndex);
  },
  _pointCreated: function(e, t, i, n) {
    var r = t[e.columnIndex], a = t[e.columnIndex - 1];
    switch (i) {
      case "columnChooser":
        return !0;
      case "headers":
        return n && !n.allowReordering || (!r || !r.allowReordering) && (!a || !a.allowReordering);
      default:
        return t.length === 0;
    }
  },
  _subscribeToEvents: function(e, t) {
    var i = this;
    B(t, function(n, r) {
      if (r)
        for (var a, o = r.getRowCount ? r.getRowCount() : 1, s = r.getName(), l = function(c, h) {
          if (h) {
            var p = g(h), f = a[c];
            r.allowDragging(f, s, t) && (p.addClass(i.addWidgetPrefix(Xg)), w.on(p, oe(Sa, gi), i.createAction(function(v) {
              var m = v.event, C = _t(m);
              e.dragHeader({
                deltaX: C.x - g(m.currentTarget).offset().left,
                deltaY: C.y - g(m.currentTarget).offset().top,
                sourceColumn: f,
                index: f.index,
                columnIndex: c,
                columnElement: p,
                sourceLocation: s,
                draggingPanels: t,
                rowIndex: i._columnsController.getRowIndex(f.index, !0)
              });
            })), w.on(p, oe(Rr, gi), {
              that: e
            }, i.createAction(e.moveHeader)), w.on(p, oe(Ea, gi), {
              that: e
            }, i.createAction(e.dropHeader)));
          }
        }, u = 0; u < o; u++) {
          var d = r.getColumnElements(u) || [];
          d.length && (a = r.getColumns(u) || [], B(d, l));
        }
    });
  },
  _unsubscribeFromEvents: function(e, t) {
    var i = this;
    B(t, function(n, r) {
      if (r) {
        var a = r.getColumnElements() || [];
        B(a, function(o, s) {
          var l = g(s);
          w.off(l, oe(Sa, gi)), w.off(l, oe(Rr, gi)), w.off(l, oe(Ea, gi)), l.removeClass(i.addWidgetPrefix(Xg));
        });
      }
    });
  },
  _getSeparator: function(e) {
    return e === "headers" ? this._columnsSeparatorView : this._blockSeparatorView;
  },
  hideSeparators: function(e) {
    var t = this._blockSeparatorView, i = this._columnsSeparatorView;
    this._animationColumnIndex = null, t && t.hide(), e !== "block" && i && i.hide();
  },
  init: function() {
    var e = this;
    e.callBase(), e._columnsController = e.getController("columns"), e._columnHeadersView = e.getView("columnHeadersView"), e._columnsSeparatorView = e.getView("columnsSeparatorView"), e._draggingHeaderView = e.getView("draggingHeaderView"), e._rowsView = e.getView("rowsView"), e._blockSeparatorView = e.getView("blockSeparatorView"), e._headerPanelView = e.getView("headerPanel"), e._columnChooserView = e.getView("columnChooserView");
    var t = function() {
      if (e._draggingHeaderView) {
        var i = [e._columnChooserView, e._columnHeadersView, e._headerPanelView];
        e._unsubscribeFromEvents(e._draggingHeaderView, i), e._subscribeToEvents(e._draggingHeaderView, i);
      }
    };
    e._columnHeadersView.renderCompleted.add(t), e._headerPanelView && e._headerPanelView.renderCompleted.add(t), e._columnChooserView && e._columnChooserView.renderCompleted.add(t);
  },
  allowDrop: function(e) {
    return this._columnsController.allowMoveColumn(e.sourceColumnIndex, e.targetColumnIndex, e.sourceLocation, e.targetLocation);
  },
  drag: function(e) {
    var t = e.sourceIndex, i = e.sourceLocation, n = e.sourceColumnElement, r = this._columnHeadersView, a = this._rowsView;
    n && (n.css({
      opacity: Cf
    }), i === "headers" && (r && r.setRowsOpacity(t, Cf), a && a.setRowsOpacity(t, Cf)));
  },
  dock: function(e) {
    var t = this, i = De(e.targetColumnIndex) ? e.targetColumnIndex.columnIndex : e.targetColumnIndex, n = e.sourceLocation, r = e.targetLocation, a = t._getSeparator(r), o = i >= 0;
    t._columnHeadersView.element().find("." + JS).toggleClass(t.addWidgetPrefix(ZS), n !== "headers" && r === "headers" && !o), a && (t.allowDrop(e) && o ? r === "group" || r === "columnChooser" ? function() {
      t._animationColumnIndex !== i && (t.hideSeparators(), a.element()[e.isLast ? "insertAfter" : "insertBefore"](e.targetColumnElement), t._animationColumnIndex = i, a.show(r));
    }() : (t.hideSeparators("block"), t.getController("tablePosition").update(e.posY), a.moveByX(e.posX - a.width()), a.show()) : t.hideSeparators());
  },
  drop: function(e) {
    var t = e.sourceColumnElement;
    if (t && (t.css({
      opacity: ""
    }), this._columnHeadersView.setRowsOpacity(e.sourceIndex, ""), this._rowsView.setRowsOpacity(e.sourceIndex, ""), this._columnHeadersView.element().find("." + JS).removeClass(this.addWidgetPrefix(ZS))), this.allowDrop(e)) {
      var i = this._getSeparator(e.targetLocation);
      i && i.hide(), this._columnsController.moveColumn(e.sourceColumnIndex, e.targetColumnIndex, e.sourceLocation, e.targetLocation);
    }
  },
  dispose: function() {
    this._draggingHeaderView && this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView]);
  }
}), ja = {
  views: {
    columnsSeparatorView: gZ,
    blockSeparatorView: _Z,
    draggingHeaderView: vZ,
    trackerView: fZ
  },
  controllers: {
    draggingHeader: xZ,
    tablePosition: CZ,
    columnsResizer: mZ
  },
  extenders: {
    views: {
      rowsView: {
        _needUpdateRowHeight: function(e) {
          var t = this.option("wordWrapEnabled"), i = this.getController("columnsResizer"), n = i.isResizing();
          return this.callBase.apply(this, arguments) || e > 0 && t && n;
        }
      }
    },
    controllers: {
      editorFactory: {
        renderFocusOverlay: function() {
          if (!this.getController("columnsResizer").isResizing())
            return this.callBase.apply(this, arguments);
        }
      }
    }
  }
};
ja.views.draggingHeaderView;
ja.controllers.draggingHeader;
ja.views.columnsSeparatorView;
ja.controllers.tablePosition;
ja.controllers.columnsResizer;
ja.views.trackerView;
xe.registerModule("columnsResizingReordering", ja);
const Yg = {
  ariaColIndex: "aria-colindex",
  dragCell: "dx-drag-cell"
}, yZ = (e) => e.attr(Yg.dragCell) !== void 0, bZ = (e, t) => e.filter(`[${Yg.ariaColIndex}="${t + 1}"]:not([${Yg.dragCell}])`).first(), fR = {
  isDragCell: yZ,
  getCellToFocus: bZ
}, tE = "dx-state-focused", yd = "input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox", iE = yd + ", .dx-dropdowneditor-icon", SZ = ["shift", "control", "alt"];
function xo(e) {
  return e && e.hasClass("dx-group-row");
}
function bd(e) {
  return e && e.hasClass("dx-master-detail-row");
}
function ws(e) {
  return e && !xo(e) && !bd(e);
}
function EZ(e) {
  return !e || e.hasClass("dx-freespace-row") || e.hasClass("dx-virtual-row");
}
function nE(e, t) {
  return !e._isRowEditMode() && t && !t.hasClass("dx-command-select") && t.hasClass("dx-editor-cell");
}
function Bi(e) {
  return x(e) && e.length > 0;
}
function gR() {
  return ve.current().deviceType !== "desktop";
}
function rE(e) {
  return !!e.parent(".dx-header-row").length;
}
function wZ(e, t) {
  const i = e.option("rtlEnabled");
  let n = !1;
  return i ? n = !(t.fixedPosition === "right" || x(t.command) && !x(t.fixedPosition)) : n = !(!x(t.fixedPosition) || t.fixedPosition === "left"), n;
}
function IZ(e) {
  const t = e.getController("keyboardNavigation");
  return t._isVirtualScrolling() ? e.option("focusedRowIndex") === t.getRowIndex() : !1;
}
const TZ = {
  init() {
    if (this._dataController = this.getController("data"), this._selectionController = this.getController("selection"), this._editingController = this.getController("editing"), this._headerPanel = this.getView("headerPanel"), this._columnsController = this.getController("columns"), this._editorFactory = this.getController("editorFactory"), this.isKeyboardEnabled()) {
      t$(), this._updateFocusTimeout = null, this._fastEditingStarted = !1, this._focusedCellPosition = {}, this._canceledCellPosition = null;
      const e = (t) => {
        this.setupFocusedView(), this._isNeedScroll && t.is(":visible") && this._focusedView && this._focusedView.getScrollable && (this._focusedView._scrollToElement(t), this._isNeedScroll = !1);
      };
      this._editorFactory.focused.add(e), this._initViewHandlers(), this._initDocumentHandlers(), this.createAction("onKeyDown");
    }
  },
  _initViewHandlers() {
    const e = this.getView("rowsView"), t = (i) => {
      const n = g(i.target), r = g(i.relatedTarget).closest(e.element()).length, a = n.is("a");
      if (i.relatedTarget && a && !r && this._isEventInCurrentGrid(i)) {
        let o = this._getFocusedCell();
        o = Bi(o) ? o : e.getCellElements(0).filter("[tabindex]").eq(0), n.closest(o).length || (i.preventDefault(), w.trigger(o, "focus"));
      }
    };
    e.renderCompleted.add((i) => {
      const n = e.element(), r = !i || i.changeType === "refresh", a = this._focusedView && this._focusedView.name === e.name;
      let o = !1;
      const s = i && (i.changeType === "append" || i.changeType === "prepend"), u = g(ee.getRootNode(n.get && n.get(0))).find(":focus"), d = !u.length || u.closest(n).length;
      w.off(n, "focusin", t), w.on(n, "focusin", t), this._initPointerEventHandler(), this._initKeyDownHandler(), this._setRowsViewAttributes(), a && d && (o = this._isNeedFocus ? !s : this._isHiddenFocus && r && !(i != null && i.virtualColumnsScrolling), o && this._updateFocus(!0));
    });
  },
  _initDocumentHandlers() {
    const e = ee.getDocument();
    this._documentClickHandler = this.createAction((t) => {
      const i = g(t.event.target), n = this._isEventInCurrentGrid(t.event) && i.closest("." + this.addWidgetPrefix("rowsview")).length, r = i.closest(".dx-dropdowneditor-overlay").length, a = this.getController("columnsResizer"), o = !!a && a.isResizing();
      !n && !r && !o && (!(this._focusedView && i.parents().filter(this._focusedView.element()).length > 0) && this._resetFocusedCell(!0), this._resetFocusedView());
    }), w.on(e, oe(je.down, "dxDataGridKeyboardNavigation"), this._documentClickHandler);
  },
  _setRowsViewAttributes() {
    const e = this._getRowsViewElement();
    !this._dataController.getVisibleRows().length && this._applyTabIndexToElement(e);
  },
  _initPointerEventHandler() {
    const e = gR() ? Xe : je.down, t = this._getRowsViewElement();
    x(this._pointerEventAction) || (this._pointerEventAction = this.createAction(this._pointerEventHandler)), w.off(t, oe(e, "dxDataGridKeyboardNavigation"), this._pointerEventAction), w.on(t, oe(e, "dxDataGridKeyboardNavigation"), ".dx-row > td, .dx-row", this._pointerEventAction);
  },
  _initKeyDownHandler() {
    const e = this._getRowsViewElement();
    Sr.off(this._keyDownListener), this._keyDownListener = Sr.on(e, null, (t) => this._keyDownHandler(t));
  },
  dispose() {
    this.callBase(), this._resetFocusedView(), Sr.off(this._keyDownListener), w.off(ee.getDocument(), oe(je.down, "dxDataGridKeyboardNavigation"), this._documentClickHandler), clearTimeout(this._updateFocusTimeout), i$();
  },
  optionChanged(e) {
    const t = this;
    switch (e.name) {
      case "keyboardNavigation":
      case "useLegacyKeyboardNavigation":
        e.handled = !0;
        break;
      default:
        t.callBase(e);
    }
  },
  isRowFocusType() {
    return this.focusType === "row";
  },
  isCellFocusType() {
    return this.focusType === "cell";
  },
  setRowFocusType() {
    this.option("focusedRowEnabled") && (this.focusType = "row");
  },
  setCellFocusType() {
    this.focusType = "cell";
  },
  _keyDownHandler(e) {
    var t;
    let i = !0;
    this._isNeedFocus = !0, this._isNeedScroll = !0;
    let n = this._processOnKeyDown(e);
    const r = (t = this._editingController) === null || t === void 0 ? void 0 : t.isEditing(), {
      originalEvent: a
    } = e;
    if (a.isDefaultPrevented()) {
      this._isNeedFocus = !1, this._isNeedScroll = !1;
      return;
    }
    if (!SZ.includes(e.keyName) && this._updateFocusedCellPositionByTarget(a.target), !n) {
      switch (e.keyName) {
        case "leftArrow":
        case "rightArrow":
          this._leftRightKeysHandler(e, r), n = !0;
          break;
        case "upArrow":
        case "downArrow":
          e.ctrl ? lv("rowsView", this, a) : this._upDownKeysHandler(e, r), n = !0;
          break;
        case "pageUp":
        case "pageDown":
          this._pageUpDownKeyHandler(e), n = !0;
          break;
        case "space":
          n = this._spaceKeyHandler(e, r);
          break;
        case "A":
          Pt(e.originalEvent) ? (this._ctrlAKeyHandler(e, r), n = !0) : n = this._beginFastEditing(e.originalEvent);
          break;
        case "tab":
          this._tabKeyHandler(e, r), n = !0;
          break;
        case "enter":
          this._enterKeyHandler(e, r), n = !0;
          break;
        case "escape":
          this._escapeKeyHandler(e, r), n = !0;
          break;
        case "F":
          Pt(e.originalEvent) ? (this._ctrlFKeyHandler(e), n = !0) : n = this._beginFastEditing(e.originalEvent);
          break;
        case "F2":
          this._f2KeyHandler(), n = !0;
          break;
        case "del":
        case "backspace":
          this._isFastEditingAllowed() && !this._isFastEditingStarted() && (n = this._beginFastEditing(a, !0));
      }
      !n && !this._beginFastEditing(a) && (this._isNeedFocus = !1, this._isNeedScroll = !1, i = !1), i && a.stopPropagation();
    }
  },
  _processOnKeyDown(e) {
    const {
      originalEvent: t
    } = e, i = {
      handled: !1,
      event: t
    };
    return this.executeAction("onKeyDown", i), e.ctrl = t.ctrlKey, e.alt = t.altKey, e.shift = t.shiftKey, !!i.handled;
  },
  _closeEditCell() {
    setTimeout(() => {
      this._editingController.closeEditCell();
    });
  },
  _leftRightKeysHandler(e, t) {
    const i = this.getVisibleRowIndex(), n = e.originalEvent, r = this._focusedView && this._focusedView.getRow(i), a = this._getDirectionCodeByKey(e.keyName), o = this._isFastEditingStarted();
    if ((!t || o) && ws(r)) {
      this.setCellFocusType(), o && this._closeEditCell(), this._isVirtualColumnRender() && this._processVirtualHorizontalPosition(a);
      const l = this._getNextCell(a);
      Bi(l) && this._arrowKeysHandlerFocusCell(n, l, a), n && n.preventDefault();
    }
  },
  _upDownKeysHandler(e, t) {
    var i, n;
    const r = this.getVisibleRowIndex(), a = this._focusedView && this._focusedView.getRow(r), o = e.originalEvent, s = e.keyName === "upArrow", l = this._dataController.dataSource(), u = (n = (i = this._editingController) === null || i === void 0 ? void 0 : i.isEditRowByIndex) === null || n === void 0 ? void 0 : n.call(i, r), d = this._isFastEditingStarted();
    if ((!u || !t || d) && a && !bd(a)) {
      if (d && this._closeEditCell(), !this._navigateNextCell(o, e.keyName) && this._isVirtualRowRender() && s && l && !l.isLoading()) {
        const h = Ne(a), p = this._focusedCellPosition.rowIndex - 1;
        this._scrollBy(0, -h, p, o);
      }
      o && o.preventDefault();
    }
  },
  _pageUpDownKeyHandler(e) {
    const t = this._dataController.pageIndex(), i = this._dataController.pageCount(), n = this.option("paging.enabled"), r = e.keyName === "pageUp", a = r ? -1 : 1, o = this.getView("rowsView").getScrollable();
    n && !this._isVirtualScrolling() ? (r ? t > 0 : t < i - 1) && !this._isVirtualScrolling() && (this._dataController.pageIndex(t + a), e.originalEvent.preventDefault()) : o && Fe(o.container()) < Fe(o.$content()) && (this._scrollBy(0, Fe(o.container()) * a), e.originalEvent.preventDefault());
  },
  _spaceKeyHandler(e, t) {
    const i = this.getVisibleRowIndex(), n = g(e.originalEvent && e.originalEvent.target);
    if (this.option("selection") && this.option("selection").mode !== "none" && !t) {
      const r = this._getElementType(n) === "row" && this.isRowFocusType() && ws(n);
      return n.hasClass("dx-command-select") && this.option("selection.showCheckBoxesMode") === "onClick" && this._selectionController.startSelectionWithCheckboxes(), r || n.parent().hasClass("dx-data-row") || n.hasClass(this.addWidgetPrefix("rowsview")) ? (this._selectionController.changeItemSelection(i, {
        shift: e.shift,
        control: e.ctrl
      }), e.originalEvent.preventDefault(), !0) : !1;
    }
    return this._beginFastEditing(e.originalEvent);
  },
  _ctrlAKeyHandler(e, t) {
    !t && !e.alt && this.option("selection.mode") === "multiple" && this.option("selection.allowSelectAll") && (this._selectionController.selectAll(), e.originalEvent.preventDefault());
  },
  _tabKeyHandler(e, t) {
    const i = this.option("editing"), n = e.shift ? "previous" : "next";
    let a = !(x(this._focusedCellPosition) && !$i(this._focusedCellPosition)) || !e.shift && this._isLastValidCell(this._focusedCellPosition) || e.shift && this._isFirstValidCell(this._focusedCellPosition);
    const o = e.originalEvent.target, s = this._focusedView && this._focusedView.element();
    if (!this._handleTabKeyOnMasterDetailCell(o, n)) {
      if (g(s).addClass(tE), i && o && !a)
        if (g(o).hasClass(this.addWidgetPrefix("rowsview")) && this._resetFocusedCell(), this._isVirtualColumnRender() && this._processVirtualHorizontalPosition(n), t) {
          if (!this._editingCellTabHandler(e, n))
            return;
        } else
          this._targetCellTabHandler(e, n) && (a = !0);
      a ? (this._editorFactory.loseFocus(), this._editingController.isEditing() && !this._isRowEditMode() && (this._resetFocusedCell(!0), this._resetFocusedView(), this._closeEditCell())) : e.originalEvent.preventDefault();
    }
  },
  _getMaxHorizontalOffset() {
    const e = this.component.getScrollable(), t = this.getView("rowsView");
    return e ? e.scrollWidth() - Ae(t.element()) : 0;
  },
  _isColumnRendered(e) {
    const t = this._columnsController.getVisibleColumns(null, !0), i = this._columnsController.getVisibleColumns(), n = t[e];
    let r = !1;
    return n && (r = i.indexOf(n) >= 0), r;
  },
  _isFixedColumn(e) {
    const i = this._columnsController.getVisibleColumns(null, !0)[e];
    return !!i && !!i.fixed;
  },
  _isColumnVirtual(e) {
    const t = e - this._columnsController.getColumnIndexOffset(), n = this._columnsController.getVisibleColumns()[t];
    return !!n && n.command === "virtual";
  },
  _processVirtualHorizontalPosition(e) {
    const t = this.component.getScrollable(), i = this.getColumnIndex();
    let n, r = 0, a = !1;
    switch (e) {
      case "next":
      case "nextInRow": {
        const o = this._getVisibleColumnCount();
        n = i + 1, r = this.option("rtlEnabled") ? this._getMaxHorizontalOffset() : 0, e === "next" ? a = o === n || this._isFixedColumn(i) && !this._isColumnRendered(n) : a = o > n && this._isFixedColumn(i) && !this._isColumnRendered(n);
        break;
      }
      case "previous":
      case "previousInRow":
        if (n = i - 1, r = this.option("rtlEnabled") ? 0 : this._getMaxHorizontalOffset(), e === "previous") {
          const o = this._columnsController.getColumnIndexOffset();
          a = n < 0 && o === 0 || this._isFixedColumn(i) && !this._isColumnRendered(n);
        } else
          a = n >= 0 && this._isFixedColumn(i) && !this._isColumnRendered(n);
    }
    a ? t.scrollTo({
      left: r
    }) : x(n) && x(e) && this._isColumnVirtual(n) && (r = this._getHorizontalScrollPositionOffset(e), r !== 0 && t.scrollBy({
      left: r,
      top: 0
    }));
  },
  _getHorizontalScrollPositionOffset(e) {
    let t = 0;
    const i = this._getCell(this._focusedCellPosition), n = i && Ge(i);
    if (n > 0) {
      const r = this.option("rtlEnabled") ? -1 : 1;
      t = e === "nextInRow" || e === "next" ? n * r : n * r * -1;
    }
    return t;
  },
  _editingCellTabHandler(e, t) {
    const i = e.originalEvent.target;
    let n = this._getCellElementFromTarget(i), r;
    const a = e.originalEvent, o = this._getElementType(i);
    if (n.is("[class^=dx-command]"))
      return !this._targetCellTabHandler(e, t);
    this._updateFocusedCellPosition(n);
    const s = this._getNextCellByTabKey(a, t, o);
    if (n = s.$cell, !n || this._handleTabKeyOnMasterDetailCell(n, t))
      return !1;
    const l = this._columnsController, d = this.getView("rowsView").getCellIndex(n) + l.getColumnIndexOffset(), c = l.getVisibleColumns(null, !0)[d], h = n.parent(), p = this._getRowIndex(h), f = this._dataController.items()[p], v = this._editingController;
    if (c && c.allowEditing) {
      const m = !f || f.rowType === "data";
      r = v.allowUpdating({
        row: f
      }) ? m : f && f.isNewRow;
    }
    return r || this._closeEditCell(), this._focusCell(n, !s.isHighlighted) && (!this._isRowEditMode() && r ? this._editFocusedCell() : this._focusInteractiveElement(n, e.shift)), !0;
  },
  _targetCellTabHandler(e, t) {
    const i = e.originalEvent;
    let n = i.target, r = this._getCellElementFromTarget(n);
    const a = this._getInteractiveElement(r, !e.shift);
    let o = !1, s;
    if (!nE(this, r) && a.length && n !== a.get(0))
      o = !0;
    else {
      this._focusedCellPosition.rowIndex === void 0 && g(n).hasClass("dx-row") && this._updateFocusedCellPosition(r), s = this._getElementType(n), this.isRowFocusType() && (this.setCellFocusType(), s === "row" && ws(g(n)) && (n = this.getFirstValidCellInRow(g(n)), s = this._getElementType(n)));
      const l = this._getNextCellByTabKey(i, t, s);
      if (r = l.$cell, !r || (r = this._checkNewLineTransition(i, r), !r))
        return !1;
      this._focusCell(r, !l.isHighlighted), nE(this, r) || this._focusInteractiveElement(r, e.shift);
    }
    return o;
  },
  _getNextCellByTabKey(e, t, i) {
    let n = this._getNextCell(t, i);
    const r = n && this._fireFocusedCellChanging(e, n, !0);
    return !r || r.cancel ? {} : (r.$newCellElement && (n = r.$newCellElement), {
      $cell: n,
      isHighlighted: r.isHighlighted
    });
  },
  _checkNewLineTransition(e, t) {
    const i = this.getVisibleRowIndex(), n = t.parent();
    if (i !== this._getRowIndex(n)) {
      const r = this._getCellPosition(t), a = this._fireFocusedRowChanging(e, n);
      if (a.cancel)
        return;
      a.rowIndexChanged && (this.setFocusedColumnIndex(r.columnIndex), t = this._getFocusedCell());
    }
    return t;
  },
  _enterKeyHandler(e, t) {
    const i = this._getFocusedCell(), n = this.getVisibleRowIndex(), r = this._focusedView && this._focusedView.getRow(n);
    if (this.option("grouping.allowCollapsing") && xo(r) || this.option("masterDetail.enabled") && i && i.hasClass("dx-command-expand")) {
      const a = this._dataController.getKeyByRowIndex(n), o = this._dataController.items()[n];
      a !== void 0 && o && o.data && !o.data.isContinuation && this._dataController.changeRowExpand(a);
    } else
      this._processEnterKeyForDataCell(e, t);
  },
  _processEnterKeyForDataCell(e, t) {
    const i = this._getEnterKeyDirection(e), n = this._allowEditingOnEnterKey();
    t || !n && i ? (this._handleEnterKeyEditingCell(e.originalEvent), i === "next" || i === "previous" ? this._targetCellTabHandler(e, i) : (i === "upArrow" || i === "downArrow") && this._navigateNextCell(e.originalEvent, i)) : n && this._startEditing(e);
  },
  _getEnterKeyDirection(e) {
    const t = this.option("keyboardNavigation.enterKeyDirection"), i = e.shift;
    if (t === "column")
      return i ? "upArrow" : "downArrow";
    if (t === "row")
      return i ? "previous" : "next";
  },
  _handleEnterKeyEditingCell(e) {
    const {
      target: t
    } = e, i = this._getCellElementFromTarget(t), n = this._isRowEditMode();
    this._updateFocusedCellPosition(i), n ? (this._focusEditFormCell(i), setTimeout(this._editingController.saveEditData.bind(this._editingController))) : (w.trigger(g(t), "change"), this._closeEditCell(), e.preventDefault());
  },
  _escapeKeyHandler(e, t) {
    const i = this._getCellElementFromTarget(e.originalEvent.target);
    t && (this._updateFocusedCellPosition(i), this._isRowEditMode() ? (this._focusEditFormCell(i), this._editingController.cancelEditData(), this._dataController.items().length === 0 && (this._resetFocusedCell(), this._editorFactory.loseFocus())) : this._editingController.getEditMode() === "cell" ? this._editingController.cancelEditData() : this._closeEditCell(), e.originalEvent.preventDefault());
  },
  _ctrlFKeyHandler(e) {
    if (this.option("searchPanel.visible")) {
      const t = this._headerPanel.getSearchTextEditor();
      t && (t.focus(), e.originalEvent.preventDefault());
    }
  },
  _f2KeyHandler() {
    const e = this._editingController.isEditing(), t = this.getVisibleRowIndex(), i = this._focusedView && this._focusedView.getRow(t);
    !e && ws(i) && this._startEditing();
  },
  _navigateNextCell(e, t) {
    const i = this._getNextCell(t), n = this._getDirectionCodeByKey(t);
    return i && this._isCellValid(i) ? this._arrowKeysHandlerFocusCell(e, i, n) : !1;
  },
  _arrowKeysHandlerFocusCell(e, t, i) {
    const n = i === "prevRow" || i === "nextRow", r = this._fireFocusChangingEvents(e, t, n, !0);
    return t = r.$newCellElement, !r.cancel && this._isCellValid(t) ? (this._focus(t, !r.isHighlighted), !0) : !1;
  },
  _beginFastEditing(e, t) {
    if (!this._isFastEditingAllowed() || e.altKey || e.ctrlKey || this._editingController.isEditing())
      return !1;
    if (t)
      this._startEditing(e, "delete");
    else {
      const {
        key: i
      } = e, n = e.keyCode || e.which, r = i || n && String.fromCharCode(n);
      r && (r.length === 1 || r === "delete") && this._startEditing(e, r);
    }
    return !0;
  },
  _pointerEventHandler(e) {
    const t = e.event || e;
    let i = g(t.currentTarget);
    const n = this.getView("rowsView"), r = n && n.element(), a = i.parent(), o = g(t.target).is(yd), s = !!g(t.target).closest(".dx-revert-button").length, l = i.hasClass("dx-command-expand");
    this._isEventInCurrentGrid(t) && (!s && (this._isCellValid(i, !o) || l) ? (i = this._isInsideEditForm(i) ? g(t.target) : i, this._focusView(), g(r).removeClass(tE), a.hasClass("dx-freespace-row") ? (this._updateFocusedCellPosition(i), this._applyTabIndexToElement(this._focusedView.element()), this._focusedView.focus(!0)) : this._isMasterDetailCell(i) ? this._updateFocusedCellPosition(i) : this._clickTargetCellHandler(t, i)) : i.is("td") && this._resetFocusedCell());
  },
  _clickTargetCellHandler(e, t) {
    const i = this.getView("rowsView").getCellIndex(t), n = this._columnsController.getVisibleColumns()[i], r = this._isCellEditMode();
    this.setCellFocusType();
    const a = this._fireFocusChangingEvents(e, t, !0);
    if (t = a.$newCellElement, a.cancel)
      this.setRowFocusType(), this.setFocusedRowIndex(a.prevRowIndex), this._editingController.isEditing() && r && this._closeEditCell();
    else {
      if (a.resetFocusedRow) {
        this.getController("focus")._resetFocusedRow();
        return;
      }
      if (a.rowIndexChanged && (t = this._getFocusedCell()), !a.isHighlighted && !r && this.setRowFocusType(), this._updateFocusedCellPosition(t), this._allowRowUpdating() && r && n && n.allowEditing)
        this._isNeedFocus = !1, this._isHiddenFocus = !1;
      else {
        t = this._getFocusedCell();
        const o = e && g(e.target).closest(iE + ", td"), s = o && o.not(t).is(iE), u = !(!!n && !n.command && t.hasClass("dx-editor-cell")) && (!a.isHighlighted || s);
        this._focus(t, u, s);
      }
    }
  },
  _allowRowUpdating() {
    const e = this.getVisibleRowIndex(), t = this._dataController.items()[e];
    return this._editingController.allowUpdating({
      row: t
    }, "click");
  },
  focus(e) {
    let t;
    const i = this.option("focusedRowEnabled"), n = this._isCellElement(g(e));
    e || (t = ".dx-datagrid-rowsview .dx-row[tabindex]", i || (t += ", .dx-datagrid-rowsview .dx-row > td[tabindex]"), e = this.component.$element().find(t).first()), e && this._focusElement(g(e), n);
  },
  getFocusedView() {
    return this._focusedView;
  },
  setupFocusedView() {
    this.isKeyboardEnabled() && !x(this._focusedView) && this._focusView();
  },
  _focusElement(e, t) {
    const i = g(this._getRowsViewElement()), n = e.closest(i), r = this.isRowFocusType();
    let a = {};
    !n.length || this._isCellElement(e) && !this._isCellValid(e) || (this._focusView(), this._isNeedFocus = !0, this._isNeedScroll = !0, (this._isCellElement(e) || xo(e)) && (this.setCellFocusType(), a = this._fireFocusChangingEvents(null, e, !1, t), e = a.$newCellElement, r && !a.isHighlighted && this.setRowFocusType()), a.cancel || (this._focus(e, !a.isHighlighted), this._focusInteractiveElement(e)));
  },
  _getFocusedViewByElement(e) {
    const t = this.getFocusedView(), i = t && g(t.element());
    return e && e.closest(i).length !== 0;
  },
  _focusView() {
    this._focusedView = this.getView("rowsView");
  },
  _resetFocusedView() {
    this.setRowFocusType(), this._focusedView = null;
  },
  _focusInteractiveElement(e, t) {
    if (!e)
      return;
    const i = this._getInteractiveElement(e, t);
    this._testInteractiveElement = i, ae.focusAndSelectElement(this, i);
  },
  _focus(e, t, i) {
    const n = e && !e.hasClass("dx-row") ? e.closest(".dx-row") : e;
    if (n && EZ(n))
      return;
    const r = this._focusedView, a = r && r.element();
    let o;
    this._isHiddenFocus = t;
    const s = xo(n) || this.isRowFocusType();
    s ? (o = n, r && this.setFocusedRowIndex(this._getRowIndex(n))) : this._isCellElement(e) && (o = e, this._updateFocusedCellPosition(e)), o && (a && a.find(".dx-row[tabindex], .dx-row > td[tabindex]").not(o).removeClass("dx-cell-focus-disabled").removeAttr("tabindex"), w.one(o, "blur", (l) => {
      l.relatedTarget && o.removeClass("dx-cell-focus-disabled");
    }), i || (this._applyTabIndexToElement(o), w.trigger(o, "focus")), t ? (o.addClass("dx-cell-focus-disabled"), s && e.addClass("dx-cell-focus-disabled")) : this._editorFactory.focus(o));
  },
  _updateFocus(e) {
    this._updateFocusTimeout = setTimeout(() => {
      const t = this._editingController, i = t.getEditMode() === "cell", n = t.getEditMode() === "batch";
      if (i && t.hasChanges() || n && t.isNewRowInEditMode()) {
        t._focusEditingCell();
        return;
      }
      let r = this._getFocusedCell();
      const a = t.isEditing();
      if (r && !(this._isMasterDetailCell(r) && !this._isRowEditMode())) {
        if (this._hasSkipRow(r.parent())) {
          const o = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? "upArrow" : "downArrow";
          r = this._getNextCell(o);
        }
        if (Bi(r))
          if (r.is("td") || r.hasClass(this.addWidgetPrefix("edit-form-item"))) {
            const o = r.is("[class^=dx-command]"), s = r.find(":focus"), l = Bi(s);
            if ((e || !o) && this._editorFactory.focus()) {
              if (o && l) {
                ae.focusAndSelectElement(this, s);
                return;
              }
              !l && this._focus(r);
            } else
              !l && (this._isNeedFocus || this._isHiddenFocus) && this._focus(r, this._isHiddenFocus);
            a && this._focusInteractiveElement.bind(this)(r);
          } else
            w.trigger(r, "focus");
      }
    });
  },
  _getFocusedCell() {
    return g(this._getCell(this._focusedCellPosition));
  },
  _updateFocusedCellPositionByTarget(e) {
    var t;
    if (this._getElementType(e) === "row" && x((t = this._focusedCellPosition) === null || t === void 0 ? void 0 : t.columnIndex)) {
      const n = g(e);
      this._focusedView && xo(n) && this.setFocusedRowIndex(this._getRowIndex(n));
    } else
      this._updateFocusedCellPosition(this._getCellElementFromTarget(e));
  },
  _updateFocusedCellPosition(e, t) {
    const i = this._getCellPosition(e, t);
    return i && (!e.length || i.rowIndex >= 0 && i.columnIndex >= 0) && this.setFocusedCellPosition(i.rowIndex, i.columnIndex), i;
  },
  _getFocusedColumnIndexOffset(e) {
    let t = 0;
    const i = this._columnsController.getVisibleColumns()[e];
    return i && i.fixed ? t = this._getFixedColumnIndexOffset(i) : e >= 0 && (t = this._columnsController.getColumnIndexOffset()), t;
  },
  _getFixedColumnIndexOffset(e) {
    return wZ(this, e) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;
  },
  _getCellPosition(e, t) {
    let i;
    const n = Bi(e) && e.closest("tr"), r = this.getView("rowsView");
    if (Bi(n)) {
      const a = this._getRowIndex(n);
      return i = r.getCellIndex(e, a), i += this._getFocusedColumnIndexOffset(i), t && (i = t === "previous" ? i - 1 : i + 1, i = this._applyColumnIndexBoundaries(i)), {
        rowIndex: a,
        columnIndex: i
      };
    }
  },
  _focusCell(e, t) {
    if (this._isCellValid(e))
      return this._focus(e, t), !0;
  },
  _focusEditFormCell(e) {
    e.hasClass("dx-master-detail-cell") && this._editorFactory.focus(e, !0);
  },
  _resetFocusedCell(e) {
    var t;
    const i = this._getFocusedCell();
    Bi(i) && i.removeAttr("tabindex"), this._isNeedFocus = !1, this._isNeedScroll = !1, this._focusedCellPosition = {}, clearTimeout(this._updateFocusTimeout), (t = this._focusedView) === null || t === void 0 || t.renderFocusState({
      preventScroll: e
    });
  },
  restoreFocusableElement(e, t) {
    const i = this;
    let n, r;
    const a = x(e), o = i.getView("rowsView"), s = o.element(), {
      columnIndex: l
    } = i._focusedCellPosition, u = i._dataController.getRowIndexOffset();
    e = a ? e : o.getTopVisibleItemIndex() + u, a ? (r = o.getRow(e - u), n = i._fireFocusedRowChanging(t, r), !n.cancel && n.rowIndexChanged && (e = n.newRowIndex)) : (i._editorFactory.loseFocus(), i._applyTabIndexToElement(s), w.trigger(s, "focus")), (!a || !n.cancel) && i.setFocusedCellPosition(e, l), a && i._updateFocus();
  },
  _getNewPositionByCode(e, t, i) {
    let {
      columnIndex: n
    } = e, {
      rowIndex: r
    } = e, a;
    if (e.rowIndex === void 0 && i === "next")
      return {
        columnIndex: 0,
        rowIndex: 0
      };
    switch (i) {
      case "nextInRow":
      case "next":
        a = this._getVisibleColumnCount(), n < a - 1 && t !== "row" && this._hasValidCellAfterPosition({
          columnIndex: n,
          rowIndex: r
        }) ? n++ : !this._isLastRow(r) && i === "next" && (n = 0, r++);
        break;
      case "previousInRow":
      case "previous":
        n > 0 && t !== "row" && this._hasValidCellBeforePosition({
          columnIndex: n,
          rowIndex: r
        }) ? n-- : r > 0 && i === "previous" && (r--, a = this._getVisibleColumnCount(), n = a - 1);
        break;
      case "upArrow":
        r = r > 0 ? r - 1 : r;
        break;
      case "downArrow":
        r = this._isLastRow(r) ? r : r + 1;
    }
    return {
      columnIndex: n,
      rowIndex: r
    };
  },
  setFocusedCellPosition(e, t) {
    this.setFocusedRowIndex(e), this.setFocusedColumnIndex(t);
  },
  setFocusedRowIndex(e) {
    this._focusedCellPosition || (this._focusedCellPosition = {}), this._focusedCellPosition.rowIndex = e;
  },
  setFocusedColumnIndex(e) {
    this._focusedCellPosition || (this._focusedCellPosition = {}), this._focusedCellPosition.columnIndex = e;
  },
  getRowIndex() {
    return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1;
  },
  getColumnIndex() {
    return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1;
  },
  getVisibleRowIndex() {
    const e = this._focusedCellPosition && this._focusedCellPosition.rowIndex;
    return !x(e) || e < 0 ? -1 : e - this._dataController.getRowIndexOffset();
  },
  getVisibleColumnIndex() {
    const e = this._focusedCellPosition && this._focusedCellPosition.columnIndex;
    return x(e) ? e - this._columnsController.getColumnIndexOffset() : -1;
  },
  _applyColumnIndexBoundaries(e) {
    const t = this._getVisibleColumnCount();
    return e < 0 ? e = 0 : e >= t && (e = t - 1), e;
  },
  _isCellByPositionValid(e) {
    const t = g(this._getCell(e));
    return this._isCellValid(t);
  },
  _isLastRow(e) {
    const t = this._dataController, i = t.items().filter((n) => n.visible !== !1);
    return this._isVirtualRowRender() ? e >= t.getMaxRowIndex() : e === i.length - 1;
  },
  _isFirstValidCell(e) {
    let t = !1;
    return e.rowIndex === 0 && e.columnIndex >= 0 && (t = t || !this._hasValidCellBeforePosition(e)), t;
  },
  _hasValidCellBeforePosition(e) {
    let {
      columnIndex: t
    } = e, i = !1;
    for (; t > 0 && !i; ) {
      const n = {
        columnIndex: --t,
        rowIndex: e.rowIndex
      };
      i = this._isCellByPositionValid(n);
    }
    return i;
  },
  _hasValidCellAfterPosition(e) {
    let {
      columnIndex: t
    } = e, i = !1;
    const n = this._getVisibleColumnCount();
    for (; t < n - 1 && !i; ) {
      const r = {
        columnIndex: ++t,
        rowIndex: e.rowIndex
      };
      i = this._isCellByPositionValid(r);
    }
    return i;
  },
  _isLastValidCell(e) {
    const t = e.columnIndex >= 0 ? e.columnIndex + 1 : 0, {
      rowIndex: i
    } = e, n = {
      columnIndex: t,
      rowIndex: i
    }, r = this._dataController.getVisibleRows(), a = r && r[i];
    return this._isLastRow(i) ? a && a.rowType === "group" && e.columnIndex > 0 || e.columnIndex === this._getVisibleColumnCount() - 1 ? !0 : this._isCellByPositionValid(n) ? !1 : this._isLastValidCell(n) : !1;
  },
  _isCellValid(e, t) {
    if (Bi(e)) {
      const i = this.getView("rowsView"), n = e.parent(), r = this._columnsController, a = i.getCellIndex(e) + r.getColumnIndexOffset(), o = r.getVisibleColumns(null, !0)[a], s = this._getVisibleColumnCount(), l = this._editingController, u = bd(n), d = o && o.showWhenGrouped, c = o && !e.hasClass("dx-command-expand") && ws(n), h = function() {
        return !u && o && (!x(o.groupIndex) || d && c) || parseInt(e.attr("colspan")) > 1;
      };
      if (fR.isDragCell(e))
        return !1;
      if (this._isMasterDetailCell(e))
        return !0;
      if (s > a && h()) {
        const f = this._dataController.items(), v = i.getRowIndex(n), m = f[v], C = l && this._isCellEditMode() && l.isEditing(), b = l && l.isEditRow(v), A = b || C;
        return o.command ? this._isLegacyNavigation() ? !A && o.command === "expand" : C ? !1 : b ? o.command !== "select" : !A : C && m && m.rowType !== "data" ? !1 : !A || o.allowEditing || t;
      }
    }
  },
  getFirstValidCellInRow(e, t) {
    const i = this, n = e.find("> td");
    let r, a;
    t = t || 0;
    for (let o = t; o < n.length; ++o)
      if (r = n.eq(o), i._isCellValid(r)) {
        a = r;
        break;
      }
    return a;
  },
  _getNextCell(e, t, i) {
    const n = i || this._focusedCellPosition, r = this.isRowFocusType(), a = r || ["next", "previous"].includes(e);
    let o, s;
    if (this._focusedView && n) {
      const l = this._getNewPositionByCode(n, t, e);
      o = g(this._getCell(l));
      const u = e === "previous" ? this._isFirstValidCell(l) : this._isLastValidCell(l);
      if (Bi(o) && !this._isCellValid(o) && this._isCellInRow(l, a) && !u && (r ? o = this.getFirstValidCellInRow(o.parent(), l.columnIndex) : o = this._getNextCell(e, "cell", l)), s = Bi(o) && o.parent(), this._hasSkipRow(s)) {
        const d = this._getRowIndex(s);
        if (!this._isLastRow(d))
          o = this._getNextCell(e, "row", {
            columnIndex: n.columnIndex,
            rowIndex: d
          });
        else
          return null;
      }
      return Bi(o) ? o : null;
    }
    return null;
  },
  _startEditing(e, t) {
    const i = this._focusedCellPosition, n = this.getVisibleRowIndex(), r = this.getVisibleColumnIndex(), a = this._dataController.items()[n], o = this._columnsController.getVisibleColumns()[r];
    this._isAllowEditing(a, o) && (this._isRowEditMode() ? this._editingController.editRow(n) : i && this._startEditCell(e, t));
  },
  _isAllowEditing(e, t) {
    return this._editingController.allowUpdating({
      row: e
    }) && t && t.allowEditing;
  },
  _editFocusedCell() {
    const e = this.getVisibleRowIndex(), t = this.getVisibleColumnIndex();
    return this._editingController.editCell(e, t);
  },
  _startEditCell(e, t) {
    this._fastEditingStarted = x(t);
    const i = this._editFocusedCell();
    if (this._isFastEditingStarted()) {
      if (i === !0)
        this._editingCellHandler(e, t);
      else if (i && i.done) {
        const n = t !== "delete" ? t : "";
        i.done(() => this._editingCellHandler(e, n));
      }
    }
  },
  _editingCellHandler(e, t) {
    var i, n;
    const r = this._getFocusedCell().find(yd).eq(0), a = xr(e, {
      type: "keydown",
      target: r.get(0)
    }), o = xr(e, {
      type: "keypress",
      target: r.get(0)
    }), s = xr(e, {
      type: "input",
      target: r.get(0)
    });
    if (s.originalEvent && (s.originalEvent = xr(s.originalEvent, {
      data: t
    })), (n = (i = r.get(0)).select) === null || n === void 0 || n.call(i), w.trigger(r, a), !a.isDefaultPrevented() && (w.trigger(r, o), !o.isDefaultPrevented())) {
      const l = lt.mozilla ? 25 : 0;
      setTimeout(() => {
        r.val(t);
        const u = r.closest(".dx-widget");
        w.off(u, "focusout"), w.one(u, "focusout", () => {
          w.trigger(r, "change");
        }), w.trigger(r, s);
      }, l);
    }
  },
  _fireFocusChangingEvents(e, t, i, n) {
    let r = {};
    const a = this._getCellPosition(t) || {};
    return this.isCellFocusType() && (r = this._fireFocusedCellChanging(e, t, n), r.cancel || (a.columnIndex = r.newColumnIndex, a.rowIndex = r.newRowIndex, n = r.isHighlighted, t = g(this._getCell(a)))), !r.cancel && i && t && (r = this._fireFocusedRowChanging(e, t.parent()), r.cancel || (a.rowIndex = r.newRowIndex, r.isHighlighted = n)), r.$newCellElement = g(this._getCell(a)), r.$newCellElement.length || (r.$newCellElement = t), r;
  },
  _fireFocusedCellChanging(e, t, i) {
    const n = this.option("focusedColumnIndex"), r = this.option("focusedRowIndex"), a = this._getCellPosition(t), o = a ? a.columnIndex : -1, s = a ? a.rowIndex : -1, l = {
      cellElement: t,
      prevColumnIndex: n,
      prevRowIndex: r,
      newColumnIndex: o,
      newRowIndex: s,
      rows: this._dataController.getVisibleRows(),
      columns: this._columnsController.getVisibleColumns(),
      event: e,
      isHighlighted: i || !1,
      cancel: !1
    };
    return this._canceledCellPosition = null, this.executeAction("onFocusedCellChanging", l), (l.newColumnIndex !== o || l.newRowIndex !== s) && (l.$newCellElement = g(this._getCell({
      columnIndex: l.newColumnIndex,
      rowIndex: l.newRowIndex
    }))), l.cancel && (this._canceledCellPosition = {
      rowIndex: s,
      columnIndex: o
    }), l;
  },
  _fireFocusedCellChanged(e, t, i) {
    const n = this, r = n._dataController, a = n.getView("rowsView").getCellIndex(e), o = this._getRowIndex(e && e.parent()), s = Math.min(o - r.getRowIndexOffset(), r.items().length - 1), l = n._editingController.isEditCell(s, a), u = r.items()[s];
    !l && (t !== a || i !== o) && n.executeAction("onFocusedCellChanged", {
      cellElement: e,
      columnIndex: a,
      rowIndex: o,
      row: u,
      column: n._columnsController.getVisibleColumns()[a]
    });
  },
  _fireFocusedRowChanging(e, t) {
    const i = this._getRowIndex(t), n = this._dataController, r = this.option("focusedRowIndex"), a = n.loadingOperationTypes(), o = {
      rowElement: t,
      prevRowIndex: r,
      newRowIndex: i,
      event: e,
      rows: n.getVisibleRows(),
      cancel: !1
    };
    return !n || n.isLoading() && (a.reload || a.paging) ? (o.cancel = !0, o) : (this.option("focusedRowEnabled") && (this.executeAction("onFocusedRowChanging", o), !o.cancel && o.newRowIndex !== i && (o.resetFocusedRow = o.newRowIndex < 0, o.resetFocusedRow || this.setFocusedRowIndex(o.newRowIndex), o.rowIndexChanged = !0)), o);
  },
  _fireFocusedRowChanged(e) {
    let t;
    const i = this.option("focusedRowKey"), n = this.getController("focus"), r = n == null ? void 0 : n.getFocusedRowIndexByKey(i);
    if (this.option("focusedRowEnabled")) {
      if (r >= 0) {
        const a = this._dataController;
        t = r >= 0 && a.getVisibleRows()[r - a.getRowIndexOffset()];
      }
      this.executeAction("onFocusedRowChanged", {
        rowElement: e,
        rowIndex: r,
        row: t
      });
    }
  },
  _isEventInCurrentGrid(e) {
    return ae.isElementInCurrentGrid(this, g(e.target));
  },
  _isRowEditMode() {
    const e = this._editingController.getEditMode();
    return e === "row" || e === "form";
  },
  _isCellEditMode() {
    const e = this._editingController.getEditMode();
    return e === "cell" || e === "batch";
  },
  _isFastEditingAllowed() {
    return this._isCellEditMode() && this.option("keyboardNavigation.editOnKeyPress");
  },
  _getInteractiveElement(e, t) {
    const i = e.find(yd).filter(":visible");
    return t ? i.last() : i.first();
  },
  _applyTabIndexToElement(e) {
    const t = this.option("tabIndex") || 0;
    e.attr("tabindex", x(t) ? t : 0);
  },
  _getCell(e) {
    if (this._focusedView && e) {
      const t = this._dataController.getRowIndexOffset(), i = this._columnsController.getVisibleColumns(null, !0)[e.columnIndex], n = i && i.fixed ? this._getFixedColumnIndexOffset(i) : this._columnsController.getColumnIndexOffset(), r = e.rowIndex >= 0 ? e.rowIndex - t : -1, a = e.columnIndex >= 0 ? e.columnIndex - n : -1;
      return this._focusedView.getCell({
        rowIndex: r,
        columnIndex: a
      });
    }
  },
  _getRowIndex(e) {
    let i = this.getView("rowsView").getRowIndex(e);
    return i >= 0 && (i += this._dataController.getRowIndexOffset()), i;
  },
  _hasSkipRow(e) {
    const t = e && e.get(0);
    return t && (t.style.display === "none" || e.hasClass(this.addWidgetPrefix("group-footer")) || bd(e) && !e.hasClass(this.addWidgetPrefix("edit-form")));
  },
  _allowEditingOnEnterKey() {
    return this.option("keyboardNavigation.enterKeyAction") === "startEdit";
  },
  _isLegacyNavigation() {
    return this.option("useLegacyKeyboardNavigation");
  },
  _getDirectionCodeByKey(e) {
    let t;
    switch (e) {
      case "upArrow":
        t = "prevRow";
        break;
      case "downArrow":
        t = "nextRow";
        break;
      case "leftArrow":
        t = this.option("rtlEnabled") ? "nextInRow" : "previousInRow";
        break;
      case "rightArrow":
        t = this.option("rtlEnabled") ? "previousInRow" : "nextInRow";
    }
    return t;
  },
  _isVirtualScrolling() {
    const e = this.option("scrolling.mode");
    return e === "virtual" || e === "infinite";
  },
  _isVirtualRowRender() {
    return this._isVirtualScrolling() || ae.isVirtualRowRendering(this);
  },
  _isVirtualColumnRender() {
    return this.option("scrolling.columnRenderingMode") === "virtual";
  },
  _scrollBy(e, t, i, n) {
    const r = this, a = this.getView("rowsView").getScrollable();
    if (r._focusedCellPosition) {
      const o = function() {
        a.off("scroll", o), setTimeout(r.restoreFocusableElement.bind(r, i, n));
      };
      a.on("scroll", o);
    }
    return a.scrollBy({
      left: e,
      top: t
    });
  },
  _isInsideEditForm(e) {
    const t = g(e).closest("." + this.addWidgetPrefix("edit-form"));
    return t.length && this.elementIsInsideGrid(t);
  },
  _isMasterDetailCell(e) {
    const t = g(e).closest(".dx-master-detail-cell");
    return t.length && this.elementIsInsideGrid(t);
  },
  _processNextCellInMasterDetail(e) {
    !this._isInsideEditForm(e) && e && this._applyTabIndexToElement(e);
  },
  _handleTabKeyOnMasterDetailCell(e, t) {
    if (this._isMasterDetailCell(e)) {
      this._updateFocusedCellPosition(g(e), t);
      const i = this._getNextCell(t, "row");
      return this._processNextCellInMasterDetail(i, g(e)), !0;
    }
    return !1;
  },
  _getElementType: (e) => g(e).is("tr") ? "row" : "cell",
  _isFastEditingStarted() {
    return this._isFastEditingAllowed() && this._fastEditingStarted;
  },
  _getVisibleColumnCount() {
    return this._columnsController.getVisibleColumns(null, !0).length;
  },
  _isCellInRow(e, t) {
    const {
      columnIndex: i
    } = e, n = this._getVisibleColumnCount();
    return t ? i >= 0 && i <= n - 1 : i > 0 && i < n - 1;
  },
  _isCellElement: (e) => e.length && e[0].tagName === "TD",
  _getCellElementFromTarget(e) {
    const t = this._getElementType(e), i = g(e);
    let n;
    return t === "cell" ? n = i.closest(".dx-row > td") : n = i.children().not(".dx-command-expand").first(), n;
  },
  _getRowsViewElement() {
    const e = this.getView("rowsView");
    return e && e.element();
  },
  isKeyboardEnabled() {
    return this.option("keyboardNavigation.enabled");
  },
  _processCanceledEditCellPosition(e, t) {
    if (this._canceledCellPosition) {
      const i = this._canceledCellPosition.rowIndex === e && this._canceledCellPosition.columnIndex === t;
      return this._canceledCellPosition = null, i;
    }
  },
  updateFocusedRowIndex() {
    const e = this._dataController, t = this.getVisibleRowIndex(), i = e.items(), n = i.length ? i.length - 1 : -1, r = e.getRowIndexOffset();
    n >= 0 && t > n && this.setFocusedRowIndex(n + r);
  }
}, DZ = at.ViewController.inherit(TZ), AZ = {
  defaultOptions: () => ({
    useLegacyKeyboardNavigation: !1,
    keyboardNavigation: {
      enabled: !0,
      enterKeyAction: "startEdit",
      enterKeyDirection: "none",
      editOnKeyPress: !1
    }
  }),
  controllers: {
    keyboardNavigation: DZ
  },
  extenders: {
    views: {
      rowsView: {
        _rowClick(e) {
          const t = this.getController("editing").getEditRowIndex(), i = this.getController("keyboardNavigation"), n = i.isKeyboardEnabled();
          t === e.rowIndex && i.setCellFocusType(), (gR() || !n) && this.option("focusedRowEnabled") && this._triggerPointerDownEventHandler(e, !n), this.callBase.apply(this, arguments);
        },
        _triggerPointerDownEventHandler(e, t) {
          const {
            originalEvent: i
          } = e.event;
          if (i) {
            const n = this.getController("keyboardNavigation"), r = g(i.target), a = this.getCellIndex(r), o = this.getController("columns").getVisibleColumns()[a], s = this.getController("data").items()[e.rowIndex];
            if (n._isAllowEditing(s, o) || t) {
              const l = xr(i, {
                currentTarget: i.target
              });
              n._pointerEventHandler(l);
            }
          }
        },
        renderFocusState(e) {
          const {
            preventScroll: t,
            pageSizeChanged: i
          } = e ?? {}, n = this.getController("keyboardNavigation"), r = this.element();
          r && !Or(r) && r.attr("tabindex", null), i && n.updateFocusedRowIndex();
          let a = n.getVisibleRowIndex();
          (!x(a) || a < 0) && (a = 0);
          const o = this.getCellElements(a);
          n.isKeyboardEnabled() && o.length && this.updateFocusElementTabIndex(o, t);
        },
        updateFocusElementTabIndex(e) {
          const t = this.getController("keyboardNavigation"), i = e.eq(0).parent();
          if (xo(i))
            t._applyTabIndexToElement(i);
          else {
            let n = t.getColumnIndex();
            (!x(n) || n < 0) && (n = 0), this._updateFocusedCellTabIndex(e, n);
          }
        },
        _updateFocusedCellTabIndex(e, t) {
          const i = this.getController("keyboardNavigation"), n = e ? e.length : -1, r = function(o) {
            const s = i._isMasterDetailCell(o), l = i._isCellValid(o);
            if (!s && l && i._isCellElement(o))
              return i._applyTabIndexToElement(o), i.setCellFocusType(), !0;
          }, a = fR.getCellToFocus(e, t);
          if (a.length)
            r(a);
          else {
            n <= t && (t = n - 1);
            for (let o = t; o < n && !r(g(e[o])); ++o)
              ;
          }
        },
        renderDelayedTemplates(e) {
          this.callBase.apply(this, arguments), this._renderFocusByChange(e);
        },
        _renderFocusByChange(e) {
          const {
            operationTypes: t,
            repaintChangesOnly: i
          } = e ?? {}, {
            fullReload: n,
            pageSize: r
          } = t ?? {};
          if (!e || !i || n || r) {
            const a = IZ(this);
            this.renderFocusState({
              preventScroll: a,
              pageSizeChanged: r
            });
          }
        },
        _renderCore(e) {
          const t = this.callBase.apply(this, arguments);
          return this._renderFocusByChange(e), t;
        },
        _editCellPrepared(e) {
          const t = this._getEditorInstance(e), i = this.getController("keyboardNavigation"), n = i && i._isFastEditingStarted();
          t && n && this._handleEditingNavigationMode(t), this.callBase.apply(this, arguments);
        },
        _handleEditingNavigationMode(e) {
          ["downArrow", "upArrow"].forEach((i) => {
            const n = e._supportedKeys()[i];
            e.registerKeyHandler(i, (r) => {
              if (e._input().attr("aria-expanded") === "true")
                return n && n.call(e, r);
            });
          }), e.registerKeyHandler("leftArrow", $), e.registerKeyHandler("rightArrow", $), e.NAME === "dxDateBox" && e.option("useMaskBehavior") && e.registerKeyHandler("enter", $);
        },
        _getEditorInstance(e) {
          const t = e.find(".dx-texteditor").eq(0);
          return ae.getWidgetInstance(t);
        }
      }
    },
    controllers: {
      editing: {
        editCell(e, t) {
          const i = this.getController("keyboardNavigation");
          if (i._processCanceledEditCellPosition(e, t))
            return !1;
          const n = this.callBase(e, t);
          return n && i.setupFocusedView(), n;
        },
        editRow(e) {
          const t = this.getController("keyboardNavigation"), i = t.getVisibleColumnIndex(), n = this._columnsController.getVisibleColumns()[i];
          (n && n.type || this.option("editing.mode") === "form") && t._resetFocusedCell(), this.callBase(e);
        },
        addRow(e) {
          const t = this.getController("keyboardNavigation");
          return t.setupFocusedView(), t.setCellFocusType(), this.callBase.apply(this, arguments);
        },
        getFocusedCellInRow(e) {
          const t = this.getController("keyboardNavigation");
          let i = this.callBase(e);
          if (t.isKeyboardEnabled() && t._focusedCellPosition.rowIndex === e) {
            const n = t._getFocusedCell();
            Bi(n) && !n.hasClass("dx-command-edit") && (i = n);
          }
          return i;
        },
        _processCanceledEditingCell() {
          this.closeEditCell().done(() => {
            this.getController("keyboardNavigation")._updateFocus();
          });
        },
        init() {
          this.callBase(), this._keyboardNavigationController = this.getController("keyboardNavigation");
        },
        closeEditCell() {
          const e = this._keyboardNavigationController;
          e._fastEditingStarted = !1;
          const t = this.callBase.apply(this, arguments);
          return e._updateFocus(), t;
        },
        _delayedInputFocus() {
          this._keyboardNavigationController._isNeedScroll = !0, this.callBase.apply(this, arguments);
        },
        _isEditingStart() {
          const e = this.getController("keyboardNavigation"), t = this.callBase.apply(this, arguments);
          if (t && !e._isNeedFocus) {
            const i = e._getFocusedCell();
            e._focus(i, !0);
          }
          return t;
        }
      },
      data: {
        _correctRowIndices(e) {
          const t = this.getController("keyboardNavigation"), i = this.getController("editorFactory"), n = t._focusedCellPosition;
          if (this.callBase.apply(this, arguments), n && n.rowIndex >= 0) {
            const r = e(n.rowIndex);
            r && (n.rowIndex += r, i.refocus());
          }
        },
        getMaxRowIndex() {
          let e = this.items().length - 1;
          const t = this.virtualItemsCount();
          if (t) {
            const i = this.getRowIndexOffset();
            e += i + t.end;
          }
          return e;
        }
      },
      adaptiveColumns: {
        _showHiddenCellsInView({
          viewName: e,
          $cells: t,
          isCommandColumn: i
        }) {
          this.callBase.apply(this, arguments), e === "columnHeadersView" && !i && t.each((n, r) => {
            const a = g(r);
            rE(a) && a.attr("tabindex", 0);
          });
        },
        _hideVisibleCellInView({
          viewName: e,
          $cell: t,
          isCommandColumn: i
        }) {
          this.callBase.apply(this, arguments), e === "columnHeadersView" && !i && rE(t) && t.removeAttr("tabindex");
        }
      }
    }
  }
};
xe.registerModule("keyboardNavigation", AZ);
function Zg(e, t, i, n) {
  let r = 0;
  if (e < t)
    for (; r < i.items.length; r++)
      Zg(e + 1, t, i.items[r], n);
  e === t && n(i);
}
function Xu(e, t) {
  let i;
  if ("map" in e)
    return e.map(t);
  const n = new Array(e.length);
  for (i in e)
    n[i] = t(e[i], i);
  return n;
}
function OZ(e) {
  return e !== e || e === "" || e === null || e === void 0;
}
function RZ(e) {
  return e === H_.count;
}
function aE(e) {
  const t = tt(e.selector), i = "skipEmptyValues" in e ? e.skipEmptyValues : !0;
  let {
    aggregator: n
  } = e;
  if (typeof n == "string" && (n = H_[n], !n))
    throw At.Error("E4001", e.aggregator);
  return {
    selector: t,
    aggregator: n,
    skipEmptyValues: i
  };
}
const BZ = ze.inherit({
  ctor(e) {
    this._data = e.data, this._groupLevel = e.groupLevel || 0, this._totalAggregates = Xu(e.totalAggregates || [], aE), this._groupAggregates = Xu(e.groupAggregates || [], aE), this._totals = [];
  },
  calculate() {
    this._totalAggregates.length && this._calculateTotals(0, {
      items: this._data
    }), this._groupAggregates.length && this._groupLevel > 0 && this._calculateGroups({
      items: this._data
    });
  },
  totalAggregates() {
    return this._totals;
  },
  _aggregate(e, t, i) {
    const n = t.items ? t.items.length : 0;
    for (let r = 0; r < e.length; r++) {
      if (RZ(e[r].aggregator)) {
        i[r] = (i[r] || 0) + n;
        continue;
      }
      for (let a = 0; a < n; a++)
        this._accumulate(r, e[r], i, t.items[a]);
    }
  },
  _calculateTotals(e, t) {
    if (e === 0 && (this._totals = this._seed(this._totalAggregates)), e === this._groupLevel)
      this._aggregate(this._totalAggregates, t, this._totals);
    else
      for (let i = 0; i < t.items.length; i++)
        this._calculateTotals(e + 1, t.items[i]);
    e === 0 && (this._totals = this._finalize(this._totalAggregates, this._totals));
  },
  _calculateGroups(e) {
    const t = this._groupLevel;
    let i = t + 1;
    const n = this._seed.bind(this, this._groupAggregates), r = this._aggregate.bind(this, this._groupAggregates), a = this._finalize.bind(this, this._groupAggregates);
    function o(s) {
      s.aggregates = n(i - 1), i === t ? r(s, s.aggregates) : Zg(i, t, s, (l) => {
        r(l, s.aggregates);
      }), s.aggregates = a(s.aggregates);
    }
    for (; --i > 0; )
      Zg(0, i, e, o);
  },
  _seed: (e, t) => Xu(e, (i) => {
    const {
      aggregator: n
    } = i;
    return "seed" in n ? ce(n.seed) ? n.seed(t) : n.seed : NaN;
  }),
  _accumulate(e, t, i, n) {
    const r = t.selector(n), {
      aggregator: a
    } = t, {
      skipEmptyValues: o
    } = t;
    o && OZ(r) || (i[e] !== i[e] ? i[e] = r : i[e] = a.step(i[e], r));
  },
  _finalize: (e, t) => Xu(e, (i, n) => {
    const r = i.aggregator.finalize;
    return r ? r(t[n]) : t[n];
  })
}), _R = function(e, t) {
  const i = g(e), {
    column: n
  } = t, {
    summaryItems: r
  } = t, a = [];
  if (!n.command && r) {
    for (let o = 0; o < r.length; o++) {
      const s = r[o];
      a.push(g("<div>").css("textAlign", s.alignment || n.alignment).addClass("dx-datagrid-summary-item").addClass("dx-datagrid-text-content").addClass(s.cssClass).toggleClass("dx-datagrid-group-text-content", t.rowType === "group").text(xe.getSummaryText(s, t.summaryTexts)));
    }
    i.append(a);
  }
}, vR = function(e, t) {
  const i = e.option("summary.texts") || {};
  return {
    totalItem: t.row,
    summaryItems: t.row.summaryCells[t.columnIndex],
    summaryTexts: i
  };
}, yf = function(e) {
  return e.summary || e.aggregates || [];
}, Qg = function(e) {
  return e.option("summary.recalculateWhileEditing");
}, kZ = Rl.inherit({
  _getRows() {
    return this._dataController.footerItems();
  },
  _getCellOptions(e) {
    return T(this.callBase(e), vR(this, e));
  },
  _renderCellContent(e, t) {
    _R(e, t), this.callBase.apply(this, arguments);
  },
  _renderCore(e) {
    let t = !1;
    const i = this._dataController.footerItems()[0];
    (!e || !e.columnIndices) && (this.element().empty().addClass("dx-datagrid-total-footer").toggleClass("dx-datagrid-nowrap", !this.option("wordWrapEnabled")), t = !0), i && i.summaryCells && i.summaryCells.length && (this._updateContent(this._renderTable({
      change: e
    }), e), t && this._updateScrollLeftPosition());
  },
  _updateContent(e, t) {
    return t && t.changeType === "update" && t.columnIndices ? this.waitAsyncTemplates().done(() => {
      const i = this.getTableElement().find(".dx-row"), n = e.find(".dx-row");
      this._updateCells(i, n, t.columnIndices[0]);
    }) : this.callBase.apply(this, arguments);
  },
  _rowClick(e) {
    const t = this._dataController.footerItems()[e.rowIndex] || {};
    this.executeAction("onRowClick", T({}, e, t));
  },
  _columnOptionChanged(e) {
    const {
      optionNames: t
    } = e;
    e.changeTypes.grouping || (t.width || t.visibleWidth) && this.callBase(e);
  },
  _handleDataChanged(e) {
    const {
      changeType: t
    } = e;
    e.changeType === "update" && e.repaintChangesOnly ? e.totalColumnIndices ? e.totalColumnIndices.length && this.render(null, {
      changeType: "update",
      columnIndices: [e.totalColumnIndices]
    }) : this.render() : (t === "refresh" || t === "append" || t === "prepend") && this.render();
  },
  _createRow(e) {
    const t = this.callBase.apply(this, arguments);
    return e.rowType === "totalFooter" && t.addClass("dx-footer-row"), t;
  },
  getHeight() {
    return this.getElementHeight();
  },
  isVisible() {
    return !!this._dataController.footerItems().length;
  }
}), FZ = {
  init() {
    this.callBase.apply(this, arguments), this._totalAggregates = [], this._summaryGetter = $;
  },
  summaryGetter(e) {
    if (!arguments.length)
      return this._summaryGetter;
    ce(e) && (this._summaryGetter = e);
  },
  summary(e) {
    if (!arguments.length)
      return this._summaryGetter();
    this._summaryGetter = function() {
      return e;
    };
  },
  totalAggregates() {
    return this._totalAggregates;
  },
  isLastLevelGroupItemsPagingLocal() {
    const e = this.summary(), t = e && e.sortByGroups();
    return t && t.length;
  },
  sortLastLevelGroupItems(e, t, i) {
    const n = Qn.multiLevelGroup(ui(e), t).toArray();
    let r = [];
    return i.forEach((a) => {
      (function o(s, l, u, d) {
        d = d || [];
        for (let c = 0; c < s.length; c++)
          d.push(s[c].key), l === 1 ? u(d, s[c].items) : o(s[c].items, l - 1, u, d), d.pop();
      })(n, t.length, (o, s) => {
        a.toString() === o.toString() && (r = r.concat(s));
      });
    }), r;
  }
}, PZ = function() {
  const e = function(a, o, s) {
    return s ? e(a, o.map((l) => ({
      items: [l]
    }), s - 1)) : a.concat(o);
  }, t = function(a, o, s) {
    return s ? a.map((l) => {
      const u = {}, d = t(l.items || [], o, s - 1);
      return Object.defineProperty(u, "aggregates", {
        get: () => l.aggregates,
        set: (c) => {
          l.aggregates = c;
        }
      }), T(u, l, {
        items: d
      });
    }) : a.filter((l) => o.indexOf(l) < 0);
  }, i = function(a, o, s, l) {
    let u;
    if (Qg(a)) {
      const d = a.getController("editing");
      if (d) {
        const c = d.getInsertedData();
        c.length && (s = e(s, c, l));
        const h = d.getRemovedData();
        h.length && (s = t(s, h, l));
      }
    }
    return o && (u = new BZ({
      totalAggregates: o.totalAggregates,
      groupAggregates: o.groupAggregates,
      data: s,
      groupLevel: l
    }), u.calculate()), u ? u.totalAggregates() : [];
  }, n = function(a, o, s) {
    if (!a || !o.length)
      return a;
    const l = o[0], u = s[0];
    let d;
    return l && u && u.length && (d = ui(a), B(u, function(c) {
      c === 0 ? d = d.sortBy(this.selector, this.desc) : d = d.thenBy(this.selector, this.desc);
    }), d.enumerate().done((c) => {
      a = c;
    })), o = o.slice(1), s = s.slice(1), o.length && s.length && B(a, function() {
      this.items = n(this.items, o, s);
    }), a;
  }, r = function(a, o, s) {
    const l = s && s.sortByGroups && s.sortByGroups();
    return l && l.length ? n(a, o, l) : a;
  };
  return {
    _customizeRemoteOperations(a) {
      const o = this.summary();
      o && (a.remoteOperations.summary ? (!a.isCustomLoading || a.storeLoadOptions.isLoadingAll) && (a.storeLoadOptions.group && (a.remoteOperations.grouping ? a.storeLoadOptions.groupSummary = o.groupAggregates : o.groupAggregates.length && (a.remoteOperations.paging = !1)), a.storeLoadOptions.totalSummary = o.totalAggregates) : (o.totalAggregates.length || o.groupAggregates.length && a.storeLoadOptions.group) && (a.remoteOperations.paging = !1)), this.callBase.apply(this, arguments);
      const s = a.cachedData.extra;
      s && s.summary && !a.isCustomLoading && (a.storeLoadOptions.totalSummary = void 0);
    },
    _handleDataLoadedCore(a) {
      var o, s;
      const l = this, u = Zn(a.storeLoadOptions.group || a.loadOptions.group || []), d = a.remoteOperations || {}, c = l.summaryGetter()(d);
      if (!a.isCustomLoading || a.storeLoadOptions.isLoadingAll) {
        if (d.summary)
          !d.paging && u.length && c && (d.grouping || i(l, {
            groupAggregates: c.groupAggregates
          }, a.data, u.length), a.data = r(a.data, u, c));
        else if (!d.paging && c) {
          const h = a.operationTypes || {};
          if (!Object.keys(h).some((f) => h[f]) || !(!((s = (o = a.cachedData) === null || o === void 0 ? void 0 : o.extra) === null || s === void 0) && s.summary) || u.length && c.groupAggregates.length) {
            const f = i(l, c, a.data, u.length);
            a.extra = Me(a.extra) ? a.extra : {}, a.extra.summary = f, a.cachedData && (a.cachedData.extra = a.extra);
          }
          a.data = r(a.data, u, c);
        }
      }
      a.isCustomLoading || (l._totalAggregates = a.extra && a.extra.summary || l._totalAggregates), l.callBase(a);
    }
  };
}();
Bl.extend(FZ);
Bl.extend(PZ);
xe.registerModule("summary", {
  defaultOptions: () => ({
    summary: {
      groupItems: void 0,
      totalItems: void 0,
      calculateCustomSummary: void 0,
      skipEmptyValues: !0,
      recalculateWhileEditing: !1,
      texts: {
        sum: q.format("dxDataGrid-summarySum"),
        sumOtherColumn: q.format("dxDataGrid-summarySumOtherColumn"),
        min: q.format("dxDataGrid-summaryMin"),
        minOtherColumn: q.format("dxDataGrid-summaryMinOtherColumn"),
        max: q.format("dxDataGrid-summaryMax"),
        maxOtherColumn: q.format("dxDataGrid-summaryMaxOtherColumn"),
        avg: q.format("dxDataGrid-summaryAvg"),
        avgOtherColumn: q.format("dxDataGrid-summaryAvgOtherColumn"),
        count: q.format("dxDataGrid-summaryCount")
      }
    },
    sortByGroupSummaryInfo: void 0
  }),
  views: {
    footerView: kZ
  },
  extenders: {
    controllers: {
      data: {
        _isDataColumn: (e) => e && (!x(e.groupIndex) || e.showWhenGrouped),
        _isGroupFooterVisible() {
          const e = this.option("summary.groupItems") || [];
          for (let t = 0; t < e.length; t++) {
            const i = e[t], n = this._columnsController.columnOption(i.showInColumn || i.column);
            if (i.showInGroupFooter && this._isDataColumn(n))
              return !0;
          }
          return !1;
        },
        _processGroupItems(e, t, i) {
          const n = i && i.data, r = this.callBase.apply(this, arguments);
          return i && (i.isGroupFooterVisible === void 0 && (i.isGroupFooterVisible = this._isGroupFooterVisible()), n && n.items && i.isGroupFooterVisible && (i.collectContinuationItems || !n.isContinuationOnNextPage) && r.push({
            rowType: "groupFooter",
            key: i.path.slice(),
            data: n,
            groupIndex: i.path.length - 1,
            values: []
          })), r;
        },
        _processGroupItem(e, t) {
          const i = this;
          if (t.summaryGroupItems || (t.summaryGroupItems = i.option("summary.groupItems") || []), e.rowType === "group") {
            let n = -1, r = -1;
            B(t.visibleColumns, function(a) {
              const o = t.visibleColumns[a - 1];
              e.groupIndex === this.groupIndex && (n = this.index), a > 0 && o.command === "expand" && this.command !== "expand" && (r = this.index);
            }), e.summaryCells = this._calculateSummaryCells(t.summaryGroupItems, yf(e.data), t.visibleColumns, (a, o) => a.showInGroupFooter ? -1 : a.alignByColumn && o && !x(o.groupIndex) && o.index !== r ? o.index : n, !0);
          }
          return e.rowType === "groupFooter" && (e.summaryCells = this._calculateSummaryCells(t.summaryGroupItems, yf(e.data), t.visibleColumns, (n, r) => n.showInGroupFooter && i._isDataColumn(r) ? r.index : -1)), e;
        },
        _calculateSummaryCells(e, t, i, n, r) {
          const a = this, o = [], s = {};
          return B(e, (l, u) => {
            const d = a._columnsController.columnOption(u.column), c = u.showInColumn && a._columnsController.columnOption(u.showInColumn) || d, h = n(u, c);
            if (h >= 0) {
              s[h] || (s[h] = []);
              const p = t[l];
              if (p === p) {
                let f;
                x(u.valueFormat) ? f = u.valueFormat : u.summaryType !== "count" && (f = xe.getFormatByDataType(d && d.dataType)), s[h].push(T({}, u, {
                  value: Te(p) && d && d.deserializeValue ? d.deserializeValue(p) : p,
                  valueFormat: f,
                  columnCaption: d && d.index !== h ? d.caption : void 0
                }));
              }
            }
          }), $i(s) || i.forEach((l, u) => {
            const d = i[u - 1], c = r && ((d == null ? void 0 : d.command) === "expand" || l.command === "expand") ? d == null ? void 0 : d.index : l.index;
            o.push(s[c] || []);
          }), o;
        },
        _getSummaryCells(e, t) {
          const i = this, n = i._columnsController;
          return i._calculateSummaryCells(e, t, n.getVisibleColumns(), (r, a) => i._isDataColumn(a) ? a.index : -1);
        },
        _updateItemsCore(e) {
          const t = this;
          let i;
          const n = t._dataSource, r = t._footerItems, a = r && r[0] && r[0].summaryCells, o = t.option("summary.totalItems");
          if (t._footerItems = [], n && o && o.length) {
            const s = n.totalAggregates();
            i = t._getSummaryCells(o, s), e && e.repaintChangesOnly && a && (e.totalColumnIndices = i.map((l, u) => JSON.stringify(l) !== JSON.stringify(a[u]) ? u : -1).filter((l) => l >= 0)), i.length && t._footerItems.push({
              rowType: "totalFooter",
              summaryCells: i
            });
          }
          t.callBase(e);
        },
        _prepareUnsavedDataSelector(e) {
          const t = this;
          if (Qg(t)) {
            const i = t.getController("editing");
            if (i)
              return function(n) {
                return n = i.getUpdatedData(n), e(n);
              };
          }
          return e;
        },
        _prepareAggregateSelector(e, t) {
          return e = this._prepareUnsavedDataSelector(e), t === "avg" || t === "sum" ? function(i) {
            const n = e(i);
            return x(n) ? Number(n) : n;
          } : e;
        },
        _getAggregates(e, t) {
          const i = this, n = i.getController("columns");
          let r = i.option("summary.calculateCustomSummary");
          const a = i.option("summary.skipEmptyValues");
          return wt(e || [], (o) => {
            const s = n.columnOption(o.column), l = s && s.calculateCellValue ? s.calculateCellValue.bind(s) : tt(s ? s.dataField : o.column);
            let u = o.summaryType || "count";
            const d = x(o.skipEmptyValues) ? o.skipEmptyValues : a;
            if (t)
              return {
                selector: o.column,
                summaryType: u
              };
            const c = i._prepareAggregateSelector(l, u);
            if (u === "custom") {
              r || ($e.log("E1026"), r = function() {
              });
              const h = {
                component: i.component,
                name: o.name
              };
              r(h), h.summaryProcess = "calculate", u = {
                seed(p) {
                  return h.summaryProcess = "start", h.totalValue = void 0, h.groupIndex = p, delete h.value, r(h), h.totalValue;
                },
                step(p, f) {
                  return h.summaryProcess = "calculate", h.totalValue = p, h.value = f, r(h), h.totalValue;
                },
                finalize(p) {
                  return h.summaryProcess = "finalize", h.totalValue = p, delete h.value, r(h), h.totalValue;
                }
              };
            }
            return {
              selector: c,
              aggregator: u,
              skipEmptyValues: d
            };
          });
        },
        _addSortInfo(e, t, i, n) {
          if (t) {
            const {
              groupIndex: r
            } = t;
            n = n || t.sortOrder, x(r) && (e[r] = e[r] || [], e[r].push({
              selector: i,
              desc: n === "desc"
            }));
          }
        },
        _findSummaryItem(e, t) {
          let i = -1;
          return x(t) && B(e || [], function(n) {
            if (this.name === t || n === t || this.summaryType === t || this.column === t || function(r) {
              const {
                summaryType: a
              } = r, {
                column: o
              } = r;
              return a && o && `${a}_${o}`;
            }(this) === t)
              return i = n, !1;
          }), i;
        },
        _getSummarySortByGroups(e, t) {
          const i = this, n = i._columnsController, r = n.getGroupColumns(), a = [];
          if (!(!t || !t.length))
            return B(e || [], function() {
              const {
                sortOrder: o
              } = this;
              let {
                groupColumn: s
              } = this;
              const l = i._findSummaryItem(t, this.summaryItem);
              if (l < 0)
                return;
              const u = function(d) {
                return yf(d)[l];
              };
              x(s) ? (s = n.columnOption(s), i._addSortInfo(a, s, u, o)) : B(r, (d, c) => {
                i._addSortInfo(a, c, u, o);
              });
            }), a;
        },
        _createDataSourceAdapterCore(e, t) {
          const i = this, n = this.callBase(e, t);
          return n.summaryGetter((r) => i._getSummaryOptions(r || t)), n;
        },
        _getSummaryOptions(e) {
          const t = this, i = t.option("summary.groupItems"), n = t.option("summary.totalItems"), r = t.option("sortByGroupSummaryInfo"), a = t._getAggregates(i, e && e.grouping && e.summary), o = t._getAggregates(n, e && e.summary), s = function() {
            return t._getSummarySortByGroups(r, i);
          };
          if (a.length || o.length)
            return {
              groupAggregates: a,
              totalAggregates: o,
              sortByGroups: s
            };
        },
        publicMethods() {
          const e = this.callBase();
          return e.push("getTotalSummaryValue"), e;
        },
        getTotalSummaryValue(e) {
          const t = this._findSummaryItem(this.option("summary.totalItems"), e), i = this._dataSource.totalAggregates();
          if (i.length && t > -1)
            return i[t];
        },
        optionChanged(e) {
          (e.name === "summary" || e.name === "sortByGroupSummaryInfo") && (e.name = "dataSource"), this.callBase(e);
        },
        init() {
          this._footerItems = [], this.callBase();
        },
        footerItems() {
          return this._footerItems;
        }
      },
      editing: {
        _refreshSummary() {
          Qg(this) && !this.isSaving() && this._dataController.refresh({
            load: !0,
            changesOnly: !0
          });
        },
        _addChange(e) {
          const t = this.callBase.apply(this, arguments);
          return e.type && this._refreshSummary(), t;
        },
        _removeChange() {
          const e = this.callBase.apply(this, arguments);
          return this._refreshSummary(), e;
        },
        cancelEditData() {
          const e = this.callBase.apply(this, arguments);
          return this._refreshSummary(), e;
        }
      }
    },
    views: {
      rowsView: {
        _createRow(e) {
          const t = this.callBase.apply(this, arguments);
          return e && t.addClass(e.rowType === "groupFooter" ? "dx-datagrid-group-footer" : ""), t;
        },
        _renderCells(e, t) {
          this.callBase.apply(this, arguments), t.row.rowType === "group" && t.row.summaryCells && t.row.summaryCells.length && this._renderGroupSummaryCells(e, t);
        },
        _hasAlignByColumnSummaryItems: (e, t) => !x(t.columns[e].groupIndex) && t.row.summaryCells[e].length,
        _getAlignByColumnCellCount(e, t) {
          let i = 0;
          for (let n = 1; n < e; n++) {
            const r = t.row.summaryCells.length - n;
            i = this._hasAlignByColumnSummaryItems(r, t) ? n : i;
          }
          return i;
        },
        _renderGroupSummaryCells(e, t) {
          const i = e.children().last(), n = Number(i.attr("colSpan")) || 1, r = this._getAlignByColumnCellCount(n, t);
          this._renderGroupSummaryCellsCore(i, t, n, r);
        },
        _renderGroupSummaryCellsCore(e, t, i, n) {
          if (n > 0) {
            e.attr("colSpan", i - n);
            for (let r = 0; r < n; r++) {
              const a = t.columns.length - n + r;
              this._renderCell(e.parent(), T({
                column: t.columns[a],
                columnIndex: this._getSummaryCellIndex(a, t.columns)
              }, t));
            }
          }
        },
        _getSummaryCellIndex: (e) => e,
        _getCellTemplate(e) {
          return !e.column.command && !x(e.column.groupIndex) && e.summaryItems && e.summaryItems.length ? _R : this.callBase(e);
        },
        _getCellOptions(e) {
          const t = this, i = t.callBase(e);
          return e.row.summaryCells ? T(i, vR(t, e)) : i;
        }
      }
    }
  }
});
var oE = "content", Ys = "content-fixed", MZ = "dx-master-detail-cell", sE = "dx-first-cell", LZ = "dx-last-cell", lE = "dx-state-hover", uE = "dx-col-fixed", VZ = "dx-fixed-columns", bf = "dx-pointer-events-none", na = "transparent", dE = "dx-group-row", NZ = "dx-master-detail-row", $n = function(e) {
  var t = -1;
  return B(e, function(i, n) {
    if (n.command === na)
      return t = i, !1;
  }), t;
}, mR = function(e, t, i) {
  var n = 0;
  if (e && t && i)
    for (var r = 0; r < e.length; r++)
      e[r].command === na ? n += e[r].colspan : (t[n] < i[r] && (t[n] = i[r]), n++);
  return t;
}, sm = {
  init: function() {
    this.callBase(), this._isFixedTableRendering = !1, this._isFixedColumns = !1;
  },
  _createCol: function(e) {
    return this.callBase(e).toggleClass(uE, !!(this._isFixedTableRendering && (e.fixed || e.command && e.command !== na)));
  },
  _correctColumnIndicesForFixedColumns: function(e, t) {
    var i = $n(e), n = e[i].colspan, r = t && t.columnIndices;
    r && (t.columnIndices = r.map(function(a) {
      if (a)
        return a.map(function(o) {
          return o < i ? o : o >= i + n ? o - n + 1 : -1;
        }).filter(function(o) {
          return o >= 0;
        });
    }));
  },
  _partialUpdateFixedTable(e) {
    var t = this._fixedTableElement, i = this._getRowElementsCore(t), n = t.children("colgroup");
    n.replaceWith(this._createColGroup(e));
    for (var r = 0; r < i.length; r++)
      this._partialUpdateFixedRow(g(i[r]), e);
  },
  _partialUpdateFixedRow(e, t) {
    var i = e.get(0).childNodes, n = $n(t), r = t[n], a = this._columnsController.getColumnIndexOffset(), o, s = a + 1, l = r.colspan;
    if (e.hasClass(NZ)) {
      var u;
      i[0].setAttribute("colspan", (u = this._columnsController.getVisibleColumns()) === null || u === void 0 ? void 0 : u.length);
      return;
    }
    e.hasClass(dE) && (o = this._getGroupCellOptions({
      row: e.data("options"),
      columns: this._columnsController.getVisibleColumns()
    }), l = o.colspan - Math.max(0, i.length - (o.columnIndex + 2)));
    for (var d = 0; d < i.length; d++) {
      var c = o ? d === o.columnIndex + 1 : d === n;
      i[d].setAttribute("aria-colindex", s), c ? (i[d].setAttribute("colspan", l), s += l) : s++;
    }
  },
  _renderTable: function(e) {
    var t, i = this.getFixedColumns();
    this._isFixedColumns = !!i.length;
    var n = this.callBase(e);
    if (this._isFixedColumns) {
      var r = e == null ? void 0 : e.change;
      if (this._isFixedTableRendering = !0, r != null && r.virtualColumnsScrolling && this.option("scrolling.legacyMode") !== !0)
        this._partialUpdateFixedTable(i), this._isFixedTableRendering = !1;
      else {
        var a = r == null ? void 0 : r.columnIndices;
        this._correctColumnIndicesForFixedColumns(i, r), t = this._createTable(i), this._renderRows(t, T({}, e, {
          columns: i
        })), this._updateContent(t, r, !0), a && (r.columnIndices = a), this._isFixedTableRendering = !1;
      }
    } else
      this._fixedTableElement && this._fixedTableElement.parent().remove(), this._fixedTableElement = null;
    return n;
  },
  _renderRow: function(e, t) {
    var i, n = t.row.cells;
    if (this.callBase.apply(this, arguments), this._isFixedTableRendering && n && n.length) {
      i = 0;
      var r = t.row.cells || [];
      n = n.slice(), t.row.cells = n;
      for (var a = 0; a < r.length; a++) {
        if (r[a].column && r[a].column.command === na) {
          i = (r[a].column.colspan || 1) - 1;
          continue;
        }
        n[a + i] = r[a];
      }
    }
  },
  _createCell: function(e) {
    var t = this, i = e.column, n = i && i.command, r = e.rowType, a = t.callBase.apply(t, arguments), o, s, l;
    (t._isFixedTableRendering || r === "filter") && (o = t.getFixedColumns(), l = $n(o), s = o[l - 1]), t._isFixedTableRendering ? n === na && (a.addClass(bf).toggleClass(sE, l === 0 || s && s.command === "expand").toggleClass(LZ, o.length && l === o.length - 1), r !== "freeSpace" && ae.setEmptyText(a)) : r === "filter" && a.toggleClass(sE, e.columnIndex === l);
    var u = t.option("rowAlternationEnabled") && e.isAltRow, d = t.option("selection.mode") === "multiple" && e.columnIndex === 0 && e.rowType === "header";
    return lt.mozilla && e.column.fixed && e.rowType !== "group" && !u && !d && a.addClass(uE), a;
  },
  _wrapTableInScrollContainer: function(e, t) {
    var i = this.callBase.apply(this, arguments);
    return (this._isFixedTableRendering || t) && i.addClass(this.addWidgetPrefix(Ys)), i;
  },
  _renderCellContent: function(e, t) {
    var i, n = t.column, r = this._isFixedTableRendering, a = t.rowType === "group" && x(n.groupIndex);
    if (r && a && !n.command && !n.groupCellTemplate && e.css("pointerEvents", "none"), !r && this._isFixedColumns) {
      if (i = n.fixed || n.command && n.fixed !== !1, a && (i = !1, t.row.summaryCells && t.row.summaryCells.length)) {
        var o = this._columnsController.getVisibleColumns(), s = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(n.colspan, {
          columns: o,
          row: t.row,
          isFixed: !0
        }) : 0;
        if (s > 0) {
          var l = $n(this._columnsController.getFixedColumns());
          i = o.length - s < l;
        }
      }
      if (i)
        if (n.command && n.type !== "buttons" || t.rowType === "group") {
          e.html("&nbsp;").addClass(n.cssClass);
          return;
        } else
          e.addClass("dx-hidden-cell");
    }
    n.command !== na && this.callBase.apply(this, arguments);
  },
  _getCellElementsCore: function(e) {
    var t = this.callBase.apply(this, arguments), i = t.parent().hasClass(dE), n = this.name === "columnHeadersView" ? e : void 0;
    if (this._fixedTableElement && t) {
      var r = this.getFixedColumns(n), a = this._getRowElements(this._fixedTableElement).eq(e).children("td");
      B(a, (o, s) => {
        if (i)
          t[o] && s.style.visibility !== "hidden" && (t[o] = s);
        else {
          var l = r[o];
          if (l)
            if (l.command === na)
              a.eq(o).hasClass(MZ) && (t[o] = s || t[o]);
            else {
              var u = this._columnsController.getVisibleIndexByColumn(l, n);
              t[u] = s || t[u];
            }
        }
      });
    }
    return t;
  },
  getColumnWidths: function() {
    var e = this.callBase(), t = this.getFixedColumns(), i = this._fixedTableElement && e.length ? this.callBase(this._fixedTableElement) : void 0;
    return mR(t, e, i);
  },
  getTableElement: function(e) {
    e = this._isFixedTableRendering || e;
    var t = e ? this._fixedTableElement : this.callBase();
    return t;
  },
  setTableElement: function(e, t) {
    this._isFixedTableRendering || t ? this._fixedTableElement = e.addClass(bf) : this.callBase(e);
  },
  getColumns: function(e, t) {
    return t = t || this.getTableElement(), this._isFixedTableRendering || t && t.closest("table").parent("." + this.addWidgetPrefix(Ys)).length ? this.getFixedColumns(e) : this.callBase(e, t);
  },
  getRowIndex: function(e) {
    var t = this._fixedTableElement;
    return t && t.find(e).length ? this._getRowElements(t).index(e) : this.callBase(e);
  },
  getTableElements: function() {
    var e = this.callBase.apply(this, arguments);
    return this._fixedTableElement && (e = g([e.get(0), this._fixedTableElement.get(0)])), e;
  },
  getFixedColumns: function(e) {
    return this._columnsController.getFixedColumns(e);
  },
  getFixedColumnsOffset: function() {
    var e = {
      left: 0,
      right: 0
    }, t;
    if (this._fixedTableElement) {
      t = this.getTransparentColumnElement();
      var i = t.position();
      e = {
        left: i.left,
        right: Ge(this.element(), !0) - (Ge(t, !0) + i.left)
      };
    }
    return e;
  },
  getTransparentColumnElement: function() {
    return this._fixedTableElement && this._fixedTableElement.find("." + bf).first();
  },
  getFixedTableElement: function() {
    return this._fixedTableElement;
  },
  isFixedColumns: function() {
    return this._isFixedColumns;
  },
  _resizeCore: function() {
    this.callBase(), this.synchronizeRows();
  },
  setColumnWidths: function(e) {
    var t, i = this._columnsController.getVisibleColumns(), n = e.widths, r = n && n.length && x(i[0].visibleWidth), a = e.optionNames, o = a && a.width, s = !1;
    if (this.callBase.apply(this, arguments), this._fixedTableElement) {
      var l = n && n.some(function(u) {
        return u === "auto";
      });
      s = l && (!r || !this.isScrollbarVisible(!0)), s && (t = i), this.callBase(T({}, e, {
        $tableElement: this._fixedTableElement,
        columns: t,
        fixed: !0
      }));
    }
    (r || o && this.option("wordWrapEnabled")) && this.synchronizeRows();
  },
  _createColGroup: function(e) {
    if (this._isFixedTableRendering && !this.option("columnAutoWidth")) {
      var t = this._columnsController.getVisibleColumns(), i = t.filter(function(n) {
        return !n.width;
      }).length;
      i && (e = t);
    }
    return this.callBase(e);
  },
  _getClientHeight: function(e) {
    var t = e.getBoundingClientRect && Et(e);
    return t && t.height ? t.height : e.clientHeight;
  },
  synchronizeRows: function() {
    var e = [], t = [], i, n, r, a;
    this.waitAsyncTemplates(!0).done(() => {
      if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {
        var o = this._getClientHeight(this._tableElement.get(0)), s = this._getClientHeight(this._fixedTableElement.get(0));
        if (n = this._getRowElements(this._tableElement), r = this._getRowElements(this._fixedTableElement), a = this._findContentElement(), o !== s) {
          for (a && a.css("height", o), n.css("height", ""), r.css("height", ""), i = 0; i < n.length; i++)
            e.push(this._getClientHeight(n.get(i))), t.push(this._getClientHeight(r.get(i)));
          for (i = 0; i < n.length; i++) {
            var l = e[i], u = t[i];
            l > u ? r.eq(i).css("height", l) : l < u && n.eq(i).css("height", u);
          }
          a && a.css("height", "");
        }
      }
    });
  },
  setScrollerSpacing: function(e) {
    var t = this.option("rtlEnabled");
    this.callBase(e), this.element().children("." + this.addWidgetPrefix(Ys)).css({
      paddingLeft: t ? e : "",
      paddingRight: t ? "" : e
    });
  }
}, $Z = T({}, sm, {
  _getRowVisibleColumns: function(e) {
    return this._isFixedTableRendering ? this.getFixedColumns(e) : this.callBase(e);
  },
  getContextMenuItems: function(e) {
    var t = e.column, i = this.option("columnFixing"), n = this.callBase(e);
    if (e.row && e.row.rowType === "header" && i.enabled === !0 && t && t.allowFixing) {
      var r = (a) => {
        switch (a.itemData.value) {
          case "none":
            this._columnsController.columnOption(t.index, "fixed", !1);
            break;
          case "left":
            this._columnsController.columnOption(t.index, {
              fixed: !0,
              fixedPosition: "left"
            });
            break;
          case "right":
            this._columnsController.columnOption(t.index, {
              fixed: !0,
              fixedPosition: "right"
            });
        }
      };
      n = n || [], n.push({
        text: i.texts.fix,
        beginGroup: !0,
        items: [{
          text: i.texts.leftPosition,
          value: "left",
          disabled: t.fixed && (!t.fixedPosition || t.fixedPosition === "left"),
          onItemClick: r
        }, {
          text: i.texts.rightPosition,
          value: "right",
          disabled: t.fixed && t.fixedPosition === "right",
          onItemClick: r
        }]
      }, {
        text: i.texts.unfix,
        value: "none",
        disabled: !t.fixed,
        onItemClick: r
      });
    }
    return n;
  },
  getFixedColumnElements: function(e) {
    if (x(e))
      return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(e).children();
    var t = this.getColumnElements(), i = this.getTransparentColumnElement();
    if (t && i && i.length) {
      var n = $n(this.getFixedColumns());
      t.splice(n, i.get(0).colSpan, i.get(0));
    }
    return t;
  },
  getColumnWidths: function() {
    var e, t = this.callBase(), i = this.getFixedColumnElements(), n = this.getFixedColumns();
    return this._fixedTableElement && (i && i.length ? e = this._getWidths(i) : e = this.callBase(this._fixedTableElement)), mR(n, t, e);
  }
}), HZ = T({}, sm, {
  _detachHoverEvents: function() {
    this._fixedTableElement && w.off(this._fixedTableElement, "mouseover mouseout", ".dx-data-row"), this._tableElement && w.off(this._tableElement, "mouseover mouseout", ".dx-data-row");
  },
  _attachHoverEvents: function() {
    var e = this, t = function(i) {
      w.on(i, "mouseover mouseout", ".dx-data-row", e.createAction(function(n) {
        var r = n.event, a = e.getRowIndex(g(r.target).closest(".dx-row")), o = r.type === "mouseover";
        a >= 0 && (e._tableElement && e._getRowElements(e._tableElement).eq(a).toggleClass(lE, o), e._fixedTableElement && e._getRowElements(e._fixedTableElement).eq(a).toggleClass(lE, o));
      }));
    };
    e._fixedTableElement && e._tableElement && (t(e._fixedTableElement), t(e._tableElement));
  },
  _getScrollDelay: function() {
    var e, t = (e = this.getController("resizing")) === null || e === void 0 ? void 0 : e.hasResizeTimeout();
    return t ? this.option("scrolling.updateTimeout") : lt.mozilla ? 60 : 0;
  },
  _findContentElement: function(e) {
    var t, i, n = this.addWidgetPrefix(oE), r = this.element();
    if (e = this._isFixedTableRendering || e, r && e) {
      t = r.children("." + n);
      var a = this.getScrollable();
      return !t.length && a && (t = g("<div>").addClass(n), w.on(t, "scroll", (o) => {
        var s = o.target, l = this._getScrollDelay();
        clearTimeout(this._fixedScrollTimeout), this._fixedScrollTimeout = setTimeout(() => {
          i = g(s).scrollTop(), a.scrollTo({
            y: i
          });
        }, l);
      }), w.on(t, yl, (o) => {
        var s = g(o.target).closest(".dx-scrollable"), l = !1;
        if (a && a.$element().is(s))
          l = !0;
        else {
          var u = s.length && Si.getInstance(s.get(0)), d = u && u.scrollHeight() - u.clientHeight() > 0;
          l = u && !d;
        }
        if (l) {
          i = a.scrollTop(), a.scrollTo({
            y: i - o.delta
          });
          var c = a.scrollTop() + a.clientHeight(), h = a.scrollHeight() + this.getScrollbarWidth(), p = a.scrollTop() > 0 && c < h;
          if (p)
            return !1;
        }
      }), t.appendTo(r)), t;
    }
    return this.callBase();
  },
  _updateScrollable: function() {
    this.callBase();
    var e = this.getScrollable();
    if (!(e != null && e._disposed)) {
      var t = e && e.scrollOffset().top;
      this._updateFixedTablePosition(t);
    }
  },
  _renderContent: function(e, t, i) {
    return this._isFixedTableRendering || i ? e.empty().addClass(this.addWidgetPrefix(oE) + " " + this.addWidgetPrefix(Ys)).append(t) : this.callBase(e, t);
  },
  _getGroupCellOptions: function(e) {
    return this._isFixedTableRendering ? this.callBase(T({}, e, {
      columns: this._columnsController.getVisibleColumns()
    })) : this.callBase(e);
  },
  _renderGroupedCells: function(e, t) {
    return this.callBase(e, T({}, t, {
      columns: this._columnsController.getVisibleColumns()
    }));
  },
  _renderGroupSummaryCells: function(e, t) {
    this._isFixedTableRendering ? this.callBase(e, T({}, t, {
      columns: this._columnsController.getVisibleColumns()
    })) : this.callBase(e, t);
  },
  _hasAlignByColumnSummaryItems: function(e, t) {
    var i = this.callBase.apply(this, arguments), n = t.columns[e];
    return t.isFixed ? n.fixed && (i || n.fixedPosition === "right") : i && (!this._isFixedColumns || !n.fixed);
  },
  _renderGroupSummaryCellsCore: function(e, t, i, n) {
    var r;
    if (this._isFixedTableRendering) {
      t.isFixed = !0, r = this._getAlignByColumnCellCount(i, t), t.isFixed = !1;
      var a = t.columns.length - r;
      t = T({}, t, {
        columns: this.getFixedColumns()
      });
      var o = $n(t.columns);
      a < o ? (r -= t.columns[o].colspan - 1 || 0, i -= t.columns[o].colspan - 1 || 0) : n > 0 && e.css("visibility", "hidden"), n = r;
    }
    this.callBase(e, t, i, n);
  },
  _getSummaryCellIndex: function(e, t) {
    if (this._isFixedTableRendering) {
      var i = $n(t);
      return e > i && (e += t[i].colspan - 1), e;
    }
    return this.callBase.apply(this, arguments);
  },
  _renderCore: function(e) {
    this._detachHoverEvents();
    var t = this.callBase(e), i = this._isFixedColumns;
    return this.element().toggleClass(VZ, i), this.option("hoverStateEnabled") && i && t.done(() => {
      this._attachHoverEvents();
    }), t;
  },
  setRowsOpacity: function(e, t) {
    this.callBase(e, t);
    var i = this._getRowElements(this._fixedTableElement);
    this._setRowsOpacityCore(i, this.getFixedColumns(), e, t);
  },
  optionChanged: function(e) {
    this.callBase(e), e.name === "hoverStateEnabled" && this._isFixedColumns && (e.value ? this._attachHoverEvents() : this._detachHoverEvents());
  },
  getCellIndex: function(e) {
    var t = this._fixedTableElement, i = 0;
    if (t && e.is("td") && e.closest(t).length) {
      var n = this.getFixedColumns();
      return B(n, function(r, a) {
        if (r === e[0].cellIndex)
          return !1;
        if (a.colspan) {
          i += a.colspan;
          return;
        }
        i++;
      }), i;
    }
    return this.callBase.apply(this, arguments);
  },
  _updateFixedTablePosition: function(e, t) {
    if (this._fixedTableElement && this._tableElement) {
      var i, n = this.getController("editorFactory");
      this._fixedTableElement.parent().scrollTop(e), t && n && (i = n.focus(), i && n.focus(i));
    }
  },
  setScrollerSpacing: function(e, t) {
    var i = {
      marginBottom: 0
    }, n = this.element().children("." + this.addWidgetPrefix(Ys));
    if (n.length && this._fixedTableElement) {
      n.css(i), this._fixedTableElement.css(i), i[this.option("rtlEnabled") ? "marginLeft" : "marginRight"] = e, i.marginBottom = t;
      var r = this._scrollable && this._scrollable.option("useNative");
      (r ? n : this._fixedTableElement).css(i);
    }
  },
  _getElasticScrollTop: function(e) {
    var t = 0;
    if (e.scrollOffset.top < 0)
      t = -e.scrollOffset.top;
    else if (e.reachedBottom) {
      var i = g(e.component.content()), n = g(e.component.container()), r = Math.max(i.get(0).clientHeight - n.get(0).clientHeight, 0);
      t = r - e.scrollOffset.top;
    }
    return Math.floor(t);
  },
  _applyElasticScrolling: function(e) {
    if (this._fixedTableElement) {
      var t = this._getElasticScrollTop(e);
      Math.ceil(t) !== 0 ? kt(this._fixedTableElement, {
        top: t
      }) : this._fixedTableElement.css("transform", "");
    }
  },
  _handleScroll: function(e) {
    this._updateFixedTablePosition(e.scrollOffset.top, !0), this._applyElasticScrolling(e), this.callBase(e);
  },
  _updateContentPosition: function(e) {
    this.callBase.apply(this, arguments), e || this._updateFixedTablePosition(this._scrollTop);
  },
  _afterRowPrepared: function(e) {
    this._isFixedTableRendering || this.callBase(e);
  },
  _scrollToElement: function(e) {
    this.callBase(e, this.getFixedColumnsOffset());
  },
  dispose: function() {
    this.callBase.apply(this, arguments), clearTimeout(this._fixedScrollTimeout);
  }
}), zZ = sm, WZ = {
  defaultOptions: function() {
    return {
      columnFixing: {
        enabled: !1,
        texts: {
          fix: q.format("dxDataGrid-columnFixingFix"),
          unfix: q.format("dxDataGrid-columnFixingUnfix"),
          leftPosition: q.format("dxDataGrid-columnFixingLeftPosition"),
          rightPosition: q.format("dxDataGrid-columnFixingRightPosition")
        }
      }
    };
  },
  extenders: {
    views: {
      columnHeadersView: $Z,
      rowsView: HZ,
      footerView: zZ
    },
    controllers: {
      draggingHeader: {
        _generatePointsByColumns: function(e) {
          var t = e.columns, i = e.targetDraggingPanel;
          if (i && i.getName() === "headers" && i.isFixedColumns() && e.sourceColumn.fixed) {
            e.rowIndex || (e.columnElements = i.getFixedColumnElements(0)), e.columns = i.getFixedColumns(e.rowIndex);
            var n = this.callBase(e);
            return function(r, a, o) {
              var s = $n(a), l = r.length - a.length;
              return B(o, function(u, d) {
                d.index > s && (d.columnIndex += l, d.index += l);
              }), o;
            }(t, e.columns, n), n;
          }
          return this.callBase(e);
        },
        _pointCreated: function(e, t, i, n) {
          var r = this.callBase.apply(this, arguments), a = t[e.columnIndex], o = this._columnHeadersView.getTransparentColumnElement();
          if (!r && i === "headers" && o && o.length) {
            var s = Et(o.get(0));
            return n && n.fixed ? n.fixedPosition === "right" ? e.x < s.right : e.x > s.left : a && a.fixed && a.fixedPosition !== "right" ? !0 : e.x < s.left || e.x > s.right;
          }
          return r;
        }
      },
      columnsResizer: {
        _generatePointsByColumns: function() {
          var e = this, t = e._columnsController, i = t && e._columnsController.getVisibleColumns(), n = t && e._columnsController.getFixedColumns(), r = $n(n), a = i.length - n.length, o = e._columnHeadersView.getFixedColumnElements();
          e.callBase(), o && o.length > 0 && (e._pointsByFixedColumns = ae.getPointsByColumns(o, function(s) {
            return s.index > r && (s.columnIndex += a, s.index += a), e._pointCreated(s, i.length, i);
          }));
        },
        _getTargetPoint: function(e, t, i) {
          var n = this._columnHeadersView.getTransparentColumnElement();
          if (n && n.length) {
            var r = Et(n.get(0));
            if (t <= r.left || t >= r.right)
              return this.callBase(this._pointsByFixedColumns, t, i);
          }
          return this.callBase(e, t, i);
        }
      }
    }
  }
};
xe.registerModule("columnFixing", WZ);
const CR = "rowsView", GZ = "footerView", Sf = ["columnHeadersView", CR, GZ], KZ = "dxDataGridAdaptivity", cE = "dxDataGrid-ariaAdaptiveExpand", UZ = "dxDataGrid-ariaAdaptiveCollapse", jZ = "scrolling.legacyMode";
function Yu(e, t) {
  return e._columnsController.getColumnId(t);
}
function qZ(e) {
  return e.find("td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])");
}
function XZ(e, t) {
  let i;
  const n = g(e), r = t.component.getController("adaptiveColumns");
  t.rowType === "data" ? (i = g("<span>").addClass(r.addWidgetPrefix("adaptive-more")), w.on(i, oe(Xe, KZ), r.createAction(() => {
    r.toggleExpandAdaptiveDetailRow(t.key);
  })), i.appendTo(n)) : ae.setEmptyText(n);
}
function Jg(e) {
  var t;
  const i = (t = e.data) === null || t === void 0 ? void 0 : t.$nextCell;
  w.off(i, "focus", Jg), w.trigger(i, "dxclick");
}
const YZ = {
  _isRowEditMode() {
    return this._getEditMode() === "row";
  },
  _isItemModified(e, t) {
    const i = this._columnsController.getVisibleIndex(e.column.index), n = this._dataController.getRowIndexByKey(t.key), r = this._dataController.items()[n + 1];
    return r && r.modifiedValues && x(r.modifiedValues[i]);
  },
  _renderFormViewTemplate(e, t, i) {
    const n = this, {
      column: r
    } = e, a = n.createAction(() => {
      n._editingController.isEditing() && w.trigger(i, Xe);
    }), o = t.row.data, s = r.calculateCellValue(o), l = ae.getDisplayValue(r, s, o, t.rowType), u = ae.formatValue(l, r), d = this._editingController.isCellOrBatchEditMode(), c = n._rowsView;
    if (r.allowEditing && n.getController("keyboardNavigation").isKeyboardEnabled() && (i.attr("tabIndex", n.option("tabIndex")), d && (w.off(i, "focus", a), w.on(i, "focus", a))), r.cellTemplate) {
      const h = T({}, t, {
        value: s,
        displayValue: l,
        text: u,
        column: r
      });
      c.renderTemplate(i, r.cellTemplate, h, mc(i)).done(() => {
        c._cellPrepared(i, t);
      });
    } else {
      const h = i.get(0);
      r.encodeHtml ? h.textContent = u : h.innerHTML = u, i.addClass("dx-adaptive-item-text"), (!x(u) || u === "") && i.html("&nbsp;"), n._isRowEditMode() || n._isItemModified(e, t) && i.addClass("dx-item-modified"), c._cellPrepared(i, t);
    }
  },
  _getTemplate(e, t) {
    const i = this, {
      column: n
    } = e, r = this.getController("editing");
    return function(a, o) {
      const s = g(o), l = i._columnsController.getVisibleIndex(n.index), u = T({}, t), d = function() {
        const c = i._isItemEdited(e);
        u.value = t.row.values[l], c || n.showEditorAlways ? r.renderFormEditorTemplate(u, e, a, s, !c) : (u.column = n, u.columnIndex = l, i._renderFormViewTemplate(e, u, s));
      };
      d(), u.watch && u.watch(() => ({
        isItemEdited: i._isItemEdited(e),
        value: t.row.values[l]
      }), () => {
        s.contents().remove(), s.removeClass("dx-adaptive-item-text"), d();
      });
    };
  },
  _isVisibleColumnsValid(e) {
    return !(e < 2 || e.length - function() {
      let t = 0;
      for (let i = 0; i < e.length; i++)
        e[i].command && t++;
      return t;
    }() <= 1);
  },
  _calculatePercentWidths(e, t) {
    const i = this;
    let n = 0;
    return t.forEach((r, a) => {
      e[a] !== "adaptiveHidden" && (n += i._getItemPercentWidth(r));
    }), n;
  },
  _isPercentWidth: (e) => Te(e) && e.endsWith("%"),
  _isColumnHidden(e) {
    return this._hiddenColumns.filter((t) => t.index === e.index).length > 0;
  },
  _getAverageColumnsWidth(e, t, i) {
    const n = this;
    let r = 0, a = 0;
    return t.forEach((o) => {
      if (!n._isColumnHidden(o)) {
        const {
          width: s
        } = o;
        x(s) && !isNaN(parseFloat(s)) ? r += n._isPercentWidth(s) ? n._calculatePercentWidth({
          visibleIndex: o.visibleIndex,
          columnsCount: t.length,
          columnsCanFit: i,
          bestFitWidth: o.bestFitWidth,
          columnWidth: s,
          containerWidth: e
        }) : parseFloat(s) : a++;
      }
    }), (e - r) / a;
  },
  _calculateColumnWidth(e, t, i, n) {
    const r = Yu(this, e), a = this._columnsController.columnOption(r, "width"), o = this._columnsController.columnOption(r, "bestFitWidth"), s = i.length;
    let l;
    if (a && a !== "auto")
      if (this._isPercentWidth(a))
        l = this._calculatePercentWidth({
          visibleIndex: e.visibleIndex,
          columnsCount: s,
          columnsCanFit: n,
          bestFitWidth: o,
          columnWidth: a,
          containerWidth: t
        });
      else
        return parseFloat(a);
    else
      l = this.option("columnAutoWidth") || e.command ? o : this._getAverageColumnsWidth(t, i, n);
    return l;
  },
  _calculatePercentWidth(e) {
    const t = e.visibleIndex < e.columnsCount - 1 && e.columnsCanFit, i = e.containerWidth * parseFloat(e.columnWidth) / 100, n = e.columnsCanFit && i < e.bestFitWidth ? e.bestFitWidth : i;
    return t ? e.containerWidth * parseFloat(e.columnWidth) / 100 : n;
  },
  _getNotTruncatedColumnWidth(e, t, i, n) {
    const r = Yu(this, e), a = this._columnsController.columnOption(r, "width"), o = this._columnsController.columnOption(r, "bestFitWidth");
    if (a && a !== "auto" && !this._isPercentWidth(a))
      return parseFloat(a);
    const s = this._calculateColumnWidth(e, t, i, n);
    return s < o ? null : s;
  },
  _getItemPercentWidth(e) {
    let t = 0;
    return e.width && this._isPercentWidth(e.width) && (t = parseFloat(e.width)), t;
  },
  _getCommandColumnsWidth() {
    const e = this, t = e._columnsController.getVisibleColumns();
    let i = 0;
    return B(t, (n, r) => {
      (r.index < 0 || r.command) && (i += e._columnsController.columnOption(Yu(e, r), "bestFitWidth") || 0);
    }), i;
  },
  _isItemEdited(e) {
    if (this.isFormOrPopupEditMode())
      return !1;
    if (this._isRowEditMode()) {
      const t = this.option("editing.editRowKey");
      if (et(t, this._dataController.adaptiveExpandedKey()))
        return !0;
    } else {
      const t = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1, i = this._columnsController.getVisibleIndex(e.column.index);
      return this._editingController.isEditCell(t, i);
    }
  },
  _getFormItemsByHiddenColumns(e) {
    const t = [];
    return B(e, (i, n) => {
      t.push({
        column: n,
        name: n.name,
        dataField: n.dataField,
        visibleIndex: n.visibleIndex
      });
    }), t;
  },
  _getAdaptiveColumnVisibleIndex(e) {
    for (let t = 0; t < e.length; t++)
      if (e[t].command === "adaptive")
        return t;
  },
  _hideAdaptiveColumn(e, t) {
    const i = this._getAdaptiveColumnVisibleIndex(t);
    x(i) && (e[i] = "adaptiveHidden", this._hideVisibleColumn({
      isCommandColumn: !0,
      visibleIndex: i
    }));
  },
  _showHiddenCellsInView({
    $cells: e,
    isCommandColumn: t
  }) {
    let i = this.addWidgetPrefix("hidden-column");
    t ? (i = "dx-command-adaptive-hidden", e.attr({
      tabIndex: 0,
      "aria-hidden": null
    }).removeClass(i)) : e.removeClass(i);
  },
  _showHiddenColumns() {
    for (let e = 0; e < Sf.length; e++) {
      const t = this.getView(Sf[e]);
      if (t && t.isVisible() && t.element()) {
        const i = t.name, n = t.element().find(".dx-command-adaptive-hidden");
        this._showHiddenCellsInView({
          viewName: i,
          $cells: n,
          isCommandColumn: !0
        });
        const r = t.element().find("." + this.addWidgetPrefix("hidden-column"));
        this._showHiddenCellsInView({
          viewName: i,
          $cells: r
        });
      }
    }
  },
  _isCellValid: (e) => e && e.length && !e.hasClass("dx-master-detail-cell") && !e.hasClass("dx-group-cell"),
  _hideVisibleColumn({
    isCommandColumn: e,
    visibleIndex: t
  }) {
    const i = this;
    Sf.forEach((n) => {
      const r = i.getView(n);
      r && i._hideVisibleColumnInView({
        view: r,
        isCommandColumn: e,
        visibleIndex: t
      });
    });
  },
  _hideVisibleColumnInView({
    view: e,
    isCommandColumn: t,
    visibleIndex: i
  }) {
    const n = e.name;
    let r;
    const a = this._columnsController.getVisibleColumns()[i], o = this._editingController && this._editingController.getEditFormRowIndex();
    if (e && e.isVisible() && a) {
      const s = e.getRowsCount(), l = e._getRowElements();
      for (let u = 0; u < s; u++)
        if (!(u === o && n === CR && this.option("editing.mode") !== "popup")) {
          const c = n === "columnHeadersView" ? this._columnsController.getVisibleIndex(a.index, u) : i;
          if (c >= 0) {
            const h = l.eq(u);
            r = this._findCellElementInRow(h, c), this._isCellValid(r) && this._hideVisibleCellInView({
              viewName: n,
              isCommandColumn: t,
              $cell: r
            });
          }
        }
    }
  },
  _findCellElementInRow(e, t) {
    const i = e.children();
    let n = t, r = !1;
    if (e.hasClass("dx-group-row")) {
      const o = e.find(".dx-group-cell"), s = o.attr("colspan");
      if (o.length && x(s)) {
        const l = parseInt(s), u = o.index() + l - 1;
        t > u ? n = t - l + 1 : r = !0;
      }
    }
    return r ? void 0 : i.eq(n);
  },
  _hideVisibleCellInView({
    $cell: e,
    isCommandColumn: t
  }) {
    const i = t ? "dx-command-adaptive-hidden" : this.addWidgetPrefix("hidden-column");
    e.attr({
      tabIndex: -1,
      "aria-hidden": !0
    }).addClass(i);
  },
  _getEditMode() {
    return this._editingController.getEditMode();
  },
  isFormOrPopupEditMode() {
    const e = this._getEditMode();
    return e === "form" || e === "popup";
  },
  hideRedundantColumns(e, t, i) {
    const n = this;
    if (this._hiddenColumns = [], n._isVisibleColumnsValid(t) && i.length) {
      let r = 0;
      const a = n.component.$element();
      let o = Ae(a) - n._getCommandColumnsWidth();
      const s = function() {
        return t.filter((p) => !p.command && this._hiddenColumns.filter((f) => f.index === p.index).length === 0);
      }.bind(this);
      let l = s();
      const u = l.length;
      let d, c, h;
      do {
        h = !1, r = 0;
        const p = n._calculatePercentWidths(e, t), f = p < 100 && p !== 0;
        for (d = 0; d < t.length; d++) {
          const v = t[d];
          let m = n._getNotTruncatedColumnWidth(v, o, l, f);
          const C = Yu(n, v), b = n._columnsController.columnOption(C, "width"), A = n._columnsController.columnOption(C, "minWidth"), R = n._columnsController.columnOption(C, "bestFitWidth");
          if (e[d] === "adaptiveHidden") {
            c = !0;
            continue;
          }
          if (!m && !v.command && !v.fixed) {
            h = !0;
            break;
          }
          (!b || b === "auto") && (m = Math.max(R || 0, A || 0)), (v.command !== "adaptive" || c) && (r += m);
        }
        if (h = h || r > Ae(a), h) {
          const v = i.pop(), m = n._columnsController.getVisibleIndex(v.index);
          o += n._calculateColumnWidth(v, o, l, f), n._hideVisibleColumn({
            visibleIndex: m
          }), e[m] = "adaptiveHidden", this._hiddenColumns.push(v), l = s();
        }
      } while (h && l.length > 1 && i.length);
      u === l.length && n._hideAdaptiveColumn(e, t);
    } else
      n._hideAdaptiveColumn(e, t);
  },
  getAdaptiveDetailItems() {
    return this._$itemContents;
  },
  getItemContentByColumnIndex(e) {
    let t;
    for (let i = 0; i < this._$itemContents.length; i++) {
      t = this._$itemContents.eq(i);
      const n = t.data("dx-form-item");
      if (n && n.column && this._columnsController.getVisibleIndex(n.column.index) === e)
        return t;
    }
  },
  toggleExpandAdaptiveDetailRow(e, t) {
    this.isFormOrPopupEditMode() && this._editingController.isEditing() || this.getController("data").toggleExpandAdaptiveDetailRow(e, t);
  },
  createFormByHiddenColumns(e, t) {
    const i = this, n = g(e), r = {
      items: i._getFormItemsByHiddenColumns(i._hiddenColumns),
      formID: "dx-" + new Ot()
    }, a = St() ? {
      colCount: 2
    } : {};
    this.executeAction("onAdaptiveDetailRowPreparing", {
      formOptions: r
    }), i._$itemContents = null, i._form = i._createComponent(g("<div>").appendTo(n), Qv, T(a, r, {
      customizeItem(o) {
        const s = o.column || i._columnsController.columnOption(o.name || o.dataField);
        s && (o.label = o.label || {}, o.label.text = o.label.text || s.caption, o.column = s, o.template = i._getTemplate(o, t, i.updateForm.bind(i))), r.customizeItem && r.customizeItem.call(this, o);
      },
      onContentReady(o) {
        r.onContentReady && r.onContentReady.call(this, o), i._$itemContents = n.find(".dx-field-item-content");
      }
    }));
  },
  hasAdaptiveDetailRowExpanded() {
    return x(this._dataController.adaptiveExpandedKey());
  },
  updateForm(e) {
    this.hasAdaptiveDetailRowExpanded() && this._form && x(this._form._contentReadyAction) && (e && e.length ? this._form.option("items", this._getFormItemsByHiddenColumns(e)) : this._form.repaint());
  },
  updateHidingQueue(e) {
    const t = this, i = e.filter((a) => a.visible && !a.type && !a.fixed && !(x(a.groupIndex) && a.groupIndex >= 0));
    let n, r;
    if (t._hidingColumnsQueue = [], t.option("allowColumnResizing") && t.option("columnResizingMode") === "widget")
      return t._hidingColumnsQueue;
    for (r = 0; r < i.length; r++)
      x(i[r].hidingPriority) && i[r].hidingPriority >= 0 && (n = !0, t._hidingColumnsQueue[i[r].hidingPriority] = i[r]);
    if (n)
      t._hidingColumnsQueue.reverse();
    else if (t.option("columnHidingEnabled"))
      for (r = 0; r < i.length; r++) {
        const a = t._columnsController.getVisibleIndex(i[r].index);
        t._hidingColumnsQueue[a] = i[r];
      }
    return t._hidingColumnsQueue = t._hidingColumnsQueue.filter(Object), t._hidingColumnsQueue;
  },
  getHiddenColumns() {
    return this._hiddenColumns;
  },
  hasHiddenColumns() {
    return this._hiddenColumns.length > 0;
  },
  getHidingColumnsQueue() {
    return this._hidingColumnsQueue;
  },
  init() {
    const e = this;
    e._columnsController = e.getController("columns"), e._dataController = e.getController("data"), e._rowsView = e.getView("rowsView"), e._columnsController.addCommandColumn({
      type: "adaptive",
      command: "adaptive",
      visible: !0,
      adaptiveHidden: !0,
      cssClass: "dx-command-adaptive",
      alignment: "center",
      width: "auto",
      cellTemplate: XZ,
      fixedPosition: "right"
    }), e._columnsController.columnsChanged.add(() => {
      const t = !!e.updateHidingQueue(e._columnsController.getColumns()).length;
      e._columnsController.columnOption("command:adaptive", "adaptiveHidden", !t, !0);
    }), e._editingController = e.getController("editing"), e._hidingColumnsQueue = [], e._hiddenColumns = [], e.createAction("onAdaptiveDetailRowPreparing"), e.callBase();
  },
  optionChanged(e) {
    e.name === "columnHidingEnabled" && this._columnsController.columnOption("command:adaptive", "adaptiveHidden", !e.value), this.callBase(e);
  },
  publicMethods: () => ["isAdaptiveDetailRowExpanded", "expandAdaptiveDetailRow", "collapseAdaptiveDetailRow"],
  isAdaptiveDetailRowExpanded(e) {
    return this._dataController.adaptiveExpandedKey() && et(this._dataController.adaptiveExpandedKey(), e);
  },
  expandAdaptiveDetailRow(e) {
    this.hasAdaptiveDetailRowExpanded() || this.toggleExpandAdaptiveDetailRow(e);
  },
  collapseAdaptiveDetailRow() {
    this.hasAdaptiveDetailRowExpanded() && this.toggleExpandAdaptiveDetailRow();
  },
  updateCommandAdaptiveAriaLabel(e, t) {
    const i = this._dataController.getRowIndexByKey(e);
    if (i === -1)
      return;
    const n = g(this.component.getRowElement(i));
    this.setCommandAdaptiveAriaLabel(n, t);
  },
  setCommandAdaptiveAriaLabel(e, t) {
    e.find(".dx-command-adaptive").attr("aria-label", q.format(t));
  }
}, ZZ = at.ViewController.inherit(YZ), QZ = {
  defaultOptions: () => ({
    columnHidingEnabled: !1,
    onAdaptiveDetailRowPreparing: null
  }),
  controllers: {
    adaptiveColumns: ZZ
  },
  extenders: {
    views: {
      rowsView: {
        _getCellTemplate(e) {
          const t = this, {
            column: i
          } = e;
          return e.rowType === "detailAdaptive" && i.command === "detail" ? function(n, r) {
            t._adaptiveColumnsController.createFormByHiddenColumns(g(n), r);
          } : t.callBase(e);
        },
        _createRow(e) {
          const t = this.callBase.apply(this, arguments);
          return e && e.rowType === "detailAdaptive" && e.key === this._dataController.adaptiveExpandedKey() && t.addClass("dx-adaptive-detail-row"), t;
        },
        _renderCells(e, t) {
          this.callBase(e, t);
          const i = this._adaptiveColumnsController, n = i.getHidingColumnsQueue().length, r = i.getHiddenColumns().length;
          n && !r && qZ(e).last().addClass("dx-last-data-cell"), t.row.rowType === "data" && i.setCommandAdaptiveAriaLabel(e, cE);
        },
        _getColumnIndexByElementCore(e) {
          const t = e.closest(".dx-field-item-content");
          if (t.length && t.closest(this.component.$element()).length) {
            const i = t.length ? t.first().data("dx-form-item") : null;
            return i && i.column && this._columnsController.getVisibleIndex(i.column.index);
          }
          return this.callBase(e);
        },
        _cellPrepared(e, t) {
          this.callBase.apply(this, arguments), t.row.rowType !== "detailAdaptive" && t.column.visibleWidth === "adaptiveHidden" && e.addClass(this.addWidgetPrefix("hidden-column"));
        },
        getCell(e, t) {
          const i = this._dataController.items()[e == null ? void 0 : e.rowIndex];
          if ((i == null ? void 0 : i.rowType) === "detailAdaptive") {
            const n = this._adaptiveColumnsController.getAdaptiveDetailItems();
            return this.callBase(e, t, n);
          }
          return this.callBase.apply(this, arguments);
        },
        _getCellElement(e, t) {
          const i = this._dataController.items()[e];
          return i && i.rowType === "detailAdaptive" ? this._adaptiveColumnsController.getItemContentByColumnIndex(t) : this.callBase.apply(this, arguments);
        },
        getContextMenuItems(e) {
          if (e.row && e.row.rowType === "detailAdaptive") {
            const t = this.component.getView("columnHeadersView"), i = g(e.targetElement).closest(".dx-field-item-label").next().data("dx-form-item");
            return e.column = i ? i.column : e.column, t.getContextMenuItems && t.getContextMenuItems(e);
          }
          return this.callBase && this.callBase(e);
        },
        isClickableElement(e) {
          return (this.callBase ? this.callBase(e) : !1) || !!e.closest(".dx-command-adaptive").length;
        },
        init() {
          this.callBase(), this._adaptiveColumnsController = this.getController("adaptiveColumns");
        }
      }
    },
    controllers: {
      export: {
        _updateColumnWidth(e, t) {
          this.callBase(e, e.visibleWidth === "adaptiveHidden" ? e.bestFitWidth : t);
        }
      },
      columnsResizer: {
        _pointCreated(e, t, i) {
          const n = this.callBase(e, t, i), r = i[e.columnIndex] || {}, a = this._getNextColumnIndex(e.columnIndex), o = i[a] || {}, s = a !== e.columnIndex + 1 && o.command, l = r.visibleWidth === "adaptiveHidden" || s;
          return n || l;
        },
        _getNextColumnIndex(e) {
          const t = this._columnsController.getVisibleColumns();
          let i = this.callBase(e);
          for (; t[i] && t[i].visibleWidth === "adaptiveHidden"; )
            i++;
          return i;
        }
      },
      draggingHeader: {
        _pointCreated(e, t, i, n) {
          const r = this.callBase(e, t, i, n), o = (t[e.columnIndex - 1] || {}).visibleWidth === "adaptiveHidden";
          return r || o;
        }
      },
      editing: {
        _isRowEditMode() {
          return this.getEditMode() === "row";
        },
        _getFormEditItemTemplate(e, t) {
          return this.getEditMode() !== "row" && e.rowType === "detailAdaptive" ? (e.columnIndex = this._columnsController.getVisibleIndex(t.index), this.getColumnTemplate(e)) : this.callBase(e, t);
        },
        _closeEditItem(e) {
          const t = e.closest(".dx-field-item-content"), i = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1, n = t.length ? t.first().data("dx-form-item") : null, r = n && n.column && this._columnsController.getVisibleIndex(n.column.index);
          this.isEditCell(i, r) || this.callBase(e);
        },
        _beforeUpdateItems(e, t) {
          if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {
            const i = this._dataController.items(), n = i[t], r = ae.getIndexByKey(this._dataController.adaptiveExpandedKey(), i);
            this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded(), r >= 0 && e.push(r + 1), e.push(t + 1), this._dataController.adaptiveExpandedKey(n.key);
          }
        },
        _afterInsertRow(e) {
          this.callBase.apply(this, arguments), this._adaptiveController.hasHiddenColumns() && (this._adaptiveController.toggleExpandAdaptiveDetailRow(e, this.isRowEditMode()), this._isForceRowAdaptiveExpand = !0);
        },
        _collapseAdaptiveDetailRow() {
          this._isRowEditMode() && this._isForceRowAdaptiveExpand && (this._adaptiveController.collapseAdaptiveDetailRow(), this._isForceRowAdaptiveExpand = !1);
        },
        _cancelEditAdaptiveDetailRow() {
          this._adaptiveController.hasHiddenColumns() && this._collapseAdaptiveDetailRow();
        },
        _afterSaveEditData() {
          this.callBase.apply(this, arguments);
          const e = new U();
          return this._isRowEditMode() && this._adaptiveController.hasHiddenColumns() ? ge(this.getController("validating").validate(!0)).done((t) => {
            t && this._cancelEditAdaptiveDetailRow(), e.resolve();
          }) : e.resolve(), e.promise();
        },
        _beforeCancelEditData() {
          this.callBase(), this._cancelEditAdaptiveDetailRow();
        },
        _getRowIndicesForCascadeUpdating(e) {
          const t = this.callBase.apply(this, arguments);
          return this._adaptiveController.isAdaptiveDetailRowExpanded(e.key) && t.push(e.rowType === "detailAdaptive" ? e.rowIndex - 1 : e.rowIndex + 1), t;
        },
        _beforeCloseEditCellInBatchMode(e) {
          const t = this._dataController._adaptiveExpandedKey;
          if (t) {
            const i = ae.getIndexByKey(t, this._dataController.items());
            i > -1 && e.unshift(i);
          }
        },
        editRow(e) {
          this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.collapseAdaptiveDetailRow(), this.callBase(e);
        },
        deleteRow(e) {
          const t = this._dataController.getKeyByRowIndex(e);
          this.getEditMode() === "batch" && this._adaptiveController.isAdaptiveDetailRowExpanded(t) && this._adaptiveController.collapseAdaptiveDetailRow(), this.callBase(e);
        },
        init() {
          this.callBase(), this._adaptiveController = this.getController("adaptiveColumns");
        }
      },
      resizing: {
        _needBestFit() {
          return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length;
        },
        _correctColumnWidths(e, t) {
          const i = this._adaptiveColumnsController, n = i.getHiddenColumns(), r = i.updateHidingQueue(this._columnsController.getColumns());
          i.hideRedundantColumns(e, t, r);
          const a = i.getHiddenColumns();
          return i.hasAdaptiveDetailRowExpanded() && n.length !== a.length && i.updateForm(a), !a.length && i.collapseAdaptiveDetailRow(), this.callBase.apply(this, arguments);
        },
        _toggleBestFitMode(e) {
          e && this._adaptiveColumnsController._showHiddenColumns(), this.callBase(e);
        },
        _needStretch() {
          const e = this._adaptiveColumnsController;
          return this.callBase.apply(this, arguments) || e.getHidingColumnsQueue().length || e.hasHiddenColumns();
        },
        init() {
          this._adaptiveColumnsController = this.getController("adaptiveColumns"), this.callBase();
        },
        dispose() {
          this.callBase.apply(this, arguments), clearTimeout(this._updateScrollableTimeoutID);
        }
      },
      data: {
        _processItems(e, t) {
          const {
            changeType: i
          } = t;
          if (e = this.callBase.apply(this, arguments), i === "loadingAll" || !x(this._adaptiveExpandedKey))
            return e;
          const n = ae.getIndexByKey(this._adaptiveExpandedKey, e), r = this.option(jZ) === !1;
          if (n >= 0) {
            const a = e[n];
            e.splice(n + 1, 0, {
              visible: !0,
              rowType: "detailAdaptive",
              key: a.key,
              data: a.data,
              node: a.node,
              modifiedValues: a.modifiedValues,
              isNewRow: a.isNewRow,
              values: a.values
            });
          } else
            i === "refresh" && !(r && t.repaintChangesOnly) && (this._adaptiveExpandedKey = void 0);
          return e;
        },
        _getRowIndicesForExpand(e) {
          const t = this.callBase.apply(this, arguments);
          if (this.getController("adaptiveColumns").isAdaptiveDetailRowExpanded(e)) {
            const i = t[t.length - 1];
            t.push(i + 1);
          }
          return t;
        },
        adaptiveExpandedKey(e) {
          if (x(e))
            this._adaptiveExpandedKey = e;
          else
            return this._adaptiveExpandedKey;
        },
        toggleExpandAdaptiveDetailRow(e, t) {
          let i = ae.getIndexByKey(this._adaptiveExpandedKey, this._items), n = ae.getIndexByKey(e, this._items);
          i >= 0 && i === n && !t && (e = void 0, n = -1);
          const r = this._adaptiveExpandedKey;
          this._adaptiveExpandedKey = e, i >= 0 && i++, n >= 0 && n++;
          const a = this.getRowIndexDelta();
          this.updateItems({
            allowInvisibleRowIndices: !0,
            changeType: "update",
            rowIndices: [i - a, n - a]
          });
          const o = this.getController("adaptiveColumns");
          o.updateCommandAdaptiveAriaLabel(e, UZ), o.updateCommandAdaptiveAriaLabel(r, cE);
        },
        init() {
          this.callBase(), this._adaptiveExpandedKey = void 0;
        }
      },
      editorFactory: {
        _needHideBorder(e) {
          return this.callBase(e) || (e == null ? void 0 : e.hasClass("dx-field-item-content")) && (e == null ? void 0 : e.find(".dx-checkbox").length);
        },
        _getFocusCellSelector() {
          return this.callBase() + ", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content";
        },
        _getRevertTooltipsSelector() {
          return `${this.callBase()}, .dx-field-item-content .${this.addWidgetPrefix("revert-tooltip")}`;
        }
      },
      columns: {
        _isColumnVisible(e) {
          return this.callBase(e) && !e.adaptiveHidden;
        }
      },
      keyboardNavigation: {
        _isCellValid(e) {
          return this.callBase.apply(this, arguments) && !e.hasClass(this.addWidgetPrefix("hidden-column")) && !e.hasClass("dx-command-adaptive-hidden");
        },
        _processNextCellInMasterDetail(e, t) {
          this.callBase(e);
          const i = this._editingController.isCellOrBatchEditMode();
          this._editingController.isEditing() && e && i && !this._isInsideEditForm(e) && (w.off(e, "focus", Jg), w.on(e, "focus", {
            $nextCell: e
          }, Jg), w.trigger(t, "focus"));
        },
        _isCellElement(e) {
          return this.callBase.apply(this, arguments) || e.hasClass("dx-adaptive-item-text");
        },
        init() {
          this.callBase(), this._adaptiveController = this.getController("adaptiveColumns");
        }
      }
    }
  }
};
xe.registerModule("adaptivity", QZ);
function xR(e, t, i, n, r, a) {
  i = i || 0, n = n || [], a = a || [], n[i] = n[i] || 0;
  var o = e[i], s = a[i] + 1 || 0, l = 0, u;
  if (o) {
    for (u = s; u < o.length; u++) {
      var d = o[u], c = u + n[i], h = d.colspan || 1;
      if (xR(e, t, i + (d.rowspan || 1), n, h, a), n[i] += h - 1, l += h, d.rowspan)
        for (var p = i + 1; p < i + d.rowspan; p++)
          n[p] = n[p] || 0, n[p] += d.colspan || 1;
      if (t(d, c, i, u) === !1 || r !== void 0 && l >= r)
        break;
    }
    a[i] = u;
  }
}
function Ef(e, t, i) {
  var n = [];
  xR(e, function(a, o, s) {
    var l = a, u, d = l.colspan || 1, c = o + d - 1 >= t && o < i;
    if (n[s] = n[s] || [], c)
      o < t ? (u = d - (t - o), o = t) : u = d, o + u > i && (u = i - o), u !== d && (l = T({}, l, {
        colspan: u
      })), n[s].push(l);
    else if (o > i)
      return !1;
  });
  for (var r = 0; r < n.length; r++)
    n[r] = n[r] || [];
  return n;
}
var JZ = 50, eQ = {
  _resizeCore: function() {
    this.callBase.apply(this, arguments), this._columnsController.resize();
  },
  _handleScroll: function(e) {
    var t = this, i = this.getScrollable(), n = e.scrollOffset.left;
    t.callBase.apply(t, arguments), t.option("rtlEnabled") && i && (n = Ae(i.$content()) - Ae(i.$element()) - n), t._columnsController.setScrollPosition(n);
  }
}, tQ = {
  _renderCore: function() {
    var e = this.callBase.apply(this, arguments);
    return this._columnsController.isVirtualMode() && this._updateScrollLeftPosition(), e;
  }
}, iQ = function() {
  var e = function(i) {
    return i.map((n) => n.visibleWidth || parseFloat(n.width) || JZ);
  }, t = {
    init: function() {
      var i = this;
      i.callBase.apply(this, arguments), i._beginPageIndex = null, i._endPageIndex = null, i._position = 0, i._virtualVisibleColumns = {};
    },
    resetColumnsCache: function() {
      this.callBase(), this._virtualVisibleColumns = {};
    },
    getBeginPageIndex: function(i) {
      for (var n = this.getVisibleColumns(void 0, !0), r = e(n), a = 0, o = 0; o < r.length; o++) {
        if (a >= i)
          return Math.floor(o / this.getColumnPageSize());
        a += r[o];
      }
      return 0;
    },
    getTotalWidth: function() {
      var i = this.option("width");
      return typeof i == "number" ? i : this.getController("resizing")._lastWidth || Ge(this.component.$element());
    },
    getEndPageIndex: function(i) {
      var n = this.getVisibleColumns(void 0, !0), r = e(n), a = 0;
      i += this.getTotalWidth();
      for (var o = 0; o < r.length; o++) {
        if (a >= i)
          return Math.ceil(o / this.getColumnPageSize());
        a += r[o];
      }
      return Math.ceil(r.length / this.getColumnPageSize());
    },
    getColumnPageSize: function() {
      return this.option("scrolling.columnPageSize");
    },
    _fireColumnsChanged: function() {
      var i = /* @__PURE__ */ new Date();
      this.columnsChanged.fire({
        optionNames: {
          all: !0,
          length: 1
        },
        changeTypes: {
          columns: !0,
          virtualColumnsScrolling: !0,
          length: 2
        }
      }), this._renderTime = /* @__PURE__ */ new Date() - i;
    },
    getScrollingTimeout: function() {
      var i = this.option("scrolling.columnRenderingThreshold"), n = this.option("scrolling.renderAsync"), r = 0;
      return (!x(n) && this._renderTime > i || n) && (r = this.option("scrolling.timeout")), r;
    },
    setScrollPosition: function(i) {
      var n = this.getScrollingTimeout();
      n > 0 ? (clearTimeout(this._changedTimeout), this._changedTimeout = setTimeout(() => {
        this._setScrollPositionCore(i);
      }, n)) : this._setScrollPositionCore(i);
    },
    isVirtualMode: function() {
      return Re() && this.option("scrolling.columnRenderingMode") === "virtual";
    },
    resize: function() {
      this._setScrollPositionCore(this._position);
    },
    _setScrollPositionCore: function(i) {
      if (this.isVirtualMode()) {
        var n = this.getBeginPageIndex(i), r = this.getEndPageIndex(i), a = i < this._position ? this._beginPageIndex > n : this._endPageIndex < r;
        this._position = i, a && (this._beginPageIndex = n, this._endPageIndex = r, this._fireColumnsChanged());
      }
    },
    getFixedColumns: function(i, n) {
      var r = this.callBase(i);
      if (this.isVirtualMode() && !n && r.length) {
        var a = r.map((o) => o.command).indexOf("transparent");
        return r[a].colspan = this.getVisibleColumns().length - this.callBase().length + 1, r;
      }
      return r;
    },
    _compileVisibleColumns: function(i, n) {
      var r;
      if (n || !this.isVirtualMode() || !this._shouldReturnVisibleColumns())
        return this.callBase(i);
      (r = this._columns) !== null && r !== void 0 && r.length && !x(this._beginPageIndex) && !x(this._endPageIndex) && (this._beginPageIndex = this.getBeginPageIndex(this._position), this._endPageIndex = this.getEndPageIndex(this._position));
      var a = this._beginPageIndex, o = this._endPageIndex, s = i + "-" + a + "-" + o;
      if (this._virtualVisibleColumns[s])
        return this._virtualVisibleColumns[s];
      var l = this.callBase(), u = this.getRowCount(), d = this.getColumnPageSize(), c = a * d, h = o * d, p = this.getFixedColumns(void 0, !0), f = p.map((z) => z.command).indexOf("transparent"), v = p.length ? f : 0, m = l.slice(0, v), C = l.slice(v, c), b = e(C).reduce((z, re) => z + re, 0);
      b || (c = 0);
      var A = p.length ? p.length - f - 1 : 0, R = l.slice(l.length - A), k = l.slice(h, l.length - A), H = e(k).reduce((z, re) => z + re, 0);
      if (H || (h = l.length), u > 1 && typeof i == "number") {
        for (var K = [], j = 0; j < u; j++)
          K.push(this.callBase(j));
        m = Ef(K, 0, m.length)[i] || [], R = Ef(K, l.length - R.length, l.length)[i] || [], l = Ef(K, c, h)[i] || [];
      } else
        l = l.slice(c, h);
      return b && (l.unshift({
        command: "virtual",
        width: b
      }), l = m.concat(l)), H && (l.push({
        command: "virtual",
        width: H
      }), l = l.concat(R)), this._virtualVisibleColumns[s] = l, l;
    },
    getColumnIndexOffset: function() {
      var i = 0;
      if (this._beginPageIndex > 0) {
        var n = this.getFixedColumns(), r = n.map((o) => o.command).indexOf("transparent"), a = r >= 0 ? r : 0;
        i = this._beginPageIndex * this.getColumnPageSize() - a - 1;
      }
      return i > 0 ? i : 0;
    },
    dispose: function() {
      clearTimeout(this._changedTimeout), this.callBase.apply(this, arguments);
    }
  };
  return t;
}(), nQ = {
  defaultOptions: function() {
    return {
      scrolling: {
        columnRenderingMode: "standard",
        columnPageSize: 5,
        columnRenderingThreshold: 300
      }
    };
  },
  extenders: {
    controllers: {
      columns: iQ
    },
    views: {
      columnHeadersView: tQ,
      rowsView: eQ
    }
  }
};
xe.registerModule("virtualColumns", nQ);
var cr = ke(), wf = _l(), hE = {
  EXCEL: "xlsx",
  CSS: "css",
  PNG: "png",
  JPEG: "jpeg",
  GIF: "gif",
  SVG: "svg",
  PDF: "pdf"
}, yR = {
  CSS: "text/css",
  EXCEL: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
  PNG: "image/png",
  JPEG: "image/jpeg",
  GIF: "image/gif",
  SVG: "image/svg+xml",
  PDF: "application/pdf"
}, rQ = {
  _revokeObjectURLTimeout: 3e4,
  _getDataUri: function(e, t) {
    var i = this._getMimeType(e);
    return "data:".concat(i, ";base64,").concat(t);
  },
  _getMimeType: function(e) {
    return yR[e] || "application/octet-stream";
  },
  _linkDownloader: function(e, t) {
    var i = ee.createElement("a");
    return i.download = e, i.href = t, i.target = "_blank", i;
  },
  _winJSBlobSave: function(e, t, i) {
    var n = new Windows.Storage.Pickers.FileSavePicker();
    n.suggestedStartLocation = Windows.Storage.Pickers.PickerLocationId.documentsLibrary;
    var r = hE[i];
    if (r) {
      var a = this._getMimeType(i);
      n.fileTypeChoices.insert(a, ["." + r]);
    }
    n.suggestedFileName = t, n.pickSaveFileAsync().then(function(o) {
      o && o.openAsync(Windows.Storage.FileAccessMode.readWrite).then(function(s) {
        var l = e.msDetachStream();
        Windows.Storage.Streams.RandomAccessStream.copyAsync(l, s).then(function() {
          s.flushAsync().done(function() {
            l.close(), s.close();
          });
        });
      });
    });
  },
  _click: function(e) {
    try {
      e.dispatchEvent(new MouseEvent("click", {
        cancelable: !0
      }));
    } catch {
      var t = ee.getDocument().createEvent("MouseEvents");
      t.initMouseEvent("click", !0, !0, cr, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), e.dispatchEvent(t);
    }
  },
  _saveBlobAs: function(e, t, i) {
    if (this._blobSaved = !1, x(wf.msSaveOrOpenBlob))
      wf.msSaveOrOpenBlob(i, e), this._blobSaved = !0;
    else if (x(cr.WinJS))
      this._winJSBlobSave(i, e, t), this._blobSaved = !0;
    else {
      var n = cr.URL || cr.webkitURL || cr.mozURL || cr.msURL || cr.oURL;
      if (x(n)) {
        var r = n.createObjectURL(i), a = this._linkDownloader(e, r);
        setTimeout(() => {
          n.revokeObjectURL(r), this._objectUrlRevoked = !0;
        }, this._revokeObjectURLTimeout), this._click(a);
      } else
        gl.warn("window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL is not defined");
    }
  },
  saveAs: function(e, t, i) {
    var n = hE[t];
    if (n && (e += "." + n), ce(cr.Blob))
      this._saveBlobAs(e, t, i);
    else {
      x(wf.userAgent.match(/iPad/i)) || $e.log("E1034");
      var r = this._linkDownloader(e, this._getDataUri(t, i));
      this._click(r);
    }
  }
};
function Zu(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var bR = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
(function(e, t) {
  (function(i) {
    e.exports = i();
  })(function() {
    return function i(n, r, a) {
      function o(u, d) {
        if (!r[u]) {
          if (!n[u]) {
            var c = typeof Zu == "function" && Zu;
            if (!d && c)
              return c(u, !0);
            if (s)
              return s(u, !0);
            var h = new Error("Cannot find module '" + u + "'");
            throw h.code = "MODULE_NOT_FOUND", h;
          }
          var p = r[u] = { exports: {} };
          n[u][0].call(p.exports, function(f) {
            var v = n[u][1][f];
            return o(v || f);
          }, p, p.exports, i, n, r, a);
        }
        return r[u].exports;
      }
      for (var s = typeof Zu == "function" && Zu, l = 0; l < a.length; l++)
        o(a[l]);
      return o;
    }({ 1: [function(i, n, r) {
      var a = i("./utils"), o = i("./support"), s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      r.encode = function(l) {
        for (var u, d, c, h, p, f, v, m = [], C = 0, b = l.length, A = b, R = a.getTypeOf(l) !== "string"; C < l.length; )
          A = b - C, c = R ? (u = l[C++], d = C < b ? l[C++] : 0, C < b ? l[C++] : 0) : (u = l.charCodeAt(C++), d = C < b ? l.charCodeAt(C++) : 0, C < b ? l.charCodeAt(C++) : 0), h = u >> 2, p = (3 & u) << 4 | d >> 4, f = 1 < A ? (15 & d) << 2 | c >> 6 : 64, v = 2 < A ? 63 & c : 64, m.push(s.charAt(h) + s.charAt(p) + s.charAt(f) + s.charAt(v));
        return m.join("");
      }, r.decode = function(l) {
        var u, d, c, h, p, f, v = 0, m = 0, C = "data:";
        if (l.substr(0, C.length) === C)
          throw new Error("Invalid base64 input, it looks like a data url.");
        var b, A = 3 * (l = l.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
        if (l.charAt(l.length - 1) === s.charAt(64) && A--, l.charAt(l.length - 2) === s.charAt(64) && A--, A % 1 != 0)
          throw new Error("Invalid base64 input, bad content length.");
        for (b = o.uint8array ? new Uint8Array(0 | A) : new Array(0 | A); v < l.length; )
          u = s.indexOf(l.charAt(v++)) << 2 | (h = s.indexOf(l.charAt(v++))) >> 4, d = (15 & h) << 4 | (p = s.indexOf(l.charAt(v++))) >> 2, c = (3 & p) << 6 | (f = s.indexOf(l.charAt(v++))), b[m++] = u, p !== 64 && (b[m++] = d), f !== 64 && (b[m++] = c);
        return b;
      };
    }, { "./support": 30, "./utils": 32 }], 2: [function(i, n, r) {
      var a = i("./external"), o = i("./stream/DataWorker"), s = i("./stream/Crc32Probe"), l = i("./stream/DataLengthProbe");
      function u(d, c, h, p, f) {
        this.compressedSize = d, this.uncompressedSize = c, this.crc32 = h, this.compression = p, this.compressedContent = f;
      }
      u.prototype = { getContentWorker: function() {
        var d = new o(a.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new l("data_length")), c = this;
        return d.on("end", function() {
          if (this.streamInfo.data_length !== c.uncompressedSize)
            throw new Error("Bug : uncompressed data size mismatch");
        }), d;
      }, getCompressedWorker: function() {
        return new o(a.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
      } }, u.createWorkerFrom = function(d, c, h) {
        return d.pipe(new s()).pipe(new l("uncompressedSize")).pipe(c.compressWorker(h)).pipe(new l("compressedSize")).withStreamInfo("compression", c);
      }, n.exports = u;
    }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(i, n, r) {
      var a = i("./stream/GenericWorker");
      r.STORE = { magic: "\0\0", compressWorker: function() {
        return new a("STORE compression");
      }, uncompressWorker: function() {
        return new a("STORE decompression");
      } }, r.DEFLATE = i("./flate");
    }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(i, n, r) {
      var a = i("./utils"), o = function() {
        for (var s, l = [], u = 0; u < 256; u++) {
          s = u;
          for (var d = 0; d < 8; d++)
            s = 1 & s ? 3988292384 ^ s >>> 1 : s >>> 1;
          l[u] = s;
        }
        return l;
      }();
      n.exports = function(s, l) {
        return s !== void 0 && s.length ? a.getTypeOf(s) !== "string" ? function(u, d, c, h) {
          var p = o, f = h + c;
          u ^= -1;
          for (var v = h; v < f; v++)
            u = u >>> 8 ^ p[255 & (u ^ d[v])];
          return -1 ^ u;
        }(0 | l, s, s.length, 0) : function(u, d, c, h) {
          var p = o, f = h + c;
          u ^= -1;
          for (var v = h; v < f; v++)
            u = u >>> 8 ^ p[255 & (u ^ d.charCodeAt(v))];
          return -1 ^ u;
        }(0 | l, s, s.length, 0) : 0;
      };
    }, { "./utils": 32 }], 5: [function(i, n, r) {
      r.base64 = !1, r.binary = !1, r.dir = !1, r.createFolders = !0, r.date = null, r.compression = null, r.compressionOptions = null, r.comment = null, r.unixPermissions = null, r.dosPermissions = null;
    }, {}], 6: [function(i, n, r) {
      var a = null;
      a = typeof Promise < "u" ? Promise : i("lie"), n.exports = { Promise: a };
    }, { lie: 37 }], 7: [function(i, n, r) {
      var a = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Uint32Array < "u", o = i("pako"), s = i("./utils"), l = i("./stream/GenericWorker"), u = a ? "uint8array" : "array";
      function d(c, h) {
        l.call(this, "FlateWorker/" + c), this._pako = null, this._pakoAction = c, this._pakoOptions = h, this.meta = {};
      }
      r.magic = "\b\0", s.inherits(d, l), d.prototype.processChunk = function(c) {
        this.meta = c.meta, this._pako === null && this._createPako(), this._pako.push(s.transformTo(u, c.data), !1);
      }, d.prototype.flush = function() {
        l.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
      }, d.prototype.cleanUp = function() {
        l.prototype.cleanUp.call(this), this._pako = null;
      }, d.prototype._createPako = function() {
        this._pako = new o[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
        var c = this;
        this._pako.onData = function(h) {
          c.push({ data: h, meta: c.meta });
        };
      }, r.compressWorker = function(c) {
        return new d("Deflate", c);
      }, r.uncompressWorker = function() {
        return new d("Inflate", {});
      };
    }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(i, n, r) {
      function a(p, f) {
        var v, m = "";
        for (v = 0; v < f; v++)
          m += String.fromCharCode(255 & p), p >>>= 8;
        return m;
      }
      function o(p, f, v, m, C, b) {
        var A, R, k = p.file, H = p.compression, K = b !== u.utf8encode, j = s.transformTo("string", b(k.name)), z = s.transformTo("string", u.utf8encode(k.name)), re = k.comment, he = s.transformTo("string", b(re)), P = s.transformTo("string", u.utf8encode(re)), V = z.length !== k.name.length, E = P.length !== re.length, J = "", Oe = "", pe = "", Ue = k.dir, _e = k.date, Ve = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        f && !v || (Ve.crc32 = p.crc32, Ve.compressedSize = p.compressedSize, Ve.uncompressedSize = p.uncompressedSize);
        var ie = 0;
        f && (ie |= 8), K || !V && !E || (ie |= 2048);
        var te = 0, y = 0;
        Ue && (te |= 16), C === "UNIX" ? (y = 798, te |= function(D, M) {
          var W = D;
          return D || (W = M ? 16893 : 33204), (65535 & W) << 16;
        }(k.unixPermissions, Ue)) : (y = 20, te |= function(D) {
          return 63 & (D || 0);
        }(k.dosPermissions)), A = _e.getUTCHours(), A <<= 6, A |= _e.getUTCMinutes(), A <<= 5, A |= _e.getUTCSeconds() / 2, R = _e.getUTCFullYear() - 1980, R <<= 4, R |= _e.getUTCMonth() + 1, R <<= 5, R |= _e.getUTCDate(), V && (Oe = a(1, 1) + a(d(j), 4) + z, J += "up" + a(Oe.length, 2) + Oe), E && (pe = a(1, 1) + a(d(he), 4) + P, J += "uc" + a(pe.length, 2) + pe);
        var I = "";
        return I += `
\0`, I += a(ie, 2), I += H.magic, I += a(A, 2), I += a(R, 2), I += a(Ve.crc32, 4), I += a(Ve.compressedSize, 4), I += a(Ve.uncompressedSize, 4), I += a(j.length, 2), I += a(J.length, 2), { fileRecord: c.LOCAL_FILE_HEADER + I + j + J, dirRecord: c.CENTRAL_FILE_HEADER + a(y, 2) + I + a(he.length, 2) + "\0\0\0\0" + a(te, 4) + a(m, 4) + j + J + he };
      }
      var s = i("../utils"), l = i("../stream/GenericWorker"), u = i("../utf8"), d = i("../crc32"), c = i("../signature");
      function h(p, f, v, m) {
        l.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = f, this.zipPlatform = v, this.encodeFileName = m, this.streamFiles = p, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
      }
      s.inherits(h, l), h.prototype.push = function(p) {
        var f = p.meta.percent || 0, v = this.entriesCount, m = this._sources.length;
        this.accumulate ? this.contentBuffer.push(p) : (this.bytesWritten += p.data.length, l.prototype.push.call(this, { data: p.data, meta: { currentFile: this.currentFile, percent: v ? (f + 100 * (v - m - 1)) / v : 100 } }));
      }, h.prototype.openedSource = function(p) {
        this.currentSourceOffset = this.bytesWritten, this.currentFile = p.file.name;
        var f = this.streamFiles && !p.file.dir;
        if (f) {
          var v = o(p, f, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          this.push({ data: v.fileRecord, meta: { percent: 0 } });
        } else
          this.accumulate = !0;
      }, h.prototype.closedSource = function(p) {
        this.accumulate = !1;
        var f = this.streamFiles && !p.file.dir, v = o(p, f, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
        if (this.dirRecords.push(v.dirRecord), f)
          this.push({ data: function(m) {
            return c.DATA_DESCRIPTOR + a(m.crc32, 4) + a(m.compressedSize, 4) + a(m.uncompressedSize, 4);
          }(p), meta: { percent: 100 } });
        else
          for (this.push({ data: v.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
            this.push(this.contentBuffer.shift());
        this.currentFile = null;
      }, h.prototype.flush = function() {
        for (var p = this.bytesWritten, f = 0; f < this.dirRecords.length; f++)
          this.push({ data: this.dirRecords[f], meta: { percent: 100 } });
        var v = this.bytesWritten - p, m = function(C, b, A, R, k) {
          var H = s.transformTo("string", k(R));
          return c.CENTRAL_DIRECTORY_END + "\0\0\0\0" + a(C, 2) + a(C, 2) + a(b, 4) + a(A, 4) + a(H.length, 2) + H;
        }(this.dirRecords.length, v, p, this.zipComment, this.encodeFileName);
        this.push({ data: m, meta: { percent: 100 } });
      }, h.prototype.prepareNextSource = function() {
        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
      }, h.prototype.registerPrevious = function(p) {
        this._sources.push(p);
        var f = this;
        return p.on("data", function(v) {
          f.processChunk(v);
        }), p.on("end", function() {
          f.closedSource(f.previous.streamInfo), f._sources.length ? f.prepareNextSource() : f.end();
        }), p.on("error", function(v) {
          f.error(v);
        }), this;
      }, h.prototype.resume = function() {
        return !!l.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
      }, h.prototype.error = function(p) {
        var f = this._sources;
        if (!l.prototype.error.call(this, p))
          return !1;
        for (var v = 0; v < f.length; v++)
          try {
            f[v].error(p);
          } catch {
          }
        return !0;
      }, h.prototype.lock = function() {
        l.prototype.lock.call(this);
        for (var p = this._sources, f = 0; f < p.length; f++)
          p[f].lock();
      }, n.exports = h;
    }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(i, n, r) {
      var a = i("../compressions"), o = i("./ZipFileWorker");
      r.generateWorker = function(s, l, u) {
        var d = new o(l.streamFiles, u, l.platform, l.encodeFileName), c = 0;
        try {
          s.forEach(function(h, p) {
            c++;
            var f = function(b, A) {
              var R = b || A, k = a[R];
              if (!k)
                throw new Error(R + " is not a valid compression method !");
              return k;
            }(p.options.compression, l.compression), v = p.options.compressionOptions || l.compressionOptions || {}, m = p.dir, C = p.date;
            p._compressWorker(f, v).withStreamInfo("file", { name: h, dir: m, date: C, comment: p.comment || "", unixPermissions: p.unixPermissions, dosPermissions: p.dosPermissions }).pipe(d);
          }), d.entriesCount = c;
        } catch (h) {
          d.error(h);
        }
        return d;
      };
    }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(i, n, r) {
      function a() {
        if (!(this instanceof a))
          return new a();
        if (arguments.length)
          throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
          var o = new a();
          for (var s in this)
            typeof this[s] != "function" && (o[s] = this[s]);
          return o;
        };
      }
      (a.prototype = i("./object")).loadAsync = i("./load"), a.support = i("./support"), a.defaults = i("./defaults"), a.version = "3.10.1", a.loadAsync = function(o, s) {
        return new a().loadAsync(o, s);
      }, a.external = i("./external"), n.exports = a;
    }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(i, n, r) {
      var a = i("./utils"), o = i("./external"), s = i("./utf8"), l = i("./zipEntries"), u = i("./stream/Crc32Probe"), d = i("./nodejsUtils");
      function c(h) {
        return new o.Promise(function(p, f) {
          var v = h.decompressed.getContentWorker().pipe(new u());
          v.on("error", function(m) {
            f(m);
          }).on("end", function() {
            v.streamInfo.crc32 !== h.decompressed.crc32 ? f(new Error("Corrupted zip : CRC32 mismatch")) : p();
          }).resume();
        });
      }
      n.exports = function(h, p) {
        var f = this;
        return p = a.extend(p || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: s.utf8decode }), d.isNode && d.isStream(h) ? o.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : a.prepareContent("the loaded zip file", h, !0, p.optimizedBinaryString, p.base64).then(function(v) {
          var m = new l(p);
          return m.load(v), m;
        }).then(function(v) {
          var m = [o.Promise.resolve(v)], C = v.files;
          if (p.checkCRC32)
            for (var b = 0; b < C.length; b++)
              m.push(c(C[b]));
          return o.Promise.all(m);
        }).then(function(v) {
          for (var m = v.shift(), C = m.files, b = 0; b < C.length; b++) {
            var A = C[b], R = A.fileNameStr, k = a.resolve(A.fileNameStr);
            f.file(k, A.decompressed, { binary: !0, optimizedBinaryString: !0, date: A.date, dir: A.dir, comment: A.fileCommentStr.length ? A.fileCommentStr : null, unixPermissions: A.unixPermissions, dosPermissions: A.dosPermissions, createFolders: p.createFolders }), A.dir || (f.file(k).unsafeOriginalName = R);
          }
          return m.zipComment.length && (f.comment = m.zipComment), f;
        });
      };
    }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(i, n, r) {
      var a = i("../utils"), o = i("../stream/GenericWorker");
      function s(l, u) {
        o.call(this, "Nodejs stream input adapter for " + l), this._upstreamEnded = !1, this._bindStream(u);
      }
      a.inherits(s, o), s.prototype._bindStream = function(l) {
        var u = this;
        (this._stream = l).pause(), l.on("data", function(d) {
          u.push({ data: d, meta: { percent: 0 } });
        }).on("error", function(d) {
          u.isPaused ? this.generatedError = d : u.error(d);
        }).on("end", function() {
          u.isPaused ? u._upstreamEnded = !0 : u.end();
        });
      }, s.prototype.pause = function() {
        return !!o.prototype.pause.call(this) && (this._stream.pause(), !0);
      }, s.prototype.resume = function() {
        return !!o.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
      }, n.exports = s;
    }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(i, n, r) {
      var a = i("readable-stream").Readable;
      function o(s, l, u) {
        a.call(this, l), this._helper = s;
        var d = this;
        s.on("data", function(c, h) {
          d.push(c) || d._helper.pause(), u && u(h);
        }).on("error", function(c) {
          d.emit("error", c);
        }).on("end", function() {
          d.push(null);
        });
      }
      i("../utils").inherits(o, a), o.prototype._read = function() {
        this._helper.resume();
      }, n.exports = o;
    }, { "../utils": 32, "readable-stream": 16 }], 14: [function(i, n, r) {
      n.exports = { isNode: typeof Buffer < "u", newBufferFrom: function(a, o) {
        if (Buffer.from && Buffer.from !== Uint8Array.from)
          return Buffer.from(a, o);
        if (typeof a == "number")
          throw new Error('The "data" argument must not be a number');
        return new Buffer(a, o);
      }, allocBuffer: function(a) {
        if (Buffer.alloc)
          return Buffer.alloc(a);
        var o = new Buffer(a);
        return o.fill(0), o;
      }, isBuffer: function(a) {
        return Buffer.isBuffer(a);
      }, isStream: function(a) {
        return a && typeof a.on == "function" && typeof a.pause == "function" && typeof a.resume == "function";
      } };
    }, {}], 15: [function(i, n, r) {
      function a(k, H, K) {
        var j, z = s.getTypeOf(H), re = s.extend(K || {}, d);
        re.date = re.date || /* @__PURE__ */ new Date(), re.compression !== null && (re.compression = re.compression.toUpperCase()), typeof re.unixPermissions == "string" && (re.unixPermissions = parseInt(re.unixPermissions, 8)), re.unixPermissions && 16384 & re.unixPermissions && (re.dir = !0), re.dosPermissions && 16 & re.dosPermissions && (re.dir = !0), re.dir && (k = C(k)), re.createFolders && (j = m(k)) && b.call(this, j, !0);
        var he = z === "string" && re.binary === !1 && re.base64 === !1;
        K && K.binary !== void 0 || (re.binary = !he), (H instanceof c && H.uncompressedSize === 0 || re.dir || !H || H.length === 0) && (re.base64 = !1, re.binary = !0, H = "", re.compression = "STORE", z = "string");
        var P = null;
        P = H instanceof c || H instanceof l ? H : f.isNode && f.isStream(H) ? new v(k, H) : s.prepareContent(k, H, re.binary, re.optimizedBinaryString, re.base64);
        var V = new h(k, P, re);
        this.files[k] = V;
      }
      var o = i("./utf8"), s = i("./utils"), l = i("./stream/GenericWorker"), u = i("./stream/StreamHelper"), d = i("./defaults"), c = i("./compressedObject"), h = i("./zipObject"), p = i("./generate"), f = i("./nodejsUtils"), v = i("./nodejs/NodejsStreamInputAdapter"), m = function(k) {
        k.slice(-1) === "/" && (k = k.substring(0, k.length - 1));
        var H = k.lastIndexOf("/");
        return 0 < H ? k.substring(0, H) : "";
      }, C = function(k) {
        return k.slice(-1) !== "/" && (k += "/"), k;
      }, b = function(k, H) {
        return H = H !== void 0 ? H : d.createFolders, k = C(k), this.files[k] || a.call(this, k, null, { dir: !0, createFolders: H }), this.files[k];
      };
      function A(k) {
        return Object.prototype.toString.call(k) === "[object RegExp]";
      }
      var R = { load: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, forEach: function(k) {
        var H, K, j;
        for (H in this.files)
          j = this.files[H], (K = H.slice(this.root.length, H.length)) && H.slice(0, this.root.length) === this.root && k(K, j);
      }, filter: function(k) {
        var H = [];
        return this.forEach(function(K, j) {
          k(K, j) && H.push(j);
        }), H;
      }, file: function(k, H, K) {
        if (arguments.length !== 1)
          return k = this.root + k, a.call(this, k, H, K), this;
        if (A(k)) {
          var j = k;
          return this.filter(function(re, he) {
            return !he.dir && j.test(re);
          });
        }
        var z = this.files[this.root + k];
        return z && !z.dir ? z : null;
      }, folder: function(k) {
        if (!k)
          return this;
        if (A(k))
          return this.filter(function(z, re) {
            return re.dir && k.test(z);
          });
        var H = this.root + k, K = b.call(this, H), j = this.clone();
        return j.root = K.name, j;
      }, remove: function(k) {
        k = this.root + k;
        var H = this.files[k];
        if (H || (k.slice(-1) !== "/" && (k += "/"), H = this.files[k]), H && !H.dir)
          delete this.files[k];
        else
          for (var K = this.filter(function(z, re) {
            return re.name.slice(0, k.length) === k;
          }), j = 0; j < K.length; j++)
            delete this.files[K[j].name];
        return this;
      }, generate: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, generateInternalStream: function(k) {
        var H, K = {};
        try {
          if ((K = s.extend(k || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: o.utf8encode })).type = K.type.toLowerCase(), K.compression = K.compression.toUpperCase(), K.type === "binarystring" && (K.type = "string"), !K.type)
            throw new Error("No output type specified.");
          s.checkSupport(K.type), K.platform !== "darwin" && K.platform !== "freebsd" && K.platform !== "linux" && K.platform !== "sunos" || (K.platform = "UNIX"), K.platform === "win32" && (K.platform = "DOS");
          var j = K.comment || this.comment || "";
          H = p.generateWorker(this, K, j);
        } catch (z) {
          (H = new l("error")).error(z);
        }
        return new u(H, K.type || "string", K.mimeType);
      }, generateAsync: function(k, H) {
        return this.generateInternalStream(k).accumulate(H);
      }, generateNodeStream: function(k, H) {
        return (k = k || {}).type || (k.type = "nodebuffer"), this.generateInternalStream(k).toNodejsStream(H);
      } };
      n.exports = R;
    }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(i, n, r) {
      n.exports = i("stream");
    }, { stream: void 0 }], 17: [function(i, n, r) {
      var a = i("./DataReader");
      function o(s) {
        a.call(this, s);
        for (var l = 0; l < this.data.length; l++)
          s[l] = 255 & s[l];
      }
      i("../utils").inherits(o, a), o.prototype.byteAt = function(s) {
        return this.data[this.zero + s];
      }, o.prototype.lastIndexOfSignature = function(s) {
        for (var l = s.charCodeAt(0), u = s.charCodeAt(1), d = s.charCodeAt(2), c = s.charCodeAt(3), h = this.length - 4; 0 <= h; --h)
          if (this.data[h] === l && this.data[h + 1] === u && this.data[h + 2] === d && this.data[h + 3] === c)
            return h - this.zero;
        return -1;
      }, o.prototype.readAndCheckSignature = function(s) {
        var l = s.charCodeAt(0), u = s.charCodeAt(1), d = s.charCodeAt(2), c = s.charCodeAt(3), h = this.readData(4);
        return l === h[0] && u === h[1] && d === h[2] && c === h[3];
      }, o.prototype.readData = function(s) {
        if (this.checkOffset(s), s === 0)
          return [];
        var l = this.data.slice(this.zero + this.index, this.zero + this.index + s);
        return this.index += s, l;
      }, n.exports = o;
    }, { "../utils": 32, "./DataReader": 18 }], 18: [function(i, n, r) {
      var a = i("../utils");
      function o(s) {
        this.data = s, this.length = s.length, this.index = 0, this.zero = 0;
      }
      o.prototype = { checkOffset: function(s) {
        this.checkIndex(this.index + s);
      }, checkIndex: function(s) {
        if (this.length < this.zero + s || s < 0)
          throw new Error("End of data reached (data length = " + this.length + ", asked index = " + s + "). Corrupted zip ?");
      }, setIndex: function(s) {
        this.checkIndex(s), this.index = s;
      }, skip: function(s) {
        this.setIndex(this.index + s);
      }, byteAt: function() {
      }, readInt: function(s) {
        var l, u = 0;
        for (this.checkOffset(s), l = this.index + s - 1; l >= this.index; l--)
          u = (u << 8) + this.byteAt(l);
        return this.index += s, u;
      }, readString: function(s) {
        return a.transformTo("string", this.readData(s));
      }, readData: function() {
      }, lastIndexOfSignature: function() {
      }, readAndCheckSignature: function() {
      }, readDate: function() {
        var s = this.readInt(4);
        return new Date(Date.UTC(1980 + (s >> 25 & 127), (s >> 21 & 15) - 1, s >> 16 & 31, s >> 11 & 31, s >> 5 & 63, (31 & s) << 1));
      } }, n.exports = o;
    }, { "../utils": 32 }], 19: [function(i, n, r) {
      var a = i("./Uint8ArrayReader");
      function o(s) {
        a.call(this, s);
      }
      i("../utils").inherits(o, a), o.prototype.readData = function(s) {
        this.checkOffset(s);
        var l = this.data.slice(this.zero + this.index, this.zero + this.index + s);
        return this.index += s, l;
      }, n.exports = o;
    }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(i, n, r) {
      var a = i("./DataReader");
      function o(s) {
        a.call(this, s);
      }
      i("../utils").inherits(o, a), o.prototype.byteAt = function(s) {
        return this.data.charCodeAt(this.zero + s);
      }, o.prototype.lastIndexOfSignature = function(s) {
        return this.data.lastIndexOf(s) - this.zero;
      }, o.prototype.readAndCheckSignature = function(s) {
        return s === this.readData(4);
      }, o.prototype.readData = function(s) {
        this.checkOffset(s);
        var l = this.data.slice(this.zero + this.index, this.zero + this.index + s);
        return this.index += s, l;
      }, n.exports = o;
    }, { "../utils": 32, "./DataReader": 18 }], 21: [function(i, n, r) {
      var a = i("./ArrayReader");
      function o(s) {
        a.call(this, s);
      }
      i("../utils").inherits(o, a), o.prototype.readData = function(s) {
        if (this.checkOffset(s), s === 0)
          return new Uint8Array(0);
        var l = this.data.subarray(this.zero + this.index, this.zero + this.index + s);
        return this.index += s, l;
      }, n.exports = o;
    }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(i, n, r) {
      var a = i("../utils"), o = i("../support"), s = i("./ArrayReader"), l = i("./StringReader"), u = i("./NodeBufferReader"), d = i("./Uint8ArrayReader");
      n.exports = function(c) {
        var h = a.getTypeOf(c);
        return a.checkSupport(h), h !== "string" || o.uint8array ? h === "nodebuffer" ? new u(c) : o.uint8array ? new d(a.transformTo("uint8array", c)) : new s(a.transformTo("array", c)) : new l(c);
      };
    }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(i, n, r) {
      r.LOCAL_FILE_HEADER = "PK", r.CENTRAL_FILE_HEADER = "PK", r.CENTRAL_DIRECTORY_END = "PK", r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", r.ZIP64_CENTRAL_DIRECTORY_END = "PK", r.DATA_DESCRIPTOR = "PK\x07\b";
    }, {}], 24: [function(i, n, r) {
      var a = i("./GenericWorker"), o = i("../utils");
      function s(l) {
        a.call(this, "ConvertWorker to " + l), this.destType = l;
      }
      o.inherits(s, a), s.prototype.processChunk = function(l) {
        this.push({ data: o.transformTo(this.destType, l.data), meta: l.meta });
      }, n.exports = s;
    }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(i, n, r) {
      var a = i("./GenericWorker"), o = i("../crc32");
      function s() {
        a.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
      }
      i("../utils").inherits(s, a), s.prototype.processChunk = function(l) {
        this.streamInfo.crc32 = o(l.data, this.streamInfo.crc32 || 0), this.push(l);
      }, n.exports = s;
    }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(i, n, r) {
      var a = i("../utils"), o = i("./GenericWorker");
      function s(l) {
        o.call(this, "DataLengthProbe for " + l), this.propName = l, this.withStreamInfo(l, 0);
      }
      a.inherits(s, o), s.prototype.processChunk = function(l) {
        if (l) {
          var u = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = u + l.data.length;
        }
        o.prototype.processChunk.call(this, l);
      }, n.exports = s;
    }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(i, n, r) {
      var a = i("../utils"), o = i("./GenericWorker");
      function s(l) {
        o.call(this, "DataWorker");
        var u = this;
        this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, l.then(function(d) {
          u.dataIsReady = !0, u.data = d, u.max = d && d.length || 0, u.type = a.getTypeOf(d), u.isPaused || u._tickAndRepeat();
        }, function(d) {
          u.error(d);
        });
      }
      a.inherits(s, o), s.prototype.cleanUp = function() {
        o.prototype.cleanUp.call(this), this.data = null;
      }, s.prototype.resume = function() {
        return !!o.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, a.delay(this._tickAndRepeat, [], this)), !0);
      }, s.prototype._tickAndRepeat = function() {
        this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (a.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
      }, s.prototype._tick = function() {
        if (this.isPaused || this.isFinished)
          return !1;
        var l = null, u = Math.min(this.max, this.index + 16384);
        if (this.index >= this.max)
          return this.end();
        switch (this.type) {
          case "string":
            l = this.data.substring(this.index, u);
            break;
          case "uint8array":
            l = this.data.subarray(this.index, u);
            break;
          case "array":
          case "nodebuffer":
            l = this.data.slice(this.index, u);
        }
        return this.index = u, this.push({ data: l, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
      }, n.exports = s;
    }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(i, n, r) {
      function a(o) {
        this.name = o || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
      }
      a.prototype = { push: function(o) {
        this.emit("data", o);
      }, end: function() {
        if (this.isFinished)
          return !1;
        this.flush();
        try {
          this.emit("end"), this.cleanUp(), this.isFinished = !0;
        } catch (o) {
          this.emit("error", o);
        }
        return !0;
      }, error: function(o) {
        return !this.isFinished && (this.isPaused ? this.generatedError = o : (this.isFinished = !0, this.emit("error", o), this.previous && this.previous.error(o), this.cleanUp()), !0);
      }, on: function(o, s) {
        return this._listeners[o].push(s), this;
      }, cleanUp: function() {
        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
      }, emit: function(o, s) {
        if (this._listeners[o])
          for (var l = 0; l < this._listeners[o].length; l++)
            this._listeners[o][l].call(this, s);
      }, pipe: function(o) {
        return o.registerPrevious(this);
      }, registerPrevious: function(o) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.streamInfo = o.streamInfo, this.mergeStreamInfo(), this.previous = o;
        var s = this;
        return o.on("data", function(l) {
          s.processChunk(l);
        }), o.on("end", function() {
          s.end();
        }), o.on("error", function(l) {
          s.error(l);
        }), this;
      }, pause: function() {
        return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
      }, resume: function() {
        if (!this.isPaused || this.isFinished)
          return !1;
        var o = this.isPaused = !1;
        return this.generatedError && (this.error(this.generatedError), o = !0), this.previous && this.previous.resume(), !o;
      }, flush: function() {
      }, processChunk: function(o) {
        this.push(o);
      }, withStreamInfo: function(o, s) {
        return this.extraStreamInfo[o] = s, this.mergeStreamInfo(), this;
      }, mergeStreamInfo: function() {
        for (var o in this.extraStreamInfo)
          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, o) && (this.streamInfo[o] = this.extraStreamInfo[o]);
      }, lock: function() {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.isLocked = !0, this.previous && this.previous.lock();
      }, toString: function() {
        var o = "Worker " + this.name;
        return this.previous ? this.previous + " -> " + o : o;
      } }, n.exports = a;
    }, {}], 29: [function(i, n, r) {
      var a = i("../utils"), o = i("./ConvertWorker"), s = i("./GenericWorker"), l = i("../base64"), u = i("../support"), d = i("../external"), c = null;
      if (u.nodestream)
        try {
          c = i("../nodejs/NodejsStreamOutputAdapter");
        } catch {
        }
      function h(f, v) {
        return new d.Promise(function(m, C) {
          var b = [], A = f._internalType, R = f._outputType, k = f._mimeType;
          f.on("data", function(H, K) {
            b.push(H), v && v(K);
          }).on("error", function(H) {
            b = [], C(H);
          }).on("end", function() {
            try {
              var H = function(K, j, z) {
                switch (K) {
                  case "blob":
                    return a.newBlob(a.transformTo("arraybuffer", j), z);
                  case "base64":
                    return l.encode(j);
                  default:
                    return a.transformTo(K, j);
                }
              }(R, function(K, j) {
                var z, re = 0, he = null, P = 0;
                for (z = 0; z < j.length; z++)
                  P += j[z].length;
                switch (K) {
                  case "string":
                    return j.join("");
                  case "array":
                    return Array.prototype.concat.apply([], j);
                  case "uint8array":
                    for (he = new Uint8Array(P), z = 0; z < j.length; z++)
                      he.set(j[z], re), re += j[z].length;
                    return he;
                  case "nodebuffer":
                    return Buffer.concat(j);
                  default:
                    throw new Error("concat : unsupported type '" + K + "'");
                }
              }(A, b), k);
              m(H);
            } catch (K) {
              C(K);
            }
            b = [];
          }).resume();
        });
      }
      function p(f, v, m) {
        var C = v;
        switch (v) {
          case "blob":
          case "arraybuffer":
            C = "uint8array";
            break;
          case "base64":
            C = "string";
        }
        try {
          this._internalType = C, this._outputType = v, this._mimeType = m, a.checkSupport(C), this._worker = f.pipe(new o(C)), f.lock();
        } catch (b) {
          this._worker = new s("error"), this._worker.error(b);
        }
      }
      p.prototype = { accumulate: function(f) {
        return h(this, f);
      }, on: function(f, v) {
        var m = this;
        return f === "data" ? this._worker.on(f, function(C) {
          v.call(m, C.data, C.meta);
        }) : this._worker.on(f, function() {
          a.delay(v, arguments, m);
        }), this;
      }, resume: function() {
        return a.delay(this._worker.resume, [], this._worker), this;
      }, pause: function() {
        return this._worker.pause(), this;
      }, toNodejsStream: function(f) {
        if (a.checkSupport("nodestream"), this._outputType !== "nodebuffer")
          throw new Error(this._outputType + " is not supported by this method");
        return new c(this, { objectMode: this._outputType !== "nodebuffer" }, f);
      } }, n.exports = p;
    }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(i, n, r) {
      if (r.base64 = !0, r.array = !0, r.string = !0, r.arraybuffer = typeof ArrayBuffer < "u" && typeof Uint8Array < "u", r.nodebuffer = typeof Buffer < "u", r.uint8array = typeof Uint8Array < "u", typeof ArrayBuffer > "u")
        r.blob = !1;
      else {
        var a = new ArrayBuffer(0);
        try {
          r.blob = new Blob([a], { type: "application/zip" }).size === 0;
        } catch {
          try {
            var o = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            o.append(a), r.blob = o.getBlob("application/zip").size === 0;
          } catch {
            r.blob = !1;
          }
        }
      }
      try {
        r.nodestream = !!i("readable-stream").Readable;
      } catch {
        r.nodestream = !1;
      }
    }, { "readable-stream": 16 }], 31: [function(i, n, r) {
      for (var a = i("./utils"), o = i("./support"), s = i("./nodejsUtils"), l = i("./stream/GenericWorker"), u = new Array(256), d = 0; d < 256; d++)
        u[d] = 252 <= d ? 6 : 248 <= d ? 5 : 240 <= d ? 4 : 224 <= d ? 3 : 192 <= d ? 2 : 1;
      u[254] = u[254] = 1;
      function c() {
        l.call(this, "utf-8 decode"), this.leftOver = null;
      }
      function h() {
        l.call(this, "utf-8 encode");
      }
      r.utf8encode = function(p) {
        return o.nodebuffer ? s.newBufferFrom(p, "utf-8") : function(f) {
          var v, m, C, b, A, R = f.length, k = 0;
          for (b = 0; b < R; b++)
            (64512 & (m = f.charCodeAt(b))) == 55296 && b + 1 < R && (64512 & (C = f.charCodeAt(b + 1))) == 56320 && (m = 65536 + (m - 55296 << 10) + (C - 56320), b++), k += m < 128 ? 1 : m < 2048 ? 2 : m < 65536 ? 3 : 4;
          for (v = o.uint8array ? new Uint8Array(k) : new Array(k), b = A = 0; A < k; b++)
            (64512 & (m = f.charCodeAt(b))) == 55296 && b + 1 < R && (64512 & (C = f.charCodeAt(b + 1))) == 56320 && (m = 65536 + (m - 55296 << 10) + (C - 56320), b++), m < 128 ? v[A++] = m : (m < 2048 ? v[A++] = 192 | m >>> 6 : (m < 65536 ? v[A++] = 224 | m >>> 12 : (v[A++] = 240 | m >>> 18, v[A++] = 128 | m >>> 12 & 63), v[A++] = 128 | m >>> 6 & 63), v[A++] = 128 | 63 & m);
          return v;
        }(p);
      }, r.utf8decode = function(p) {
        return o.nodebuffer ? a.transformTo("nodebuffer", p).toString("utf-8") : function(f) {
          var v, m, C, b, A = f.length, R = new Array(2 * A);
          for (v = m = 0; v < A; )
            if ((C = f[v++]) < 128)
              R[m++] = C;
            else if (4 < (b = u[C]))
              R[m++] = 65533, v += b - 1;
            else {
              for (C &= b === 2 ? 31 : b === 3 ? 15 : 7; 1 < b && v < A; )
                C = C << 6 | 63 & f[v++], b--;
              1 < b ? R[m++] = 65533 : C < 65536 ? R[m++] = C : (C -= 65536, R[m++] = 55296 | C >> 10 & 1023, R[m++] = 56320 | 1023 & C);
            }
          return R.length !== m && (R.subarray ? R = R.subarray(0, m) : R.length = m), a.applyFromCharCode(R);
        }(p = a.transformTo(o.uint8array ? "uint8array" : "array", p));
      }, a.inherits(c, l), c.prototype.processChunk = function(p) {
        var f = a.transformTo(o.uint8array ? "uint8array" : "array", p.data);
        if (this.leftOver && this.leftOver.length) {
          if (o.uint8array) {
            var v = f;
            (f = new Uint8Array(v.length + this.leftOver.length)).set(this.leftOver, 0), f.set(v, this.leftOver.length);
          } else
            f = this.leftOver.concat(f);
          this.leftOver = null;
        }
        var m = function(b, A) {
          var R;
          for ((A = A || b.length) > b.length && (A = b.length), R = A - 1; 0 <= R && (192 & b[R]) == 128; )
            R--;
          return R < 0 || R === 0 ? A : R + u[b[R]] > A ? R : A;
        }(f), C = f;
        m !== f.length && (o.uint8array ? (C = f.subarray(0, m), this.leftOver = f.subarray(m, f.length)) : (C = f.slice(0, m), this.leftOver = f.slice(m, f.length))), this.push({ data: r.utf8decode(C), meta: p.meta });
      }, c.prototype.flush = function() {
        this.leftOver && this.leftOver.length && (this.push({ data: r.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
      }, r.Utf8DecodeWorker = c, a.inherits(h, l), h.prototype.processChunk = function(p) {
        this.push({ data: r.utf8encode(p.data), meta: p.meta });
      }, r.Utf8EncodeWorker = h;
    }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(i, n, r) {
      var a = i("./support"), o = i("./base64"), s = i("./nodejsUtils"), l = i("./external");
      function u(v) {
        return v;
      }
      function d(v, m) {
        for (var C = 0; C < v.length; ++C)
          m[C] = 255 & v.charCodeAt(C);
        return m;
      }
      i("setimmediate"), r.newBlob = function(v, m) {
        r.checkSupport("blob");
        try {
          return new Blob([v], { type: m });
        } catch {
          try {
            var C = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            return C.append(v), C.getBlob(m);
          } catch {
            throw new Error("Bug : can't construct the Blob.");
          }
        }
      };
      var c = { stringifyByChunk: function(v, m, C) {
        var b = [], A = 0, R = v.length;
        if (R <= C)
          return String.fromCharCode.apply(null, v);
        for (; A < R; )
          m === "array" || m === "nodebuffer" ? b.push(String.fromCharCode.apply(null, v.slice(A, Math.min(A + C, R)))) : b.push(String.fromCharCode.apply(null, v.subarray(A, Math.min(A + C, R)))), A += C;
        return b.join("");
      }, stringifyByChar: function(v) {
        for (var m = "", C = 0; C < v.length; C++)
          m += String.fromCharCode(v[C]);
        return m;
      }, applyCanBeUsed: { uint8array: function() {
        try {
          return a.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
        } catch {
          return !1;
        }
      }(), nodebuffer: function() {
        try {
          return a.nodebuffer && String.fromCharCode.apply(null, s.allocBuffer(1)).length === 1;
        } catch {
          return !1;
        }
      }() } };
      function h(v) {
        var m = 65536, C = r.getTypeOf(v), b = !0;
        if (C === "uint8array" ? b = c.applyCanBeUsed.uint8array : C === "nodebuffer" && (b = c.applyCanBeUsed.nodebuffer), b)
          for (; 1 < m; )
            try {
              return c.stringifyByChunk(v, C, m);
            } catch {
              m = Math.floor(m / 2);
            }
        return c.stringifyByChar(v);
      }
      function p(v, m) {
        for (var C = 0; C < v.length; C++)
          m[C] = v[C];
        return m;
      }
      r.applyFromCharCode = h;
      var f = {};
      f.string = { string: u, array: function(v) {
        return d(v, new Array(v.length));
      }, arraybuffer: function(v) {
        return f.string.uint8array(v).buffer;
      }, uint8array: function(v) {
        return d(v, new Uint8Array(v.length));
      }, nodebuffer: function(v) {
        return d(v, s.allocBuffer(v.length));
      } }, f.array = { string: h, array: u, arraybuffer: function(v) {
        return new Uint8Array(v).buffer;
      }, uint8array: function(v) {
        return new Uint8Array(v);
      }, nodebuffer: function(v) {
        return s.newBufferFrom(v);
      } }, f.arraybuffer = { string: function(v) {
        return h(new Uint8Array(v));
      }, array: function(v) {
        return p(new Uint8Array(v), new Array(v.byteLength));
      }, arraybuffer: u, uint8array: function(v) {
        return new Uint8Array(v);
      }, nodebuffer: function(v) {
        return s.newBufferFrom(new Uint8Array(v));
      } }, f.uint8array = { string: h, array: function(v) {
        return p(v, new Array(v.length));
      }, arraybuffer: function(v) {
        return v.buffer;
      }, uint8array: u, nodebuffer: function(v) {
        return s.newBufferFrom(v);
      } }, f.nodebuffer = { string: h, array: function(v) {
        return p(v, new Array(v.length));
      }, arraybuffer: function(v) {
        return f.nodebuffer.uint8array(v).buffer;
      }, uint8array: function(v) {
        return p(v, new Uint8Array(v.length));
      }, nodebuffer: u }, r.transformTo = function(v, m) {
        if (m = m || "", !v)
          return m;
        r.checkSupport(v);
        var C = r.getTypeOf(m);
        return f[C][v](m);
      }, r.resolve = function(v) {
        for (var m = v.split("/"), C = [], b = 0; b < m.length; b++) {
          var A = m[b];
          A === "." || A === "" && b !== 0 && b !== m.length - 1 || (A === ".." ? C.pop() : C.push(A));
        }
        return C.join("/");
      }, r.getTypeOf = function(v) {
        return typeof v == "string" ? "string" : Object.prototype.toString.call(v) === "[object Array]" ? "array" : a.nodebuffer && s.isBuffer(v) ? "nodebuffer" : a.uint8array && v instanceof Uint8Array ? "uint8array" : a.arraybuffer && v instanceof ArrayBuffer ? "arraybuffer" : void 0;
      }, r.checkSupport = function(v) {
        if (!a[v.toLowerCase()])
          throw new Error(v + " is not supported by this platform");
      }, r.MAX_VALUE_16BITS = 65535, r.MAX_VALUE_32BITS = -1, r.pretty = function(v) {
        var m, C, b = "";
        for (C = 0; C < (v || "").length; C++)
          b += "\\x" + ((m = v.charCodeAt(C)) < 16 ? "0" : "") + m.toString(16).toUpperCase();
        return b;
      }, r.delay = function(v, m, C) {
        setImmediate(function() {
          v.apply(C || null, m || []);
        });
      }, r.inherits = function(v, m) {
        function C() {
        }
        C.prototype = m.prototype, v.prototype = new C();
      }, r.extend = function() {
        var v, m, C = {};
        for (v = 0; v < arguments.length; v++)
          for (m in arguments[v])
            Object.prototype.hasOwnProperty.call(arguments[v], m) && C[m] === void 0 && (C[m] = arguments[v][m]);
        return C;
      }, r.prepareContent = function(v, m, C, b, A) {
        return l.Promise.resolve(m).then(function(R) {
          return a.blob && (R instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(R)) !== -1) && typeof FileReader < "u" ? new l.Promise(function(k, H) {
            var K = new FileReader();
            K.onload = function(j) {
              k(j.target.result);
            }, K.onerror = function(j) {
              H(j.target.error);
            }, K.readAsArrayBuffer(R);
          }) : R;
        }).then(function(R) {
          var k = r.getTypeOf(R);
          return k ? (k === "arraybuffer" ? R = r.transformTo("uint8array", R) : k === "string" && (A ? R = o.decode(R) : C && b !== !0 && (R = function(H) {
            return d(H, a.uint8array ? new Uint8Array(H.length) : new Array(H.length));
          }(R))), R) : l.Promise.reject(new Error("Can't read the data of '" + v + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
        });
      };
    }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(i, n, r) {
      var a = i("./reader/readerFor"), o = i("./utils"), s = i("./signature"), l = i("./zipEntry"), u = i("./support");
      function d(c) {
        this.files = [], this.loadOptions = c;
      }
      d.prototype = { checkSignature: function(c) {
        if (!this.reader.readAndCheckSignature(c)) {
          this.reader.index -= 4;
          var h = this.reader.readString(4);
          throw new Error("Corrupted zip or bug: unexpected signature (" + o.pretty(h) + ", expected " + o.pretty(c) + ")");
        }
      }, isSignature: function(c, h) {
        var p = this.reader.index;
        this.reader.setIndex(c);
        var f = this.reader.readString(4) === h;
        return this.reader.setIndex(p), f;
      }, readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
        var c = this.reader.readData(this.zipCommentLength), h = u.uint8array ? "uint8array" : "array", p = o.transformTo(h, c);
        this.zipComment = this.loadOptions.decodeFileName(p);
      }, readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
        for (var c, h, p, f = this.zip64EndOfCentralSize - 44; 0 < f; )
          c = this.reader.readInt(2), h = this.reader.readInt(4), p = this.reader.readData(h), this.zip64ExtensibleData[c] = { id: c, length: h, value: p };
      }, readBlockZip64EndOfCentralLocator: function() {
        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
          throw new Error("Multi-volumes zip are not supported");
      }, readLocalFiles: function() {
        var c, h;
        for (c = 0; c < this.files.length; c++)
          h = this.files[c], this.reader.setIndex(h.localHeaderOffset), this.checkSignature(s.LOCAL_FILE_HEADER), h.readLocalPart(this.reader), h.handleUTF8(), h.processAttributes();
      }, readCentralDir: function() {
        var c;
        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); )
          (c = new l({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(c);
        if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
          throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
      }, readEndOfCentral: function() {
        var c = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
        if (c < 0)
          throw this.isSignature(0, s.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
        this.reader.setIndex(c);
        var h = c;
        if (this.checkSignature(s.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === o.MAX_VALUE_16BITS || this.diskWithCentralDirStart === o.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === o.MAX_VALUE_16BITS || this.centralDirRecords === o.MAX_VALUE_16BITS || this.centralDirSize === o.MAX_VALUE_32BITS || this.centralDirOffset === o.MAX_VALUE_32BITS) {
          if (this.zip64 = !0, (c = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
          if (this.reader.setIndex(c), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
        }
        var p = this.centralDirOffset + this.centralDirSize;
        this.zip64 && (p += 20, p += 12 + this.zip64EndOfCentralSize);
        var f = h - p;
        if (0 < f)
          this.isSignature(h, s.CENTRAL_FILE_HEADER) || (this.reader.zero = f);
        else if (f < 0)
          throw new Error("Corrupted zip: missing " + Math.abs(f) + " bytes.");
      }, prepareReader: function(c) {
        this.reader = a(c);
      }, load: function(c) {
        this.prepareReader(c), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
      } }, n.exports = d;
    }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(i, n, r) {
      var a = i("./reader/readerFor"), o = i("./utils"), s = i("./compressedObject"), l = i("./crc32"), u = i("./utf8"), d = i("./compressions"), c = i("./support");
      function h(p, f) {
        this.options = p, this.loadOptions = f;
      }
      h.prototype = { isEncrypted: function() {
        return (1 & this.bitFlag) == 1;
      }, useUTF8: function() {
        return (2048 & this.bitFlag) == 2048;
      }, readLocalPart: function(p) {
        var f, v;
        if (p.skip(22), this.fileNameLength = p.readInt(2), v = p.readInt(2), this.fileName = p.readData(this.fileNameLength), p.skip(v), this.compressedSize === -1 || this.uncompressedSize === -1)
          throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
        if ((f = function(m) {
          for (var C in d)
            if (Object.prototype.hasOwnProperty.call(d, C) && d[C].magic === m)
              return d[C];
          return null;
        }(this.compressionMethod)) === null)
          throw new Error("Corrupted zip : compression " + o.pretty(this.compressionMethod) + " unknown (inner file : " + o.transformTo("string", this.fileName) + ")");
        this.decompressed = new s(this.compressedSize, this.uncompressedSize, this.crc32, f, p.readData(this.compressedSize));
      }, readCentralPart: function(p) {
        this.versionMadeBy = p.readInt(2), p.skip(2), this.bitFlag = p.readInt(2), this.compressionMethod = p.readString(2), this.date = p.readDate(), this.crc32 = p.readInt(4), this.compressedSize = p.readInt(4), this.uncompressedSize = p.readInt(4);
        var f = p.readInt(2);
        if (this.extraFieldsLength = p.readInt(2), this.fileCommentLength = p.readInt(2), this.diskNumberStart = p.readInt(2), this.internalFileAttributes = p.readInt(2), this.externalFileAttributes = p.readInt(4), this.localHeaderOffset = p.readInt(4), this.isEncrypted())
          throw new Error("Encrypted zip are not supported");
        p.skip(f), this.readExtraFields(p), this.parseZIP64ExtraField(p), this.fileComment = p.readData(this.fileCommentLength);
      }, processAttributes: function() {
        this.unixPermissions = null, this.dosPermissions = null;
        var p = this.versionMadeBy >> 8;
        this.dir = !!(16 & this.externalFileAttributes), p == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), p == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
      }, parseZIP64ExtraField: function() {
        if (this.extraFields[1]) {
          var p = a(this.extraFields[1].value);
          this.uncompressedSize === o.MAX_VALUE_32BITS && (this.uncompressedSize = p.readInt(8)), this.compressedSize === o.MAX_VALUE_32BITS && (this.compressedSize = p.readInt(8)), this.localHeaderOffset === o.MAX_VALUE_32BITS && (this.localHeaderOffset = p.readInt(8)), this.diskNumberStart === o.MAX_VALUE_32BITS && (this.diskNumberStart = p.readInt(4));
        }
      }, readExtraFields: function(p) {
        var f, v, m, C = p.index + this.extraFieldsLength;
        for (this.extraFields || (this.extraFields = {}); p.index + 4 < C; )
          f = p.readInt(2), v = p.readInt(2), m = p.readData(v), this.extraFields[f] = { id: f, length: v, value: m };
        p.setIndex(C);
      }, handleUTF8: function() {
        var p = c.uint8array ? "uint8array" : "array";
        if (this.useUTF8())
          this.fileNameStr = u.utf8decode(this.fileName), this.fileCommentStr = u.utf8decode(this.fileComment);
        else {
          var f = this.findExtraFieldUnicodePath();
          if (f !== null)
            this.fileNameStr = f;
          else {
            var v = o.transformTo(p, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(v);
          }
          var m = this.findExtraFieldUnicodeComment();
          if (m !== null)
            this.fileCommentStr = m;
          else {
            var C = o.transformTo(p, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(C);
          }
        }
      }, findExtraFieldUnicodePath: function() {
        var p = this.extraFields[28789];
        if (p) {
          var f = a(p.value);
          return f.readInt(1) !== 1 || l(this.fileName) !== f.readInt(4) ? null : u.utf8decode(f.readData(p.length - 5));
        }
        return null;
      }, findExtraFieldUnicodeComment: function() {
        var p = this.extraFields[25461];
        if (p) {
          var f = a(p.value);
          return f.readInt(1) !== 1 || l(this.fileComment) !== f.readInt(4) ? null : u.utf8decode(f.readData(p.length - 5));
        }
        return null;
      } }, n.exports = h;
    }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(i, n, r) {
      function a(f, v, m) {
        this.name = f, this.dir = m.dir, this.date = m.date, this.comment = m.comment, this.unixPermissions = m.unixPermissions, this.dosPermissions = m.dosPermissions, this._data = v, this._dataBinary = m.binary, this.options = { compression: m.compression, compressionOptions: m.compressionOptions };
      }
      var o = i("./stream/StreamHelper"), s = i("./stream/DataWorker"), l = i("./utf8"), u = i("./compressedObject"), d = i("./stream/GenericWorker");
      a.prototype = { internalStream: function(f) {
        var v = null, m = "string";
        try {
          if (!f)
            throw new Error("No output type specified.");
          var C = (m = f.toLowerCase()) === "string" || m === "text";
          m !== "binarystring" && m !== "text" || (m = "string"), v = this._decompressWorker();
          var b = !this._dataBinary;
          b && !C && (v = v.pipe(new l.Utf8EncodeWorker())), !b && C && (v = v.pipe(new l.Utf8DecodeWorker()));
        } catch (A) {
          (v = new d("error")).error(A);
        }
        return new o(v, m, "");
      }, async: function(f, v) {
        return this.internalStream(f).accumulate(v);
      }, nodeStream: function(f, v) {
        return this.internalStream(f || "nodebuffer").toNodejsStream(v);
      }, _compressWorker: function(f, v) {
        if (this._data instanceof u && this._data.compression.magic === f.magic)
          return this._data.getCompressedWorker();
        var m = this._decompressWorker();
        return this._dataBinary || (m = m.pipe(new l.Utf8EncodeWorker())), u.createWorkerFrom(m, f, v);
      }, _decompressWorker: function() {
        return this._data instanceof u ? this._data.getContentWorker() : this._data instanceof d ? this._data : new s(this._data);
      } };
      for (var c = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], h = function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, p = 0; p < c.length; p++)
        a.prototype[c[p]] = h;
      n.exports = a;
    }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(i, n, r) {
      (function(a) {
        var o, s, l = a.MutationObserver || a.WebKitMutationObserver;
        if (l) {
          var u = 0, d = new l(f), c = a.document.createTextNode("");
          d.observe(c, { characterData: !0 }), o = function() {
            c.data = u = ++u % 2;
          };
        } else if (a.setImmediate || a.MessageChannel === void 0)
          o = "document" in a && "onreadystatechange" in a.document.createElement("script") ? function() {
            var v = a.document.createElement("script");
            v.onreadystatechange = function() {
              f(), v.onreadystatechange = null, v.parentNode.removeChild(v), v = null;
            }, a.document.documentElement.appendChild(v);
          } : function() {
            setTimeout(f, 0);
          };
        else {
          var h = new a.MessageChannel();
          h.port1.onmessage = f, o = function() {
            h.port2.postMessage(0);
          };
        }
        var p = [];
        function f() {
          var v, m;
          s = !0;
          for (var C = p.length; C; ) {
            for (m = p, p = [], v = -1; ++v < C; )
              m[v]();
            C = p.length;
          }
          s = !1;
        }
        n.exports = function(v) {
          p.push(v) !== 1 || s || o();
        };
      }).call(this, typeof Se < "u" ? Se : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}], 37: [function(i, n, r) {
      var a = i("immediate");
      function o() {
      }
      var s = {}, l = ["REJECTED"], u = ["FULFILLED"], d = ["PENDING"];
      function c(C) {
        if (typeof C != "function")
          throw new TypeError("resolver must be a function");
        this.state = d, this.queue = [], this.outcome = void 0, C !== o && v(this, C);
      }
      function h(C, b, A) {
        this.promise = C, typeof b == "function" && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), typeof A == "function" && (this.onRejected = A, this.callRejected = this.otherCallRejected);
      }
      function p(C, b, A) {
        a(function() {
          var R;
          try {
            R = b(A);
          } catch (k) {
            return s.reject(C, k);
          }
          R === C ? s.reject(C, new TypeError("Cannot resolve promise with itself")) : s.resolve(C, R);
        });
      }
      function f(C) {
        var b = C && C.then;
        if (C && (typeof C == "object" || typeof C == "function") && typeof b == "function")
          return function() {
            b.apply(C, arguments);
          };
      }
      function v(C, b) {
        var A = !1;
        function R(K) {
          A || (A = !0, s.reject(C, K));
        }
        function k(K) {
          A || (A = !0, s.resolve(C, K));
        }
        var H = m(function() {
          b(k, R);
        });
        H.status === "error" && R(H.value);
      }
      function m(C, b) {
        var A = {};
        try {
          A.value = C(b), A.status = "success";
        } catch (R) {
          A.status = "error", A.value = R;
        }
        return A;
      }
      (n.exports = c).prototype.finally = function(C) {
        if (typeof C != "function")
          return this;
        var b = this.constructor;
        return this.then(function(A) {
          return b.resolve(C()).then(function() {
            return A;
          });
        }, function(A) {
          return b.resolve(C()).then(function() {
            throw A;
          });
        });
      }, c.prototype.catch = function(C) {
        return this.then(null, C);
      }, c.prototype.then = function(C, b) {
        if (typeof C != "function" && this.state === u || typeof b != "function" && this.state === l)
          return this;
        var A = new this.constructor(o);
        return this.state !== d ? p(A, this.state === u ? C : b, this.outcome) : this.queue.push(new h(A, C, b)), A;
      }, h.prototype.callFulfilled = function(C) {
        s.resolve(this.promise, C);
      }, h.prototype.otherCallFulfilled = function(C) {
        p(this.promise, this.onFulfilled, C);
      }, h.prototype.callRejected = function(C) {
        s.reject(this.promise, C);
      }, h.prototype.otherCallRejected = function(C) {
        p(this.promise, this.onRejected, C);
      }, s.resolve = function(C, b) {
        var A = m(f, b);
        if (A.status === "error")
          return s.reject(C, A.value);
        var R = A.value;
        if (R)
          v(C, R);
        else {
          C.state = u, C.outcome = b;
          for (var k = -1, H = C.queue.length; ++k < H; )
            C.queue[k].callFulfilled(b);
        }
        return C;
      }, s.reject = function(C, b) {
        C.state = l, C.outcome = b;
        for (var A = -1, R = C.queue.length; ++A < R; )
          C.queue[A].callRejected(b);
        return C;
      }, c.resolve = function(C) {
        return C instanceof this ? C : s.resolve(new this(o), C);
      }, c.reject = function(C) {
        var b = new this(o);
        return s.reject(b, C);
      }, c.all = function(C) {
        var b = this;
        if (Object.prototype.toString.call(C) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var A = C.length, R = !1;
        if (!A)
          return this.resolve([]);
        for (var k = new Array(A), H = 0, K = -1, j = new this(o); ++K < A; )
          z(C[K], K);
        return j;
        function z(re, he) {
          b.resolve(re).then(function(P) {
            k[he] = P, ++H !== A || R || (R = !0, s.resolve(j, k));
          }, function(P) {
            R || (R = !0, s.reject(j, P));
          });
        }
      }, c.race = function(C) {
        var b = this;
        if (Object.prototype.toString.call(C) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var A = C.length, R = !1;
        if (!A)
          return this.resolve([]);
        for (var k = -1, H = new this(o); ++k < A; )
          K = C[k], b.resolve(K).then(function(j) {
            R || (R = !0, s.resolve(H, j));
          }, function(j) {
            R || (R = !0, s.reject(H, j));
          });
        var K;
        return H;
      };
    }, { immediate: 36 }], 38: [function(i, n, r) {
      var a = {};
      (0, i("./lib/utils/common").assign)(a, i("./lib/deflate"), i("./lib/inflate"), i("./lib/zlib/constants")), n.exports = a;
    }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(i, n, r) {
      var a = i("./zlib/deflate"), o = i("./utils/common"), s = i("./utils/strings"), l = i("./zlib/messages"), u = i("./zlib/zstream"), d = Object.prototype.toString, c = 0, h = -1, p = 0, f = 8;
      function v(C) {
        if (!(this instanceof v))
          return new v(C);
        this.options = o.assign({ level: h, method: f, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: p, to: "" }, C || {});
        var b = this.options;
        b.raw && 0 < b.windowBits ? b.windowBits = -b.windowBits : b.gzip && 0 < b.windowBits && b.windowBits < 16 && (b.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new u(), this.strm.avail_out = 0;
        var A = a.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
        if (A !== c)
          throw new Error(l[A]);
        if (b.header && a.deflateSetHeader(this.strm, b.header), b.dictionary) {
          var R;
          if (R = typeof b.dictionary == "string" ? s.string2buf(b.dictionary) : d.call(b.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(b.dictionary) : b.dictionary, (A = a.deflateSetDictionary(this.strm, R)) !== c)
            throw new Error(l[A]);
          this._dict_set = !0;
        }
      }
      function m(C, b) {
        var A = new v(b);
        if (A.push(C, !0), A.err)
          throw A.msg || l[A.err];
        return A.result;
      }
      v.prototype.push = function(C, b) {
        var A, R, k = this.strm, H = this.options.chunkSize;
        if (this.ended)
          return !1;
        R = b === ~~b ? b : b === !0 ? 4 : 0, typeof C == "string" ? k.input = s.string2buf(C) : d.call(C) === "[object ArrayBuffer]" ? k.input = new Uint8Array(C) : k.input = C, k.next_in = 0, k.avail_in = k.input.length;
        do {
          if (k.avail_out === 0 && (k.output = new o.Buf8(H), k.next_out = 0, k.avail_out = H), (A = a.deflate(k, R)) !== 1 && A !== c)
            return this.onEnd(A), !(this.ended = !0);
          k.avail_out !== 0 && (k.avail_in !== 0 || R !== 4 && R !== 2) || (this.options.to === "string" ? this.onData(s.buf2binstring(o.shrinkBuf(k.output, k.next_out))) : this.onData(o.shrinkBuf(k.output, k.next_out)));
        } while ((0 < k.avail_in || k.avail_out === 0) && A !== 1);
        return R === 4 ? (A = a.deflateEnd(this.strm), this.onEnd(A), this.ended = !0, A === c) : R !== 2 || (this.onEnd(c), !(k.avail_out = 0));
      }, v.prototype.onData = function(C) {
        this.chunks.push(C);
      }, v.prototype.onEnd = function(C) {
        C === c && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)), this.chunks = [], this.err = C, this.msg = this.strm.msg;
      }, r.Deflate = v, r.deflate = m, r.deflateRaw = function(C, b) {
        return (b = b || {}).raw = !0, m(C, b);
      }, r.gzip = function(C, b) {
        return (b = b || {}).gzip = !0, m(C, b);
      };
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(i, n, r) {
      var a = i("./zlib/inflate"), o = i("./utils/common"), s = i("./utils/strings"), l = i("./zlib/constants"), u = i("./zlib/messages"), d = i("./zlib/zstream"), c = i("./zlib/gzheader"), h = Object.prototype.toString;
      function p(v) {
        if (!(this instanceof p))
          return new p(v);
        this.options = o.assign({ chunkSize: 16384, windowBits: 0, to: "" }, v || {});
        var m = this.options;
        m.raw && 0 <= m.windowBits && m.windowBits < 16 && (m.windowBits = -m.windowBits, m.windowBits === 0 && (m.windowBits = -15)), !(0 <= m.windowBits && m.windowBits < 16) || v && v.windowBits || (m.windowBits += 32), 15 < m.windowBits && m.windowBits < 48 && !(15 & m.windowBits) && (m.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new d(), this.strm.avail_out = 0;
        var C = a.inflateInit2(this.strm, m.windowBits);
        if (C !== l.Z_OK)
          throw new Error(u[C]);
        this.header = new c(), a.inflateGetHeader(this.strm, this.header);
      }
      function f(v, m) {
        var C = new p(m);
        if (C.push(v, !0), C.err)
          throw C.msg || u[C.err];
        return C.result;
      }
      p.prototype.push = function(v, m) {
        var C, b, A, R, k, H, K = this.strm, j = this.options.chunkSize, z = this.options.dictionary, re = !1;
        if (this.ended)
          return !1;
        b = m === ~~m ? m : m === !0 ? l.Z_FINISH : l.Z_NO_FLUSH, typeof v == "string" ? K.input = s.binstring2buf(v) : h.call(v) === "[object ArrayBuffer]" ? K.input = new Uint8Array(v) : K.input = v, K.next_in = 0, K.avail_in = K.input.length;
        do {
          if (K.avail_out === 0 && (K.output = new o.Buf8(j), K.next_out = 0, K.avail_out = j), (C = a.inflate(K, l.Z_NO_FLUSH)) === l.Z_NEED_DICT && z && (H = typeof z == "string" ? s.string2buf(z) : h.call(z) === "[object ArrayBuffer]" ? new Uint8Array(z) : z, C = a.inflateSetDictionary(this.strm, H)), C === l.Z_BUF_ERROR && re === !0 && (C = l.Z_OK, re = !1), C !== l.Z_STREAM_END && C !== l.Z_OK)
            return this.onEnd(C), !(this.ended = !0);
          K.next_out && (K.avail_out !== 0 && C !== l.Z_STREAM_END && (K.avail_in !== 0 || b !== l.Z_FINISH && b !== l.Z_SYNC_FLUSH) || (this.options.to === "string" ? (A = s.utf8border(K.output, K.next_out), R = K.next_out - A, k = s.buf2string(K.output, A), K.next_out = R, K.avail_out = j - R, R && o.arraySet(K.output, K.output, A, R, 0), this.onData(k)) : this.onData(o.shrinkBuf(K.output, K.next_out)))), K.avail_in === 0 && K.avail_out === 0 && (re = !0);
        } while ((0 < K.avail_in || K.avail_out === 0) && C !== l.Z_STREAM_END);
        return C === l.Z_STREAM_END && (b = l.Z_FINISH), b === l.Z_FINISH ? (C = a.inflateEnd(this.strm), this.onEnd(C), this.ended = !0, C === l.Z_OK) : b !== l.Z_SYNC_FLUSH || (this.onEnd(l.Z_OK), !(K.avail_out = 0));
      }, p.prototype.onData = function(v) {
        this.chunks.push(v);
      }, p.prototype.onEnd = function(v) {
        v === l.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)), this.chunks = [], this.err = v, this.msg = this.strm.msg;
      }, r.Inflate = p, r.inflate = f, r.inflateRaw = function(v, m) {
        return (m = m || {}).raw = !0, f(v, m);
      }, r.ungzip = f;
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(i, n, r) {
      var a = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
      r.assign = function(l) {
        for (var u = Array.prototype.slice.call(arguments, 1); u.length; ) {
          var d = u.shift();
          if (d) {
            if (typeof d != "object")
              throw new TypeError(d + "must be non-object");
            for (var c in d)
              d.hasOwnProperty(c) && (l[c] = d[c]);
          }
        }
        return l;
      }, r.shrinkBuf = function(l, u) {
        return l.length === u ? l : l.subarray ? l.subarray(0, u) : (l.length = u, l);
      };
      var o = { arraySet: function(l, u, d, c, h) {
        if (u.subarray && l.subarray)
          l.set(u.subarray(d, d + c), h);
        else
          for (var p = 0; p < c; p++)
            l[h + p] = u[d + p];
      }, flattenChunks: function(l) {
        var u, d, c, h, p, f;
        for (u = c = 0, d = l.length; u < d; u++)
          c += l[u].length;
        for (f = new Uint8Array(c), u = h = 0, d = l.length; u < d; u++)
          p = l[u], f.set(p, h), h += p.length;
        return f;
      } }, s = { arraySet: function(l, u, d, c, h) {
        for (var p = 0; p < c; p++)
          l[h + p] = u[d + p];
      }, flattenChunks: function(l) {
        return [].concat.apply([], l);
      } };
      r.setTyped = function(l) {
        l ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, o)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, s));
      }, r.setTyped(a);
    }, {}], 42: [function(i, n, r) {
      var a = i("./common"), o = !0, s = !0;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch {
        o = !1;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch {
        s = !1;
      }
      for (var l = new a.Buf8(256), u = 0; u < 256; u++)
        l[u] = 252 <= u ? 6 : 248 <= u ? 5 : 240 <= u ? 4 : 224 <= u ? 3 : 192 <= u ? 2 : 1;
      function d(c, h) {
        if (h < 65537 && (c.subarray && s || !c.subarray && o))
          return String.fromCharCode.apply(null, a.shrinkBuf(c, h));
        for (var p = "", f = 0; f < h; f++)
          p += String.fromCharCode(c[f]);
        return p;
      }
      l[254] = l[254] = 1, r.string2buf = function(c) {
        var h, p, f, v, m, C = c.length, b = 0;
        for (v = 0; v < C; v++)
          (64512 & (p = c.charCodeAt(v))) == 55296 && v + 1 < C && (64512 & (f = c.charCodeAt(v + 1))) == 56320 && (p = 65536 + (p - 55296 << 10) + (f - 56320), v++), b += p < 128 ? 1 : p < 2048 ? 2 : p < 65536 ? 3 : 4;
        for (h = new a.Buf8(b), v = m = 0; m < b; v++)
          (64512 & (p = c.charCodeAt(v))) == 55296 && v + 1 < C && (64512 & (f = c.charCodeAt(v + 1))) == 56320 && (p = 65536 + (p - 55296 << 10) + (f - 56320), v++), p < 128 ? h[m++] = p : (p < 2048 ? h[m++] = 192 | p >>> 6 : (p < 65536 ? h[m++] = 224 | p >>> 12 : (h[m++] = 240 | p >>> 18, h[m++] = 128 | p >>> 12 & 63), h[m++] = 128 | p >>> 6 & 63), h[m++] = 128 | 63 & p);
        return h;
      }, r.buf2binstring = function(c) {
        return d(c, c.length);
      }, r.binstring2buf = function(c) {
        for (var h = new a.Buf8(c.length), p = 0, f = h.length; p < f; p++)
          h[p] = c.charCodeAt(p);
        return h;
      }, r.buf2string = function(c, h) {
        var p, f, v, m, C = h || c.length, b = new Array(2 * C);
        for (p = f = 0; p < C; )
          if ((v = c[p++]) < 128)
            b[f++] = v;
          else if (4 < (m = l[v]))
            b[f++] = 65533, p += m - 1;
          else {
            for (v &= m === 2 ? 31 : m === 3 ? 15 : 7; 1 < m && p < C; )
              v = v << 6 | 63 & c[p++], m--;
            1 < m ? b[f++] = 65533 : v < 65536 ? b[f++] = v : (v -= 65536, b[f++] = 55296 | v >> 10 & 1023, b[f++] = 56320 | 1023 & v);
          }
        return d(b, f);
      }, r.utf8border = function(c, h) {
        var p;
        for ((h = h || c.length) > c.length && (h = c.length), p = h - 1; 0 <= p && (192 & c[p]) == 128; )
          p--;
        return p < 0 || p === 0 ? h : p + l[c[p]] > h ? p : h;
      };
    }, { "./common": 41 }], 43: [function(i, n, r) {
      n.exports = function(a, o, s, l) {
        for (var u = 65535 & a | 0, d = a >>> 16 & 65535 | 0, c = 0; s !== 0; ) {
          for (s -= c = 2e3 < s ? 2e3 : s; d = d + (u = u + o[l++] | 0) | 0, --c; )
            ;
          u %= 65521, d %= 65521;
        }
        return u | d << 16 | 0;
      };
    }, {}], 44: [function(i, n, r) {
      n.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
    }, {}], 45: [function(i, n, r) {
      var a = function() {
        for (var o, s = [], l = 0; l < 256; l++) {
          o = l;
          for (var u = 0; u < 8; u++)
            o = 1 & o ? 3988292384 ^ o >>> 1 : o >>> 1;
          s[l] = o;
        }
        return s;
      }();
      n.exports = function(o, s, l, u) {
        var d = a, c = u + l;
        o ^= -1;
        for (var h = u; h < c; h++)
          o = o >>> 8 ^ d[255 & (o ^ s[h])];
        return -1 ^ o;
      };
    }, {}], 46: [function(i, n, r) {
      var a, o = i("../utils/common"), s = i("./trees"), l = i("./adler32"), u = i("./crc32"), d = i("./messages"), c = 0, h = 4, p = 0, f = -2, v = -1, m = 4, C = 2, b = 8, A = 9, R = 286, k = 30, H = 19, K = 2 * R + 1, j = 15, z = 3, re = 258, he = re + z + 1, P = 42, V = 113, E = 1, J = 2, Oe = 3, pe = 4;
      function Ue(S, Y) {
        return S.msg = d[Y], Y;
      }
      function _e(S) {
        return (S << 1) - (4 < S ? 9 : 0);
      }
      function Ve(S) {
        for (var Y = S.length; 0 <= --Y; )
          S[Y] = 0;
      }
      function ie(S) {
        var Y = S.state, Q = Y.pending;
        Q > S.avail_out && (Q = S.avail_out), Q !== 0 && (o.arraySet(S.output, Y.pending_buf, Y.pending_out, Q, S.next_out), S.next_out += Q, Y.pending_out += Q, S.total_out += Q, S.avail_out -= Q, Y.pending -= Q, Y.pending === 0 && (Y.pending_out = 0));
      }
      function te(S, Y) {
        s._tr_flush_block(S, 0 <= S.block_start ? S.block_start : -1, S.strstart - S.block_start, Y), S.block_start = S.strstart, ie(S.strm);
      }
      function y(S, Y) {
        S.pending_buf[S.pending++] = Y;
      }
      function I(S, Y) {
        S.pending_buf[S.pending++] = Y >>> 8 & 255, S.pending_buf[S.pending++] = 255 & Y;
      }
      function D(S, Y) {
        var Q, F, O = S.max_chain_length, N = S.strstart, ne = S.prev_length, se = S.nice_match, X = S.strstart > S.w_size - he ? S.strstart - (S.w_size - he) : 0, fe = S.window, we = S.w_mask, Ce = S.prev, Le = S.strstart + re, gt = fe[N + ne - 1], it = fe[N + ne];
        S.prev_length >= S.good_match && (O >>= 2), se > S.lookahead && (se = S.lookahead);
        do
          if (fe[(Q = Y) + ne] === it && fe[Q + ne - 1] === gt && fe[Q] === fe[N] && fe[++Q] === fe[N + 1]) {
            N += 2, Q++;
            do
              ;
            while (fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && fe[++N] === fe[++Q] && N < Le);
            if (F = re - (Le - N), N = Le - re, ne < F) {
              if (S.match_start = Y, se <= (ne = F))
                break;
              gt = fe[N + ne - 1], it = fe[N + ne];
            }
          }
        while ((Y = Ce[Y & we]) > X && --O != 0);
        return ne <= S.lookahead ? ne : S.lookahead;
      }
      function M(S) {
        var Y, Q, F, O, N, ne, se, X, fe, we, Ce = S.w_size;
        do {
          if (O = S.window_size - S.lookahead - S.strstart, S.strstart >= Ce + (Ce - he)) {
            for (o.arraySet(S.window, S.window, Ce, Ce, 0), S.match_start -= Ce, S.strstart -= Ce, S.block_start -= Ce, Y = Q = S.hash_size; F = S.head[--Y], S.head[Y] = Ce <= F ? F - Ce : 0, --Q; )
              ;
            for (Y = Q = Ce; F = S.prev[--Y], S.prev[Y] = Ce <= F ? F - Ce : 0, --Q; )
              ;
            O += Ce;
          }
          if (S.strm.avail_in === 0)
            break;
          if (ne = S.strm, se = S.window, X = S.strstart + S.lookahead, fe = O, we = void 0, we = ne.avail_in, fe < we && (we = fe), Q = we === 0 ? 0 : (ne.avail_in -= we, o.arraySet(se, ne.input, ne.next_in, we, X), ne.state.wrap === 1 ? ne.adler = l(ne.adler, se, we, X) : ne.state.wrap === 2 && (ne.adler = u(ne.adler, se, we, X)), ne.next_in += we, ne.total_in += we, we), S.lookahead += Q, S.lookahead + S.insert >= z)
            for (N = S.strstart - S.insert, S.ins_h = S.window[N], S.ins_h = (S.ins_h << S.hash_shift ^ S.window[N + 1]) & S.hash_mask; S.insert && (S.ins_h = (S.ins_h << S.hash_shift ^ S.window[N + z - 1]) & S.hash_mask, S.prev[N & S.w_mask] = S.head[S.ins_h], S.head[S.ins_h] = N, N++, S.insert--, !(S.lookahead + S.insert < z)); )
              ;
        } while (S.lookahead < he && S.strm.avail_in !== 0);
      }
      function W(S, Y) {
        for (var Q, F; ; ) {
          if (S.lookahead < he) {
            if (M(S), S.lookahead < he && Y === c)
              return E;
            if (S.lookahead === 0)
              break;
          }
          if (Q = 0, S.lookahead >= z && (S.ins_h = (S.ins_h << S.hash_shift ^ S.window[S.strstart + z - 1]) & S.hash_mask, Q = S.prev[S.strstart & S.w_mask] = S.head[S.ins_h], S.head[S.ins_h] = S.strstart), Q !== 0 && S.strstart - Q <= S.w_size - he && (S.match_length = D(S, Q)), S.match_length >= z)
            if (F = s._tr_tally(S, S.strstart - S.match_start, S.match_length - z), S.lookahead -= S.match_length, S.match_length <= S.max_lazy_match && S.lookahead >= z) {
              for (S.match_length--; S.strstart++, S.ins_h = (S.ins_h << S.hash_shift ^ S.window[S.strstart + z - 1]) & S.hash_mask, Q = S.prev[S.strstart & S.w_mask] = S.head[S.ins_h], S.head[S.ins_h] = S.strstart, --S.match_length != 0; )
                ;
              S.strstart++;
            } else
              S.strstart += S.match_length, S.match_length = 0, S.ins_h = S.window[S.strstart], S.ins_h = (S.ins_h << S.hash_shift ^ S.window[S.strstart + 1]) & S.hash_mask;
          else
            F = s._tr_tally(S, 0, S.window[S.strstart]), S.lookahead--, S.strstart++;
          if (F && (te(S, !1), S.strm.avail_out === 0))
            return E;
        }
        return S.insert = S.strstart < z - 1 ? S.strstart : z - 1, Y === h ? (te(S, !0), S.strm.avail_out === 0 ? Oe : pe) : S.last_lit && (te(S, !1), S.strm.avail_out === 0) ? E : J;
      }
      function L(S, Y) {
        for (var Q, F, O; ; ) {
          if (S.lookahead < he) {
            if (M(S), S.lookahead < he && Y === c)
              return E;
            if (S.lookahead === 0)
              break;
          }
          if (Q = 0, S.lookahead >= z && (S.ins_h = (S.ins_h << S.hash_shift ^ S.window[S.strstart + z - 1]) & S.hash_mask, Q = S.prev[S.strstart & S.w_mask] = S.head[S.ins_h], S.head[S.ins_h] = S.strstart), S.prev_length = S.match_length, S.prev_match = S.match_start, S.match_length = z - 1, Q !== 0 && S.prev_length < S.max_lazy_match && S.strstart - Q <= S.w_size - he && (S.match_length = D(S, Q), S.match_length <= 5 && (S.strategy === 1 || S.match_length === z && 4096 < S.strstart - S.match_start) && (S.match_length = z - 1)), S.prev_length >= z && S.match_length <= S.prev_length) {
            for (O = S.strstart + S.lookahead - z, F = s._tr_tally(S, S.strstart - 1 - S.prev_match, S.prev_length - z), S.lookahead -= S.prev_length - 1, S.prev_length -= 2; ++S.strstart <= O && (S.ins_h = (S.ins_h << S.hash_shift ^ S.window[S.strstart + z - 1]) & S.hash_mask, Q = S.prev[S.strstart & S.w_mask] = S.head[S.ins_h], S.head[S.ins_h] = S.strstart), --S.prev_length != 0; )
              ;
            if (S.match_available = 0, S.match_length = z - 1, S.strstart++, F && (te(S, !1), S.strm.avail_out === 0))
              return E;
          } else if (S.match_available) {
            if ((F = s._tr_tally(S, 0, S.window[S.strstart - 1])) && te(S, !1), S.strstart++, S.lookahead--, S.strm.avail_out === 0)
              return E;
          } else
            S.match_available = 1, S.strstart++, S.lookahead--;
        }
        return S.match_available && (F = s._tr_tally(S, 0, S.window[S.strstart - 1]), S.match_available = 0), S.insert = S.strstart < z - 1 ? S.strstart : z - 1, Y === h ? (te(S, !0), S.strm.avail_out === 0 ? Oe : pe) : S.last_lit && (te(S, !1), S.strm.avail_out === 0) ? E : J;
      }
      function G(S, Y, Q, F, O) {
        this.good_length = S, this.max_lazy = Y, this.nice_length = Q, this.max_chain = F, this.func = O;
      }
      function le() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = b, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new o.Buf16(2 * K), this.dyn_dtree = new o.Buf16(2 * (2 * k + 1)), this.bl_tree = new o.Buf16(2 * (2 * H + 1)), Ve(this.dyn_ltree), Ve(this.dyn_dtree), Ve(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new o.Buf16(j + 1), this.heap = new o.Buf16(2 * R + 1), Ve(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new o.Buf16(2 * R + 1), Ve(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }
      function de(S) {
        var Y;
        return S && S.state ? (S.total_in = S.total_out = 0, S.data_type = C, (Y = S.state).pending = 0, Y.pending_out = 0, Y.wrap < 0 && (Y.wrap = -Y.wrap), Y.status = Y.wrap ? P : V, S.adler = Y.wrap === 2 ? 0 : 1, Y.last_flush = c, s._tr_init(Y), p) : Ue(S, f);
      }
      function me(S) {
        var Y = de(S);
        return Y === p && function(Q) {
          Q.window_size = 2 * Q.w_size, Ve(Q.head), Q.max_lazy_match = a[Q.level].max_lazy, Q.good_match = a[Q.level].good_length, Q.nice_match = a[Q.level].nice_length, Q.max_chain_length = a[Q.level].max_chain, Q.strstart = 0, Q.block_start = 0, Q.lookahead = 0, Q.insert = 0, Q.match_length = Q.prev_length = z - 1, Q.match_available = 0, Q.ins_h = 0;
        }(S.state), Y;
      }
      function Ee(S, Y, Q, F, O, N) {
        if (!S)
          return f;
        var ne = 1;
        if (Y === v && (Y = 6), F < 0 ? (ne = 0, F = -F) : 15 < F && (ne = 2, F -= 16), O < 1 || A < O || Q !== b || F < 8 || 15 < F || Y < 0 || 9 < Y || N < 0 || m < N)
          return Ue(S, f);
        F === 8 && (F = 9);
        var se = new le();
        return (S.state = se).strm = S, se.wrap = ne, se.gzhead = null, se.w_bits = F, se.w_size = 1 << se.w_bits, se.w_mask = se.w_size - 1, se.hash_bits = O + 7, se.hash_size = 1 << se.hash_bits, se.hash_mask = se.hash_size - 1, se.hash_shift = ~~((se.hash_bits + z - 1) / z), se.window = new o.Buf8(2 * se.w_size), se.head = new o.Buf16(se.hash_size), se.prev = new o.Buf16(se.w_size), se.lit_bufsize = 1 << O + 6, se.pending_buf_size = 4 * se.lit_bufsize, se.pending_buf = new o.Buf8(se.pending_buf_size), se.d_buf = 1 * se.lit_bufsize, se.l_buf = 3 * se.lit_bufsize, se.level = Y, se.strategy = N, se.method = Q, me(S);
      }
      a = [new G(0, 0, 0, 0, function(S, Y) {
        var Q = 65535;
        for (Q > S.pending_buf_size - 5 && (Q = S.pending_buf_size - 5); ; ) {
          if (S.lookahead <= 1) {
            if (M(S), S.lookahead === 0 && Y === c)
              return E;
            if (S.lookahead === 0)
              break;
          }
          S.strstart += S.lookahead, S.lookahead = 0;
          var F = S.block_start + Q;
          if ((S.strstart === 0 || S.strstart >= F) && (S.lookahead = S.strstart - F, S.strstart = F, te(S, !1), S.strm.avail_out === 0) || S.strstart - S.block_start >= S.w_size - he && (te(S, !1), S.strm.avail_out === 0))
            return E;
        }
        return S.insert = 0, Y === h ? (te(S, !0), S.strm.avail_out === 0 ? Oe : pe) : (S.strstart > S.block_start && (te(S, !1), S.strm.avail_out), E);
      }), new G(4, 4, 8, 4, W), new G(4, 5, 16, 8, W), new G(4, 6, 32, 32, W), new G(4, 4, 16, 16, L), new G(8, 16, 32, 32, L), new G(8, 16, 128, 128, L), new G(8, 32, 128, 256, L), new G(32, 128, 258, 1024, L), new G(32, 258, 258, 4096, L)], r.deflateInit = function(S, Y) {
        return Ee(S, Y, b, 15, 8, 0);
      }, r.deflateInit2 = Ee, r.deflateReset = me, r.deflateResetKeep = de, r.deflateSetHeader = function(S, Y) {
        return S && S.state ? S.state.wrap !== 2 ? f : (S.state.gzhead = Y, p) : f;
      }, r.deflate = function(S, Y) {
        var Q, F, O, N;
        if (!S || !S.state || 5 < Y || Y < 0)
          return S ? Ue(S, f) : f;
        if (F = S.state, !S.output || !S.input && S.avail_in !== 0 || F.status === 666 && Y !== h)
          return Ue(S, S.avail_out === 0 ? -5 : f);
        if (F.strm = S, Q = F.last_flush, F.last_flush = Y, F.status === P)
          if (F.wrap === 2)
            S.adler = 0, y(F, 31), y(F, 139), y(F, 8), F.gzhead ? (y(F, (F.gzhead.text ? 1 : 0) + (F.gzhead.hcrc ? 2 : 0) + (F.gzhead.extra ? 4 : 0) + (F.gzhead.name ? 8 : 0) + (F.gzhead.comment ? 16 : 0)), y(F, 255 & F.gzhead.time), y(F, F.gzhead.time >> 8 & 255), y(F, F.gzhead.time >> 16 & 255), y(F, F.gzhead.time >> 24 & 255), y(F, F.level === 9 ? 2 : 2 <= F.strategy || F.level < 2 ? 4 : 0), y(F, 255 & F.gzhead.os), F.gzhead.extra && F.gzhead.extra.length && (y(F, 255 & F.gzhead.extra.length), y(F, F.gzhead.extra.length >> 8 & 255)), F.gzhead.hcrc && (S.adler = u(S.adler, F.pending_buf, F.pending, 0)), F.gzindex = 0, F.status = 69) : (y(F, 0), y(F, 0), y(F, 0), y(F, 0), y(F, 0), y(F, F.level === 9 ? 2 : 2 <= F.strategy || F.level < 2 ? 4 : 0), y(F, 3), F.status = V);
          else {
            var ne = b + (F.w_bits - 8 << 4) << 8;
            ne |= (2 <= F.strategy || F.level < 2 ? 0 : F.level < 6 ? 1 : F.level === 6 ? 2 : 3) << 6, F.strstart !== 0 && (ne |= 32), ne += 31 - ne % 31, F.status = V, I(F, ne), F.strstart !== 0 && (I(F, S.adler >>> 16), I(F, 65535 & S.adler)), S.adler = 1;
          }
        if (F.status === 69)
          if (F.gzhead.extra) {
            for (O = F.pending; F.gzindex < (65535 & F.gzhead.extra.length) && (F.pending !== F.pending_buf_size || (F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), ie(S), O = F.pending, F.pending !== F.pending_buf_size)); )
              y(F, 255 & F.gzhead.extra[F.gzindex]), F.gzindex++;
            F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), F.gzindex === F.gzhead.extra.length && (F.gzindex = 0, F.status = 73);
          } else
            F.status = 73;
        if (F.status === 73)
          if (F.gzhead.name) {
            O = F.pending;
            do {
              if (F.pending === F.pending_buf_size && (F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), ie(S), O = F.pending, F.pending === F.pending_buf_size)) {
                N = 1;
                break;
              }
              N = F.gzindex < F.gzhead.name.length ? 255 & F.gzhead.name.charCodeAt(F.gzindex++) : 0, y(F, N);
            } while (N !== 0);
            F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), N === 0 && (F.gzindex = 0, F.status = 91);
          } else
            F.status = 91;
        if (F.status === 91)
          if (F.gzhead.comment) {
            O = F.pending;
            do {
              if (F.pending === F.pending_buf_size && (F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), ie(S), O = F.pending, F.pending === F.pending_buf_size)) {
                N = 1;
                break;
              }
              N = F.gzindex < F.gzhead.comment.length ? 255 & F.gzhead.comment.charCodeAt(F.gzindex++) : 0, y(F, N);
            } while (N !== 0);
            F.gzhead.hcrc && F.pending > O && (S.adler = u(S.adler, F.pending_buf, F.pending - O, O)), N === 0 && (F.status = 103);
          } else
            F.status = 103;
        if (F.status === 103 && (F.gzhead.hcrc ? (F.pending + 2 > F.pending_buf_size && ie(S), F.pending + 2 <= F.pending_buf_size && (y(F, 255 & S.adler), y(F, S.adler >> 8 & 255), S.adler = 0, F.status = V)) : F.status = V), F.pending !== 0) {
          if (ie(S), S.avail_out === 0)
            return F.last_flush = -1, p;
        } else if (S.avail_in === 0 && _e(Y) <= _e(Q) && Y !== h)
          return Ue(S, -5);
        if (F.status === 666 && S.avail_in !== 0)
          return Ue(S, -5);
        if (S.avail_in !== 0 || F.lookahead !== 0 || Y !== c && F.status !== 666) {
          var se = F.strategy === 2 ? function(X, fe) {
            for (var we; ; ) {
              if (X.lookahead === 0 && (M(X), X.lookahead === 0)) {
                if (fe === c)
                  return E;
                break;
              }
              if (X.match_length = 0, we = s._tr_tally(X, 0, X.window[X.strstart]), X.lookahead--, X.strstart++, we && (te(X, !1), X.strm.avail_out === 0))
                return E;
            }
            return X.insert = 0, fe === h ? (te(X, !0), X.strm.avail_out === 0 ? Oe : pe) : X.last_lit && (te(X, !1), X.strm.avail_out === 0) ? E : J;
          }(F, Y) : F.strategy === 3 ? function(X, fe) {
            for (var we, Ce, Le, gt, it = X.window; ; ) {
              if (X.lookahead <= re) {
                if (M(X), X.lookahead <= re && fe === c)
                  return E;
                if (X.lookahead === 0)
                  break;
              }
              if (X.match_length = 0, X.lookahead >= z && 0 < X.strstart && (Ce = it[Le = X.strstart - 1]) === it[++Le] && Ce === it[++Le] && Ce === it[++Le]) {
                gt = X.strstart + re;
                do
                  ;
                while (Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Ce === it[++Le] && Le < gt);
                X.match_length = re - (gt - Le), X.match_length > X.lookahead && (X.match_length = X.lookahead);
              }
              if (X.match_length >= z ? (we = s._tr_tally(X, 1, X.match_length - z), X.lookahead -= X.match_length, X.strstart += X.match_length, X.match_length = 0) : (we = s._tr_tally(X, 0, X.window[X.strstart]), X.lookahead--, X.strstart++), we && (te(X, !1), X.strm.avail_out === 0))
                return E;
            }
            return X.insert = 0, fe === h ? (te(X, !0), X.strm.avail_out === 0 ? Oe : pe) : X.last_lit && (te(X, !1), X.strm.avail_out === 0) ? E : J;
          }(F, Y) : a[F.level].func(F, Y);
          if (se !== Oe && se !== pe || (F.status = 666), se === E || se === Oe)
            return S.avail_out === 0 && (F.last_flush = -1), p;
          if (se === J && (Y === 1 ? s._tr_align(F) : Y !== 5 && (s._tr_stored_block(F, 0, 0, !1), Y === 3 && (Ve(F.head), F.lookahead === 0 && (F.strstart = 0, F.block_start = 0, F.insert = 0))), ie(S), S.avail_out === 0))
            return F.last_flush = -1, p;
        }
        return Y !== h ? p : F.wrap <= 0 ? 1 : (F.wrap === 2 ? (y(F, 255 & S.adler), y(F, S.adler >> 8 & 255), y(F, S.adler >> 16 & 255), y(F, S.adler >> 24 & 255), y(F, 255 & S.total_in), y(F, S.total_in >> 8 & 255), y(F, S.total_in >> 16 & 255), y(F, S.total_in >> 24 & 255)) : (I(F, S.adler >>> 16), I(F, 65535 & S.adler)), ie(S), 0 < F.wrap && (F.wrap = -F.wrap), F.pending !== 0 ? p : 1);
      }, r.deflateEnd = function(S) {
        var Y;
        return S && S.state ? (Y = S.state.status) !== P && Y !== 69 && Y !== 73 && Y !== 91 && Y !== 103 && Y !== V && Y !== 666 ? Ue(S, f) : (S.state = null, Y === V ? Ue(S, -3) : p) : f;
      }, r.deflateSetDictionary = function(S, Y) {
        var Q, F, O, N, ne, se, X, fe, we = Y.length;
        if (!S || !S.state || (N = (Q = S.state).wrap) === 2 || N === 1 && Q.status !== P || Q.lookahead)
          return f;
        for (N === 1 && (S.adler = l(S.adler, Y, we, 0)), Q.wrap = 0, we >= Q.w_size && (N === 0 && (Ve(Q.head), Q.strstart = 0, Q.block_start = 0, Q.insert = 0), fe = new o.Buf8(Q.w_size), o.arraySet(fe, Y, we - Q.w_size, Q.w_size, 0), Y = fe, we = Q.w_size), ne = S.avail_in, se = S.next_in, X = S.input, S.avail_in = we, S.next_in = 0, S.input = Y, M(Q); Q.lookahead >= z; ) {
          for (F = Q.strstart, O = Q.lookahead - (z - 1); Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[F + z - 1]) & Q.hash_mask, Q.prev[F & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = F, F++, --O; )
            ;
          Q.strstart = F, Q.lookahead = z - 1, M(Q);
        }
        return Q.strstart += Q.lookahead, Q.block_start = Q.strstart, Q.insert = Q.lookahead, Q.lookahead = 0, Q.match_length = Q.prev_length = z - 1, Q.match_available = 0, S.next_in = se, S.input = X, S.avail_in = ne, Q.wrap = N, p;
      }, r.deflateInfo = "pako deflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(i, n, r) {
      n.exports = function() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
      };
    }, {}], 48: [function(i, n, r) {
      n.exports = function(a, o) {
        var s, l, u, d, c, h, p, f, v, m, C, b, A, R, k, H, K, j, z, re, he, P, V, E, J;
        s = a.state, l = a.next_in, E = a.input, u = l + (a.avail_in - 5), d = a.next_out, J = a.output, c = d - (o - a.avail_out), h = d + (a.avail_out - 257), p = s.dmax, f = s.wsize, v = s.whave, m = s.wnext, C = s.window, b = s.hold, A = s.bits, R = s.lencode, k = s.distcode, H = (1 << s.lenbits) - 1, K = (1 << s.distbits) - 1;
        e:
          do {
            A < 15 && (b += E[l++] << A, A += 8, b += E[l++] << A, A += 8), j = R[b & H];
            t:
              for (; ; ) {
                if (b >>>= z = j >>> 24, A -= z, (z = j >>> 16 & 255) === 0)
                  J[d++] = 65535 & j;
                else {
                  if (!(16 & z)) {
                    if (!(64 & z)) {
                      j = R[(65535 & j) + (b & (1 << z) - 1)];
                      continue t;
                    }
                    if (32 & z) {
                      s.mode = 12;
                      break e;
                    }
                    a.msg = "invalid literal/length code", s.mode = 30;
                    break e;
                  }
                  re = 65535 & j, (z &= 15) && (A < z && (b += E[l++] << A, A += 8), re += b & (1 << z) - 1, b >>>= z, A -= z), A < 15 && (b += E[l++] << A, A += 8, b += E[l++] << A, A += 8), j = k[b & K];
                  i:
                    for (; ; ) {
                      if (b >>>= z = j >>> 24, A -= z, !(16 & (z = j >>> 16 & 255))) {
                        if (!(64 & z)) {
                          j = k[(65535 & j) + (b & (1 << z) - 1)];
                          continue i;
                        }
                        a.msg = "invalid distance code", s.mode = 30;
                        break e;
                      }
                      if (he = 65535 & j, A < (z &= 15) && (b += E[l++] << A, (A += 8) < z && (b += E[l++] << A, A += 8)), p < (he += b & (1 << z) - 1)) {
                        a.msg = "invalid distance too far back", s.mode = 30;
                        break e;
                      }
                      if (b >>>= z, A -= z, (z = d - c) < he) {
                        if (v < (z = he - z) && s.sane) {
                          a.msg = "invalid distance too far back", s.mode = 30;
                          break e;
                        }
                        if (V = C, (P = 0) === m) {
                          if (P += f - z, z < re) {
                            for (re -= z; J[d++] = C[P++], --z; )
                              ;
                            P = d - he, V = J;
                          }
                        } else if (m < z) {
                          if (P += f + m - z, (z -= m) < re) {
                            for (re -= z; J[d++] = C[P++], --z; )
                              ;
                            if (P = 0, m < re) {
                              for (re -= z = m; J[d++] = C[P++], --z; )
                                ;
                              P = d - he, V = J;
                            }
                          }
                        } else if (P += m - z, z < re) {
                          for (re -= z; J[d++] = C[P++], --z; )
                            ;
                          P = d - he, V = J;
                        }
                        for (; 2 < re; )
                          J[d++] = V[P++], J[d++] = V[P++], J[d++] = V[P++], re -= 3;
                        re && (J[d++] = V[P++], 1 < re && (J[d++] = V[P++]));
                      } else {
                        for (P = d - he; J[d++] = J[P++], J[d++] = J[P++], J[d++] = J[P++], 2 < (re -= 3); )
                          ;
                        re && (J[d++] = J[P++], 1 < re && (J[d++] = J[P++]));
                      }
                      break;
                    }
                }
                break;
              }
          } while (l < u && d < h);
        l -= re = A >> 3, b &= (1 << (A -= re << 3)) - 1, a.next_in = l, a.next_out = d, a.avail_in = l < u ? u - l + 5 : 5 - (l - u), a.avail_out = d < h ? h - d + 257 : 257 - (d - h), s.hold = b, s.bits = A;
      };
    }, {}], 49: [function(i, n, r) {
      var a = i("../utils/common"), o = i("./adler32"), s = i("./crc32"), l = i("./inffast"), u = i("./inftrees"), d = 1, c = 2, h = 0, p = -2, f = 1, v = 852, m = 592;
      function C(P) {
        return (P >>> 24 & 255) + (P >>> 8 & 65280) + ((65280 & P) << 8) + ((255 & P) << 24);
      }
      function b() {
        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new a.Buf16(320), this.work = new a.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function A(P) {
        var V;
        return P && P.state ? (V = P.state, P.total_in = P.total_out = V.total = 0, P.msg = "", V.wrap && (P.adler = 1 & V.wrap), V.mode = f, V.last = 0, V.havedict = 0, V.dmax = 32768, V.head = null, V.hold = 0, V.bits = 0, V.lencode = V.lendyn = new a.Buf32(v), V.distcode = V.distdyn = new a.Buf32(m), V.sane = 1, V.back = -1, h) : p;
      }
      function R(P) {
        var V;
        return P && P.state ? ((V = P.state).wsize = 0, V.whave = 0, V.wnext = 0, A(P)) : p;
      }
      function k(P, V) {
        var E, J;
        return P && P.state ? (J = P.state, V < 0 ? (E = 0, V = -V) : (E = 1 + (V >> 4), V < 48 && (V &= 15)), V && (V < 8 || 15 < V) ? p : (J.window !== null && J.wbits !== V && (J.window = null), J.wrap = E, J.wbits = V, R(P))) : p;
      }
      function H(P, V) {
        var E, J;
        return P ? (J = new b(), (P.state = J).window = null, (E = k(P, V)) !== h && (P.state = null), E) : p;
      }
      var K, j, z = !0;
      function re(P) {
        if (z) {
          var V;
          for (K = new a.Buf32(512), j = new a.Buf32(32), V = 0; V < 144; )
            P.lens[V++] = 8;
          for (; V < 256; )
            P.lens[V++] = 9;
          for (; V < 280; )
            P.lens[V++] = 7;
          for (; V < 288; )
            P.lens[V++] = 8;
          for (u(d, P.lens, 0, 288, K, 0, P.work, { bits: 9 }), V = 0; V < 32; )
            P.lens[V++] = 5;
          u(c, P.lens, 0, 32, j, 0, P.work, { bits: 5 }), z = !1;
        }
        P.lencode = K, P.lenbits = 9, P.distcode = j, P.distbits = 5;
      }
      function he(P, V, E, J) {
        var Oe, pe = P.state;
        return pe.window === null && (pe.wsize = 1 << pe.wbits, pe.wnext = 0, pe.whave = 0, pe.window = new a.Buf8(pe.wsize)), J >= pe.wsize ? (a.arraySet(pe.window, V, E - pe.wsize, pe.wsize, 0), pe.wnext = 0, pe.whave = pe.wsize) : (J < (Oe = pe.wsize - pe.wnext) && (Oe = J), a.arraySet(pe.window, V, E - J, Oe, pe.wnext), (J -= Oe) ? (a.arraySet(pe.window, V, E - J, J, 0), pe.wnext = J, pe.whave = pe.wsize) : (pe.wnext += Oe, pe.wnext === pe.wsize && (pe.wnext = 0), pe.whave < pe.wsize && (pe.whave += Oe))), 0;
      }
      r.inflateReset = R, r.inflateReset2 = k, r.inflateResetKeep = A, r.inflateInit = function(P) {
        return H(P, 15);
      }, r.inflateInit2 = H, r.inflate = function(P, V) {
        var E, J, Oe, pe, Ue, _e, Ve, ie, te, y, I, D, M, W, L, G, le, de, me, Ee, S, Y, Q, F, O = 0, N = new a.Buf8(4), ne = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!P || !P.state || !P.output || !P.input && P.avail_in !== 0)
          return p;
        (E = P.state).mode === 12 && (E.mode = 13), Ue = P.next_out, Oe = P.output, Ve = P.avail_out, pe = P.next_in, J = P.input, _e = P.avail_in, ie = E.hold, te = E.bits, y = _e, I = Ve, Y = h;
        e:
          for (; ; )
            switch (E.mode) {
              case f:
                if (E.wrap === 0) {
                  E.mode = 13;
                  break;
                }
                for (; te < 16; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if (2 & E.wrap && ie === 35615) {
                  N[E.check = 0] = 255 & ie, N[1] = ie >>> 8 & 255, E.check = s(E.check, N, 2, 0), te = ie = 0, E.mode = 2;
                  break;
                }
                if (E.flags = 0, E.head && (E.head.done = !1), !(1 & E.wrap) || (((255 & ie) << 8) + (ie >> 8)) % 31) {
                  P.msg = "incorrect header check", E.mode = 30;
                  break;
                }
                if ((15 & ie) != 8) {
                  P.msg = "unknown compression method", E.mode = 30;
                  break;
                }
                if (te -= 4, S = 8 + (15 & (ie >>>= 4)), E.wbits === 0)
                  E.wbits = S;
                else if (S > E.wbits) {
                  P.msg = "invalid window size", E.mode = 30;
                  break;
                }
                E.dmax = 1 << S, P.adler = E.check = 1, E.mode = 512 & ie ? 10 : 12, te = ie = 0;
                break;
              case 2:
                for (; te < 16; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if (E.flags = ie, (255 & E.flags) != 8) {
                  P.msg = "unknown compression method", E.mode = 30;
                  break;
                }
                if (57344 & E.flags) {
                  P.msg = "unknown header flags set", E.mode = 30;
                  break;
                }
                E.head && (E.head.text = ie >> 8 & 1), 512 & E.flags && (N[0] = 255 & ie, N[1] = ie >>> 8 & 255, E.check = s(E.check, N, 2, 0)), te = ie = 0, E.mode = 3;
              case 3:
                for (; te < 32; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                E.head && (E.head.time = ie), 512 & E.flags && (N[0] = 255 & ie, N[1] = ie >>> 8 & 255, N[2] = ie >>> 16 & 255, N[3] = ie >>> 24 & 255, E.check = s(E.check, N, 4, 0)), te = ie = 0, E.mode = 4;
              case 4:
                for (; te < 16; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                E.head && (E.head.xflags = 255 & ie, E.head.os = ie >> 8), 512 & E.flags && (N[0] = 255 & ie, N[1] = ie >>> 8 & 255, E.check = s(E.check, N, 2, 0)), te = ie = 0, E.mode = 5;
              case 5:
                if (1024 & E.flags) {
                  for (; te < 16; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  E.length = ie, E.head && (E.head.extra_len = ie), 512 & E.flags && (N[0] = 255 & ie, N[1] = ie >>> 8 & 255, E.check = s(E.check, N, 2, 0)), te = ie = 0;
                } else
                  E.head && (E.head.extra = null);
                E.mode = 6;
              case 6:
                if (1024 & E.flags && (_e < (D = E.length) && (D = _e), D && (E.head && (S = E.head.extra_len - E.length, E.head.extra || (E.head.extra = new Array(E.head.extra_len)), a.arraySet(E.head.extra, J, pe, D, S)), 512 & E.flags && (E.check = s(E.check, J, D, pe)), _e -= D, pe += D, E.length -= D), E.length))
                  break e;
                E.length = 0, E.mode = 7;
              case 7:
                if (2048 & E.flags) {
                  if (_e === 0)
                    break e;
                  for (D = 0; S = J[pe + D++], E.head && S && E.length < 65536 && (E.head.name += String.fromCharCode(S)), S && D < _e; )
                    ;
                  if (512 & E.flags && (E.check = s(E.check, J, D, pe)), _e -= D, pe += D, S)
                    break e;
                } else
                  E.head && (E.head.name = null);
                E.length = 0, E.mode = 8;
              case 8:
                if (4096 & E.flags) {
                  if (_e === 0)
                    break e;
                  for (D = 0; S = J[pe + D++], E.head && S && E.length < 65536 && (E.head.comment += String.fromCharCode(S)), S && D < _e; )
                    ;
                  if (512 & E.flags && (E.check = s(E.check, J, D, pe)), _e -= D, pe += D, S)
                    break e;
                } else
                  E.head && (E.head.comment = null);
                E.mode = 9;
              case 9:
                if (512 & E.flags) {
                  for (; te < 16; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  if (ie !== (65535 & E.check)) {
                    P.msg = "header crc mismatch", E.mode = 30;
                    break;
                  }
                  te = ie = 0;
                }
                E.head && (E.head.hcrc = E.flags >> 9 & 1, E.head.done = !0), P.adler = E.check = 0, E.mode = 12;
                break;
              case 10:
                for (; te < 32; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                P.adler = E.check = C(ie), te = ie = 0, E.mode = 11;
              case 11:
                if (E.havedict === 0)
                  return P.next_out = Ue, P.avail_out = Ve, P.next_in = pe, P.avail_in = _e, E.hold = ie, E.bits = te, 2;
                P.adler = E.check = 1, E.mode = 12;
              case 12:
                if (V === 5 || V === 6)
                  break e;
              case 13:
                if (E.last) {
                  ie >>>= 7 & te, te -= 7 & te, E.mode = 27;
                  break;
                }
                for (; te < 3; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                switch (E.last = 1 & ie, te -= 1, 3 & (ie >>>= 1)) {
                  case 0:
                    E.mode = 14;
                    break;
                  case 1:
                    if (re(E), E.mode = 20, V !== 6)
                      break;
                    ie >>>= 2, te -= 2;
                    break e;
                  case 2:
                    E.mode = 17;
                    break;
                  case 3:
                    P.msg = "invalid block type", E.mode = 30;
                }
                ie >>>= 2, te -= 2;
                break;
              case 14:
                for (ie >>>= 7 & te, te -= 7 & te; te < 32; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if ((65535 & ie) != (ie >>> 16 ^ 65535)) {
                  P.msg = "invalid stored block lengths", E.mode = 30;
                  break;
                }
                if (E.length = 65535 & ie, te = ie = 0, E.mode = 15, V === 6)
                  break e;
              case 15:
                E.mode = 16;
              case 16:
                if (D = E.length) {
                  if (_e < D && (D = _e), Ve < D && (D = Ve), D === 0)
                    break e;
                  a.arraySet(Oe, J, pe, D, Ue), _e -= D, pe += D, Ve -= D, Ue += D, E.length -= D;
                  break;
                }
                E.mode = 12;
                break;
              case 17:
                for (; te < 14; ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if (E.nlen = 257 + (31 & ie), ie >>>= 5, te -= 5, E.ndist = 1 + (31 & ie), ie >>>= 5, te -= 5, E.ncode = 4 + (15 & ie), ie >>>= 4, te -= 4, 286 < E.nlen || 30 < E.ndist) {
                  P.msg = "too many length or distance symbols", E.mode = 30;
                  break;
                }
                E.have = 0, E.mode = 18;
              case 18:
                for (; E.have < E.ncode; ) {
                  for (; te < 3; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  E.lens[ne[E.have++]] = 7 & ie, ie >>>= 3, te -= 3;
                }
                for (; E.have < 19; )
                  E.lens[ne[E.have++]] = 0;
                if (E.lencode = E.lendyn, E.lenbits = 7, Q = { bits: E.lenbits }, Y = u(0, E.lens, 0, 19, E.lencode, 0, E.work, Q), E.lenbits = Q.bits, Y) {
                  P.msg = "invalid code lengths set", E.mode = 30;
                  break;
                }
                E.have = 0, E.mode = 19;
              case 19:
                for (; E.have < E.nlen + E.ndist; ) {
                  for (; G = (O = E.lencode[ie & (1 << E.lenbits) - 1]) >>> 16 & 255, le = 65535 & O, !((L = O >>> 24) <= te); ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  if (le < 16)
                    ie >>>= L, te -= L, E.lens[E.have++] = le;
                  else {
                    if (le === 16) {
                      for (F = L + 2; te < F; ) {
                        if (_e === 0)
                          break e;
                        _e--, ie += J[pe++] << te, te += 8;
                      }
                      if (ie >>>= L, te -= L, E.have === 0) {
                        P.msg = "invalid bit length repeat", E.mode = 30;
                        break;
                      }
                      S = E.lens[E.have - 1], D = 3 + (3 & ie), ie >>>= 2, te -= 2;
                    } else if (le === 17) {
                      for (F = L + 3; te < F; ) {
                        if (_e === 0)
                          break e;
                        _e--, ie += J[pe++] << te, te += 8;
                      }
                      te -= L, S = 0, D = 3 + (7 & (ie >>>= L)), ie >>>= 3, te -= 3;
                    } else {
                      for (F = L + 7; te < F; ) {
                        if (_e === 0)
                          break e;
                        _e--, ie += J[pe++] << te, te += 8;
                      }
                      te -= L, S = 0, D = 11 + (127 & (ie >>>= L)), ie >>>= 7, te -= 7;
                    }
                    if (E.have + D > E.nlen + E.ndist) {
                      P.msg = "invalid bit length repeat", E.mode = 30;
                      break;
                    }
                    for (; D--; )
                      E.lens[E.have++] = S;
                  }
                }
                if (E.mode === 30)
                  break;
                if (E.lens[256] === 0) {
                  P.msg = "invalid code -- missing end-of-block", E.mode = 30;
                  break;
                }
                if (E.lenbits = 9, Q = { bits: E.lenbits }, Y = u(d, E.lens, 0, E.nlen, E.lencode, 0, E.work, Q), E.lenbits = Q.bits, Y) {
                  P.msg = "invalid literal/lengths set", E.mode = 30;
                  break;
                }
                if (E.distbits = 6, E.distcode = E.distdyn, Q = { bits: E.distbits }, Y = u(c, E.lens, E.nlen, E.ndist, E.distcode, 0, E.work, Q), E.distbits = Q.bits, Y) {
                  P.msg = "invalid distances set", E.mode = 30;
                  break;
                }
                if (E.mode = 20, V === 6)
                  break e;
              case 20:
                E.mode = 21;
              case 21:
                if (6 <= _e && 258 <= Ve) {
                  P.next_out = Ue, P.avail_out = Ve, P.next_in = pe, P.avail_in = _e, E.hold = ie, E.bits = te, l(P, I), Ue = P.next_out, Oe = P.output, Ve = P.avail_out, pe = P.next_in, J = P.input, _e = P.avail_in, ie = E.hold, te = E.bits, E.mode === 12 && (E.back = -1);
                  break;
                }
                for (E.back = 0; G = (O = E.lencode[ie & (1 << E.lenbits) - 1]) >>> 16 & 255, le = 65535 & O, !((L = O >>> 24) <= te); ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if (G && !(240 & G)) {
                  for (de = L, me = G, Ee = le; G = (O = E.lencode[Ee + ((ie & (1 << de + me) - 1) >> de)]) >>> 16 & 255, le = 65535 & O, !(de + (L = O >>> 24) <= te); ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  ie >>>= de, te -= de, E.back += de;
                }
                if (ie >>>= L, te -= L, E.back += L, E.length = le, G === 0) {
                  E.mode = 26;
                  break;
                }
                if (32 & G) {
                  E.back = -1, E.mode = 12;
                  break;
                }
                if (64 & G) {
                  P.msg = "invalid literal/length code", E.mode = 30;
                  break;
                }
                E.extra = 15 & G, E.mode = 22;
              case 22:
                if (E.extra) {
                  for (F = E.extra; te < F; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  E.length += ie & (1 << E.extra) - 1, ie >>>= E.extra, te -= E.extra, E.back += E.extra;
                }
                E.was = E.length, E.mode = 23;
              case 23:
                for (; G = (O = E.distcode[ie & (1 << E.distbits) - 1]) >>> 16 & 255, le = 65535 & O, !((L = O >>> 24) <= te); ) {
                  if (_e === 0)
                    break e;
                  _e--, ie += J[pe++] << te, te += 8;
                }
                if (!(240 & G)) {
                  for (de = L, me = G, Ee = le; G = (O = E.distcode[Ee + ((ie & (1 << de + me) - 1) >> de)]) >>> 16 & 255, le = 65535 & O, !(de + (L = O >>> 24) <= te); ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  ie >>>= de, te -= de, E.back += de;
                }
                if (ie >>>= L, te -= L, E.back += L, 64 & G) {
                  P.msg = "invalid distance code", E.mode = 30;
                  break;
                }
                E.offset = le, E.extra = 15 & G, E.mode = 24;
              case 24:
                if (E.extra) {
                  for (F = E.extra; te < F; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  E.offset += ie & (1 << E.extra) - 1, ie >>>= E.extra, te -= E.extra, E.back += E.extra;
                }
                if (E.offset > E.dmax) {
                  P.msg = "invalid distance too far back", E.mode = 30;
                  break;
                }
                E.mode = 25;
              case 25:
                if (Ve === 0)
                  break e;
                if (D = I - Ve, E.offset > D) {
                  if ((D = E.offset - D) > E.whave && E.sane) {
                    P.msg = "invalid distance too far back", E.mode = 30;
                    break;
                  }
                  M = D > E.wnext ? (D -= E.wnext, E.wsize - D) : E.wnext - D, D > E.length && (D = E.length), W = E.window;
                } else
                  W = Oe, M = Ue - E.offset, D = E.length;
                for (Ve < D && (D = Ve), Ve -= D, E.length -= D; Oe[Ue++] = W[M++], --D; )
                  ;
                E.length === 0 && (E.mode = 21);
                break;
              case 26:
                if (Ve === 0)
                  break e;
                Oe[Ue++] = E.length, Ve--, E.mode = 21;
                break;
              case 27:
                if (E.wrap) {
                  for (; te < 32; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie |= J[pe++] << te, te += 8;
                  }
                  if (I -= Ve, P.total_out += I, E.total += I, I && (P.adler = E.check = E.flags ? s(E.check, Oe, I, Ue - I) : o(E.check, Oe, I, Ue - I)), I = Ve, (E.flags ? ie : C(ie)) !== E.check) {
                    P.msg = "incorrect data check", E.mode = 30;
                    break;
                  }
                  te = ie = 0;
                }
                E.mode = 28;
              case 28:
                if (E.wrap && E.flags) {
                  for (; te < 32; ) {
                    if (_e === 0)
                      break e;
                    _e--, ie += J[pe++] << te, te += 8;
                  }
                  if (ie !== (4294967295 & E.total)) {
                    P.msg = "incorrect length check", E.mode = 30;
                    break;
                  }
                  te = ie = 0;
                }
                E.mode = 29;
              case 29:
                Y = 1;
                break e;
              case 30:
                Y = -3;
                break e;
              case 31:
                return -4;
              case 32:
              default:
                return p;
            }
        return P.next_out = Ue, P.avail_out = Ve, P.next_in = pe, P.avail_in = _e, E.hold = ie, E.bits = te, (E.wsize || I !== P.avail_out && E.mode < 30 && (E.mode < 27 || V !== 4)) && he(P, P.output, P.next_out, I - P.avail_out) ? (E.mode = 31, -4) : (y -= P.avail_in, I -= P.avail_out, P.total_in += y, P.total_out += I, E.total += I, E.wrap && I && (P.adler = E.check = E.flags ? s(E.check, Oe, I, P.next_out - I) : o(E.check, Oe, I, P.next_out - I)), P.data_type = E.bits + (E.last ? 64 : 0) + (E.mode === 12 ? 128 : 0) + (E.mode === 20 || E.mode === 15 ? 256 : 0), (y == 0 && I === 0 || V === 4) && Y === h && (Y = -5), Y);
      }, r.inflateEnd = function(P) {
        if (!P || !P.state)
          return p;
        var V = P.state;
        return V.window && (V.window = null), P.state = null, h;
      }, r.inflateGetHeader = function(P, V) {
        var E;
        return P && P.state && 2 & (E = P.state).wrap ? ((E.head = V).done = !1, h) : p;
      }, r.inflateSetDictionary = function(P, V) {
        var E, J = V.length;
        return P && P.state ? (E = P.state).wrap !== 0 && E.mode !== 11 ? p : E.mode === 11 && o(1, V, J, 0) !== E.check ? -3 : he(P, V, J, J) ? (E.mode = 31, -4) : (E.havedict = 1, h) : p;
      }, r.inflateInfo = "pako inflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(i, n, r) {
      var a = i("../utils/common"), o = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], s = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], l = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], u = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      n.exports = function(d, c, h, p, f, v, m, C) {
        var b, A, R, k, H, K, j, z, re, he = C.bits, P = 0, V = 0, E = 0, J = 0, Oe = 0, pe = 0, Ue = 0, _e = 0, Ve = 0, ie = 0, te = null, y = 0, I = new a.Buf16(16), D = new a.Buf16(16), M = null, W = 0;
        for (P = 0; P <= 15; P++)
          I[P] = 0;
        for (V = 0; V < p; V++)
          I[c[h + V]]++;
        for (Oe = he, J = 15; 1 <= J && I[J] === 0; J--)
          ;
        if (J < Oe && (Oe = J), J === 0)
          return f[v++] = 20971520, f[v++] = 20971520, C.bits = 1, 0;
        for (E = 1; E < J && I[E] === 0; E++)
          ;
        for (Oe < E && (Oe = E), P = _e = 1; P <= 15; P++)
          if (_e <<= 1, (_e -= I[P]) < 0)
            return -1;
        if (0 < _e && (d === 0 || J !== 1))
          return -1;
        for (D[1] = 0, P = 1; P < 15; P++)
          D[P + 1] = D[P] + I[P];
        for (V = 0; V < p; V++)
          c[h + V] !== 0 && (m[D[c[h + V]]++] = V);
        if (K = d === 0 ? (te = M = m, 19) : d === 1 ? (te = o, y -= 257, M = s, W -= 257, 256) : (te = l, M = u, -1), P = E, H = v, Ue = V = ie = 0, R = -1, k = (Ve = 1 << (pe = Oe)) - 1, d === 1 && 852 < Ve || d === 2 && 592 < Ve)
          return 1;
        for (; ; ) {
          for (j = P - Ue, re = m[V] < K ? (z = 0, m[V]) : m[V] > K ? (z = M[W + m[V]], te[y + m[V]]) : (z = 96, 0), b = 1 << P - Ue, E = A = 1 << pe; f[H + (ie >> Ue) + (A -= b)] = j << 24 | z << 16 | re | 0, A !== 0; )
            ;
          for (b = 1 << P - 1; ie & b; )
            b >>= 1;
          if (b !== 0 ? (ie &= b - 1, ie += b) : ie = 0, V++, --I[P] == 0) {
            if (P === J)
              break;
            P = c[h + m[V]];
          }
          if (Oe < P && (ie & k) !== R) {
            for (Ue === 0 && (Ue = Oe), H += E, _e = 1 << (pe = P - Ue); pe + Ue < J && !((_e -= I[pe + Ue]) <= 0); )
              pe++, _e <<= 1;
            if (Ve += 1 << pe, d === 1 && 852 < Ve || d === 2 && 592 < Ve)
              return 1;
            f[R = ie & k] = Oe << 24 | pe << 16 | H - v | 0;
          }
        }
        return ie !== 0 && (f[H + ie] = P - Ue << 24 | 64 << 16 | 0), C.bits = Oe, 0;
      };
    }, { "../utils/common": 41 }], 51: [function(i, n, r) {
      n.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
    }, {}], 52: [function(i, n, r) {
      var a = i("../utils/common"), o = 0, s = 1;
      function l(O) {
        for (var N = O.length; 0 <= --N; )
          O[N] = 0;
      }
      var u = 0, d = 29, c = 256, h = c + 1 + d, p = 30, f = 19, v = 2 * h + 1, m = 15, C = 16, b = 7, A = 256, R = 16, k = 17, H = 18, K = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], j = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], z = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], re = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], he = new Array(2 * (h + 2));
      l(he);
      var P = new Array(2 * p);
      l(P);
      var V = new Array(512);
      l(V);
      var E = new Array(256);
      l(E);
      var J = new Array(d);
      l(J);
      var Oe, pe, Ue, _e = new Array(p);
      function Ve(O, N, ne, se, X) {
        this.static_tree = O, this.extra_bits = N, this.extra_base = ne, this.elems = se, this.max_length = X, this.has_stree = O && O.length;
      }
      function ie(O, N) {
        this.dyn_tree = O, this.max_code = 0, this.stat_desc = N;
      }
      function te(O) {
        return O < 256 ? V[O] : V[256 + (O >>> 7)];
      }
      function y(O, N) {
        O.pending_buf[O.pending++] = 255 & N, O.pending_buf[O.pending++] = N >>> 8 & 255;
      }
      function I(O, N, ne) {
        O.bi_valid > C - ne ? (O.bi_buf |= N << O.bi_valid & 65535, y(O, O.bi_buf), O.bi_buf = N >> C - O.bi_valid, O.bi_valid += ne - C) : (O.bi_buf |= N << O.bi_valid & 65535, O.bi_valid += ne);
      }
      function D(O, N, ne) {
        I(O, ne[2 * N], ne[2 * N + 1]);
      }
      function M(O, N) {
        for (var ne = 0; ne |= 1 & O, O >>>= 1, ne <<= 1, 0 < --N; )
          ;
        return ne >>> 1;
      }
      function W(O, N, ne) {
        var se, X, fe = new Array(m + 1), we = 0;
        for (se = 1; se <= m; se++)
          fe[se] = we = we + ne[se - 1] << 1;
        for (X = 0; X <= N; X++) {
          var Ce = O[2 * X + 1];
          Ce !== 0 && (O[2 * X] = M(fe[Ce]++, Ce));
        }
      }
      function L(O) {
        var N;
        for (N = 0; N < h; N++)
          O.dyn_ltree[2 * N] = 0;
        for (N = 0; N < p; N++)
          O.dyn_dtree[2 * N] = 0;
        for (N = 0; N < f; N++)
          O.bl_tree[2 * N] = 0;
        O.dyn_ltree[2 * A] = 1, O.opt_len = O.static_len = 0, O.last_lit = O.matches = 0;
      }
      function G(O) {
        8 < O.bi_valid ? y(O, O.bi_buf) : 0 < O.bi_valid && (O.pending_buf[O.pending++] = O.bi_buf), O.bi_buf = 0, O.bi_valid = 0;
      }
      function le(O, N, ne, se) {
        var X = 2 * N, fe = 2 * ne;
        return O[X] < O[fe] || O[X] === O[fe] && se[N] <= se[ne];
      }
      function de(O, N, ne) {
        for (var se = O.heap[ne], X = ne << 1; X <= O.heap_len && (X < O.heap_len && le(N, O.heap[X + 1], O.heap[X], O.depth) && X++, !le(N, se, O.heap[X], O.depth)); )
          O.heap[ne] = O.heap[X], ne = X, X <<= 1;
        O.heap[ne] = se;
      }
      function me(O, N, ne) {
        var se, X, fe, we, Ce = 0;
        if (O.last_lit !== 0)
          for (; se = O.pending_buf[O.d_buf + 2 * Ce] << 8 | O.pending_buf[O.d_buf + 2 * Ce + 1], X = O.pending_buf[O.l_buf + Ce], Ce++, se === 0 ? D(O, X, N) : (D(O, (fe = E[X]) + c + 1, N), (we = K[fe]) !== 0 && I(O, X -= J[fe], we), D(O, fe = te(--se), ne), (we = j[fe]) !== 0 && I(O, se -= _e[fe], we)), Ce < O.last_lit; )
            ;
        D(O, A, N);
      }
      function Ee(O, N) {
        var ne, se, X, fe = N.dyn_tree, we = N.stat_desc.static_tree, Ce = N.stat_desc.has_stree, Le = N.stat_desc.elems, gt = -1;
        for (O.heap_len = 0, O.heap_max = v, ne = 0; ne < Le; ne++)
          fe[2 * ne] !== 0 ? (O.heap[++O.heap_len] = gt = ne, O.depth[ne] = 0) : fe[2 * ne + 1] = 0;
        for (; O.heap_len < 2; )
          fe[2 * (X = O.heap[++O.heap_len] = gt < 2 ? ++gt : 0)] = 1, O.depth[X] = 0, O.opt_len--, Ce && (O.static_len -= we[2 * X + 1]);
        for (N.max_code = gt, ne = O.heap_len >> 1; 1 <= ne; ne--)
          de(O, fe, ne);
        for (X = Le; ne = O.heap[1], O.heap[1] = O.heap[O.heap_len--], de(O, fe, 1), se = O.heap[1], O.heap[--O.heap_max] = ne, O.heap[--O.heap_max] = se, fe[2 * X] = fe[2 * ne] + fe[2 * se], O.depth[X] = (O.depth[ne] >= O.depth[se] ? O.depth[ne] : O.depth[se]) + 1, fe[2 * ne + 1] = fe[2 * se + 1] = X, O.heap[1] = X++, de(O, fe, 1), 2 <= O.heap_len; )
          ;
        O.heap[--O.heap_max] = O.heap[1], function(it, Di) {
          var qo, on, Xo, Rt, Zl, vh, Tn = Di.dyn_tree, Pm = Di.max_code, KB = Di.stat_desc.static_tree, UB = Di.stat_desc.has_stree, jB = Di.stat_desc.extra_bits, Mm = Di.stat_desc.extra_base, Yo = Di.stat_desc.max_length, Ql = 0;
          for (Rt = 0; Rt <= m; Rt++)
            it.bl_count[Rt] = 0;
          for (Tn[2 * it.heap[it.heap_max] + 1] = 0, qo = it.heap_max + 1; qo < v; qo++)
            Yo < (Rt = Tn[2 * Tn[2 * (on = it.heap[qo]) + 1] + 1] + 1) && (Rt = Yo, Ql++), Tn[2 * on + 1] = Rt, Pm < on || (it.bl_count[Rt]++, Zl = 0, Mm <= on && (Zl = jB[on - Mm]), vh = Tn[2 * on], it.opt_len += vh * (Rt + Zl), UB && (it.static_len += vh * (KB[2 * on + 1] + Zl)));
          if (Ql !== 0) {
            do {
              for (Rt = Yo - 1; it.bl_count[Rt] === 0; )
                Rt--;
              it.bl_count[Rt]--, it.bl_count[Rt + 1] += 2, it.bl_count[Yo]--, Ql -= 2;
            } while (0 < Ql);
            for (Rt = Yo; Rt !== 0; Rt--)
              for (on = it.bl_count[Rt]; on !== 0; )
                Pm < (Xo = it.heap[--qo]) || (Tn[2 * Xo + 1] !== Rt && (it.opt_len += (Rt - Tn[2 * Xo + 1]) * Tn[2 * Xo], Tn[2 * Xo + 1] = Rt), on--);
          }
        }(O, N), W(fe, gt, O.bl_count);
      }
      function S(O, N, ne) {
        var se, X, fe = -1, we = N[1], Ce = 0, Le = 7, gt = 4;
        for (we === 0 && (Le = 138, gt = 3), N[2 * (ne + 1) + 1] = 65535, se = 0; se <= ne; se++)
          X = we, we = N[2 * (se + 1) + 1], ++Ce < Le && X === we || (Ce < gt ? O.bl_tree[2 * X] += Ce : X !== 0 ? (X !== fe && O.bl_tree[2 * X]++, O.bl_tree[2 * R]++) : Ce <= 10 ? O.bl_tree[2 * k]++ : O.bl_tree[2 * H]++, fe = X, gt = (Ce = 0) === we ? (Le = 138, 3) : X === we ? (Le = 6, 3) : (Le = 7, 4));
      }
      function Y(O, N, ne) {
        var se, X, fe = -1, we = N[1], Ce = 0, Le = 7, gt = 4;
        for (we === 0 && (Le = 138, gt = 3), se = 0; se <= ne; se++)
          if (X = we, we = N[2 * (se + 1) + 1], !(++Ce < Le && X === we)) {
            if (Ce < gt)
              for (; D(O, X, O.bl_tree), --Ce != 0; )
                ;
            else
              X !== 0 ? (X !== fe && (D(O, X, O.bl_tree), Ce--), D(O, R, O.bl_tree), I(O, Ce - 3, 2)) : Ce <= 10 ? (D(O, k, O.bl_tree), I(O, Ce - 3, 3)) : (D(O, H, O.bl_tree), I(O, Ce - 11, 7));
            fe = X, gt = (Ce = 0) === we ? (Le = 138, 3) : X === we ? (Le = 6, 3) : (Le = 7, 4);
          }
      }
      l(_e);
      var Q = !1;
      function F(O, N, ne, se) {
        I(O, (u << 1) + (se ? 1 : 0), 3), function(X, fe, we, Ce) {
          G(X), Ce && (y(X, we), y(X, ~we)), a.arraySet(X.pending_buf, X.window, fe, we, X.pending), X.pending += we;
        }(O, N, ne, !0);
      }
      r._tr_init = function(O) {
        Q || (function() {
          var N, ne, se, X, fe, we = new Array(m + 1);
          for (X = se = 0; X < d - 1; X++)
            for (J[X] = se, N = 0; N < 1 << K[X]; N++)
              E[se++] = X;
          for (E[se - 1] = X, X = fe = 0; X < 16; X++)
            for (_e[X] = fe, N = 0; N < 1 << j[X]; N++)
              V[fe++] = X;
          for (fe >>= 7; X < p; X++)
            for (_e[X] = fe << 7, N = 0; N < 1 << j[X] - 7; N++)
              V[256 + fe++] = X;
          for (ne = 0; ne <= m; ne++)
            we[ne] = 0;
          for (N = 0; N <= 143; )
            he[2 * N + 1] = 8, N++, we[8]++;
          for (; N <= 255; )
            he[2 * N + 1] = 9, N++, we[9]++;
          for (; N <= 279; )
            he[2 * N + 1] = 7, N++, we[7]++;
          for (; N <= 287; )
            he[2 * N + 1] = 8, N++, we[8]++;
          for (W(he, h + 1, we), N = 0; N < p; N++)
            P[2 * N + 1] = 5, P[2 * N] = M(N, 5);
          Oe = new Ve(he, K, c + 1, h, m), pe = new Ve(P, j, 0, p, m), Ue = new Ve(new Array(0), z, 0, f, b);
        }(), Q = !0), O.l_desc = new ie(O.dyn_ltree, Oe), O.d_desc = new ie(O.dyn_dtree, pe), O.bl_desc = new ie(O.bl_tree, Ue), O.bi_buf = 0, O.bi_valid = 0, L(O);
      }, r._tr_stored_block = F, r._tr_flush_block = function(O, N, ne, se) {
        var X, fe, we = 0;
        0 < O.level ? (O.strm.data_type === 2 && (O.strm.data_type = function(Ce) {
          var Le, gt = 4093624447;
          for (Le = 0; Le <= 31; Le++, gt >>>= 1)
            if (1 & gt && Ce.dyn_ltree[2 * Le] !== 0)
              return o;
          if (Ce.dyn_ltree[18] !== 0 || Ce.dyn_ltree[20] !== 0 || Ce.dyn_ltree[26] !== 0)
            return s;
          for (Le = 32; Le < c; Le++)
            if (Ce.dyn_ltree[2 * Le] !== 0)
              return s;
          return o;
        }(O)), Ee(O, O.l_desc), Ee(O, O.d_desc), we = function(Ce) {
          var Le;
          for (S(Ce, Ce.dyn_ltree, Ce.l_desc.max_code), S(Ce, Ce.dyn_dtree, Ce.d_desc.max_code), Ee(Ce, Ce.bl_desc), Le = f - 1; 3 <= Le && Ce.bl_tree[2 * re[Le] + 1] === 0; Le--)
            ;
          return Ce.opt_len += 3 * (Le + 1) + 5 + 5 + 4, Le;
        }(O), X = O.opt_len + 3 + 7 >>> 3, (fe = O.static_len + 3 + 7 >>> 3) <= X && (X = fe)) : X = fe = ne + 5, ne + 4 <= X && N !== -1 ? F(O, N, ne, se) : O.strategy === 4 || fe === X ? (I(O, 2 + (se ? 1 : 0), 3), me(O, he, P)) : (I(O, 4 + (se ? 1 : 0), 3), function(Ce, Le, gt, it) {
          var Di;
          for (I(Ce, Le - 257, 5), I(Ce, gt - 1, 5), I(Ce, it - 4, 4), Di = 0; Di < it; Di++)
            I(Ce, Ce.bl_tree[2 * re[Di] + 1], 3);
          Y(Ce, Ce.dyn_ltree, Le - 1), Y(Ce, Ce.dyn_dtree, gt - 1);
        }(O, O.l_desc.max_code + 1, O.d_desc.max_code + 1, we + 1), me(O, O.dyn_ltree, O.dyn_dtree)), L(O), se && G(O);
      }, r._tr_tally = function(O, N, ne) {
        return O.pending_buf[O.d_buf + 2 * O.last_lit] = N >>> 8 & 255, O.pending_buf[O.d_buf + 2 * O.last_lit + 1] = 255 & N, O.pending_buf[O.l_buf + O.last_lit] = 255 & ne, O.last_lit++, N === 0 ? O.dyn_ltree[2 * ne]++ : (O.matches++, N--, O.dyn_ltree[2 * (E[ne] + c + 1)]++, O.dyn_dtree[2 * te(N)]++), O.last_lit === O.lit_bufsize - 1;
      }, r._tr_align = function(O) {
        I(O, 2, 3), D(O, A, he), function(N) {
          N.bi_valid === 16 ? (y(N, N.bi_buf), N.bi_buf = 0, N.bi_valid = 0) : 8 <= N.bi_valid && (N.pending_buf[N.pending++] = 255 & N.bi_buf, N.bi_buf >>= 8, N.bi_valid -= 8);
        }(O);
      };
    }, { "../utils/common": 41 }], 53: [function(i, n, r) {
      n.exports = function() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      };
    }, {}], 54: [function(i, n, r) {
      (function(a) {
        (function(o, s) {
          if (!o.setImmediate) {
            var l, u, d, c, h = 1, p = {}, f = !1, v = o.document, m = Object.getPrototypeOf && Object.getPrototypeOf(o);
            m = m && m.setTimeout ? m : o, l = {}.toString.call(o.process) === "[object process]" ? function(R) {
              process.nextTick(function() {
                b(R);
              });
            } : function() {
              if (o.postMessage && !o.importScripts) {
                var R = !0, k = o.onmessage;
                return o.onmessage = function() {
                  R = !1;
                }, o.postMessage("", "*"), o.onmessage = k, R;
              }
            }() ? (c = "setImmediate$" + Math.random() + "$", o.addEventListener ? o.addEventListener("message", A, !1) : o.attachEvent("onmessage", A), function(R) {
              o.postMessage(c + R, "*");
            }) : o.MessageChannel ? ((d = new MessageChannel()).port1.onmessage = function(R) {
              b(R.data);
            }, function(R) {
              d.port2.postMessage(R);
            }) : v && "onreadystatechange" in v.createElement("script") ? (u = v.documentElement, function(R) {
              var k = v.createElement("script");
              k.onreadystatechange = function() {
                b(R), k.onreadystatechange = null, u.removeChild(k), k = null;
              }, u.appendChild(k);
            }) : function(R) {
              setTimeout(b, 0, R);
            }, m.setImmediate = function(R) {
              typeof R != "function" && (R = new Function("" + R));
              for (var k = new Array(arguments.length - 1), H = 0; H < k.length; H++)
                k[H] = arguments[H + 1];
              var K = { callback: R, args: k };
              return p[h] = K, l(h), h++;
            }, m.clearImmediate = C;
          }
          function C(R) {
            delete p[R];
          }
          function b(R) {
            if (f)
              setTimeout(b, 0, R);
            else {
              var k = p[R];
              if (k) {
                f = !0;
                try {
                  (function(H) {
                    var K = H.callback, j = H.args;
                    switch (j.length) {
                      case 0:
                        K();
                        break;
                      case 1:
                        K(j[0]);
                        break;
                      case 2:
                        K(j[0], j[1]);
                        break;
                      case 3:
                        K(j[0], j[1], j[2]);
                        break;
                      default:
                        K.apply(s, j);
                    }
                  })(k);
                } finally {
                  C(R), f = !1;
                }
              }
            }
          }
          function A(R) {
            R.source === o && typeof R.data == "string" && R.data.indexOf(c) === 0 && b(+R.data.slice(c.length));
          }
        })(typeof self > "u" ? a === void 0 ? this : a : self);
      }).call(this, typeof Se < "u" ? Se : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}] }, {}, [10])(10);
  });
})(bR);
var aQ = bR.exports;
const oQ = /* @__PURE__ */ ek(aQ);
var sQ = {
  ar: 1,
  bg: 2,
  ca: 3,
  "zh-Hans": 4,
  cs: 5,
  da: 6,
  de: 7,
  el: 8,
  en: 9,
  es: 10,
  fi: 11,
  fr: 12,
  he: 13,
  hu: 14,
  is: 15,
  it: 16,
  ja: 17,
  ko: 18,
  nl: 19,
  no: 20,
  pl: 21,
  pt: 22,
  rm: 23,
  ro: 24,
  ru: 25,
  hr: 26,
  sk: 27,
  sq: 28,
  sv: 29,
  th: 30,
  tr: 31,
  ur: 32,
  id: 33,
  uk: 34,
  be: 35,
  sl: 36,
  et: 37,
  lv: 38,
  lt: 39,
  tg: 40,
  fa: 41,
  vi: 42,
  hy: 43,
  az: 44,
  eu: 45,
  hsb: 46,
  mk: 47,
  tn: 50,
  xh: 52,
  zu: 53,
  af: 54,
  ka: 55,
  fo: 56,
  hi: 57,
  mt: 58,
  se: 59,
  ga: 60,
  ms: 62,
  kk: 63,
  ky: 64,
  sw: 65,
  tk: 66,
  uz: 67,
  tt: 68,
  bn: 69,
  pa: 70,
  gu: 71,
  or: 72,
  ta: 73,
  te: 74,
  kn: 75,
  ml: 76,
  as: 77,
  mr: 78,
  sa: 79,
  mn: 80,
  bo: 81,
  cy: 82,
  km: 83,
  lo: 84,
  gl: 86,
  kok: 87,
  syr: 90,
  si: 91,
  iu: 93,
  am: 94,
  tzm: 95,
  ne: 97,
  fy: 98,
  ps: 99,
  fil: 100,
  dv: 101,
  ha: 104,
  yo: 106,
  quz: 107,
  nso: 108,
  ba: 109,
  lb: 110,
  kl: 111,
  ig: 112,
  ii: 120,
  arn: 122,
  moh: 124,
  br: 126,
  ug: 128,
  mi: 129,
  oc: 130,
  co: 131,
  gsw: 132,
  sah: 133,
  qut: 134,
  rw: 135,
  wo: 136,
  prs: 140,
  gd: 145,
  "ar-SA": 1025,
  "bg-BG": 1026,
  "ca-ES": 1027,
  "zh-TW": 1028,
  "cs-CZ": 1029,
  "da-DK": 1030,
  "de-DE": 1031,
  "el-GR": 1032,
  "en-US": 1033,
  "fi-FI": 1035,
  "fr-FR": 1036,
  "he-IL": 1037,
  "hu-HU": 1038,
  "is-IS": 1039,
  "it-IT": 1040,
  "ja-JP": 1041,
  "ko-KR": 1042,
  "nl-NL": 1043,
  "nb-NO": 1044,
  "pl-PL": 1045,
  "pt-BR": 1046,
  "rm-CH": 1047,
  "ro-RO": 1048,
  "ru-RU": 1049,
  "hr-HR": 1050,
  "sk-SK": 1051,
  "sq-AL": 1052,
  "sv-SE": 1053,
  "th-TH": 1054,
  "tr-TR": 1055,
  "ur-PK": 1056,
  "id-ID": 1057,
  "uk-UA": 1058,
  "be-BY": 1059,
  "sl-SI": 1060,
  "et-EE": 1061,
  "lv-LV": 1062,
  "lt-LT": 1063,
  "tg-Cyrl-TJ": 1064,
  "fa-IR": 1065,
  "vi-VN": 1066,
  "hy-AM": 1067,
  "az-Latn-AZ": 1068,
  "eu-ES": 1069,
  "hsb-DE": 1070,
  "mk-MK": 1071,
  "tn-ZA": 1074,
  "xh-ZA": 1076,
  "zu-ZA": 1077,
  "af-ZA": 1078,
  "ka-GE": 1079,
  "fo-FO": 1080,
  "hi-IN": 1081,
  "mt-MT": 1082,
  "se-NO": 1083,
  "ms-MY": 1086,
  "kk-KZ": 1087,
  "ky-KG": 1088,
  "sw-KE": 1089,
  "tk-TM": 1090,
  "uz-Latn-UZ": 1091,
  "tt-RU": 1092,
  "bn-IN": 1093,
  "pa-IN": 1094,
  "gu-IN": 1095,
  "or-IN": 1096,
  "ta-IN": 1097,
  "te-IN": 1098,
  "kn-IN": 1099,
  "ml-IN": 1100,
  "as-IN": 1101,
  "mr-IN": 1102,
  "sa-IN": 1103,
  "mn-MN": 1104,
  "bo-CN": 1105,
  "cy-GB": 1106,
  "km-KH": 1107,
  "lo-LA": 1108,
  "gl-ES": 1110,
  "kok-IN": 1111,
  "syr-SY": 1114,
  "si-LK": 1115,
  "iu-Cans-CA": 1117,
  "am-ET": 1118,
  "ne-NP": 1121,
  "fy-NL": 1122,
  "ps-AF": 1123,
  "fil-PH": 1124,
  "dv-MV": 1125,
  "ha-Latn-NG": 1128,
  "yo-NG": 1130,
  "quz-BO": 1131,
  "nso-ZA": 1132,
  "ba-RU": 1133,
  "lb-LU": 1134,
  "kl-GL": 1135,
  "ig-NG": 1136,
  "ii-CN": 1144,
  "arn-CL": 1146,
  "moh-CA": 1148,
  "br-FR": 1150,
  "ug-CN": 1152,
  "mi-NZ": 1153,
  "oc-FR": 1154,
  "co-FR": 1155,
  "gsw-FR": 1156,
  "sah-RU": 1157,
  "qut-GT": 1158,
  "rw-RW": 1159,
  "wo-SN": 1160,
  "prs-AF": 1164,
  "gd-GB": 1169,
  "ar-IQ": 2049,
  "zh-CN": 2052,
  "de-CH": 2055,
  "en-GB": 2057,
  "es-MX": 2058,
  "fr-BE": 2060,
  "it-CH": 2064,
  "nl-BE": 2067,
  "nn-NO": 2068,
  "pt-PT": 2070,
  "sr-Latn-CS": 2074,
  "sv-FI": 2077,
  "az-Cyrl-AZ": 2092,
  "dsb-DE": 2094,
  "se-SE": 2107,
  "ga-IE": 2108,
  "ms-BN": 2110,
  "uz-Cyrl-UZ": 2115,
  "bn-BD": 2117,
  "mn-Mong-CN": 2128,
  "iu-Latn-CA": 2141,
  "tzm-Latn-DZ": 2143,
  "quz-EC": 2155,
  "ar-EG": 3073,
  "zh-HK": 3076,
  "de-AT": 3079,
  "en-AU": 3081,
  "es-ES": 3082,
  "fr-CA": 3084,
  "sr-Cyrl-CS": 3098,
  "se-FI": 3131,
  "quz-PE": 3179,
  "ar-LY": 4097,
  "zh-SG": 4100,
  "de-LU": 4103,
  "en-CA": 4105,
  "es-GT": 4106,
  "fr-CH": 4108,
  "hr-BA": 4122,
  "smj-NO": 4155,
  "ar-DZ": 5121,
  "zh-MO": 5124,
  "de-LI": 5127,
  "en-NZ": 5129,
  "es-CR": 5130,
  "fr-LU": 5132,
  "bs-Latn-BA": 5146,
  "smj-SE": 5179,
  "ar-MA": 6145,
  "en-IE": 6153,
  "es-PA": 6154,
  "fr-MC": 6156,
  "sr-Latn-BA": 6170,
  "sma-NO": 6203,
  "ar-TN": 7169,
  "en-ZA": 7177,
  "es-DO": 7178,
  "sr-Cyrl-BA": 7194,
  "sma-SE": 7227,
  "ar-OM": 8193,
  "en-JM": 8201,
  "es-VE": 8202,
  "bs-Cyrl-BA": 8218,
  "sms-FI": 8251,
  "ar-YE": 9217,
  "en-029": 9225,
  "es-CO": 9226,
  "sr-Latn-RS": 9242,
  "smn-FI": 9275,
  "ar-SY": 10241,
  "en-BZ": 10249,
  "es-PE": 10250,
  "sr-Cyrl-RS": 10266,
  "ar-JO": 11265,
  "en-TT": 11273,
  "es-AR": 11274,
  "sr-Latn-ME": 11290,
  "ar-LB": 12289,
  "en-ZW": 12297,
  "es-EC": 12298,
  "sr-Cyrl-ME": 12314,
  "ar-KW": 13313,
  "en-PH": 13321,
  "es-CL": 13322,
  "ar-AE": 14337,
  "es-UY": 14346,
  "ar-BH": 15361,
  "es-PY": 15370,
  "ar-QA": 16385,
  "en-IN": 16393,
  "es-BO": 16394,
  "en-MY": 17417,
  "es-SV": 17418,
  "en-SG": 18441,
  "es-HN": 18442,
  "es-NI": 19466,
  "es-PR": 20490,
  "es-US": 21514,
  "bs-Cyrl": 25626,
  "bs-Latn": 26650,
  "sr-Cyrl": 27674,
  "sr-Latn": 28698,
  smn: 28731,
  "az-Cyrl": 29740,
  sms: 29755,
  zh: 30724,
  nn: 30740,
  bs: 30746,
  "az-Latn": 30764,
  sma: 30779,
  "uz-Cyrl": 30787,
  "mn-Cyrl": 30800,
  "iu-Cans": 30813,
  "zh-Hant": 31748,
  nb: 31764,
  sr: 31770,
  "tg-Cyrl": 31784,
  dsb: 31790,
  smj: 31803,
  "uz-Latn": 31811,
  "mn-Mong": 31824,
  "iu-Latn": 31837,
  "tzm-Latn": 31839,
  "ha-Latn": 31848
};
function lQ() {
  return sQ[Ii.locale()];
}
var pE = 1632, fE = {
  thousands: "#,##0{0},&quot;K&quot;",
  millions: "#,##0{0},,&quot;M&quot;",
  billions: "#,##0{0},,,&quot;B&quot;",
  trillions: "#,##0{0},,,,&quot;T&quot;",
  percent: "0{0}%",
  decimal: "#{0}",
  fixedpoint: "#,##0{0}",
  exponential: "0{0}E+00",
  currency: " "
}, uQ = /a+/g, dQ = /E/g, cQ = /dE+/g, hQ = /L/g, pQ = /h/g, fQ = /./g, rc = {
  _applyPrecision: function(e, t) {
    var i, n;
    if (t > 0) {
      for (i = e !== "decimal" ? "." : "", n = 0; n < t; n++)
        i += "0";
      return i;
    }
    return "";
  },
  _hasArabicDigits: function(e) {
    for (var t, i = 0; i < e.length; i++)
      if (t = e.charCodeAt(i), t >= pE && t < pE + 10)
        return !0;
    return !1;
  },
  _convertDateFormatToOpenXml: function(e) {
    return e.split("/").join("\\/").split("'").map(function(t, i) {
      return i % 2 === 0 ? t.replace(uQ, "AM/PM").replace(cQ, "d").replace(dQ, "d").replace(hQ, "M").replace(pQ, "H").split("[").join("\\[").split("]").join("\\]") : t ? t.replace(fQ, "\\$&") : "'";
    }).join("");
  },
  _convertDateFormat: function(e) {
    var t = (Pe.format(new Date(2009, 8, 8, 6, 5, 4), e) || "").toString(), i = z_((n) => Pe.format(n, e));
    return i && (i = this._convertDateFormatToOpenXml(i), i = this._getLanguageInfo(t) + i), i;
  },
  _getLanguageInfo: function(e) {
    var t = lQ(), i = t ? t.toString(16) : "", n = "";
    if (this._hasArabicDigits(e)) {
      for (; i.length < 3; )
        i = "0" + i;
      n = "[$-2010" + i + "]";
    } else
      i && (n = "[$-" + i + "]");
    return n;
  },
  _convertNumberFormat: function(e, t, i) {
    var n, r;
    return e === "currency" ? r = nt.getOpenXmlCurrencyFormat(i) : r = fE[e.toLowerCase()], r && (n = Ji(r, this._applyPrecision(e, t))), n;
  },
  convertFormat: function(e, t, i, n) {
    if (x(e)) {
      if (i === "date")
        return rc._convertDateFormat(e);
      if (Te(e) && fE[e.toLowerCase()])
        return rc._convertNumberFormat(e, t, n);
    }
  }
}, qt = {
  toXml: function(e, t, i) {
    var n = ["<", e];
    for (var r in t) {
      var a = t[r];
      x(a) && n.push(" ", r, '="', a, '"');
    }
    return x(i) && i !== "" ? n.push(">", i, "</", e, ">") : n.push(" />"), n.join("");
  }
}, Ln = {
  tryCreateTag: function(e) {
    var t = null;
    return x(e) && (t = {
      vertical: e.vertical,
      wrapText: e.wrapText,
      horizontal: e.horizontal
    }, Ln.isEmpty(t) && (t = null)), t;
  },
  copy: function(e) {
    var t = null;
    return x(e) && (t = {}, e.horizontal !== void 0 && (t.horizontal = e.horizontal), e.vertical !== void 0 && (t.vertical = e.vertical), e.wrapText !== void 0 && (t.wrapText = e.wrapText)), t;
  },
  areEqual: function(e, t) {
    return Ln.isEmpty(e) && Ln.isEmpty(t) || x(e) && x(t) && e.vertical === t.vertical && e.wrapText === t.wrapText && e.horizontal === t.horizontal;
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.vertical) && !x(e.wrapText) && !x(e.horizontal);
  },
  toXml: function(e) {
    return qt.toXml("alignment", {
      vertical: e.vertical,
      wrapText: x(e.wrapText) ? Number(e.wrapText) : void 0,
      horizontal: e.horizontal
    });
  }
}, ei = {
  _tryConvertColor: function(e) {
    if (typeof e != "string")
      return e;
    var t;
    if (e.length > 0 && e[0] === "#") {
      var i = e.substr(1, e.length);
      i.length === 6 ? t = "FF" + i : i.length === 8 ? t = i[6] + i[7] + i.substr(0, 6) : t = i;
    } else
      t = e;
    return t;
  },
  tryCreateTag: function(e) {
    var t = null;
    return x(e) && (typeof e == "string" ? t = {
      rgb: this._tryConvertColor(e)
    } : t = {
      rgb: this._tryConvertColor(e.rgb),
      theme: e.theme
    }, ei.isEmpty(t) && (t = null)), t;
  },
  copy: function(e) {
    var t = null;
    return x(e) && (typeof e == "string" ? t = e : (t = {}, e.rgb !== void 0 && (t.rgb = e.rgb), e.theme !== void 0 && (t.theme = e.theme))), t;
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.rgb) && !x(e.theme);
  },
  areEqual: function(e, t) {
    return ei.isEmpty(e) && ei.isEmpty(t) || x(e) && x(t) && e.rgb === t.rgb && e.theme === t.theme;
  },
  toXml: function(e, t) {
    return qt.toXml(e, {
      rgb: t.rgb,
      theme: t.theme
    });
  }
}, Cr = {
  tryCreateTag: function(e) {
    var t = null;
    return x(e) && (t = {
      patternType: e.patternType,
      backgroundColor: ei.tryCreateTag(e.backgroundColor),
      foregroundColor: ei.tryCreateTag(e.foregroundColor)
    }, Cr.isEmpty(t) && (t = null)), t;
  },
  copy: function(e) {
    var t = null;
    return x(e) && (t = {}, e.patternType !== void 0 && (t.patternType = e.patternType), e.backgroundColor !== void 0 && (t.backgroundColor = ei.copy(e.backgroundColor)), e.foregroundColor !== void 0 && (t.foregroundColor = ei.copy(e.foregroundColor))), t;
  },
  areEqual: function(e, t) {
    return Cr.isEmpty(e) && Cr.isEmpty(t) || x(e) && x(t) && e.patternType === t.patternType && ei.areEqual(e.backgroundColor, t.backgroundColor) && ei.areEqual(e.foregroundColor, t.foregroundColor);
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.patternType);
  },
  toXml: function(e) {
    var t = [x(e.foregroundColor) ? ei.toXml("fgColor", e.foregroundColor) : "", x(e.backgroundColor) ? ei.toXml("bgColor", e.backgroundColor) : ""].join("");
    return qt.toXml("patternFill", {
      patternType: e.patternType
    }, t);
  }
}, Yi = {
  tryCreateTag: function(e) {
    var t = null;
    return x(e) && (t = {
      patternFill: Cr.tryCreateTag(e.patternFill)
    }, Yi.isEmpty(t) && (t = null)), t;
  },
  tryCreateFillFromSimpleFormat: function() {
    var {
      backgroundColor: e,
      fillPatternType: t,
      fillPatternColor: i
    } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (x(e) && !(x(t) && x(i)))
      return {
        patternFill: {
          patternType: "solid",
          foregroundColor: {
            rgb: e
          }
        }
      };
    if (x(t) && x(i))
      return {
        patternFill: {
          patternType: t,
          foregroundColor: {
            rgb: i
          },
          backgroundColor: {
            rgb: e
          }
        }
      };
  },
  copySimpleFormat: function(e, t) {
    e.backgroundColor !== void 0 && (t.backgroundColor = e.backgroundColor), e.fillPatternType !== void 0 && (t.fillPatternType = e.fillPatternType), e.fillPatternColor !== void 0 && (t.fillPatternColor = e.fillPatternColor);
  },
  copy: function(e) {
    var t = null;
    return x(e) && (t = {}, e.patternFill !== void 0 && (t.patternFill = Cr.copy(e.patternFill))), t;
  },
  areEqual: function(e, t) {
    return Yi.isEmpty(e) && Yi.isEmpty(t) || x(e) && x(t) && Cr.areEqual(e.patternFill, t.patternFill);
  },
  isEmpty: function(e) {
    return !x(e) || Cr.isEmpty(e.patternFill);
  },
  toXml: function(e) {
    return qt.toXml("fill", {}, Cr.toXml(e.patternFill));
  }
}, ga = {
  tryCreateTag: function(e) {
    var t = null;
    return x(e) && (t = {
      size: e.size,
      name: e.name,
      family: e.family,
      scheme: e.scheme,
      bold: e.bold,
      italic: e.italic,
      underline: e.underline,
      color: ei.tryCreateTag(e.color)
    }, ga.isEmpty(t) && (t = null)), t;
  },
  copy: function(e) {
    var t = null;
    return x(e) && (t = {}, e.size !== void 0 && (t.size = e.size), e.name !== void 0 && (t.name = e.name), e.family !== void 0 && (t.family = e.family), e.scheme !== void 0 && (t.scheme = e.scheme), e.bold !== void 0 && (t.bold = e.bold), e.italic !== void 0 && (t.italic = e.italic), e.underline !== void 0 && (t.underline = e.underline), e.color !== void 0 && (t.color = ei.copy(e.color))), t;
  },
  areEqual: function(e, t) {
    return ga.isEmpty(e) && ga.isEmpty(t) || x(e) && x(t) && e.size === t.size && e.name === t.name && e.family === t.family && e.scheme === t.scheme && (e.bold === t.bold || !e.bold == !t.bold) && (e.italic === t.italic || !e.italic == !t.italic) && e.underline === t.underline && ei.areEqual(e.color, t.color);
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.size) && !x(e.name) && !x(e.family) && !x(e.scheme) && (!x(e.bold) || !e.bold) && (!x(e.italic) || !e.italic) && !x(e.underline) && ei.isEmpty(e.color);
  },
  toXml: function(e) {
    var t = [x(e.bold) && e.bold ? qt.toXml("b", {}) : "", x(e.size) ? qt.toXml("sz", {
      val: e.size
    }) : "", x(e.color) ? ei.toXml("color", e.color) : "", x(e.name) ? qt.toXml("name", {
      val: e.name
    }) : "", x(e.family) ? qt.toXml("family", {
      val: e.family
    }) : "", x(e.scheme) ? qt.toXml("scheme", {
      val: e.scheme
    }) : "", x(e.italic) && e.italic ? qt.toXml("i", {}) : "", x(e.underline) ? qt.toXml("u", {
      val: e.underline
    }) : ""].join("");
    return qt.toXml("font", {}, t);
  }
}, la = {
  tryCreateTag: function(e, t) {
    var i = null;
    if (x(e)) {
      var n;
      typeof e.numberFormat == "number" ? n = e.numberFormat : n = t.registerNumberFormat(e.numberFormat);
      var r = e.fill;
      x(r) || (r = Yi.tryCreateFillFromSimpleFormat(e)), i = {
        numberFormatId: n,
        alignment: Ln.tryCreateTag(e.alignment),
        fontId: t.registerFont(e.font),
        fillId: t.registerFill(r)
      }, la.isEmpty(i) && (i = null);
    }
    return i;
  },
  copy: function(e) {
    var t;
    return e === null ? t = null : x(e) && (t = {}, e.numberFormat !== void 0 && (t.numberFormat = e.numberFormat), e.fill !== void 0 ? t.fill = Yi.copy(e.fill) : Yi.copySimpleFormat(e, t), e.alignment !== void 0 && (t.alignment = Ln.copy(e.alignment)), e.font !== void 0 && (t.font = ga.copy(e.font))), t;
  },
  areEqual: function(e, t) {
    return la.isEmpty(e) && la.isEmpty(t) || x(e) && x(t) && e.fontId === t.fontId && e.numberFormatId === t.numberFormatId && e.fillId === t.fillId && Ln.areEqual(e.alignment, t.alignment);
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.fontId) && !x(e.numberFormatId) && !x(e.fillId) && Ln.isEmpty(e.alignment);
  },
  toXml: function(e) {
    var t = Ln.isEmpty(e.alignment), i;
    return x(e.numberFormatId) && (i = e.numberFormatId > 0 ? 1 : 0), qt.toXml("xf", {
      xfId: 0,
      applyAlignment: t ? null : 1,
      fontId: e.fontId,
      applyNumberFormat: i,
      fillId: e.fillId,
      numFmtId: e.numberFormatId
    }, t ? null : Ln.toXml(e.alignment));
  }
}, pn = {
  ID_PROPERTY_NAME: "id",
  tryCreateTag: function(e) {
    var t = null;
    return typeof e == "string" && (t = {
      formatCode: e
    }, pn.isEmpty(t) && (t = null)), t;
  },
  areEqual: function(e, t) {
    return pn.isEmpty(e) && pn.isEmpty(t) || x(e) && x(t) && e.formatCode === t.formatCode;
  },
  isEmpty: function(e) {
    return !x(e) || !x(e.formatCode) || e.formatCode === "";
  },
  toXml: function(e) {
    return qt.toXml("numFmt", {
      numFmtId: e[pn.ID_PROPERTY_NAME],
      formatCode: e.formatCode
    });
  }
};
class gE {
  constructor() {
    this._cellFormatTags = [], this._fillTags = [], this._fontTags = [], this._numberFormatTags = [], this._fillTags.push(Yi.tryCreateTag({
      patternFill: {
        patternType: "none"
      }
    }));
  }
  registerCellFormat(t) {
    var i, n = la.tryCreateTag(t, {
      registerFill: this.registerFill.bind(this),
      registerFont: this.registerFont.bind(this),
      registerNumberFormat: this.registerNumberFormat.bind(this)
    });
    if (x(n)) {
      for (var r = 0; r < this._cellFormatTags.length; r++)
        if (la.areEqual(this._cellFormatTags[r], n)) {
          i = r;
          break;
        }
      i === void 0 && (i = this._cellFormatTags.push(n) - 1);
    }
    return i;
  }
  static copyCellFormat(t) {
    return la.copy(t);
  }
  generateCellFormatsXml() {
    var t = this._cellFormatTags.map((i) => la.toXml(i));
    return qt.toXml("cellXfs", {
      count: t.length
    }, t.join(""));
  }
  registerFill(t) {
    var i, n = Yi.tryCreateTag(t);
    if (x(n)) {
      for (var r = 0; r < this._fillTags.length; r++)
        if (Yi.areEqual(this._fillTags[r], n)) {
          i = r;
          break;
        }
      i === void 0 && (this._fillTags.length < 2 && this._fillTags.push(Yi.tryCreateTag({
        patternFill: {
          patternType: "Gray125"
        }
      })), i = this._fillTags.push(n) - 1);
    }
    return i;
  }
  generateFillsXml() {
    var t = this._fillTags.map((i) => Yi.toXml(i));
    return qt.toXml("fills", {
      count: t.length
    }, t.join(""));
  }
  registerFont(t) {
    var i, n = ga.tryCreateTag(t);
    if (x(n)) {
      for (var r = 0; r < this._fontTags.length; r++)
        if (ga.areEqual(this._fontTags[r], n)) {
          i = r;
          break;
        }
      i === void 0 && (i = this._fontTags.push(n) - 1);
    }
    return i;
  }
  generateFontsXml() {
    var t = this._fontTags.map((i) => ga.toXml(i));
    return qt.toXml("fonts", {
      count: t.length
    }, t.join(""));
  }
  _convertNumberFormatIndexToId(t) {
    return 165 + t;
  }
  registerNumberFormat(t) {
    var i, n = pn.tryCreateTag(t);
    if (x(n)) {
      for (var r = 0; r < this._numberFormatTags.length; r++)
        if (pn.areEqual(this._numberFormatTags[r], n)) {
          i = this._numberFormatTags[r][pn.ID_PROPERTY_NAME];
          break;
        }
      i === void 0 && (n[pn.ID_PROPERTY_NAME] = this._convertNumberFormatIndexToId(this._numberFormatTags.length), i = n[pn.ID_PROPERTY_NAME], this._numberFormatTags.push(n));
    }
    return i;
  }
  generateNumberFormatsXml() {
    if (this._numberFormatTags.length > 0) {
      var t = this._numberFormatTags.map((i) => pn.toXml(i));
      return qt.toXml("numFmts", {
        count: t.length
      }, t.join(""));
    } else
      return "";
  }
}
var co = '<?xml version="1.0" encoding="utf-8"?>', gQ = '<sheetPr><outlinePr summaryBelow="0"/></sheetPr>', _Q = "<sheetPr/>", vQ = '<borders count="1"><border><left style="thin"><color rgb="FFD3D3D3"/></left><right style="thin"><color rgb="FFD3D3D3"/></right><top style="thin"><color rgb="FFD3D3D3"/></top><bottom style="thin"><color rgb="FFD3D3D3"/></bottom></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs>', Qr = "http://schemas.openxmlformats.org", If = "rels", Qu = "xl", Tf = "workbook.xml", mQ = "[Content_Types].xml", _E = "sharedStrings.xml", vE = "styles.xml", CQ = "worksheets", mE = "sheet1.xml", xQ = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">', ri = {
  boolean: "b",
  date: "d",
  number: "n",
  string: "s"
}, yQ = Date.UTC(1899, 11, 30), bQ = 60, SQ = 7, EQ = {
  quarter: "shortDate",
  quarterAndYear: "shortDate",
  minute: "longTime",
  millisecond: "longTime"
}, pl = ze.inherit({
  _getXMLTag: function(e, t, i) {
    var n = "<" + e, r, a = t.length, o;
    for (r = 0; r < a; r++)
      o = t[r], o.value !== void 0 && (n = n + " " + o.name + '="' + o.value + '"');
    return x(i) ? n + ">" + i + "</" + e + ">" : n + " />";
  },
  _convertToExcelCellRef: function(e, t) {
    for (var i = "", n, r; !r; )
      n = 65 + (t >= 26 ? t % 26 : Math.ceil(t)), i = String.fromCharCode(n) + i, t >= 26 ? t = Math.floor(t / 26) - 1 : r = !0;
    return i + (e + 1);
  },
  _convertToExcelCellRefAndTrackMaxIndex: function(e, t) {
    return this._maxRowIndex < Number(e) && (this._maxRowIndex = Number(e)), this._maxColumnIndex < Number(t) && (this._maxColumnIndex = Number(t)), this._convertToExcelCellRef(e, t);
  },
  _getDataType: function(e) {
    return ri[e] || ri.string;
  },
  _tryGetExcelCellDataType: function(e) {
    if (x(e)) {
      if (typeof e == "number")
        return isFinite(e) ? ri.number : ri.string;
      if (Te(e))
        return ri.string;
      if (Qt(e))
        return ri.number;
      if (_a(e))
        return ri.boolean;
    }
  },
  _formatObjectConverter: function(e, t) {
    var i = {
      format: e,
      precision: e && e.precision,
      dataType: t
    };
    return De(e) ? T(i, e, {
      format: e.formatter || e.type,
      currency: e.currency
    }) : i;
  },
  _tryConvertToExcelNumberFormat: function(e, t) {
    var i = this._formatObjectConverter(e, t);
    e = i.format;
    var n = i.currency;
    return t = i.dataType, x(e) && t === "date" && (e = EQ[e && e.type || e] || e), rc.convertFormat(e, i.precision, t, n);
  },
  _appendString: function(e) {
    if (x(e) && (e = String(e), e.length))
      return e = d_(e), this._stringHash[e] === void 0 && (this._stringHash[e] = this._stringArray.length, this._stringArray.push(e)), this._stringHash[e];
  },
  _tryGetExcelDateValue: function(e) {
    var t, i;
    if (Qt(e))
      return t = Math.floor((Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()) - yQ) / 864e5), t < bQ && t--, i = (3600 * e.getHours() + 60 * e.getMinutes() + e.getSeconds()) / 86400, t + i;
  },
  _prepareValue: function(e, t) {
    var i = this._dataProvider, {
      cellSourceData: n
    } = i.getCellData(e, t) || {}, {
      value: r
    } = i.getCellData(e, t) || {}, a, o = this._getDataType(i.getCellType(e, t));
    switch (o === ri.date && !Qt(r) && (o = ri.string), o) {
      case ri.string:
        a = r, r = this._appendString(r);
        break;
      case ri.date:
        a = r, r = this._tryGetExcelDateValue(r), o = ri.number;
    }
    return {
      value: r,
      type: o,
      sourceValue: a,
      cellSourceData: n
    };
  },
  _callCustomizeExcelCell: function(e) {
    var {
      dataProvider: t,
      value: i,
      style: n,
      sourceData: r
    } = e, a = gE.copyCellFormat(n), o = {
      value: i,
      numberFormat: a.numberFormat,
      clearStyle: function() {
        this.horizontalAlignment = null, this.verticalAlignment = null, this.wrapTextEnabled = null, this.font = null, this.numberFormat = null;
      }
    };
    x(a) && (x(a.alignment) && (o.horizontalAlignment = a.alignment.horizontal, o.verticalAlignment = a.alignment.vertical, o.wrapTextEnabled = a.alignment.wrapText), o.backgroundColor = a.backgroundColor, o.fillPatternType = a.fillPatternType, o.fillPatternColor = a.fillPatternColor, o.font = a.font), t.customizeExcelCell(o, r);
    var s = a || {};
    return s.font = o.font, s.alignment = s.alignment || {}, s.alignment.horizontal = o.horizontalAlignment, s.alignment.vertical = o.verticalAlignment, s.alignment.wrapText = o.wrapTextEnabled, s.backgroundColor = o.backgroundColor, s.fillPatternType = o.fillPatternType, s.fillPatternColor = o.fillPatternColor, s.numberFormat = o.numberFormat, {
      value: o.value,
      style: s
    };
  },
  _getDataArray: function() {
    var e, t, i, n, r = [], a = this._dataProvider, o = a.getRowsCount(), s = a.getColumns(), l;
    for (e = 0; e < o; e++) {
      for (i = [], l = s.length, t = 0; t !== l; t++) {
        n = this._prepareValue(e, t);
        var u = a.getStyleId(e, t), d = this._styleArrayIndexToCellStyleIdMap[u];
        if (a.hasCustomizeExcelCell && a.hasCustomizeExcelCell()) {
          var c = n.sourceValue || n.value, h = this._callCustomizeExcelCell({
            dataProvider: a,
            value: c,
            style: this._styleArray[u],
            sourceData: n.cellSourceData
          });
          if (h.value !== c) {
            if (typeof h.value != typeof c || typeof h.value == "number" && !isFinite(h.value)) {
              var p = this._tryGetExcelCellDataType(h.value);
              x(p) && (n.type = p);
            }
            switch (n.type) {
              case ri.string:
                n.value = this._appendString(h.value);
                break;
              case ri.date:
                n.value = h.value;
                break;
              case ri.number:
                var f = h.value, v = this._tryGetExcelDateValue(f);
                x(v) && (f = v), n.value = f;
                break;
              default:
                n.value = h.value;
            }
          }
          d = this._excelFile.registerCellFormat(h.style);
        }
        i.push({
          style: d,
          value: n.value,
          type: n.type
        });
      }
      !this._needSheetPr && a.getGroupLevel(e) > 0 && (this._needSheetPr = !0), r.push(i);
    }
    return r;
  },
  _calculateWidth: function(e) {
    return e = parseInt(e, 10), (!e || e < 5) && (e = 100), Math.min(255, Math.floor((e - 5) / SQ * 100 + 0.5) / 100);
  },
  _prepareStyleData: function() {
    var e = this, t = e._dataProvider.getStyles();
    e._dataProvider.getColumns().forEach(function(n) {
      e._colsArray.push(e._calculateWidth(n.width));
    });
    var i = [{
      size: 11,
      color: {
        theme: 1
      },
      name: "Calibri",
      family: 2,
      scheme: "minor",
      bold: !1
    }, {
      size: 11,
      color: {
        theme: 1
      },
      name: "Calibri",
      family: 2,
      scheme: "minor",
      bold: !0
    }];
    this._excelFile.registerFont(i[0]), this._excelFile.registerFont(i[1]), t.forEach(function(n) {
      var r = e._tryConvertToExcelNumberFormat(n.format, n.dataType);
      x(r) || (r = 0), e._styleArray.push({
        font: i[+!!n.bold],
        numberFormat: r,
        alignment: {
          vertical: "top",
          wrapText: !!n.wrapText,
          horizontal: n.alignment || "left"
        }
      });
    }), e._styleArrayIndexToCellStyleIdMap = e._styleArray.map((n) => this._excelFile.registerCellFormat(n));
  },
  _prepareCellData: function() {
    this._cellsArray = this._getDataArray();
  },
  _createXMLRelationships: function(e) {
    return this._getXMLTag("Relationships", [{
      name: "xmlns",
      value: Qr + "/package/2006/relationships"
    }], e);
  },
  _createXMLRelationship: function(e, t, i) {
    return this._getXMLTag("Relationship", [{
      name: "Id",
      value: "rId" + e
    }, {
      name: "Type",
      value: Qr + "/officeDocument/2006/relationships/" + t
    }, {
      name: "Target",
      value: i
    }]);
  },
  _getWorkbookContent: function() {
    return co + this._getXMLTag("workbook", [{
      name: "xmlns:r",
      value: Qr + "/officeDocument/2006/relationships"
    }, {
      name: "xmlns",
      value: Qr + "/spreadsheetml/2006/main"
    }], '<bookViews><workbookView xWindow="0" yWindow="0" windowWidth="0" windowHeight="0"/></bookViews><sheets><sheet name="Sheet" sheetId="1" r:id="rId1" /></sheets><definedNames><definedName name="_xlnm.Print_Titles" localSheetId="0">Sheet!$1:$1</definedName><definedName name="_xlnm._FilterDatabase" hidden="0" localSheetId="0">Sheet!$A$1:$F$6332</definedName></definedNames>');
  },
  _getContentTypesContent: function() {
    return co + '<Types xmlns="' + Qr + '/package/2006/content-types"><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="xml" ContentType="application/xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /><Override PartName="/xl/sharedStrings.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /></Types>';
  },
  _generateStylesXML: function() {
    var e = this._zip.folder(Qu), t = "";
    t += this._excelFile.generateNumberFormatsXml(), t += this._excelFile.generateFontsXml(), t += this._excelFile.generateFillsXml(), t += vQ, t += this._excelFile.generateCellFormatsXml(), t += this._getXMLTag("cellStyles", [{
      name: "count",
      value: 1
    }], this._getXMLTag("cellStyle", [{
      name: "name",
      value: "Normal"
    }, {
      name: "xfId",
      value: 0
    }, {
      name: "builtinId",
      value: 0
    }])), t = co + this._getXMLTag("styleSheet", [{
      name: "xmlns",
      value: Qr + "/spreadsheetml/2006/main"
    }], t), e.file(vE, t), this._styleArray = [];
  },
  _generateStringsXML: function() {
    var e = this._zip.folder(Qu), t, i = this._stringArray.length, n = co;
    for (t = 0; t < i; t++)
      this._stringArray[t] = this._getXMLTag("si", [], this._getXMLTag("t", [], this._stringArray[t]));
    n += this._getXMLTag("sst", [{
      name: "xmlns",
      value: Qr + "/spreadsheetml/2006/main"
    }, {
      name: "count",
      value: this._stringArray.length
    }, {
      name: "uniqueCount",
      value: this._stringArray.length
    }], this._stringArray.join("")), e.file(_E, n), this._stringArray = [];
  },
  _getPaneXML: function() {
    var e = [{
      name: "activePane",
      value: "bottomLeft"
    }, {
      name: "state",
      value: "frozen"
    }], t = this._dataProvider.getFrozenArea();
    return t.x || t.y ? (t.x && e.push({
      name: "xSplit",
      value: t.x
    }), t.y && e.push({
      name: "ySplit",
      value: t.y
    }), e.push({
      name: "topLeftCell",
      value: this._convertToExcelCellRefAndTrackMaxIndex(t.y, t.x)
    }), this._getXMLTag("pane", e)) : "";
  },
  _getAutoFilterXML: function(e) {
    return this._options.autoFilterEnabled ? '<autoFilter ref="A' + this._dataProvider.getHeaderRowCount() + ":" + e + '" />' : "";
  },
  _generateWorksheetXML: function() {
    var e, t, i, n, r = [], a = this._cellsArray.length, o, s = this._colsArray.length, l = "1:" + s, u = this._dataProvider.getHeaderRowCount ? this._dataProvider.getHeaderRowCount() : 1, d = [xQ];
    for (d.push(this._needSheetPr ? gQ : _Q), d.push('<dimension ref="A1:C1"/>'), d.push("<sheetViews><sheetView "), d.push(this._rtlEnabled ? 'rightToLeft="1" ' : ""), d.push('tabSelected="1" workbookViewId="0">'), d.push(this._getPaneXML()), d.push("</sheetView></sheetViews>"), d.push('<sheetFormatPr defaultRowHeight="15"'), d.push(' outlineLevelRow="' + (this._dataProvider.getRowsCount() > 0 ? this._dataProvider.getGroupLevel(0) : 0) + '"'), d.push(' x14ac:dyDescent="0.25"/>'), e = 0; e < s; e++)
      this._colsArray[e] = this._getXMLTag("col", [{
        name: "width",
        value: this._colsArray[e]
      }, {
        name: "min",
        value: Number(e) + 1
      }, {
        name: "max",
        value: Number(e) + 1
      }, {
        name: "customWidth",
        value: 1
      }]);
    for (d.push(this._getXMLTag("cols", [], this._colsArray.join("")) + "<sheetData>"), t = 0; t < a; t++) {
      for (n = [], o = this._cellsArray[t].length, e = 0; e < o; e++)
        t = Number(t), i = this._cellsArray[t][e], n.push(this._getXMLTag("c", [{
          name: "r",
          value: this._convertToExcelCellRefAndTrackMaxIndex(t, e)
        }, {
          name: "s",
          value: i.style
        }, {
          name: "t",
          value: i.type
        }], x(i.value) ? this._getXMLTag("v", [], i.value) : null));
      r.push(this._getXMLTag("row", [{
        name: "r",
        value: Number(t) + 1
      }, {
        name: "spans",
        value: l
      }, {
        name: "outlineLevel",
        value: t >= u ? this._dataProvider.getGroupLevel(t) : 0
      }, {
        name: "x14ac:dyDescent",
        value: "0.25"
      }], n.join(""))), this._cellsArray[t] = null, r.length > 1e4 && (d.push(r.join("")), r = []);
    }
    d.push(r.join(""));
    var c = this._convertToExcelCellRef(this._maxRowIndex, this._maxColumnIndex);
    d.push("</sheetData>" + this._getAutoFilterXML(c) + this._generateMergingXML() + "</worksheet>"), this._zip.folder(Qu).folder(CQ).file(mE, d.join("")), this._colsArray = [], this._cellsArray = [];
  },
  _generateMergingXML: function() {
    var e, t, i, n, r = x(this._dataProvider.getHeaderRowCount) ? this._dataProvider.getHeaderRowCount() : this._dataProvider.getRowsCount(), a = this._dataProvider.getColumns().length, o = [], s = [], l, u = "";
    for (n = 0; n < r; n++)
      for (i = 0; i !== a; i++)
        if (!x(o[n]) || !x(o[n][i])) {
          var d = this._dataProvider.getCellMerging(n, i);
          if (d.colspan || d.rowspan)
            for (s.push({
              start: this._convertToExcelCellRefAndTrackMaxIndex(n, i),
              end: this._convertToExcelCellRefAndTrackMaxIndex(n + (d.rowspan || 0), i + (d.colspan || 0))
            }), e = n; e <= n + d.rowspan; e++)
              for (t = i; t <= i + d.colspan; t++)
                x(o[e]) || (o[e] = []), o[e][t] = !0;
        }
    var c = s.length;
    for (l = 0; l < c; l++)
      u += this._getXMLTag("mergeCell", [{
        name: "ref",
        value: s[l].start + ":" + s[l].end
      }]);
    return u.length ? this._getXMLTag("mergeCells", [{
      name: "count",
      value: c
    }], u) : "";
  },
  _generateCommonXML: function() {
    var e = co + this._createXMLRelationships(this._createXMLRelationship(1, "officeDocument", "xl/" + Tf)), t = this._zip.folder(Qu), i = co;
    this._zip.folder("_" + If).file("." + If, e);
    var n = this._createXMLRelationship(1, "worksheet", "worksheets/" + mE) + this._createXMLRelationship(2, "styles", vE) + this._createXMLRelationship(3, "sharedStrings", _E);
    i += this._createXMLRelationships(n), t.folder("_" + If).file(Tf + ".rels", i), t.file(Tf, this._getWorkbookContent()), this._zip.file(mQ, this._getContentTypesContent());
  },
  _generateContent: function() {
    this._prepareStyleData(), this._prepareCellData(), this._generateWorkXML(), this._generateCommonXML();
  },
  _generateWorkXML: function() {
    this._generateStylesXML(), this._generateStringsXML(), this._generateWorksheetXML();
  },
  ctor: function(e, t) {
    this._rtlEnabled = t && !!t.rtlEnabled, this._options = t, this._maxRowIndex = 0, this._maxColumnIndex = 0, this._stringArray = [], this._stringHash = {}, this._styleArray = [], this._colsArray = [], this._cellsArray = [], this._needSheetPr = !1, this._dataProvider = e, this._excelFile = new gE(), x(pl.JSZip) ? this._zip = new pl.JSZip() : this._zip = null;
  },
  _checkZipState: function() {
    if (!this._zip)
      throw $e.Error("E1041", "JSZip");
  },
  ready: function() {
    return this._dataProvider.ready();
  },
  getData: function(e) {
    var t = {
      type: e ? "blob" : "base64",
      compression: "DEFLATE",
      mimeType: yR.EXCEL
    }, i = new U();
    return this._checkZipState(), this._generateContent(), this._zip.generateAsync ? this._zip.generateAsync(t).then(i.resolve) : i.resolve(this._zip.generate(t)), i;
  }
});
pl.JSZip = oQ;
function wQ(e, t) {
  var i = new pl(e, t);
  return i._checkZipState(), i.ready().then(() => i.getData(ce(ke().Blob)));
}
var CE = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "00ffff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000000",
  blanchedalmond: "ffebcd",
  blue: "0000ff",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "00ffff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  feldspar: "d19275",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "ff00ff",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslateblue: "8470ff",
  lightslategray: "778899",
  lightslategrey: "778899",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "00ff00",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "ff00ff",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370d8",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "d87093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "ff0000",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  violetred: "d02090",
  wheat: "f5deb3",
  white: "ffffff",
  whitesmoke: "f5f5f5",
  yellow: "ffff00",
  yellowgreen: "9acd32"
}, Df = [{
  re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
  process: function(e) {
    return [parseInt(e[1], 10), parseInt(e[2], 10), parseInt(e[3], 10)];
  }
}, {
  re: /^rgba\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d*\.*\d+)\)$/,
  process: function(e) {
    return [parseInt(e[1], 10), parseInt(e[2], 10), parseInt(e[3], 10), parseFloat(e[4])];
  }
}, {
  re: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/,
  process: function(e) {
    return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)];
  }
}, {
  re: /^#([a-f0-9]{1})([a-f0-9]{1})([a-f0-9]{1})$/,
  process: function(e) {
    return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)];
  }
}, {
  re: /^hsv\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
  process: function(e) {
    var t = parseInt(e[1], 10), i = parseInt(e[2], 10), n = parseInt(e[3], 10), r = SR(t, i, n);
    return [r[0], r[1], r[2], 1, [t, i, n]];
  }
}, {
  re: /^hsl\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
  process: function(e) {
    var t = parseInt(e[1], 10), i = parseInt(e[2], 10), n = parseInt(e[3], 10), r = ER(t, i, n);
    return [r[0], r[1], r[2], 1, null, [t, i, n]];
  }
}], Xn = Math.round;
function hr(e) {
  this.baseColor = e;
  var t;
  e && (t = String(e).toLowerCase().replace(/ /g, ""), t = CE[t] ? "#" + CE[t] : t, t = IQ(t)), t || (this.colorIsInvalid = !0), t = t || {}, this.r = fn(t[0]), this.g = fn(t[1]), this.b = fn(t[2]), this.a = fn(t[3], 1, 1), t[4] ? this.hsv = {
    h: t[4][0],
    s: t[4][1],
    v: t[4][2]
  } : this.hsv = DQ(this.r, this.g, this.b), t[5] ? this.hsl = {
    h: t[5][0],
    s: t[5][1],
    l: t[5][2]
  } : this.hsl = OQ(this.r, this.g, this.b);
}
function IQ(e) {
  if (e === "transparent")
    return [0, 0, 0, 0];
  for (var t = 0, i = Df.length, n; t < i; ++t)
    if (n = Df[t].re.exec(e), n)
      return Df[t].process(n);
  return null;
}
function fn(e, t, i) {
  return t = t || 0, i = i || 255, e < 0 || isNaN(e) ? t : e > i ? i : e;
}
function TQ(e, t, i) {
  return "#" + (16777216 | e << 16 | t << 8 | i).toString(16).slice(1);
}
function DQ(e, t, i) {
  var n = Math.max(e, t, i), r = Math.min(e, t, i), a = n - r, o, s, l = n;
  if (s = n === 0 ? 0 : 1 - r / n, n === r)
    o = 0;
  else
    switch (n) {
      case e:
        o = (t - i) / a * 60, t < i && (o += 360);
        break;
      case t:
        o = (i - e) / a * 60 + 120;
        break;
      case i:
        o = (e - t) / a * 60 + 240;
    }
  return s *= 100, l *= 100 / 255, {
    h: Math.round(o),
    s: Math.round(s),
    v: Math.round(l)
  };
}
function SR(e, t, i) {
  var n = Math.floor(e % 360 / 60), r = (100 - t) * i / 100, a = e % 60 / 60 * (i - r), o = r + a, s = i - a, l, u, d;
  switch (n) {
    case 0:
      l = i, u = o, d = r;
      break;
    case 1:
      l = s, u = i, d = r;
      break;
    case 2:
      l = r, u = i, d = o;
      break;
    case 3:
      l = r, u = s, d = i;
      break;
    case 4:
      l = o, u = r, d = i;
      break;
    case 5:
      l = i, u = r, d = s;
  }
  return [Math.round(2.55 * l), Math.round(2.55 * u), Math.round(2.55 * d)];
}
function AQ(e, t, i, n) {
  var r = Math.max(e, t, i);
  switch (r) {
    case e:
      return (t - i) / n + (t < i ? 6 : 0);
    case t:
      return (i - e) / n + 2;
    case i:
      return (e - t) / n + 4;
  }
}
function OQ(e, t, i) {
  e = To(e, 255), t = To(t, 255), i = To(i, 255);
  var n = Math.max(e, t, i), r = Math.min(e, t, i), a = n + r, o, s, l = a / 2;
  if (n === r)
    o = s = 0;
  else {
    var u = n - r;
    l > 0.5 ? s = u / (2 - a) : s = u / a, o = AQ(e, t, i, u), o /= 6;
  }
  return {
    h: Xn(360 * o),
    s: Xn(100 * s),
    l: Xn(100 * l)
  };
}
function Af(e, t) {
  var i = t;
  return e === "r" && (i = t + 1 / 3), e === "b" && (i = t - 1 / 3), i;
}
function RQ(e) {
  return e < 0 && (e += 1), e > 1 && (e -= 1), e;
}
function Of(e, t, i) {
  return i = RQ(i), i < 1 / 6 ? e + 6 * (t - e) * i : i < 0.5 ? t : i < 2 / 3 ? e + (t - e) * (2 / 3 - i) * 6 : e;
}
function ER(e, t, i) {
  var n, r, a;
  if (e = To(e, 360), t = To(t, 100), i = To(i, 100), t === 0)
    n = r = a = i;
  else {
    var o = i < 0.5 ? i * (1 + t) : i + t - i * t, s = 2 * i - o;
    n = Of(s, o, Af("r", e)), r = Of(s, o, Af("g", e)), a = Of(s, o, Af("b", e));
  }
  return [Xn(255 * n), Xn(255 * r), Xn(255 * a)];
}
function To(e, t) {
  return e = Math.min(t, Math.max(0, parseFloat(e))), Math.abs(e - t) < 1e-6 ? 1 : e % t / parseFloat(t);
}
function Rf(e, t, i) {
  return t = t || 0, i = i || 255, !(e % 1 !== 0 || e < t || e > i || typeof e != "number" || isNaN(e));
}
hr.prototype = {
  constructor: hr,
  highlight: function(e) {
    return e = e || 10, this.alter(e).toHex();
  },
  darken: function(e) {
    return e = e || 10, this.alter(-e).toHex();
  },
  alter: function(e) {
    var t = new hr();
    return t.r = fn(this.r + e), t.g = fn(this.g + e), t.b = fn(this.b + e), t;
  },
  blend: function(e, t) {
    var i = e instanceof hr ? e : new hr(e), n = new hr();
    return n.r = fn(Xn(this.r * (1 - t) + i.r * t)), n.g = fn(Xn(this.g * (1 - t) + i.g * t)), n.b = fn(Xn(this.b * (1 - t) + i.b * t)), n;
  },
  toHex: function() {
    return TQ(this.r, this.g, this.b);
  },
  getPureColor: function() {
    var e = SR(this.hsv.h, 100, 100);
    return new hr("rgb(" + e.join(",") + ")");
  },
  isValidHex: function(e) {
    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e);
  },
  isValidRGB: function(e, t, i) {
    return !(!Rf(e) || !Rf(t) || !Rf(i));
  },
  isValidAlpha: function(e) {
    return !(isNaN(e) || e < 0 || e > 1 || typeof e != "number");
  },
  colorIsInvalid: !1,
  fromHSL: function(e) {
    var t = new hr(), i = ER(e.h, e.s, e.l);
    return t.r = i[0], t.g = i[1], t.b = i[2], t;
  }
};
function BQ(e, t, i) {
  if (!e)
    return new U().resolve();
  var n = t.exportingAction, r = t.exportedAction, a = t.fileSavingAction, o = {
    fileName: t.fileName,
    format: t.format,
    cancel: !1
  };
  return _a(t.selectedRowsOnly) && (o.selectedRowsOnly = t.selectedRowsOnly), ce(n) && n(o), o.cancel ? new U().resolve() : i(e, t).then((s) => {
    if (ce(r) && r(), ce(a) && (o.data = s, a(o)), !o.cancel) {
      var l = t.format === "xlsx" ? "EXCEL" : t.format;
      rQ.saveAs(o.fileName, l, s);
    }
  });
}
var kQ = {
  creator: pl,
  getData: wQ,
  formatConverter: rc
}, ql = "dx-buttongroup", FQ = ql + "-wrapper", wR = ql + "-item", PQ = ql + "-first-item", MQ = ql + "-last-item", xE = wR + "-has-width", LQ = "dx-shape-standard", VQ = Ha.inherit({
  _initTemplates() {
    this.callBase(), this._templateManager.addDefaultTemplates({
      item: new $a((e, t, i) => {
        this._prepareItemStyles(e);
        var n = this.option("buttonTemplate");
        this._createComponent(e, Gt, T({}, i, t, this._getBasicButtonOptions(), {
          _templateData: this._hasCustomTemplate(n) ? i : {},
          template: i.template || n
        }));
      }, ["text", "type", "icon", "disabled", "visible", "hint"], this.option("integrationOptions.watchMethod"))
    });
  },
  _getBasicButtonOptions() {
    return {
      focusStateEnabled: !1,
      onClick: null,
      hoverStateEnabled: this.option("hoverStateEnabled"),
      activeStateEnabled: this.option("activeStateEnabled"),
      stylingMode: this.option("stylingMode")
    };
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      itemTemplateProperty: null
    });
  },
  _hasCustomTemplate(e) {
    return ce(e) || this.option("integrationOptions.templates")[e];
  },
  _prepareItemStyles(e) {
    var t = e.data("dxItemIndex");
    t === 0 && e.addClass(PQ);
    var i = this.option("items");
    i && t === i.length - 1 && e.addClass(MQ), e.addClass(LQ);
  },
  _renderItemContent(e) {
    return e.container = g(e.container).parent(), this.callBase(e);
  },
  _renderItemContentByNode: function(e, t) {
    return e.container = g(e.container.children().first()), this.callBase(e, t);
  },
  _focusTarget() {
    return this.$element().parent();
  },
  _keyboardEventBindingTarget() {
    return this._focusTarget();
  },
  _refreshContent() {
    this._prepareContent(), this._renderContent();
  },
  _itemClass: () => wR,
  _itemSelectHandler: function(e) {
    this.option("selectionMode") === "single" && this.isItemSelected(e.currentTarget) || this.callBase(e);
  }
}), IR = Mt.inherit({
  _getDefaultOptions() {
    return T(this.callBase(), {
      hoverStateEnabled: !0,
      focusStateEnabled: !0,
      selectionMode: "single",
      selectedItems: [],
      selectedItemKeys: [],
      stylingMode: "contained",
      keyExpr: "text",
      items: [],
      buttonTemplate: "content",
      onSelectionChanged: null,
      onItemClick: null
    });
  },
  _init() {
    this.callBase(), this._createItemClickAction();
  },
  _createItemClickAction() {
    this._itemClickAction = this._createActionByOption("onItemClick");
  },
  _initMarkup() {
    this.setAria("role", "group"), this.$element().addClass(ql), this._renderButtons(), this._syncSelectionOptions(), this.callBase();
  },
  _fireSelectionChangeEvent: function(e, t) {
    this._createActionByOption("onSelectionChanged", {
      excludeValidators: ["disabled", "readOnly"]
    })({
      addedItems: e,
      removedItems: t
    });
  },
  _renderButtons() {
    var e = g("<div>").addClass(FQ).appendTo(this.$element()), t = this.option("selectedItems"), i = {
      selectionMode: this.option("selectionMode"),
      items: this.option("items"),
      keyExpr: this.option("keyExpr"),
      buttonTemplate: this.option("buttonTemplate"),
      scrollingEnabled: !1,
      selectedItemKeys: this.option("selectedItemKeys"),
      focusStateEnabled: this.option("focusStateEnabled"),
      hoverStateEnabled: this.option("hoverStateEnabled"),
      activeStateEnabled: this.option("activeStateEnabled"),
      stylingMode: this.option("stylingMode"),
      accessKey: this.option("accessKey"),
      tabIndex: this.option("tabIndex"),
      noDataText: "",
      selectionRequired: !1,
      onItemRendered: (n) => {
        var r = this.option("width");
        x(r) && g(n.itemElement).addClass(xE);
      },
      onSelectionChanged: (n) => {
        this._syncSelectionOptions(), this._fireSelectionChangeEvent(n.addedItems, n.removedItems);
      },
      onItemClick: (n) => {
        this._itemClickAction(n);
      }
    };
    x(t) && t.length && (i.selectedItems = t), this._buttonsCollection = this._createComponent(e, VQ, i);
  },
  _syncSelectionOptions() {
    this._setOptionWithoutOptionChange("selectedItems", this._buttonsCollection.option("selectedItems")), this._setOptionWithoutOptionChange("selectedItemKeys", this._buttonsCollection.option("selectedItemKeys"));
  },
  _optionChanged(e) {
    switch (e.name) {
      case "stylingMode":
      case "selectionMode":
      case "keyExpr":
      case "buttonTemplate":
      case "items":
      case "activeStateEnabled":
      case "focusStateEnabled":
      case "hoverStateEnabled":
      case "tabIndex":
        this._invalidate();
        break;
      case "selectedItemKeys":
      case "selectedItems":
        this._buttonsCollection.option(e.name, e.value);
        break;
      case "onItemClick":
        this._createItemClickAction();
        break;
      case "onSelectionChanged":
        break;
      case "width":
        this.callBase(e), this._buttonsCollection.itemElements().toggleClass(xE, !!e.value);
        break;
      default:
        this.callBase(e);
    }
  }
});
We("dxButtonGroup", IR);
var yE = "dx-dropdownbutton", NQ = "dx-dropdownbutton-content", bE = "dx-dropdownbutton-action", SE = "dx-dropdownbutton-toggle", $Q = "dx-dropdownbutton-has-arrow", HQ = "dx-dropdownbutton-popup-wrapper", zQ = "dx-dropdowneditor-overlay", WQ = "dx-button-text", GQ = "dx-icon-right", KQ = Mt.inherit({
  _getDefaultOptions() {
    return T(this.callBase(), {
      itemTemplate: "item",
      keyExpr: "this",
      displayExpr: void 0,
      selectedItem: null,
      selectedItemKey: null,
      stylingMode: "outlined",
      deferRendering: !0,
      noDataText: q.format("dxCollectionWidget-noDataText"),
      useSelectMode: !1,
      splitButton: !1,
      showArrowIcon: !0,
      text: "",
      icon: void 0,
      onButtonClick: null,
      onSelectionChanged: null,
      onItemClick: null,
      opened: !1,
      items: null,
      dataSource: null,
      focusStateEnabled: !0,
      hoverStateEnabled: !0,
      dropDownOptions: {},
      dropDownContentTemplate: "content",
      wrapItemText: !1,
      useItemTextAsTitle: !0,
      grouped: !1,
      groupTemplate: "group",
      buttonGroupOptions: {}
    });
  },
  _setOptionsByReference() {
    this.callBase(), T(this._optionsByReference, {
      selectedItem: !0
    });
  },
  _init() {
    this.callBase(), this._createItemClickAction(), this._createActionClickAction(), this._createSelectionChangedAction(), this._initDataSource(), this._compileKeyGetter(), this._compileDisplayGetter(), this._itemsToDataSource(this.option("items")), this._options.cache("buttonGroupOptions", this.option("buttonGroupOptions")), this._options.cache("dropDownOptions", this.option("dropDownOptions"));
  },
  _initTemplates() {
    this._templateManager.addDefaultTemplates({
      content: new Bo((e) => {
        var t = g(e.container), i = g("<div>").appendTo(t);
        this._list = this._createComponent(i, jo, this._listOptions()), this._list.registerKeyHandler("escape", this._escHandler.bind(this)), this._list.registerKeyHandler("tab", this._escHandler.bind(this)), this._list.registerKeyHandler("leftArrow", this._escHandler.bind(this)), this._list.registerKeyHandler("rightArrow", this._escHandler.bind(this));
      })
    }), this.callBase();
  },
  _itemsToDataSource: function(e) {
    this._dataSource || (this._dataSource = new Jn({
      store: new Il({
        key: this._getKey(),
        data: e
      }),
      pageSize: 0
    }));
  },
  _getKey: function() {
    var e, t = this.option("keyExpr"), i = (e = this._dataSource) === null || e === void 0 ? void 0 : e.key();
    return x(i) && (!x(t) || t === "this") ? i : t;
  },
  _compileKeyGetter() {
    this._keyGetter = tt(this._getKey());
  },
  _compileDisplayGetter() {
    this._displayGetter = tt(this.option("displayExpr"));
  },
  _initMarkup() {
    this.callBase(), this.$element().addClass(yE), this._renderButtonGroup(), this._updateArrowClass(), x(this.option("selectedItemKey")) && this._loadSelectedItem().done(this._updateActionButton.bind(this));
  },
  _renderFocusTarget: $,
  _render() {
    (!this.option("deferRendering") || this.option("opened")) && this._renderPopup(), this.callBase();
  },
  _renderContentImpl() {
    return this._popup && this._renderPopupContent(), this.callBase();
  },
  _loadSelectedItem() {
    var e;
    (e = this._loadSingleDeferred) === null || e === void 0 || e.reject();
    var t = new U();
    if (this._list && this._lastSelectedItemData !== void 0) {
      var i = this.option("useSelectMode") ? this._list.option("selectedItem") : this._lastSelectedItemData;
      return t.resolve(i);
    }
    this._lastSelectedItemData = void 0;
    var n = this.option("selectedItemKey");
    return this._loadSingle(this._getKey(), n).done(t.resolve).fail(() => {
      t.resolve(null);
    }), this._loadSingleDeferred = t, t.promise();
  },
  _createActionClickAction() {
    this._actionClickAction = this._createActionByOption("onButtonClick");
  },
  _createSelectionChangedAction() {
    this._selectionChangedAction = this._createActionByOption("onSelectionChanged");
  },
  _createItemClickAction() {
    this._itemClickAction = this._createActionByOption("onItemClick");
  },
  _fireSelectionChangedAction(e) {
    var {
      previousValue: t,
      value: i
    } = e;
    this._selectionChangedAction({
      item: i,
      previousItem: t
    });
  },
  _fireItemClickAction(e) {
    var {
      event: t,
      itemElement: i,
      itemData: n
    } = e;
    return this._itemClickAction({
      event: t,
      itemElement: i,
      itemData: this._actionItem || n
    });
  },
  _actionButtonConfig() {
    return {
      text: this.option("text"),
      icon: this.option("icon"),
      elementAttr: {
        class: bE
      }
    };
  },
  _getButtonGroupItems() {
    var e = [];
    return e.push(this._actionButtonConfig()), this.option("splitButton") && e.push({
      icon: "spindown",
      elementAttr: {
        class: SE
      }
    }), e;
  },
  _buttonGroupItemClick(e) {
    var {
      event: t,
      itemData: i
    } = e, n = i.elementAttr.class === bE, r = i.elementAttr.class === SE;
    r ? this.toggle() : n && (this._actionClickAction({
      event: t,
      selectedItem: this.option("selectedItem")
    }), this.option("splitButton") || this.toggle());
  },
  _buttonGroupOptions() {
    var {
      splitButton: e,
      showArrowIcon: t,
      focusStateEnabled: i,
      hoverStateEnabled: n,
      stylingMode: r,
      accessKey: a,
      tabIndex: o
    } = this.option(), s = e || !t ? "content" : (l, u) => {
      var {
        text: d,
        icon: c
      } = l, h = wa(c), p = d ? g("<span>").text(d).addClass(WQ) : void 0, f = wa("spindown").addClass(GQ);
      g(u).append(h, p, f);
    };
    return T({
      items: this._getButtonGroupItems(),
      onItemClick: this._buttonGroupItemClick.bind(this),
      width: "100%",
      height: "100%",
      selectionMode: "none",
      onKeyboardHandled: (l) => this._keyboardHandler(l),
      buttonTemplate: s,
      focusStateEnabled: i,
      hoverStateEnabled: n,
      stylingMode: r,
      accessKey: a,
      tabIndex: o
    }, this._options.cache("buttonGroupOptions"));
  },
  _renderPopupContent() {
    var e = this._popup.$content(), t = this._getTemplateByOption("dropDownContentTemplate");
    return e.empty(), this._popupContentId = "dx-" + new Ot(), this.setAria("id", this._popupContentId, e), t.render({
      container: Ie(e),
      model: this.option("items") || this._dataSource
    });
  },
  _popupOptions() {
    var e = this.option("rtlEnabled") ? "right" : "left";
    return T({
      dragEnabled: !1,
      focusStateEnabled: !1,
      deferRendering: this.option("deferRendering"),
      hideOnOutsideClick: (t) => {
        var i = this.$element(), n = g(t.target).closest(".".concat(yE));
        return !n.is(i);
      },
      showTitle: !1,
      animation: {
        show: {
          type: "fade",
          duration: 0,
          from: 0,
          to: 1
        },
        hide: {
          type: "fade",
          duration: 400,
          from: 1,
          to: 0
        }
      },
      _ignoreFunctionValueDeprecation: !0,
      width: () => Zd(this.$element()),
      height: "auto",
      shading: !1,
      position: {
        of: this.$element(),
        collision: "flipfit",
        my: e + " top",
        at: e + " bottom"
      },
      _wrapperClassExternal: zQ
    }, this._options.cache("dropDownOptions"), {
      visible: this.option("opened")
    });
  },
  _listOptions() {
    var e = this.option("selectedItemKey"), t = this.option("useSelectMode");
    return {
      selectionMode: t ? "single" : "none",
      wrapItemText: this.option("wrapItemText"),
      focusStateEnabled: this.option("focusStateEnabled"),
      hoverStateEnabled: this.option("hoverStateEnabled"),
      useItemTextAsTitle: this.option("useItemTextAsTitle"),
      onContentReady: () => this._fireContentReadyAction(),
      selectedItemKeys: x(e) && t ? [e] : [],
      grouped: this.option("grouped"),
      groupTemplate: this.option("groupTemplate"),
      keyExpr: this._getKey(),
      noDataText: this.option("noDataText"),
      displayExpr: this.option("displayExpr"),
      itemTemplate: this.option("itemTemplate"),
      items: this.option("items"),
      dataSource: this._dataSource,
      onItemClick: (i) => {
        this.option("useSelectMode") || (this._lastSelectedItemData = i.itemData), this.option("selectedItemKey", this._keyGetter(i.itemData));
        var n = this._fireItemClickAction(i);
        n !== !1 && (this.toggle(!1), this._buttonGroup.focus());
      }
    };
  },
  _upDownKeyHandler() {
    return this._popup && this._popup.option("visible") && this._list ? this._list.focus() : this.open(), !0;
  },
  _escHandler() {
    return this.close(), this._buttonGroup.focus(), !0;
  },
  _tabHandler() {
    return this.close(), !0;
  },
  _renderPopup() {
    var e = g("<div>");
    this.$element().append(e), this._popup = this._createComponent(e, an, this._popupOptions()), this._popup.$content().addClass(NQ), this._popup.$wrapper().addClass(HQ), this._popup.on("hiding", this._popupHidingHandler.bind(this)), this._popup.on("showing", this._popupShowingHandler.bind(this)), this._bindInnerWidgetOptions(this._popup, "dropDownOptions");
  },
  _popupHidingHandler() {
    this.option("opened", !1), this._setAriaExpanded(!1);
  },
  _popupOptionChanged: function(e) {
    var t = Mt.getOptionsFromContainer(e);
    this._setPopupOption(t);
    var i = Object.keys(t);
    (i.indexOf("width") !== -1 || i.indexOf("height") !== -1) && this._dimensionChanged();
  },
  _dimensionChanged: function() {
    var e = Wv(this.option("dropDownOptions.width"));
    e === void 0 && this._setPopupOption("width", () => Zd(this.$element()));
  },
  _setPopupOption: function(e, t) {
    this._setWidgetOption("_popup", arguments);
  },
  _popupShowingHandler() {
    this.option("opened", !0), this._setAriaExpanded(!0);
  },
  _setAriaExpanded(e) {
    this._ariaExpandedElements.forEach((t) => {
      this.setAria({
        expanded: e,
        owns: e ? this._popupContentId : void 0
      }, g(t));
    });
  },
  _renderButtonGroup() {
    var e = this._buttonGroup && this._buttonGroup.$element() || g("<div>");
    this._buttonGroup || this.$element().append(e), this._buttonGroup = this._createComponent(e, IR, this._buttonGroupOptions());
    var t = this._buttonGroup.$element().find(".dx-button").toArray();
    this._ariaExpandedElements = [...t, this.$element()], this._buttonGroup.registerKeyHandler("downArrow", this._upDownKeyHandler.bind(this)), this._buttonGroup.registerKeyHandler("tab", this._tabHandler.bind(this)), this._buttonGroup.registerKeyHandler("upArrow", this._upDownKeyHandler.bind(this)), this._buttonGroup.registerKeyHandler("escape", this._escHandler.bind(this)), this._bindInnerWidgetOptions(this._buttonGroup, "buttonGroupOptions"), this._setAriaExpanded(this.option("opened"));
  },
  _updateArrowClass() {
    var e = this.option("splitButton") || this.option("showArrowIcon");
    this.$element().toggleClass($Q, e);
  },
  toggle(e) {
    return this._popup || (this._renderPopup(), this._renderContent()), this._popup.toggle(e);
  },
  open() {
    return this.toggle(!0);
  },
  close() {
    return this.toggle(!1);
  },
  _setListOption(e, t) {
    this._list && this._list.option(e, t);
  },
  _getDisplayValue(e) {
    var t = !Me(e), i = t ? e : this._displayGetter(e);
    return Me(i) ? "" : String(ct(i, ""));
  },
  _updateActionButton(e) {
    this.option("useSelectMode") && this.option({
      text: this._getDisplayValue(e),
      icon: Me(e) ? e.icon : void 0
    }), this._setOptionWithoutOptionChange("selectedItem", e), this._setOptionWithoutOptionChange("selectedItemKey", this._keyGetter(e));
  },
  _clean() {
    this._list && this._list.$element().remove(), this._popup && this._popup.$element().remove();
  },
  _selectedItemKeyChanged(e) {
    this._setListOption("selectedItemKeys", this.option("useSelectMode") && x(e) ? [e] : []);
    var t = this.option("selectedItem");
    this._loadSelectedItem().done((i) => {
      this._updateActionButton(i), this._displayGetter(t) !== this._displayGetter(i) && this._fireSelectionChangedAction({
        previousValue: t,
        value: i
      });
    });
  },
  _actionButtonOptionChanged(e) {
    var {
      name: t,
      value: i
    } = e, n = {};
    n[t] = i, this._buttonGroup.option("items[0]", T({}, this._actionButtonConfig(), n)), this._popup && this._popup.repaint();
  },
  _selectModeChanged(e) {
    if (e) {
      this._setListOption("selectionMode", "single");
      var t = this.option("selectedItemKey");
      this._setListOption("selectedItemKeys", x(t) ? [t] : []), this._selectedItemKeyChanged(this.option("selectedItemKey"));
    } else
      this._setListOption("selectionMode", "none"), this.option({
        selectedItemKey: void 0,
        selectedItem: void 0
      }), this._actionButtonOptionChanged({
        text: this.option("text")
      });
  },
  _updateItemCollection(e) {
    var t = this.option("selectedItemKey");
    this._setListOption("selectedItem", null), this._setWidgetOption("_list", [e]), x(t) && this._loadSelectedItem().done((i) => {
      this._setListOption("selectedItemKeys", [t]), this._setListOption("selectedItem", i);
    }).fail((i) => {
      this._setListOption("selectedItemKeys", []);
    }).always(this._updateActionButton.bind(this));
  },
  _updateDataSource: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._dataSource.items();
    this._dataSource = void 0, this._itemsToDataSource(e), this._updateKeyExpr();
  },
  _updateKeyExpr: function() {
    this._compileKeyGetter(), this._setListOption("keyExpr", this._getKey());
  },
  focus: function() {
    this._buttonGroup.focus();
  },
  _optionChanged(e) {
    var t, {
      name: i,
      value: n
    } = e;
    switch (i) {
      case "useSelectMode":
        this._selectModeChanged(n);
        break;
      case "splitButton":
        this._updateArrowClass(), this._renderButtonGroup();
        break;
      case "displayExpr":
        this._compileDisplayGetter(), this._setListOption(i, n), this._updateActionButton(this.option("selectedItem"));
        break;
      case "keyExpr":
        this._updateDataSource();
        break;
      case "buttonGroupOptions":
        this._innerWidgetOptionChanged(this._buttonGroup, e);
        break;
      case "dropDownOptions":
        if (e.fullName === "dropDownOptions.visible")
          break;
        e.value.visible !== void 0 && delete e.value.visible, this._popupOptionChanged(e), this._innerWidgetOptionChanged(this._popup, e);
        break;
      case "opened":
        this.toggle(n);
        break;
      case "focusStateEnabled":
      case "hoverStateEnabled":
        this._setListOption(i, n), this._buttonGroup.option(i, n), this.callBase(e);
        break;
      case "items":
        this._updateDataSource(this.option("items")), this._updateItemCollection(i);
        break;
      case "dataSource":
        Array.isArray(n) ? this._updateDataSource(this.option("dataSource")) : (this._initDataSource(), this._updateKeyExpr()), this._updateItemCollection(i);
        break;
      case "icon":
      case "text":
        this._actionButtonOptionChanged(e);
        break;
      case "showArrowIcon":
        this._updateArrowClass(), this._renderButtonGroup(), this._popup && this._popup.repaint();
        break;
      case "width":
      case "height":
        this.callBase(e), (t = this._popup) === null || t === void 0 || t.repaint();
        break;
      case "stylingMode":
        this._buttonGroup.option(i, n);
        break;
      case "itemTemplate":
      case "grouped":
      case "noDataText":
      case "groupTemplate":
      case "wrapItemText":
      case "useItemTextAsTitle":
        this._setListOption(i, n);
        break;
      case "dropDownContentTemplate":
        this._renderContent();
        break;
      case "selectedItemKey":
        this._selectedItemKeyChanged(n);
        break;
      case "selectedItem":
        break;
      case "onItemClick":
        this._createItemClickAction();
        break;
      case "onButtonClick":
        this._createActionClickAction();
        break;
      case "onSelectionChanged":
        this._createSelectionChangedAction();
        break;
      case "deferRendering":
        this.toggle(this.option("opened"));
        break;
      case "tabIndex":
        this._buttonGroup.option(i, n);
        break;
      default:
        this.callBase(e);
    }
  }
}).include(Rc);
We("dxDropDownButton", KQ);
function UQ(e, t) {
  const i = (u) => u || 1, n = [], r = (e[0] || []).reduce((u, d) => u + i(d.colspan), 0), a = ((u) => {
    let d = 0, c = 0;
    return () => {
      const h = u[d] || [], p = h[c++];
      return c >= h.length && (d++, c = 0), p && (p.colspan = i(p.colspan), p.rowspan = i(p.rowspan)), p;
    };
  })(e), o = (u, d, c) => {
    const h = n[u] = n[u] || [];
    if (h[d] = c, c.colspan > 1 || c.rowspan > 1) {
      const p = ((f) => T({}, f, t))(c);
      for (let f = 1; f < c.colspan; f++)
        o(u, d + f, p);
      for (let f = 1; f < c.rowspan; f++)
        for (let v = 0; v < c.colspan; v++)
          o(u + f, d + v, p);
    }
  };
  let s = a(), l = 0;
  for (; s; ) {
    for (let u = 0; u < r && s; u++)
      n[l] && n[l][u] || (o(l, u, s), u += s.colspan - 1, s = a());
    l++;
  }
  return n;
}
const jQ = ze.inherit({
  ctor(e, t, i) {
    this._exportController = e, this._initialColumnWidthsByColumnIndex = t, this._selectedRowsOnly = i;
  },
  _getGroupValue(e) {
    const {
      key: t,
      data: i,
      rowType: n,
      groupIndex: r,
      summaryCells: a
    } = e, o = this._options.groupColumns[r], s = xe.getDisplayValue(o, o.deserializeValue ? o.deserializeValue(t[r]) : t[r], i, n);
    let l = `${o.caption}: ${xe.formatValue(s, o)}`;
    return a && a[0] && a[0].length && (l += " " + xe.getGroupRowSummaryText(a[0], this._options.summaryTexts)), l;
  },
  _correctCellIndex: (e) => e,
  _initOptions() {
    const e = this._exportController, t = e._columnsController.getGroupColumns(), i = e.option("export.excelWrapTextEnabled");
    this._options = {
      columns: e._getColumns(this._initialColumnWidthsByColumnIndex),
      groupColumns: t,
      items: this._selectedRowsOnly || e._selectionOnly ? e._getSelectedItems() : e._getAllItems(),
      getVisibleIndex: e._columnsController.getVisibleIndex.bind(e._columnsController),
      isHeadersVisible: e.option("showColumnHeaders"),
      summaryTexts: e.option("summary.texts"),
      customizeExportData: e.option("customizeExportData"),
      rtlEnabled: e.option("rtlEnabled"),
      wrapTextEnabled: x(i) ? i : !!e.option("wordWrapEnabled"),
      customizeExcelCell: e.option("export.customizeExcelCell")
    };
  },
  hasCustomizeExcelCell() {
    return x(this._options.customizeExcelCell);
  },
  customizeExcelCell(e, t) {
    this._options.customizeExcelCell && (e.gridCell = t, x(this._exportController) && x(this._exportController.component) && (e.component = this._exportController.component), this._options.customizeExcelCell(e));
  },
  getHeaderStyles: () => [{
    bold: !0,
    alignment: "center",
    wrapText: !0
  }, {
    bold: !0,
    alignment: "left",
    wrapText: !0
  }, {
    bold: !0,
    alignment: "right",
    wrapText: !0
  }],
  getGroupRowStyle() {
    return {
      bold: !0,
      wrapText: !1,
      alignment: $r(this._options.rtlEnabled)
    };
  },
  getColumnStyles() {
    const {
      wrapTextEnabled: e
    } = this._options, t = [];
    return this.getColumns().forEach((i) => {
      t.push({
        alignment: i.alignment || "left",
        format: i.format,
        wrapText: e,
        dataType: i.dataType
      });
    }), t;
  },
  getStyles() {
    return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()];
  },
  _getTotalCellStyleId(e) {
    var t;
    const i = ((t = this.getColumns()[e]) === null || t === void 0 ? void 0 : t.alignment) || "right";
    return this.getHeaderStyles().map((n) => n.alignment).indexOf(i);
  },
  getStyleId(e, t) {
    return e < this.getHeaderRowCount() ? 0 : this.isTotalCell(e - this.getHeaderRowCount(), t) ? this._getTotalCellStyleId(t) : this.isGroupRow(e - this.getHeaderRowCount()) ? this.getHeaderStyles().length + this.getColumns().length : t + this.getHeaderStyles().length;
  },
  getColumns(e) {
    const {
      columns: t
    } = this._options;
    return e ? t : t[t.length - 1];
  },
  getColumnsWidths() {
    const e = this.getColumns();
    return x(e) ? e.map((t) => t.width) : void 0;
  },
  getRowsCount() {
    return this._options.items.length + this.getHeaderRowCount();
  },
  getHeaderRowCount() {
    return this.isHeadersVisible() ? this._options.columns.length - 1 : 0;
  },
  isGroupRow(e) {
    return e < this._options.items.length && this._options.items[e].rowType === "group";
  },
  getGroupLevel(e) {
    const t = this._options.items[e - this.getHeaderRowCount()], i = t && t.groupIndex;
    return t && t.rowType === "totalFooter" ? 0 : x(i) ? i : this._options.groupColumns.length;
  },
  getCellType(e, t) {
    const i = this.getColumns();
    if (e < this.getHeaderRowCount())
      return "string";
    if (e -= this.getHeaderRowCount(), t < i.length) {
      const n = this._options.items.length && this._options.items[e], r = i[t];
      return n && n.rowType === "data" && isFinite(n.values[this._correctCellIndex(t)]) && !x(r.customizeText) ? x(r.lookup) ? r.lookup.dataType : r.dataType : "string";
    }
  },
  ready() {
    const e = this;
    e._initOptions();
    const t = e._options;
    return ge(t.items).done((i) => {
      t.customizeExportData && t.customizeExportData(e.getColumns(e.getHeaderRowCount() > 1), i), t.items = i;
    }).fail(() => {
      t.items = [];
    });
  },
  _convertFromGridGroupSummaryItems(e) {
    if (x(e) && e.length > 0)
      return e.map((t) => ({
        value: t.value,
        name: t.name
      }));
  },
  getCellData(e, t, i) {
    let n, r;
    const a = {
      cellSourceData: {},
      value: n
    }, o = this.getColumns(), s = this._correctCellIndex(t);
    if (e < this.getHeaderRowCount())
      r = this.getColumns(!0)[e][t], a.cellSourceData.rowType = "header", a.cellSourceData.column = r && r.gridColumn, a.value = r && r.caption;
    else {
      e -= this.getHeaderRowCount();
      const l = this._options.items.length && this._options.items[e];
      if (l) {
        const u = l.values;
        switch (a.cellSourceData.rowType = l.rowType, a.cellSourceData.column = o[t] && o[t].gridColumn, l.rowType) {
          case "groupFooter":
          case "totalFooter":
            s < u.length && (n = u[s], x(n) ? (a.cellSourceData.value = n.value, a.cellSourceData.totalSummaryItemName = n.name, a.value = xe.getSummaryText(n, this._options.summaryTexts)) : a.cellSourceData.value = void 0);
            break;
          case "group":
            if (a.cellSourceData.groupIndex = l.groupIndex, t < 1)
              a.cellSourceData.column = this._options.groupColumns[l.groupIndex], a.cellSourceData.value = l.key[l.groupIndex], a.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(l.summaryCells[0]), a.value = this._getGroupValue(l);
            else {
              const d = l.values[s];
              if (Array.isArray(d)) {
                a.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(d), n = "";
                for (let c = 0; c < d.length; c++)
                  n += (c > 0 ? i ? `
` : ` 
 ` : "") + xe.getSummaryText(d[c], this._options.summaryTexts);
                a.value = n;
              } else
                a.cellSourceData.value = void 0;
            }
            break;
          default:
            if (r = o[t], r) {
              const d = u[s], c = xe.getDisplayValue(r, d, l.data, l.rowType);
              !isFinite(c) || x(r.customizeText) ? i && x(r.customizeText) && r.customizeText === this._exportController._columnsController.getCustomizeTextByDataType("boolean") ? a.value = c : a.value = xe.formatValue(c, r) : a.value = c, a.cellSourceData.value = d;
            }
            a.cellSourceData.data = l.data;
        }
      }
    }
    return a;
  },
  isHeadersVisible() {
    return this._options.isHeadersVisible;
  },
  isTotalCell(e, t) {
    const {
      items: i
    } = this._options, n = i[e], r = this._correctCellIndex(t), a = n.summaryCells && n.summaryCells[r] && n.summaryCells[r].length > 0 && n.summaryCells[r][0].alignByColumn;
    return n && n.rowType === "groupFooter" || n.rowType === "totalFooter" || a;
  },
  getCellMerging(e, t) {
    const {
      columns: i
    } = this._options, n = i[e] && i[e][t];
    return n ? {
      colspan: (n.exportColspan || 1) - 1,
      rowspan: (n.rowspan || 1) - 1
    } : {
      colspan: 0,
      rowspan: 0
    };
  },
  getFrozenArea() {
    return {
      x: 0,
      y: this.getHeaderRowCount()
    };
  }
}), qQ = xe.ViewController.inherit({}).inherit({
  _getEmptyCell: () => ({
    caption: "",
    colspan: 1,
    rowspan: 1
  }),
  _updateColumnWidth(e, t) {
    e.width = t;
  },
  _getColumns(e) {
    let t = [], i, n;
    const r = this._columnsController, a = r.getRowCount();
    for (i = 0; i <= a; i++) {
      const o = [];
      n = r.getVisibleColumns(i, !0);
      let s;
      if (i === a)
        if (this._updateLockCount)
          s = e;
        else {
          const l = this._getColumnWidths(this._headersView, this._rowsView);
          if (l && l.length) {
            s = {};
            for (let u = 0; u < n.length; u++)
              s[n[u].index] = l[u];
          }
        }
      for (let l = 0; l < n.length; l++) {
        const u = T({}, n[l], {
          dataType: n[l].dataType === "datetime" ? "date" : n[l].dataType,
          gridColumn: n[l]
        });
        if (this._needColumnExporting(u)) {
          const d = this._calculateExportColspan(u);
          x(d) && (u.exportColspan = d), s && this._updateColumnWidth(u, s[u.index]), o.push(u);
        }
      }
      t.push(o);
    }
    return n = t[a], t = UQ(t.slice(0, -1), this._getEmptyCell()), t.push(n), t;
  },
  _calculateExportColspan(e) {
    if (!e.isBand)
      return;
    const t = this._columnsController.getChildrenByBandColumn(e.index, !0);
    if (x(t))
      return t.reduce((i, n) => this._needColumnExporting(n) ? i + (this._calculateExportColspan(n) || 1) : i, 0);
  },
  _needColumnExporting: (e) => !e.command && (e.allowExporting || e.allowExporting === void 0),
  _getFooterSummaryItems(e, t) {
    const i = [];
    let n = 1, r = 0;
    do {
      const a = [];
      for (let o = 0; o < e.length; o++) {
        const s = e[o], l = s.length;
        n < l && (n = l), a.push(s[r]);
      }
      i.push({
        values: a,
        rowType: t ? "totalFooter" : "groupFooter"
      });
    } while (r++ < n - 1);
    return i;
  },
  _hasSummaryGroupFooters() {
    const e = this.option("summary.groupItems");
    if (x(e)) {
      for (let t = 0; t < e.length; t++)
        if (e[t].showInGroupFooter)
          return !0;
    }
    return !1;
  },
  _getItemsWithSummaryGroupFooters(e) {
    let t = [], i = [], n = [];
    for (let r = 0; r < e.length; r++) {
      const a = e[r];
      a.rowType === "groupFooter" ? (n = this._getFooterSummaryItems(a.summaryCells), t = t.concat(i, n), i = []) : i.push(a);
    }
    return t.length ? t : i;
  },
  _updateGroupValuesWithSummaryByColumn(e) {
    let t = [];
    for (let i = 0; i < e.length; i++) {
      const n = e[i], {
        summaryCells: r
      } = n;
      if (n.rowType === "group" && r && r.length > 1) {
        const a = n.values.length;
        for (let o = 1; o < r.length; o++)
          for (let s = 0; s < r[o].length; s++) {
            const l = r[o][s];
            l && l.alignByColumn && (Array.isArray(t[o - a]) || (t[o - a] = []), t[o - a].push(l));
          }
        t.length > 0 && (n.values.push(...t), t = []);
      }
    }
  },
  _processUnExportedItems(e) {
    const t = this._columnsController.getVisibleColumns(null, !0), i = this._columnsController.getGroupColumns();
    let n, r;
    for (let a = 0; a < e.length; a++) {
      const o = e[a];
      let s = !1;
      n = [], r = [];
      for (let l = 0; l < t.length; l++) {
        const u = t[l];
        if (s || (s = ["detailExpand", "buttons"].includes(u.type)), this._needColumnExporting(u) && (o.values && (o.rowType === "group" && !n.length ? n.push(o.key[o.groupIndex]) : n.push(o.values[l])), o.summaryCells))
          if (o.rowType === "group" && !r.length) {
            const d = l - i.length + o.groupIndex;
            r.push(o.summaryCells[s ? d : d + 1]);
          } else
            r.push(o.summaryCells[l]);
      }
      n.length && (o.values = n), r.length && (o.summaryCells = r);
    }
  },
  _getAllItems(e) {
    const t = this, i = new U(), n = this.getController("data"), r = n.footerItems(), a = r.length && r[0], o = t.option("summary.totalItems");
    let s;
    return ge(e).done((l) => {
      n.loadAll(l).done((u, d) => {
        t._updateGroupValuesWithSummaryByColumn(u), t._hasSummaryGroupFooters() && (u = t._getItemsWithSummaryGroupFooters(u)), s = a && a.summaryCells, x(d) && o && (s = t._getSummaryCells(o, d));
        const c = a && t._getFooterSummaryItems(s, !0);
        c && (u = u.concat(c)), t._processUnExportedItems(u), i.resolve(u);
      }).fail(i.reject);
    }).fail(i.reject), i;
  },
  _getSummaryCells(e, t) {
    const i = this.getController("data"), n = i._columnsController;
    return i._calculateSummaryCells(e, t, n.getVisibleColumns(null, !0), (r, a) => i._isDataColumn(a) ? a.index : -1);
  },
  _getSelectedItems() {
    const t = this.getController("selection").getSelectedRowsData();
    return this._getAllItems(t);
  },
  _getColumnWidths: (e, t) => e && e.isVisible() ? e.getColumnWidths() : t.getColumnWidths(),
  init() {
    this._columnsController = this.getController("columns"), this._rowsView = this.getView("rowsView"), this._headersView = this.getView("columnHeadersView"), this.createAction("onExporting", {
      excludeValidators: ["disabled", "readOnly"]
    }), this.createAction("onExported", {
      excludeValidators: ["disabled", "readOnly"]
    }), this.createAction("onFileSaving", {
      excludeValidators: ["disabled", "readOnly"]
    });
  },
  callbackNames: () => ["selectionOnlyChanged"],
  getDataProvider(e) {
    const t = this._getColumnWidths(this._headersView, this._rowsView);
    let i;
    if (t && t.length) {
      i = {};
      const n = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), !0);
      for (let r = 0; r < n.length; r++)
        i[n[r].index] = t[r];
    }
    return new jQ(this, i, e);
  },
  exportToExcel(e) {
    this._selectionOnly = e, BQ(this.component.getDataProvider(), {
      fileName: this.option("export.fileName"),
      format: "xlsx",
      selectedRowsOnly: !!e,
      autoFilterEnabled: !!this.option("export.excelFilterEnabled"),
      rtlEnabled: this.option("rtlEnabled"),
      exportingAction: this.getAction("onExporting"),
      exportedAction: this.getAction("onExported"),
      fileSavingAction: this.getAction("onFileSaving")
    }, kQ.getData);
  },
  exportTo(e, t) {
    this._selectionOnly = e;
    const i = this.getAction("onExporting"), n = {
      selectedRowsOnly: !!e,
      format: t,
      fileName: this.option("export.fileName"),
      cancel: !1
    };
    ce(i) && i(n);
  },
  publicMethods: () => ["getDataProvider", "exportToExcel"],
  selectionOnly(e) {
    if (x(e))
      this._isSelectedRows = e, this.selectionOnlyChanged.fire();
    else
      return this._isSelectedRows;
  }
});
xe.registerModule("export", {
  defaultOptions: () => ({
    export: {
      enabled: !1,
      fileName: "DataGrid",
      excelFilterEnabled: !1,
      formats: ["xlsx"],
      excelWrapTextEnabled: void 0,
      allowExportSelectedData: !1,
      texts: {
        exportTo: q.format("dxDataGrid-exportTo"),
        exportAll: q.format("dxDataGrid-exportAll"),
        exportSelectedRows: q.format("dxDataGrid-exportSelectedRows")
      }
    }
  }),
  controllers: {
    export: qQ
  },
  extenders: {
    controllers: {
      editing: {
        callbackNames() {
          const e = this.callBase();
          return x(e) ? e.push("editingChanged") : ["editingChanged"];
        },
        _updateEditButtons() {
          this.callBase(), this.editingChanged.fire(this.hasChanges());
        }
      }
    },
    views: {
      headerPanel: {
        _getToolbarItems() {
          const e = this.callBase(), t = this._getExportToolbarButton();
          return t && (e.push(t), this._correctItemsPosition(e)), e;
        },
        _getExportToolbarButton() {
          const e = this._getExportToolbarItems();
          if (e.length === 0)
            return null;
          const t = {
            name: "exportButton",
            location: "after",
            locateInMenu: "auto",
            sortIndex: 30,
            options: {
              items: e
            }
          };
          if (e.length === 1) {
            const i = Object.assign(Object.assign({}, e[0]), {
              hint: e[0].text,
              elementAttr: {
                class: "dx-datagrid-export-button"
              }
            });
            t.widget = "dxButton", t.showText = "inMenu", t.options = i;
          } else {
            const i = {
              icon: "export",
              displayExpr: "text",
              items: e,
              hint: this.option("export.texts.exportTo"),
              elementAttr: {
                class: "dx-datagrid-export-button"
              },
              dropDownOptions: {
                width: "auto",
                _wrapperClassExternal: "dx-datagrid-export-menu"
              }
            };
            t.options = i, t.widget = "dxDropDownButton", t.menuItemTemplate = (n, r, a) => {
              this._createComponent(g(a), jo, {
                items: e
              });
            };
          }
          return t;
        },
        _getExportToolbarItems() {
          var e;
          const t = this.option("export"), i = this.option("export.texts"), n = (e = this.option("export.formats")) !== null && e !== void 0 ? e : [];
          if (!t.enabled)
            return [];
          const r = [];
          return n.forEach((a) => {
            let o = "exportTo", s = a.toUpperCase(), l = "export";
            a === "xlsx" && (o = "exportToExcel", s = "Excel", l = "xlsxfile"), a === "pdf" && (l = "pdffile"), r.push({
              text: Ji(i.exportAll, s),
              icon: l,
              onClick: () => {
                this._exportController[o](!1, a);
              }
            }), t.allowExportSelectedData && r.push({
              text: Ji(i.exportSelectedRows, s),
              icon: "exportselected",
              onClick: () => {
                this._exportController[o](!0, a);
              }
            });
          }), r;
        },
        _correctItemsPosition(e) {
          e.sort((t, i) => t.sortIndex - i.sortIndex);
        },
        _isExportButtonVisible() {
          return this.option("export.enabled");
        },
        optionChanged(e) {
          this.callBase(e), e.name === "export" && (e.handled = !0, this._invalidate());
        },
        init() {
          const e = this;
          this.callBase(), this._exportController = this.getController("export"), this._editingController = this.getController("editing"), this._editingController.editingChanged.add((t) => {
            e.setToolbarItemDisabled("exportButton", t);
          });
        },
        isVisible() {
          return this.callBase() || this._isExportButtonVisible();
        }
      }
    }
  }
});
var XQ = (e, t, i) => {
  var {
    isRemoteFiltering: n,
    dateSerializationFormat: r,
    getSelector: a
  } = i, {
    selector: o
  } = e, s = ce(o) ? o : a(o), l = s ? s(t) : t[o], u = n && Qt(l) ? Dt.serializeDate(l, r) : l;
  return {
    getter: s,
    rawValue: l,
    safeValue: u
  };
}, YQ = {
  getSortFilterValue: XQ
}, fl = "dx-row-focused", ZQ = ".dx-row." + fl, QQ = "table", EE = "dx-cell-focus-disabled", JQ = at.ViewController.inherit(function() {
  var e = {
    init: function() {
      this._dataController = this.getController("data"), this._keyboardController = this.getController("keyboardNavigation"), this.component._optionsByReference.focusedRowKey = !0;
    },
    optionChanged: function(t) {
      if (t.name === "focusedRowIndex") {
        var i = this.option("focusedRowKey");
        this._focusRowByIndex(t.value), this._triggerFocusedRowChangedIfNeed(i, t.value), t.handled = !0;
      } else if (t.name === "focusedRowKey") {
        if (t.handled = !0, Array.isArray(t.value) && JSON.stringify(t.value) === JSON.stringify(t.previousValue))
          return;
        var n = this.option("focusedRowIndex");
        this._focusRowByKey(t.value), this._triggerFocusedRowChangedIfNeed(t.value, n);
      } else
        t.name === "focusedColumnIndex" || t.name === "focusedRowEnabled" || t.name === "autoNavigateToFocusedRow" ? t.handled = !0 : this.callBase(t);
    },
    _triggerFocusedRowChangedIfNeed: function(t, i) {
      var n = this.getFocusedRowIndexByKey(t);
      if (i === n) {
        var r = this._dataController.getRowIndexByKey(t);
        if (r >= 0) {
          var a = g(this.getView("rowsView").getRowElement(r));
          this.getController("keyboardNavigation")._fireFocusedRowChanged(a, i);
        }
      }
    },
    isAutoNavigateToFocusedRow: function() {
      return this.option("scrolling.mode") !== "infinite" && this.option("autoNavigateToFocusedRow");
    },
    _focusRowByIndex: function(t, i) {
      this.option("focusedRowEnabled") && (t = t !== void 0 ? t : this.option("focusedRowIndex"), t < 0 ? this.isAutoNavigateToFocusedRow() && this._resetFocusedRow() : this._focusRowByIndexCore(t, i));
    },
    _focusRowByIndexCore: function(t, i) {
      var n = this.getController("data"), r = n.pageSize(), a = () => {
        if (this._isValidFocusedRowIndex(t)) {
          var s = t - n.getRowIndexOffset(!0);
          if (!i || i.paging && !i.filtering) {
            var l = n._getLastItemIndex();
            s = Math.min(s, l);
          }
          var u = n.getKeyByRowIndex(s, !0);
          x(u) && !this.isRowFocused(u) && this.option("focusedRowKey", u);
        }
      };
      if (r >= 0)
        if (this._isLocalRowIndex(t))
          a();
        else {
          var o = Math.floor(t / n.pageSize());
          ge(n.pageIndex(o), n.waitReady()).done(() => {
            a();
          });
        }
    },
    _isLocalRowIndex(t) {
      var i = this.getController("data"), n = this.getController("keyboardNavigation")._isVirtualScrolling();
      if (n) {
        var r = Math.floor(t / i.pageSize()), a = i.virtualItemsCount(), o = a ? a.begin : -1, s = i.getVisibleRows().length + i.getRowIndexOffset(), l = Math.ceil(s / i.pageSize());
        return o <= t && l > r;
      }
      return !0;
    },
    _setFocusedRowKeyByIndex: function(t) {
      var i = this.getController("data");
      if (this._isValidFocusedRowIndex(t)) {
        var n = Math.min(t - i.getRowIndexOffset(), i.items().length - 1), r = i.getKeyByRowIndex(n);
        x(r) && !this.isRowFocused(r) && this.option("focusedRowKey", r);
      }
    },
    _focusRowByKey: function(t) {
      x(t) ? this._navigateToRow(t, !0) : this._resetFocusedRow();
    },
    _resetFocusedRow: function() {
      var t = this.option("focusedRowKey"), i = x(t);
      if (!(!i && this.option("focusedRowIndex") < 0)) {
        var n = this.getController("keyboardNavigation");
        i && this.option("focusedRowKey", null), n.setFocusedRowIndex(-1), this.option("focusedRowIndex", -1), this.getController("data").updateItems({
          changeType: "updateFocusedRow",
          focusedRowKey: null
        }), n._fireFocusedRowChanged(void 0, -1);
      }
    },
    _isValidFocusedRowIndex: function(t) {
      var i = this.getController("data"), n = i.getVisibleRows()[t];
      return !n || n.rowType === "data" || n.rowType === "group";
    },
    publicMethods: function() {
      return ["navigateToRow", "isRowFocused"];
    },
    navigateToRow: function(t) {
      return this.isAutoNavigateToFocusedRow() || this.option("focusedRowIndex", -1), this._navigateToRow(t);
    },
    _navigateToRow: function(t, i) {
      var n = this, r = n.getController("data"), a = n.isAutoNavigateToFocusedRow(), o = new U();
      if (t === void 0 || !r.dataSource())
        return o.reject().promise();
      var s = n.getFocusedRowIndexByKey(t);
      return !a && i || s >= 0 ? n._navigateTo(t, o, i) : r.getPageIndexByKey(t).done(function(l) {
        if (l < 0) {
          o.resolve(-1);
          return;
        }
        l === r.pageIndex() ? r.reload().done(function() {
          n.isRowFocused(t) && r.getRowIndexByKey(t) >= 0 ? o.resolve(n.getFocusedRowIndexByKey(t)) : n._navigateTo(t, o, i);
        }).fail(o.reject) : r.pageIndex(l).done(function() {
          n._navigateTo(t, o, i);
        }).fail(o.reject);
      }).fail(o.reject), o.promise();
    },
    _navigateTo: function(t, i, n) {
      var r = this.getController("data").getRowIndexByKey(t), a = ae.isVirtualRowRendering(this), o = this.isAutoNavigateToFocusedRow();
      o && a && r < 0 ? this._navigateToVirtualRow(t, i, n) : this._navigateToVisibleRow(t, i, n);
    },
    _navigateToVisibleRow: function(t, i, n) {
      if (n)
        this._triggerUpdateFocusedRow(t, i);
      else {
        var r = this.getFocusedRowIndexByKey(t);
        this.getView("rowsView").scrollToRowElement(t, i).done(function() {
          i.resolve(r);
        });
      }
    },
    _navigateToVirtualRow: function(t, i, n) {
      var r = this, a = this.getController("data"), o = a._rowsScrollController, s = ae.getIndexByKey(t, a.items(!0)), l = r.getView("rowsView").getScrollable();
      if (o && l && s >= 0) {
        var u = s + a.getRowIndexOffset(!0), d = o.getItemOffset(u);
        r.component.on("contentReady", function c() {
          r.component.off("contentReady", c), n ? r._triggerUpdateFocusedRow(t, i) : i.resolve(u);
        }), this.getView("rowsView").scrollTopPosition(d);
      } else
        i.resolve(-1);
    },
    _triggerUpdateFocusedRow: function(t, i) {
      var n = this.getController("data"), r = this.getFocusedRowIndexByKey(t);
      if (this._isValidFocusedRowIndex(r)) {
        var a;
        this.option("focusedRowEnabled") ? n.updateItems({
          changeType: "updateFocusedRow",
          focusedRowKey: t
        }) : a = this.getView("rowsView").scrollToRowElement(t), ge(a).done(() => {
          this.getController("keyboardNavigation").setFocusedRowIndex(r), i && i.resolve(r);
        });
      } else
        i && i.resolve(-1);
    },
    getFocusedRowIndexByKey: function(t) {
      var i = this.getController("data"), n = i.getRowIndexByKey(t, !0);
      return n >= 0 ? n + i.getRowIndexOffset(!0) : -1;
    },
    _focusRowByKeyOrIndex: function() {
      var t = this.option("focusedRowKey"), i = this.option("focusedRowIndex"), n = this.getController("keyboardNavigation"), r = this.getController("data");
      if (x(t)) {
        var a = r.getRowIndexByKey(t);
        a >= 0 ? (n._isVirtualScrolling() && (i = a + r.getRowIndexOffset()), n.setFocusedRowIndex(i), this._triggerUpdateFocusedRow(t)) : this._navigateToRow(t, !0).done((o) => {
          i >= 0 && o < 0 ? this._focusRowByIndex() : i < 0 && o >= 0 && n.setFocusedRowIndex(o);
        });
      } else
        i >= 0 && this.getController("focus")._focusRowByIndex(i);
    },
    isRowFocused: function(t) {
      var i = this.option("focusedRowKey");
      if (x(i))
        return et(t, this.option("focusedRowKey"));
    },
    updateFocusedRow: function(t) {
      var i = this, n = i._dataController.getRowIndexByKey(t.focusedRowKey), r = i.getView("rowsView"), a, o;
      B(r.getTableElements(), function(s, l) {
        var u = s === 0;
        a = g(l), i._clearPreviousFocusedRow(a, n);
        var d = i._prepareFocusedRow({
          changedItem: i._dataController.getVisibleRows()[n],
          $tableElement: a,
          focusedRowIndex: n
        });
        u && (o = d);
      }), o && r.scrollToElementVertically(o);
    },
    _clearPreviousFocusedRow: function(t, i) {
      var n = t.find(ZQ).filter((a, o) => {
        var s = g(o).closest(".".concat(this.addWidgetPrefix(QQ)));
        return t.is(s);
      });
      if (n.removeClass(fl).removeClass(EE).removeAttr("tabindex"), n.children("td").removeAttr("tabindex"), i !== 0) {
        var r = g(this.getView("rowsView").getRowElement(0));
        r.removeClass(EE).removeAttr("tabIndex");
      }
    },
    _prepareFocusedRow: function(t) {
      var i, n = t.changedItem;
      if (n && (n.rowType === "data" || n.rowType === "group")) {
        var r = t.focusedRowIndex, a = t.$tableElement, o = this.option("tabindex") || 0, s = this.getView("rowsView");
        i = g(s._getRowElements(a).eq(r)), i.addClass(fl).attr("tabindex", o);
      }
      return i;
    }
  };
  return e;
}()), eJ = {
  defaultOptions: function() {
    return {
      focusedRowEnabled: !1,
      autoNavigateToFocusedRow: !0,
      focusedRowKey: null,
      focusedRowIndex: -1,
      focusedColumnIndex: -1
    };
  },
  controllers: {
    focus: JQ
  },
  extenders: {
    controllers: {
      keyboardNavigation: {
        init: function() {
          var e = this.option("focusedRowIndex"), t = this.option("focusedColumnIndex");
          this.createAction("onFocusedRowChanging", {
            excludeValidators: ["disabled", "readOnly"]
          }), this.createAction("onFocusedRowChanged", {
            excludeValidators: ["disabled", "readOnly"]
          }), this.createAction("onFocusedCellChanging", {
            excludeValidators: ["disabled", "readOnly"]
          }), this.createAction("onFocusedCellChanged", {
            excludeValidators: ["disabled", "readOnly"]
          }), this.callBase(), this.setRowFocusType(), this._focusedCellPosition = {}, x(e) && e >= 0 && (this._focusedCellPosition.rowIndex = e), x(t) && t >= 0 && (this._focusedCellPosition.columnIndex = t);
        },
        setFocusedRowIndex: function(e) {
          var t = this.getController("data");
          this.callBase(e);
          var i = e - t.getRowIndexOffset(), n = t.getVisibleRows()[i];
          (!n || !n.isNewRow) && this.option("focusedRowIndex", e);
        },
        setFocusedColumnIndex: function(e) {
          this.callBase(e), this.option("focusedColumnIndex", e);
        },
        _escapeKeyHandler: function(e, t) {
          if (t || !this.option("focusedRowEnabled")) {
            this.callBase(e, t);
            return;
          }
          this.isCellFocusType() && (this.setRowFocusType(), this._focus(this._getCellElementFromTarget(e.originalEvent.target), !0));
        },
        _updateFocusedCellPosition: function(e, t) {
          var i = this.option("focusedRowIndex"), n = this.option("focusedColumnIndex"), r = this.callBase(e, t);
          r && r.columnIndex >= 0 && this._fireFocusedCellChanged(e, n, i);
        }
      },
      editorFactory: {
        renderFocusOverlay: function(e, t) {
          var i = this.getController("keyboardNavigation"), n = this.option("focusedRowEnabled"), r = this.getController("editing"), a;
          if (!n || !(i != null && i.isRowFocusType()) || r.isEditing())
            this.callBase(e, t);
          else if (n) {
            var o = i._getElementType(e) === "row";
            o && !e.hasClass(fl) && (a = i.getFirstValidCellInRow(e), i.focus(a));
          }
        }
      },
      columns: {
        getSortDataSourceParameters: function(e, t) {
          var i = this.callBase.apply(this, arguments), n = this.getController("data"), r = n._dataSource, a = n.store(), o = a && a.key(), s = r && r.remoteOperations() || {}, l = Object.keys(s).every((d) => !s[d]);
          if (o && (this.option("focusedRowEnabled") && this.getController("focus").isAutoNavigateToFocusedRow() !== !1 || t)) {
            o = Array.isArray(o) ? o : [o];
            var u = o.filter((d) => !this.columnOption(d, "sortOrder"));
            u.length && (i = i || [], l ? i.push({
              selector: r.getDataIndexGetter(),
              desc: !1
            }) : u.forEach((d) => i.push({
              selector: d,
              desc: !1
            })));
          }
          return i;
        }
      },
      data: {
        _applyChange: function(e) {
          if (!(e && e.changeType === "updateFocusedRow"))
            return this.callBase.apply(this, arguments);
        },
        _fireChanged: function(e) {
          if (this.callBase(e), this.option("focusedRowEnabled") && this._dataSource) {
            var t = e.changeType === "update" && e.repaintChangesOnly, i = t && e.changeTypes && e.changeTypes.indexOf("remove") >= 0;
            e.changeType === "refresh" && e.items.length || i ? (this._updatePageIndexes(), this._updateFocusedRow(e)) : e.changeType === "append" || e.changeType === "prepend" ? this._updatePageIndexes() : e.changeType === "update" && e.repaintChangesOnly && this._updateFocusedRow(e);
          }
        },
        _updatePageIndexes: function() {
          var e = this._lastRenderingPageIndex || 0, t = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;
          this._lastRenderingPageIndex = t, this._isPagingByRendering = t !== e;
        },
        isPagingByRendering: function() {
          return this._isPagingByRendering;
        },
        _updateFocusedRow: function(e) {
          var t = e.operationTypes || {}, i = this.getController("focus"), {
            reload: n,
            fullReload: r,
            pageIndex: a,
            paging: o
          } = t, s = this.getController("keyboardNavigation"), l = s._isVirtualScrolling(), u = o && !l, d = this.option("focusedRowKey"), c = i.isAutoNavigateToFocusedRow(), h = n && a === !1;
          if (h && !r && x(d))
            i._navigateToRow(d, !0).done(function(b) {
              b < 0 && i._focusRowByIndex(void 0, t);
            });
          else if (u && c) {
            var p = this.getRowIndexByKey(d), f = this.option("focusedRowIndex"), v = p >= 0, m = f >= 0, C = f === p;
            m && (C || !v) && i._focusRowByIndex(f, t);
          } else
            u && !c && this.getRowIndexByKey(d) < 0 ? this.option("focusedRowIndex", -1) : t.fullReload && i._focusRowByKeyOrIndex();
        },
        getPageIndexByKey: function(e) {
          var t = this, i = new U();
          return t.getGlobalRowIndexByKey(e).done(function(n) {
            i.resolve(n >= 0 ? Math.floor(n / t.pageSize()) : -1);
          }).fail(i.reject), i.promise();
        },
        getGlobalRowIndexByKey: function(e) {
          return this._dataSource.group() ? this._calculateGlobalRowIndexByGroupedData(e) : this._calculateGlobalRowIndexByFlatData(e);
        },
        _calculateGlobalRowIndexByFlatData: function(e, t, i) {
          var n = this, r = new U(), a = n._dataSource;
          if (Array.isArray(e))
            return r.resolve(-1).promise();
          var o = n._generateFilterByKey(e);
          return a.load({
            filter: n._concatWithCombinedFilter(o),
            skip: 0,
            take: 1
          }).done(function(s) {
            s.length > 0 ? (o = n._generateOperationFilterByKey(e, s[0], i), a.load({
              filter: n._concatWithCombinedFilter(o, t),
              skip: 0,
              take: 1,
              requireTotalCount: !0
            }).done(function(l, u) {
              r.resolve(u.totalCount);
            })) : r.resolve(-1);
          }), r.promise();
        },
        _concatWithCombinedFilter: function(e, t) {
          var i = this.getCombinedFilter();
          return ae.combineFilters([e, i, t]);
        },
        _generateBooleanFilter: function(e, t, i) {
          var {
            desc: n
          } = i;
          switch (!0) {
            case (t === !1 && n):
              return [e, "=", !0];
            case (t === !1 && !n):
              return [e, "=", null];
            case (t === !0 && !n):
            case (!_a(t) && n):
              return [e, "<>", t];
            default:
              return;
          }
        },
        _generateOperationFilterByKey: function(e, t, i) {
          var n = this, r = n.option("dateSerializationFormat"), a = n._dataSource.remoteOperations().filtering, o = n._generateFilterByKey(e, "<"), s = n._columnsController.getSortDataSourceParameters(!a, !0);
          if (i) {
            var l = n._columnsController.getGroupDataSourceParameters(!a);
            l && (s = s ? l.concat(s) : l);
          }
          return s && s.slice().reverse().forEach(function(u) {
            var {
              selector: d,
              desc: c,
              compare: h
            } = u, {
              getter: p,
              rawValue: f,
              safeValue: v
            } = YQ.getSortFilterValue(u, t, {
              isRemoteFiltering: a,
              dateSerializationFormat: r,
              getSelector: (A) => n._columnsController.columnOption(A, "selector")
            });
            if (o = [
              [d, "=", v],
              "and",
              o
            ], f === null || _a(f)) {
              var m = n._generateBooleanFilter(d, v, c);
              m && (o = [m, "or", o]);
            } else {
              var C = c ? ">" : "<", b;
              h ? b = (A) => C === "<" ? h(f, p(A)) >= 1 : h(f, p(A)) <= -1 : (b = [d, C, v], c || (b = [b, "or", [d, "=", null]])), o = [b, "or", o];
            }
          }), o;
        },
        _generateFilterByKey: function(e, t) {
          var i = this._dataSource.key(), n = [];
          if (t || (t = "="), Array.isArray(i))
            for (var r = 0; r < i.length; ++r) {
              var a = e[i[r]];
              a && (n.length > 0 && n.push("and"), n.push([i[r], t, a]));
            }
          else
            n = [i, t, e];
          return n;
        },
        _getLastItemIndex: function() {
          return this.items(!0).length - 1;
        }
      },
      editing: {
        _deleteRowCore: function(e) {
          var t = this.callBase.apply(this, arguments), i = this.getController("data"), n = i.getKeyByRowIndex(e);
          t.done(() => {
            var r = i.getRowIndexByKey(n), a = i.getVisibleRows();
            r === -1 && !a.length && this.getController("focus")._resetFocusedRow();
          });
        }
      }
    },
    views: {
      rowsView: {
        _createRow: function(e) {
          var t = this.callBase.apply(this, arguments);
          return this.option("focusedRowEnabled") && e && this.getController("focus").isRowFocused(e.key) && t.addClass(fl), t;
        },
        _checkRowKeys: function(e) {
          if (this.callBase.apply(this, arguments), this.option("focusedRowEnabled") && this.option("dataSource")) {
            var t = this._dataController.store();
            t && !t.key() && this._dataController.fireError("E1042", "Row focusing");
          }
        },
        _update: function(e) {
          e.changeType === "updateFocusedRow" ? this.option("focusedRowEnabled") && this.getController("focus").updateFocusedRow(e) : this.callBase(e);
        },
        updateFocusElementTabIndex: function(e, t) {
          var i = this.getController("keyboardNavigation").getVisibleRowIndex(), n = this._dataController.getVisibleRows()[i];
          this.option("focusedRowEnabled") && !(n != null && n.isNewRow) ? this._setFocusedRowElementTabIndex(t) : this.callBase(e);
        },
        _setFocusedRowElementTabIndex: function(e) {
          var t = this.option("focusedRowKey"), i = this.option("tabIndex") || 0, n = this._dataController, r = this._columnsController, a = n.getRowIndexByKey(t), o = this.option("focusedColumnIndex"), s = this._findRowElementForTabIndex();
          if (x(this._scrollToFocusOnResize) || (this._scrollToFocusOnResize = () => {
            this.scrollToElementVertically(this._findRowElementForTabIndex()), this.resizeCompleted.remove(this._scrollToFocusOnResize);
          }), s.attr("tabIndex", i), a >= 0 && !e && (o < 0 && (o = 0), a += n.getRowIndexOffset(), o += r.getColumnIndexOffset(), this.getController("keyboardNavigation").setFocusedCellPosition(a, o), this.getController("focus").isAutoNavigateToFocusedRow())) {
            var l = n.dataSource(), u = l && l.operationTypes();
            u && !u.paging && !n.isPagingByRendering() && (this.resizeCompleted.remove(this._scrollToFocusOnResize), this.resizeCompleted.add(this._scrollToFocusOnResize));
          }
        },
        _findRowElementForTabIndex: function() {
          var e = this.option("focusedRowKey"), t = this._dataController.getRowIndexByKey(e);
          return g(this.getRowElement(t >= 0 ? t : 0));
        },
        scrollToRowElement: function(e) {
          var t = this.getController("data").getRowIndexByKey(e), i = g(this.getRow(t));
          return this.scrollToElementVertically(i);
        },
        scrollToElementVertically: function(e) {
          var t = this.getScrollable();
          if (t && e.length) {
            var i = t.getScrollElementPosition(e, "vertical");
            return this.scrollTopPosition(i);
          }
          return new U().resolve();
        },
        scrollTopPosition: function(e) {
          var t = new U(), i = this.getScrollable();
          if (i) {
            var n = i.scrollTop(), r = () => {
              i.off("scroll", r), t.resolve();
            };
            if (e !== n)
              return i.on("scroll", r), this._dataController.resetFilterApplying(), i.scrollTo({
                top: e
              }), t.promise();
          }
          return t.resolve();
        }
      }
    }
  }
};
const tJ = Number.MAX_SAFE_INTEGER || 9007199254740991;
xe.registerModule("focus", T(!0, {}, eJ, {
  extenders: {
    controllers: {
      data: {
        changeRowExpand(e, t) {
          if (this.option("focusedRowEnabled") && Array.isArray(e) && this.isRowExpanded(e)) {
            const i = this.getController("keyboardNavigation");
            (!t || !i.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(e) && this.option("focusedRowKey", e);
          }
          return this.callBase.apply(this, arguments);
        },
        _isFocusedRowInsideGroup(e) {
          const t = this.getController("columns"), i = this.option("focusedRowKey"), n = this.getRowIndexByKey(i), r = n >= 0 && this.getVisibleRows()[n], a = t.getGroupDataSourceParameters(!0);
          if (r) {
            for (let o = 0; o < e.length; ++o)
              if (tt(a[o] && a[o].selector)(r.data) !== e[o])
                return !1;
          }
          return !0;
        },
        _getGroupPath(e, t) {
          const i = [];
          let n = [e];
          for (; n && n[0] && t; ) {
            const r = n[0];
            r.key !== void 0 && i.push(r.key), n = r.items, t--;
          }
          return i;
        },
        _expandGroupByPath(e, t, i) {
          const n = new U();
          return i++, e.expandRow(t.slice(0, i)).done(() => {
            i === t.length ? n.resolve() : e._expandGroupByPath(e, t, i).done(n.resolve).fail(n.reject);
          }).fail(n.reject), n.promise();
        },
        _calculateGlobalRowIndexByGroupedData(e) {
          const t = this, i = t._dataSource, n = t._generateFilterByKey(e), r = new U(), a = Array.isArray(e), o = i.group();
          return a ? r.resolve(-1).promise() : i._grouping._updatePagingOptions ? (i.load({
            filter: t._concatWithCombinedFilter(n),
            group: o
          }).done((s) => {
            if (!s || s.length === 0 || !x(s[0].key) || s[0].key === -1)
              return r.resolve(-1).promise();
            const l = t._getGroupPath(s[0], o.length);
            t._expandGroupByPath(t, l, 0).done(() => {
              t._calculateExpandedRowGlobalIndex(r, e, l, o);
            }).fail(r.reject);
          }).fail(r.reject), r.promise()) : (t._calculateGlobalRowIndexByFlatData(e, null, !0).done(r.resolve).fail(r.reject), r);
        },
        _calculateExpandedRowGlobalIndex(e, t, i, n) {
          const r = oa(i, {
            group: n
          }), a = this._dataSource, o = this.option("scrolling.mode"), s = o === "virtual" || o === "infinite", l = a.pageSize();
          let u;
          a._grouping._updatePagingOptions({
            skip: 0,
            take: tJ
          }, (d, c) => {
            et(d.path, i) && (u = c);
          }), this._calculateGlobalRowIndexByFlatData(t, r).done((d) => {
            let c, h;
            if (d < 0) {
              e.resolve(-1);
              return;
            }
            c = (u % l || l) + d - i.length, s ? h = 0 : h = Math.floor(c / (l - i.length)) * i.length, c = u + d + h, e.resolve(c);
          }).fail(e.reject);
        }
      }
    }
  }
}));
var wE = ke(), iJ = "keydown", yn = "dxDraggable", nJ = oe(Sa, yn), rJ = oe(Rr, yn), aJ = oe(Ea, yn), oJ = oe(Ac, yn), sJ = oe(Oc, yn), lJ = oe(je.down, yn), uJ = oe(iJ, yn), IE = "clone", Bf, Ju, dJ = "content", e_ = (e) => ({
  x: e.pageX - g(wE).scrollLeft(),
  y: e.pageY - g(wE).scrollTop()
}), cJ = "dx-gesture-cover", hJ = "dx-overlay-wrapper", pJ = "dx-overlay-content";
class TE {
  constructor(t, i) {
    this._preventScroll = !0, this._component = i, t === "vertical" ? (this._scrollValue = "scrollTop", this._overFlowAttr = "overflowY", this._sizeAttr = "height", this._scrollSizeProp = "scrollHeight", this._clientSizeProp = "clientHeight", this._limitProps = {
      start: "top",
      end: "bottom"
    }) : (this._scrollValue = "scrollLeft", this._overFlowAttr = "overflowX", this._sizeAttr = "width", this._scrollSizeProp = "scrollWidth", this._clientSizeProp = "clientWidth", this._limitProps = {
      start: "left",
      end: "right"
    });
  }
  updateScrollable(t, i) {
    var n = !1;
    t.some((r) => {
      var a = g(r), o = a.hasClass(hJ), s = a.hasClass(pJ);
      return o || s ? !0 : (n = this._trySetScrollable(r, i), n);
    }), n || (this._$scrollableAtPointer = null, this._scrollSpeed = 0);
  }
  isScrolling() {
    return !!this._scrollSpeed;
  }
  isScrollable(t) {
    return (t.css(this._overFlowAttr) === "auto" || t.hasClass("dx-scrollable-container")) && t.prop(this._scrollSizeProp) > Math.ceil(this._sizeAttr === "width" ? Ae(t) : Fe(t));
  }
  _trySetScrollable(t, i) {
    var n = g(t), r, a = this._component.option("scrollSensitivity"), o = this.isScrollable(n);
    return o && (r = this._calculateDistanceToBorders(n, i), a > r[this._limitProps.start] ? this._preventScroll || (this._scrollSpeed = -this._calculateScrollSpeed(r[this._limitProps.start]), this._$scrollableAtPointer = n) : a > r[this._limitProps.end] ? this._preventScroll || (this._scrollSpeed = this._calculateScrollSpeed(r[this._limitProps.end]), this._$scrollableAtPointer = n) : (o = !1, this._preventScroll = !1)), o;
  }
  _calculateDistanceToBorders(t, i) {
    var n = t.get(0), r;
    return n ? (r = Et(n), {
      left: i.x - r.left,
      top: i.y - r.top,
      right: r.right - i.x,
      bottom: r.bottom - i.y
    }) : {};
  }
  _calculateScrollSpeed(t) {
    var i = this._component, n = i.option("scrollSensitivity"), r = i.option("scrollSpeed");
    return Math.ceil(Math.pow((n - t) / n, 2) * r);
  }
  scrollByStep() {
    if (this._$scrollableAtPointer && this._scrollSpeed) {
      if (this._$scrollableAtPointer.hasClass("dx-scrollable-container")) {
        var t = this._$scrollableAtPointer.closest(".dx-scrollable"), i = t.data("dxScrollable") || t.data("dxScrollView");
        if (i) {
          var n = i.scrollOffset()[this._limitProps.start] + this._scrollSpeed;
          i.scrollTo({
            [this._limitProps.start]: n
          });
        }
      } else {
        var r = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;
        this._$scrollableAtPointer[this._scrollValue](r);
      }
      var a = this._component._dragMoveArgs;
      a && this._component._dragMoveHandler(a);
    }
  }
  reset() {
    this._$scrollableAtPointer = null, this._scrollSpeed = 0, this._preventScroll = !0;
  }
  isOutsideScrollable(t, i) {
    if (!t)
      return !1;
    var n = Et(t.get(0)), r = n[this._limitProps.start], a = n[this._sizeAttr], o = e_(i), s = this._sizeAttr === "width" ? o.x : o.y;
    return s < r || s > r + a;
  }
}
var fJ = FT.inherit({
  ctor: function(e) {
    this.callBase(), this._strategy = e;
  },
  _step: function() {
    var e = this._strategy._horizontalScrollHelper, t = this._strategy._verticalScrollHelper;
    e && e.scrollByStep(), t && t.scrollByStep();
  }
}), TR = wn.inherit({
  reset: $,
  dragMove: $,
  dragEnter: $,
  dragLeave: $,
  dragEnd: function(e) {
    var t = this._getSourceDraggable();
    return t._fireRemoveEvent(e), new U().resolve();
  },
  _fireRemoveEvent: $,
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      onDragStart: null,
      onDragMove: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragLeave: null,
      onDragCancel: null,
      onCancelByEsc: !1,
      onDrop: null,
      immediate: !0,
      dragDirection: "both",
      boundary: void 0,
      boundOffset: 0,
      allowMoveByClick: !1,
      itemData: null,
      container: void 0,
      dragTemplate: void 0,
      contentTemplate: "content",
      handle: "",
      filter: "",
      clone: !1,
      autoScroll: !0,
      scrollSpeed: 30,
      scrollSensitivity: 60,
      group: void 0,
      data: void 0
    });
  },
  _setOptionsByReference: function() {
    this.callBase.apply(this, arguments), T(this._optionsByReference, {
      component: !0,
      group: !0,
      itemData: !0,
      data: !0
    });
  },
  _init: function() {
    this.callBase(), this._attachEventHandlers(), this._scrollAnimator = new fJ(this), this._horizontalScrollHelper = new TE("horizontal", this), this._verticalScrollHelper = new TE("vertical", this);
  },
  _normalizeCursorOffset: function(e) {
    return De(e) && (e = {
      h: e.x,
      v: e.y
    }), e = zo(e).map((t) => parseFloat(t)), {
      left: e[0],
      top: e.length === 1 ? e[0] : e[1]
    };
  },
  _getNormalizedCursorOffset: function(e, t) {
    return ce(e) && (e = e.call(this, t)), this._normalizeCursorOffset(e);
  },
  _calculateElementOffset: function(e) {
    var t, i, n = e.event, r = g(e.itemElement), a = g(e.dragElement), o = this._dragElementIsCloned(), s = this.option("cursorOffset"), l = {
      left: 0,
      top: 0
    }, u = this._initialLocate = Mi(a);
    return (o || e.initialOffset || s) && (t = e.initialOffset || r.offset(), s && (l = this._getNormalizedCursorOffset(s, e), isFinite(l.left) && (t.left = n.pageX), isFinite(l.top) && (t.top = n.pageY)), i = a.offset(), t.top -= i.top + (l.top || 0) - u.top, t.left -= i.left + (l.left || 0) - u.left), t;
  },
  _initPosition: function(e) {
    var t = g(e.dragElement), i = this._calculateElementOffset(e);
    i && this._move(i, t), this._startPosition = Mi(t);
  },
  _startAnimator: function() {
    this._scrollAnimator.inProgress() || this._scrollAnimator.start();
  },
  _stopAnimator: function() {
    this._scrollAnimator.stop();
  },
  _addWidgetPrefix: function(e) {
    var t = this.NAME;
    return b_(t) + (e ? "-" + e : "");
  },
  _getItemsSelector: function() {
    return this.option("filter") || "";
  },
  _$content: function() {
    var e = this.$element(), t = e.children(".dx-template-wrapper");
    return t.length ? t : e;
  },
  _attachEventHandlers: function() {
    if (!this.option("disabled")) {
      var e = this._$content(), t = this._getItemsSelector(), i = this.option("allowMoveByClick"), n = {
        direction: this.option("dragDirection"),
        immediate: this.option("immediate"),
        checkDropTarget: (r, a) => {
          var o = this.option("group"), s = this._getSourceDraggable().option("group"), l = this._getScrollable(r);
          return this._verticalScrollHelper.isOutsideScrollable(l, a) || this._horizontalScrollHelper.isOutsideScrollable(l, a) ? !1 : s && s === o;
        }
      };
      i && (e = this._getArea(), w.on(e, lJ, n, this._pointerDownHandler.bind(this))), t[0] === ">" && (t = t.slice(1)), w.on(e, nJ, t, n, this._dragStartHandler.bind(this)), w.on(e, rJ, n, this._dragMoveHandler.bind(this)), w.on(e, aJ, n, this._dragEndHandler.bind(this)), w.on(e, oJ, n, this._dragEnterHandler.bind(this)), w.on(e, sJ, n, this._dragLeaveHandler.bind(this)), this.option("onCancelByEsc") && w.on(e, uJ, this._keydownHandler.bind(this));
    }
  },
  _dragElementIsCloned: function() {
    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(IE));
  },
  _getDragTemplateArgs: function(e, t) {
    return {
      container: Ie(t),
      model: {
        itemData: this.option("itemData"),
        itemElement: Ie(e)
      }
    };
  },
  _createDragElement: function(e) {
    var t = e, i = this.option("clone"), n = this._getContainer(), r = this.option("dragTemplate");
    return r ? (r = this._getTemplate(r), t = g("<div>").appendTo(n), r.render(this._getDragTemplateArgs(e, t))) : i && (t = g("<div>").appendTo(n), e.clone().css({
      width: e.css("width"),
      height: e.css("height")
    }).appendTo(t)), t.toggleClass(this._addWidgetPrefix(IE), t.get(0) !== e.get(0)).toggleClass("dx-rtl", this.option("rtlEnabled"));
  },
  _resetDragElement: function() {
    this._dragElementIsCloned() ? this._$dragElement.remove() : this._toggleDraggingClass(!1), this._$dragElement = null;
  },
  _resetSourceElement: function() {
    this._toggleDragSourceClass(!1), this._$sourceElement = null;
  },
  _detachEventHandlers: function() {
    w.off(this._$content(), "." + yn), w.off(this._getArea(), "." + yn);
  },
  _move: function(e, t) {
    kt(t || this._$dragElement, e);
  },
  _getDraggableElement: function(e) {
    var t = this._getSourceElement();
    if (t)
      return t;
    var i = this.option("allowMoveByClick");
    if (i)
      return this.$element();
    var n = g(e && e.target), r = this._getItemsSelector();
    if (r[0] === ">") {
      var a = this._$content().find(r);
      a.is(n) || (n = n.closest(a));
    }
    return n;
  },
  _getSourceElement: function() {
    var e = this._getSourceDraggable();
    return e._$sourceElement;
  },
  _pointerDownHandler: function(e) {
    if (!Pw(e)) {
      var t = {}, i = this.$element(), n = this.option("dragDirection");
      (n === "horizontal" || n === "both") && (t.left = e.pageX - i.offset().left + Mi(i).left - Ae(i) / 2), (n === "vertical" || n === "both") && (t.top = e.pageY - i.offset().top + Mi(i).top - Fe(i) / 2), this._move(t, i), this._getAction("onDragMove")(this._getEventArgs(e));
    }
  },
  _isValidElement: function(e, t) {
    var i = this.option("handle"), n = g(e.originalEvent && e.originalEvent.target);
    return i && !n.closest(i).length || !t.length ? !1 : !t.is(".dx-state-disabled, .dx-state-disabled *");
  },
  _dragStartHandler: function(e) {
    var t = this._getDraggableElement(e);
    if (this.dragInProgress = !0, !this._isValidElement(e, t)) {
      e.cancel = !0;
      return;
    }
    if (!this._$sourceElement) {
      var i = this._getDragStartArgs(e, t);
      if (this._getAction("onDragStart")(i), i.cancel) {
        e.cancel = !0;
        return;
      }
      this.option("itemData", i.itemData), this._setSourceDraggable(), this._$sourceElement = t;
      var n = t.offset(), r = this._$dragElement = this._createDragElement(t);
      this._toggleDraggingClass(!0), this._toggleDragSourceClass(!0), this._setGestureCoverCursor(r.children());
      var a = r.css("position") === "fixed";
      this._initPosition(T({}, i, {
        dragElement: r.get(0),
        initialOffset: a && n
      })), this._getAction("onDraggableElementShown")(ue({}, i, {
        dragElement: r
      }));
      var o = this._getArea(), s = this._getAreaOffset(o), l = this._getBoundOffset(), u = Ge(o), d = Ne(o), c = Ae(r), h = Fe(r), p = r.offset().left - s.left, f = r.offset().top - s.top;
      o.length && (e.maxLeftOffset = p - l.left, e.maxRightOffset = u - p - c - l.right, e.maxTopOffset = f - l.top, e.maxBottomOffset = d - f - h - l.bottom), this.option("autoScroll") && this._startAnimator();
    }
  },
  _getAreaOffset: function(e) {
    var t = e && en.offset(e);
    return t || {
      left: 0,
      top: 0
    };
  },
  _toggleDraggingClass: function(e) {
    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix("dragging"), e);
  },
  _toggleDragSourceClass: function(e, t) {
    var i = t || this._$sourceElement;
    i && i.toggleClass(this._addWidgetPrefix("source"), e);
  },
  _setGestureCoverCursor: function(e) {
    g(".".concat(cJ)).css("cursor", e.css("cursor"));
  },
  _getBoundOffset: function() {
    var e = this.option("boundOffset");
    return ce(e) && (e = e.call(this)), ok(e);
  },
  _getArea: function() {
    var e = this.option("boundary");
    return ce(e) && (e = e.call(this)), g(e);
  },
  _getContainer: function() {
    var e = this.option("container");
    return e === void 0 && (e = Ar()), g(e);
  },
  _dragMoveHandler: function(e, t) {
    if (this._dragMoveArgs = e, !this._$dragElement) {
      e.cancel = !0;
      return;
    }
    var i = e.offset, n = this._startPosition;
    this._move({
      left: n.left + i.x,
      top: n.top + i.y
    }), t || this._updateScrollable(e);
    var r = this._getEventArgs(e);
    if (this._getAction("onDragMove")(r), r.cancel !== !0) {
      var a = this._getTargetDraggable();
      a.dragMove(e, t);
    }
  },
  _updateScrollable: function(e) {
    if (this.option("autoScroll")) {
      var t = e_(e), i = ee.elementsFromPoint(t.x, t.y, this.$element().get(0));
      this._verticalScrollHelper.updateScrollable(i, t), this._horizontalScrollHelper.updateScrollable(i, t);
    }
  },
  _getScrollable: function(e) {
    var t;
    return e.parents().toArray().some((i) => {
      var n = g(i);
      if (this._horizontalScrollHelper.isScrollable(n) || this._verticalScrollHelper.isScrollable(n))
        return t = n, !0;
    }), t;
  },
  _defaultActionArgs: function() {
    var e = this.callBase.apply(this, arguments), t = this.option("component");
    return t && (e.component = t, e.element = t.element()), e;
  },
  _getEventArgs: function(e) {
    var t = this._getSourceDraggable(), i = this._getTargetDraggable();
    return {
      event: e,
      itemData: t.option("itemData"),
      itemElement: Ie(t._$sourceElement),
      fromComponent: t.option("component") || t,
      toComponent: i.option("component") || i,
      fromData: t.option("data"),
      toData: i.option("data")
    };
  },
  _getDragStartArgs: function(e, t) {
    var i = this._getEventArgs(e);
    return {
      event: i.event,
      itemData: i.itemData,
      itemElement: t,
      fromData: i.fromData
    };
  },
  _revertItemToInitialPosition: function() {
    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);
  },
  _dragEndHandler: function(e) {
    var t = new U(), i = this._getEventArgs(e), n = this._getEventArgs(e), r = this._getTargetDraggable(), a = !0;
    this.dragInProgress = !1;
    try {
      this._getAction("onDragEnd")(i);
    } finally {
      ge(Nt(i.cancel)).done((o) => {
        if (!o && (r !== this && r._getAction("onDrop")(n), !n.cancel)) {
          a = !1, ge(Nt(r.dragEnd(i))).always(t.resolve);
          return;
        }
        t.resolve();
      }).fail(t.resolve), t.done(() => {
        a && this._revertItemToInitialPosition(), this._resetDragOptions(r);
      });
    }
  },
  _isTargetOverAnotherDraggable: function(e) {
    var t = this._getSourceDraggable();
    if (this === t)
      return !1;
    var i = t._$dragElement, n = t.$element(), r = this.$element(), a = e_(e), o = ee.elementsFromPoint(a.x, a.y, this.element()), s = o.filter((c) => {
      var h = g(c);
      if (h.hasClass(this._addWidgetPrefix()))
        return !h.closest(i).length;
    })[0], l = this._getSourceElement(), u = s === n.get(0), d = g(s).closest(l).length;
    return !s || s === r.get(0) && !u && !d;
  },
  _dragEnterHandler: function(e) {
    this._fireDragEnterEvent(e), this._isTargetOverAnotherDraggable(e) && this._setTargetDraggable();
    var t = this._getSourceDraggable();
    t.dragEnter(e);
  },
  _dragLeaveHandler: function(e) {
    this._fireDragLeaveEvent(e), this._resetTargetDraggable(), this !== this._getSourceDraggable() && this.reset();
    var t = this._getSourceDraggable();
    t.dragLeave(e);
  },
  _keydownHandler: function(e) {
    this.dragInProgress && e.key === "Escape" && this._keydownEscapeHandler(e);
  },
  _keydownEscapeHandler: function(e) {
    var t, i = this._getSourceElement();
    if (i) {
      var n = this._getEventArgs(e);
      if (this._getAction("onDragCancel")(n), !n.cancel) {
        this.dragInProgress = !1, (t = Ju) === null || t === void 0 || t._toggleDraggingClass(!1), this._detachEventHandlers(), this._revertItemToInitialPosition();
        var r = this._getTargetDraggable();
        this._resetDragOptions(r), this._attachEventHandlers();
      }
    }
  },
  _getAction: function(e) {
    return this["_" + e + "Action"] || this._createActionByOption(e);
  },
  _getAnonymousTemplateName: function() {
    return dJ;
  },
  _initTemplates: function() {
    this.option("contentTemplate") && (this._templateManager.addDefaultTemplates({
      content: new da()
    }), this.callBase.apply(this, arguments));
  },
  _render: function() {
    this.callBase(), this.$element().addClass(this._addWidgetPrefix());
    var e = this._templateManager.anonymousTemplateName === this.option("contentTemplate"), t = this._getTemplateByOption("contentTemplate");
    t && g(t.render({
      container: this.element(),
      transclude: e
    }));
  },
  _optionChanged: function(e) {
    var t = e.name;
    switch (t) {
      case "onDragStart":
      case "onDragMove":
      case "onDragEnd":
      case "onDrop":
      case "onDragEnter":
      case "onDragLeave":
      case "onDragCancel":
      case "onDraggableElementShown":
        this["_" + t + "Action"] = this._createActionByOption(t);
        break;
      case "dragTemplate":
      case "contentTemplate":
      case "container":
      case "clone":
        break;
      case "allowMoveByClick":
      case "dragDirection":
      case "disabled":
      case "boundary":
      case "filter":
      case "immediate":
        this._resetDragElement(), this._detachEventHandlers(), this._attachEventHandlers();
        break;
      case "onCancelByEsc":
        this._keydownHandler();
        break;
      case "autoScroll":
        this._verticalScrollHelper.reset(), this._horizontalScrollHelper.reset();
        break;
      case "scrollSensitivity":
      case "scrollSpeed":
      case "boundOffset":
      case "handle":
      case "group":
      case "data":
      case "itemData":
        break;
      default:
        this.callBase(e);
    }
  },
  _getTargetDraggable: function() {
    return Bf || this;
  },
  _getSourceDraggable: function() {
    return Ju || this;
  },
  _setTargetDraggable: function() {
    var e = this.option("group"), t = this._getSourceDraggable();
    e && e === t.option("group") && (Bf = this);
  },
  _setSourceDraggable: function() {
    Ju = this;
  },
  _resetSourceDraggable: function() {
    Ju = null;
  },
  _resetTargetDraggable: function() {
    Bf = null;
  },
  _resetDragOptions: function(e) {
    this.reset(), e.reset(), this._stopAnimator(), this._horizontalScrollHelper.reset(), this._verticalScrollHelper.reset(), this._resetDragElement(), this._resetSourceElement(), this._resetTargetDraggable(), this._resetSourceDraggable();
  },
  _dispose: function() {
    this.callBase(), this._detachEventHandlers(), this._resetDragElement(), this._resetTargetDraggable(), this._resetSourceDraggable(), this._$sourceElement = null, this._stopAnimator();
  },
  _fireDragEnterEvent: function(e) {
    var t = this._getEventArgs(e);
    this._getAction("onDragEnter")(t);
  },
  _fireDragLeaveEvent: function(e) {
    var t = this._getEventArgs(e);
    this._getAction("onDragLeave")(t);
  }
});
We(yn, TR);
var DE = ke(), gJ = "dxSortable", AE = "placeholder", _J = "clone", OE = (e) => g(e).is(":visible"), vJ = (e, t) => {
  var i, n;
  if (e) {
    var r = ((i = t.to) === null || i === void 0 ? void 0 : i.left) || 0, a = ((n = t.to) === null || n === void 0 ? void 0 : n.top) || 0;
    e.style.transform = "translate(".concat(r, "px,").concat(a, "px)"), e.style.transition = "transform ".concat(t.duration, "ms ").concat(t.easing);
  }
}, mJ = (e) => {
  e && (e.style.transform = "", e.style.transition = "");
};
function CJ(e) {
  var t = e.offset(), i = e[0].style, n = parseFloat(i.paddingLeft) || 0, r = parseFloat(i.paddingRight) || 0, a = parseFloat(i.paddingTop) || 0, o = e[0].clientWidth - (n + r), s = Fe(e), l = t.left + n, u = t.top + a;
  return {
    left: l,
    right: l + o,
    top: u,
    bottom: u + s
  };
}
var DR = TR.inherit({
  _init: function() {
    this.callBase(), this._sourceScrollHandler = this._handleSourceScroll.bind(this), this._sourceScrollableInfo = null;
  },
  _getDefaultOptions: function() {
    return T(this.callBase(), {
      clone: !0,
      filter: "> *",
      itemOrientation: "vertical",
      dropFeedbackMode: "push",
      allowDropInsideItem: !1,
      allowReordering: !0,
      moveItemOnDrop: !1,
      onDragChange: null,
      onAdd: null,
      onRemove: null,
      onReorder: null,
      onPlaceholderPrepared: null,
      animation: {
        type: "slide",
        duration: 300,
        easing: "ease"
      },
      fromIndex: null,
      toIndex: null,
      dropInsideItem: !1,
      itemPoints: null,
      fromIndexOffset: 0,
      offset: 0,
      autoUpdate: !1,
      draggableElementSize: 0
    });
  },
  reset: function() {
    this.option({
      dropInsideItem: !1,
      toIndex: null,
      fromIndex: null,
      itemPoints: null,
      fromIndexOffset: 0,
      draggableElementSize: 0
    }), this._$placeholderElement && this._$placeholderElement.remove(), this._$placeholderElement = null, !this._isIndicateMode() && this._$modifiedItem && (this._$modifiedItem.css("marginBottom", this._modifiedItemMargin), this._$modifiedItem = null);
  },
  _getPrevVisibleItem: function(e, t) {
    return e.slice(0, t).reverse().filter(OE)[0];
  },
  _dragStartHandler: function(e) {
    if (this.callBase.apply(this, arguments), e.cancel !== !0) {
      var t = this._getSourceElement();
      this._updateItemPoints(), this._subscribeToSourceScroll(e), this.option("fromIndex", this._getElementIndex(t)), this.option("fromIndexOffset", this.option("offset"));
    }
  },
  _subscribeToSourceScroll: function(e) {
    var t = this._getScrollable(g(e.target));
    t && (this._sourceScrollableInfo = {
      element: t,
      scrollLeft: t.scrollLeft(),
      scrollTop: t.scrollTop()
    }, w.off(t, "scroll", this._sourceScrollHandler), w.on(t, "scroll", this._sourceScrollHandler));
  },
  _unsubscribeFromSourceScroll: function() {
    this._sourceScrollableInfo && (w.off(this._sourceScrollableInfo.element, "scroll", this._sourceScrollHandler), this._sourceScrollableInfo = null);
  },
  _handleSourceScroll: function(e) {
    var t = this._sourceScrollableInfo;
    t && ["scrollLeft", "scrollTop"].forEach((i) => {
      if (e.target[i] !== t[i]) {
        var n = e.target[i] - t[i];
        this._correctItemPoints(n), this._movePlaceholder(), t[i] = e.target[i];
      }
    });
  },
  _dragEnterHandler: function(e) {
    if (this.callBase.apply(this, arguments), this !== this._getSourceDraggable() && (this._subscribeToSourceScroll(e), this._updateItemPoints(), this.option("fromIndex", -1), !this._isIndicateMode())) {
      var t = this.option("itemPoints"), i = t[t.length - 1];
      if (i) {
        var n = this.$element(), r = this._getSourceElement(), a = this._isVerticalOrientation(), o = a ? Ne(r, !0) : Ge(r, !0), s = n.get(0)[a ? "scrollHeight" : "scrollWidth"], l = n.get(0)[a ? "scrollTop" : "scrollLeft"], u = a ? "top" : "left", d = i[u], c = n.offset()[u], h = c + s - l - d;
        if (h < o && a) {
          var p = this._getItems(), f = g(this._getPrevVisibleItem(p));
          this._$modifiedItem = f, this._modifiedItemMargin = f.get(0).style.marginBottom, f.css("marginBottom", o - h);
          var v = f.closest(".dx-sortable"), m = v.data("dxScrollable") || v.data("dxScrollView");
          m && m.update();
        }
      }
    }
  },
  _dragLeaveHandler: function() {
    this.callBase.apply(this, arguments), this !== this._getSourceDraggable() && this._unsubscribeFromSourceScroll();
  },
  dragEnter: function() {
    this !== this._getTargetDraggable() && this.option("toIndex", -1);
  },
  dragLeave: function() {
    this !== this._getTargetDraggable() && this.option("toIndex", this.option("fromIndex"));
  },
  _allowDrop: function(e) {
    var t = this._getTargetDraggable(), i = t.$element(), n = this._getScrollable(i);
    if (n) {
      var {
        left: r,
        right: a,
        top: o,
        bottom: s
      } = CJ(n), l = this.option("toIndex"), u = this.option("itemPoints"), d = u == null ? void 0 : u.filter((h) => h.index === l)[0];
      if (d && d.top !== void 0) {
        var c = this._isVerticalOrientation();
        return c ? o <= Math.ceil(d.top) && Math.floor(d.top) <= s : r <= Math.ceil(d.left) && Math.floor(d.left) <= a;
      }
    }
    return !0;
  },
  dragEnd: function(e) {
    this._unsubscribeFromSourceScroll();
    var t = this._getSourceElement(), i = this._getSourceDraggable(), n = i.NAME !== this.NAME, r = this.option("toIndex"), a = e.event, o = this._allowDrop(a);
    if (r !== null && r >= 0 && o) {
      var s, l;
      if (i !== this && (s = this._fireAddEvent(a), s || (l = this._fireRemoveEvent(a))), n && Dl(t), this.option("moveItemOnDrop") && !s && this._moveItem(t, r, l), i === this)
        return this._fireReorderEvent(a);
    }
    return new U().resolve();
  },
  dragMove: function(e) {
    var t = this.option("itemPoints");
    if (t) {
      for (var i = this._isVerticalOrientation(), n = i ? "top" : "left", r = i ? e.pageY : e.pageX, a = this.option("rtlEnabled"), o, s = t.length - 1; s >= 0; s--) {
        var l = t[s + 1] && (t[s][n] + t[s + 1][n]) / 2;
        if ((!i && a ? r > l : l > r) || l === void 0)
          o = t[s];
        else
          break;
      }
      o && (this._updatePlaceholderPosition(e, o), this._verticalScrollHelper.isScrolling() && this._isIndicateMode() && this._movePlaceholder());
    }
  },
  _isIndicateMode: function() {
    return this.option("dropFeedbackMode") === "indicate" || this.option("allowDropInsideItem");
  },
  _createPlaceholder: function() {
    var e;
    return this._isIndicateMode() && (e = g("<div>").addClass(this._addWidgetPrefix(AE)).insertBefore(this._getSourceDraggable()._$dragElement)), this._$placeholderElement = e, e;
  },
  _getItems: function() {
    var e = this._getItemsSelector();
    return this._$content().find(e).not("." + this._addWidgetPrefix(AE)).not("." + this._addWidgetPrefix(_J)).toArray();
  },
  _allowReordering: function() {
    var e = this._getSourceDraggable(), t = this._getTargetDraggable();
    return e !== t || this.option("allowReordering");
  },
  _isValidPoint: function(e, t, i) {
    var n = this.option("allowDropInsideItem"), r = i || this._allowReordering();
    return !r && (e !== 0 || !n) ? !1 : this._isIndicateMode() ? t === -1 || e !== t && (i || e !== t + 1) : !0;
  },
  _getItemPoints: function() {
    var e = [], t, i, n, r = this.option("rtlEnabled"), a = this._isVerticalOrientation(), o = this._getItems(), s = o.filter(OE), l = s.length, u = this._getDraggableElement(), d = s.indexOf(u.get(0));
    if (l) {
      for (var c = 0; c <= l; c++) {
        var h = !a && r ^ c === l, p = a && c === l;
        c < l && (t = g(s[c]), i = t.offset(), n = Ge(t)), e.push({
          dropInsideItem: !1,
          left: i.left + (h ? n : 0),
          top: i.top + (p ? e[c - 1].height : 0),
          index: c === l ? o.length : o.indexOf(t.get(0)),
          $item: t,
          width: Ge(t),
          height: Ne(t),
          isValid: this._isValidPoint(c, d)
        });
      }
      if (this.option("allowDropInsideItem")) {
        var f = e;
        e = [];
        for (var v = 0; v < f.length; v++)
          e.push(f[v]), f[v + 1] && e.push(T({}, f[v], {
            dropInsideItem: !0,
            top: Math.floor((f[v].top + f[v + 1].top) / 2),
            left: Math.floor((f[v].left + f[v + 1].left) / 2),
            isValid: this._isValidPoint(v, d, !0)
          }));
      }
    } else
      e.push({
        dropInsideItem: !1,
        index: 0,
        isValid: !0
      });
    return e;
  },
  _updateItemPoints: function(e) {
    (e || this.option("autoUpdate") || !this.option("itemPoints")) && this.option("itemPoints", this._getItemPoints());
  },
  _correctItemPoints: function(e) {
    var t = this.option("itemPoints");
    if (e && t && !this.option("autoUpdate")) {
      var i = this._isVerticalOrientation(), n = i ? "top" : "left";
      t.forEach((r) => {
        r[n] -= e;
      });
    }
  },
  _getElementIndex: function(e) {
    return this._getItems().indexOf(e.get(0));
  },
  _getDragTemplateArgs: function(e) {
    var t = this.callBase.apply(this, arguments);
    return t.model.fromIndex = this._getElementIndex(e), t;
  },
  _togglePlaceholder: function(e) {
    this._$placeholderElement && this._$placeholderElement.toggle(e);
  },
  _isVerticalOrientation: function() {
    return this.option("itemOrientation") === "vertical";
  },
  _normalizeToIndex: function(e, t) {
    var i = this._getSourceDraggable() !== this._getTargetDraggable(), n = this._getActualFromIndex();
    return e === null ? n : Math.max(i || n >= e || t ? e : e - 1, 0);
  },
  _updatePlaceholderPosition: function(e, t) {
    var i = this._getSourceDraggable(), n = this._normalizeToIndex(t.index, t.dropInsideItem), r = T(this._getEventArgs(e), {
      toIndex: n,
      dropInsideItem: t.dropInsideItem
    });
    if (t.isValid && this._getAction("onDragChange")(r), r.cancel || !t.isValid) {
      t.isValid || this.option({
        dropInsideItem: !1,
        toIndex: null
      });
      return;
    }
    this.option({
      dropInsideItem: t.dropInsideItem,
      toIndex: t.index
    }), this._getAction("onPlaceholderPrepared")(T(this._getEventArgs(e), {
      placeholderElement: Ie(this._$placeholderElement),
      dragElement: Ie(i._$dragElement)
    })), this._updateItemPoints();
  },
  _makeWidthCorrection: function(e, t) {
    if (this._$scrollable = this._getScrollable(e), this._$scrollable) {
      var i = Ae(this._$scrollable), n = this._$scrollable.offset().left - e.offset().left, r = Ge(e) - n - i;
      n > 0 && (t -= n), r > 0 && (t -= r);
    }
    return t;
  },
  _updatePlaceholderSizes: function(e, t) {
    var i = this.option("dropInsideItem"), n = g(t), r = this._isVerticalOrientation(), a = "", o = "";
    e.toggleClass(this._addWidgetPrefix("placeholder-inside"), i), (r || i) && (a = Ge(n)), (!r || i) && (o = Ne(n)), a = this._makeWidthCorrection(n, a), e.css({
      width: a,
      height: o
    });
  },
  _moveItem: function(e, t, i) {
    var n, r = this._getItems(), a = r[t], o = this._getSourceDraggable();
    i && (e = e.clone(), o._toggleDragSourceClass(!1, e)), a || (n = r[t - 1]), this._moveItemCore(e, a, n);
  },
  _moveItemCore: function(e, t, i) {
    !t && !i ? e.appendTo(this.$element()) : i ? e.insertAfter(g(i)) : e.insertBefore(g(t));
  },
  _getDragStartArgs: function(e, t) {
    return T(this.callBase.apply(this, arguments), {
      fromIndex: this._getElementIndex(t)
    });
  },
  _getEventArgs: function(e) {
    var t = this._getSourceDraggable(), i = this._getTargetDraggable(), n = i.option("dropInsideItem");
    return T(this.callBase.apply(this, arguments), {
      fromIndex: t.option("fromIndex"),
      toIndex: this._normalizeToIndex(i.option("toIndex"), n),
      dropInsideItem: n
    });
  },
  _optionChanged: function(e) {
    var t = e.name;
    switch (t) {
      case "onDragChange":
      case "onPlaceholderPrepared":
      case "onAdd":
      case "onRemove":
      case "onReorder":
        this["_" + t + "Action"] = this._createActionByOption(t);
        break;
      case "itemOrientation":
      case "allowDropInsideItem":
      case "moveItemOnDrop":
      case "dropFeedbackMode":
      case "itemPoints":
      case "animation":
      case "allowReordering":
      case "fromIndexOffset":
      case "offset":
      case "draggableElementSize":
      case "autoUpdate":
        break;
      case "fromIndex":
        [!1, !0].forEach((i) => {
          var n = i ? e.value : e.previousValue;
          if (n !== null) {
            var r = g(this._getItems()[n]);
            this._toggleDragSourceClass(i, r);
          }
        });
        break;
      case "dropInsideItem":
        this._optionChangedDropInsideItem(e);
        break;
      case "toIndex":
        this._optionChangedToIndex(e);
        break;
      default:
        this.callBase(e);
    }
  },
  _optionChangedDropInsideItem: function() {
    this._isIndicateMode() && this._$placeholderElement && this._movePlaceholder();
  },
  _isPositionVisible: function(e) {
    var t = this.$element(), i;
    if (t.css("overflow") !== "hidden" ? i = t.get(0) : t.parents().each(function() {
      if (g(this).css("overflow") !== "visible")
        return i = this, !1;
    }), i) {
      var n = Et(i), r = this._isVerticalOrientation(), a = r ? "top" : "left", o = r ? "bottom" : "right", s = r ? DE.pageYOffset : DE.pageXOffset;
      if (e[a] < n[a] + s || e[a] > n[o] + s)
        return !1;
    }
    return !0;
  },
  _optionChangedToIndex: function(e) {
    var t = e.value;
    if (this._isIndicateMode()) {
      var i = t !== null && t >= 0;
      this._togglePlaceholder(i), i && this._movePlaceholder();
    } else
      this._moveItems(e.previousValue, e.value, e.fullUpdate);
  },
  update: function() {
    if (!(this.option("fromIndex") === null && this.option("toIndex") === null)) {
      this._updateItemPoints(!0), this._updateDragSourceClass();
      var e = this.option("toIndex");
      this._optionChangedToIndex({
        value: e,
        fullUpdate: !0
      });
    }
  },
  _updateDragSourceClass: function() {
    var e = this._getActualFromIndex(), t = g(this._getItems()[e]);
    t.length && (this._$sourceElement = t, this._toggleDragSourceClass(!0, t));
  },
  _makeLeftCorrection: function(e) {
    var t = this._$scrollable;
    if (t && this._isVerticalOrientation()) {
      var i = t.offset().left - e;
      i > 0 && (e += i);
    }
    return e;
  },
  _movePlaceholder: function() {
    var e = this._$placeholderElement || this._createPlaceholder();
    if (e) {
      var t = this._getItems(), i = this.option("toIndex"), n = this._isVerticalOrientation(), r = this.option("rtlEnabled"), a = this.option("dropInsideItem"), o = null, s = t[i];
      if (s) {
        var l = g(s);
        o = l.offset(), !n && r && !a && (o.left += Ge(l, !0));
      } else {
        var u = s = this._getPrevVisibleItem(t, i);
        u && (o = g(u).offset(), n ? o.top += Ne(u, !0) : r || (o.left += Ge(u, !0)));
      }
      if (this._updatePlaceholderSizes(e, s), o && !this._isPositionVisible(o) && (o = null), o) {
        var d = n && i === t.length, c = Ne(e);
        o.left = this._makeLeftCorrection(o.left), o.top = d && o.top >= c ? o.top - c : o.top, this._move(o, e);
      }
      e.toggle(!!o);
    }
  },
  _getPositions: function(e, t, i, n) {
    for (var r = [], a = 0; a < e.length; a++) {
      var o = 0;
      if (n === null || i === null) {
        r.push(o);
        continue;
      }
      i === -1 ? a >= n && (o = t) : n === -1 ? a > i && (o = -t) : i < n ? a > i && a < n && (o = -t) : i > n && a >= n && a < i && (o = t), r.push(o);
    }
    return r;
  },
  _getDraggableElementSize: function(e) {
    var t = this._getDraggableElement(), i = this.option("draggableElementSize");
    return i || (i = e ? (Ne(t) + Ne(t, !0)) / 2 : (Ge(t) + Ge(t, !0)) / 2, this.option("autoUpdate") || this.option("draggableElementSize", i)), i;
  },
  _getActualFromIndex: function() {
    var {
      fromIndex: e,
      fromIndexOffset: t,
      offset: i
    } = this.option();
    return e == null ? null : e + t - i;
  },
  _moveItems: function(e, t, i) {
    for (var n = this._getActualFromIndex(), r = this._isVerticalOrientation(), a = r ? "top" : "left", o = this._getDraggableElementSize(r), s = this._getItems(), l = this._getPositions(s, o, n, e), u = this._getPositions(s, o, n, t), d = this.option("animation"), c = this.option("rtlEnabled"), h = 0; h < s.length; h++) {
      var p = s[h], f = l[h], v = u[h];
      t === null || n === null ? mJ(p) : (f !== v || i && v) && vJ(p, T({}, d, {
        to: {
          [a]: !r && c ? -v : v
        }
      }));
    }
  },
  _toggleDragSourceClass: function(e, t) {
    var i = t || this._$sourceElement;
    this.callBase.apply(this, arguments), this._isIndicateMode() || i && i.toggleClass(this._addWidgetPrefix("source-hidden"), e);
  },
  _dispose: function() {
    this.reset(), this.callBase();
  },
  _fireAddEvent: function(e) {
    var t = this._getEventArgs(e);
    return this._getAction("onAdd")(t), t.cancel;
  },
  _fireRemoveEvent: function(e) {
    var t = this._getSourceDraggable(), i = this._getEventArgs(e);
    return t._getAction("onRemove")(i), i.cancel;
  },
  _fireReorderEvent: function(e) {
    var t = this._getEventArgs(e);
    return this._getAction("onReorder")(t), t.promise || new U().resolve();
  }
});
We(gJ, DR);
const xJ = {
  dragCell: "dx-drag-cell"
}, yo = {
  cellFocusDisabled: "dx-cell-focus-disabled",
  handleIcon: "drag-icon",
  commandDrag: "dx-command-drag",
  sortableWithoutHandle: "dx-sortable-without-handle",
  rowsView: "rowsview"
}, yJ = (e) => (t, i) => {
  const n = g(t);
  if (n.attr(xJ.dragCell, ""), i.rowType === "data")
    return n.addClass(yo.cellFocusDisabled), g("<span>").addClass(e(yo.handleIcon));
  ae.setEmptyText(n);
}, bJ = {
  createHandleTemplateFunc: yJ
}, SJ = {
  init() {
    this.callBase.apply(this, arguments), this._updateHandleColumn();
  },
  _allowReordering() {
    const e = this.option("rowDragging");
    return !!(e && (e.allowReordering || e.allowDropInsideItem || e.group));
  },
  _updateHandleColumn() {
    const e = this.option("rowDragging"), t = this._allowReordering(), i = this._columnsController, n = t && e.showDragIcons;
    i && i.addCommandColumn({
      type: "drag",
      command: "drag",
      visibleIndex: -2,
      alignment: "center",
      cssClass: yo.commandDrag,
      width: "auto",
      cellTemplate: this._getHandleTemplate(),
      visible: n
    }), i.columnOption("type:drag", "visible", n);
  },
  _renderContent() {
    const e = this.option("rowDragging"), t = this._allowReordering(), i = this.callBase.apply(this, arguments), n = this._isFixedTableRendering, r = n ? "_sortableFixed" : "_sortable", a = n ? "_sortable" : "_sortableFixed", o = (u) => {
      var d;
      (d = this._sortableFixed) === null || d === void 0 || d.$element().css("pointerEvents", u ? "auto" : "");
    }, s = ".dx-row:not(.dx-freespace-row):not(.dx-virtual-row):not(.dx-header-row):not(.dx-footer-row)", l = this.option("dataRowTemplate") ? "> table > tbody" + s : "> table > tbody > " + s;
    return (t || this[r]) && i.length && (this[r] = this._createComponent(i, DR, T({
      component: this.component,
      contentTemplate: null,
      filter: l,
      cursorOffset: (u) => {
        const {
          event: d
        } = u, c = g(this.element()).offset();
        return {
          x: d.pageX - c.left
        };
      },
      onDraggableElementShown: (u) => {
        if (e.dragTemplate)
          return;
        const c = g(u.dragElement).children(".dx-widget").data(this.component.NAME);
        this._synchronizeScrollLeftPosition(c);
      },
      dragTemplate: this._getDraggableRowTemplate(),
      handle: e.showDragIcons && "." + yo.commandDrag,
      dropFeedbackMode: "indicate"
    }, e, {
      onDragStart: (u) => {
        var d, c;
        (d = this.getController("keyboardNavigation")) === null || d === void 0 || d._resetFocusedCell();
        const h = u.component.getVisibleRows()[u.fromIndex];
        u.itemData = h && h.data;
        const p = h && h.rowType === "data";
        u.cancel = !t || !p, (c = e.onDragStart) === null || c === void 0 || c.call(e, u);
      },
      onDragEnter: () => {
        o(!0);
      },
      onDragLeave: () => {
        o(!1);
      },
      onDragEnd: (u) => {
        var d;
        o(!1), (d = e.onDragEnd) === null || d === void 0 || d.call(e, u);
      },
      onAdd: (u) => {
        var d;
        o(!1), (d = e.onAdd) === null || d === void 0 || d.call(e, u);
      },
      dropFeedbackMode: e.dropFeedbackMode,
      onOptionChanged: (u) => {
        this._sortableFixed && (u.name === "fromIndex" || u.name === "toIndex") && this[a].option(u.name, u.value);
      }
    })), i.toggleClass("dx-scrollable-container", n), i.toggleClass(yo.sortableWithoutHandle, t && !e.showDragIcons)), i;
  },
  _renderCore(e) {
    this.callBase.apply(this, arguments), e && e.changeType === "update" && e.repaintChangesOnly && ae.isVirtualRowRendering(this) && oi(() => {
      this._updateSortable();
    });
  },
  _updateSortable() {
    const e = this._dataController.getRowIndexOffset();
    [this._sortable, this._sortableFixed].forEach((t) => {
      t == null || t.option("offset", e), t == null || t.update();
    });
  },
  _resizeCore() {
    this.callBase.apply(this, arguments), this._updateSortable();
  },
  _getDraggableGridOptions(e) {
    const t = this.option(), i = this.getColumns(), n = g(this.getRowElement(e.rowIndex));
    return {
      dataSource: [{
        id: 1,
        parentId: 0
      }],
      showBorders: !0,
      showColumnHeaders: !1,
      scrolling: {
        useNative: !1,
        showScrollbar: "never"
      },
      pager: {
        visible: !1
      },
      loadingTimeout: null,
      columnFixing: t.columnFixing,
      columnAutoWidth: t.columnAutoWidth,
      showColumnLines: t.showColumnLines,
      columns: i.map((r) => ({
        width: r.width || r.visibleWidth,
        fixed: r.fixed,
        fixedPosition: r.fixedPosition
      })),
      onRowPrepared: (r) => {
        const a = r.component.getView("rowsView");
        g(r.rowElement).replaceWith(n.eq(a._isFixedTableRendering ? 1 : 0).clone());
      }
    };
  },
  _synchronizeScrollLeftPosition(e) {
    const t = e == null ? void 0 : e.getScrollable();
    t == null || t.scrollTo({
      x: this._scrollLeft
    });
  },
  _getDraggableRowTemplate() {
    return (e) => {
      const t = this.component.$element(), i = g("<div>");
      S_(i, Ae(t));
      const n = this._dataController.items(), r = n && n[e.fromIndex], a = this._getDraggableGridOptions(r);
      return this._createComponent(i, this.component.NAME, a), i.find(".dx-gridbase-container").children(`:not(.${this.addWidgetPrefix(yo.rowsView)})`).hide(), i;
    };
  },
  _getHandleTemplate() {
    return bJ.createHandleTemplateFunc((e) => this.addWidgetPrefix(e));
  },
  optionChanged(e) {
    e.name === "rowDragging" && (this._updateHandleColumn(), this._invalidate(!0, !0), e.handled = !0), this.callBase.apply(this, arguments);
  }
}, EJ = {
  defaultOptions: () => ({
    rowDragging: {
      showDragIcons: !0,
      dropFeedbackMode: "indicate",
      allowReordering: !1,
      allowDropInsideItem: !1
    }
  }),
  extenders: {
    views: {
      rowsView: SJ
    }
  }
};
xe.registerModule("rowDragging", EJ);
const wJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Nv
}, Symbol.toStringTag, { value: "Module" })), IJ = /* @__PURE__ */ pc(wJ);
var Yn = {}, Ir = {}, Aa = {}, TJ = w.on, DJ = w.one, AJ = w.off, OJ = w.trigger, RJ = w.triggerHandler, BJ = w.Event;
const kJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Event: BJ,
  off: AJ,
  on: TJ,
  one: DJ,
  trigger: OJ,
  triggerHandler: RJ
}, Symbol.toStringTag, { value: "Module" })), Yc = /* @__PURE__ */ pc(kJ);
var Zc = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var ac = Se && Se.__assign || function() {
  return ac = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, ac.apply(this, arguments);
};
Object.defineProperty(Zc, "__esModule", { value: !0 });
Zc.pullAllChildren = void 0;
function FJ(e, t, i) {
  !e || e.length === 0 || AR(e, t, i);
}
Zc.pullAllChildren = FJ;
function AR(e, t, i) {
  e.forEach(function(n) {
    if (t.push(n), !!n.componentOptions) {
      var r = n.componentOptions.Ctor;
      if (r.$_optionName) {
        var a = ac(ac({}, r.$_predefinedProps), n.componentOptions.propsData), o = i.createNested(r.$_optionName, a, r.$_isCollectionItem, r.$_expectedChildren);
        n.componentOptions.$_config = o, n.componentOptions.$_innerChanges = {}, n.componentOptions.children && AR(n.componentOptions.children, t, o);
      }
    }
  });
}
var Pr = {}, xt = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(xt, "__esModule", { value: !0 });
xt.getOptionInfo = xt.getOptionValue = xt.allKeysAreEqual = xt.forEachChildNode = xt.isEqual = xt.toComparable = xt.camelize = xt.lowercaseFirst = xt.uppercaseFirst = xt.getTemplatePropName = void 0;
function PJ(e, t) {
  for (var i in e)
    if (e[i] === t)
      return i;
  return t;
}
xt.getTemplatePropName = PJ;
function OR(e) {
  return e[0].toUpperCase() + e.substr(1);
}
xt.uppercaseFirst = OR;
function RR(e) {
  return e[0].toLowerCase() + e.substr(1);
}
xt.lowercaseFirst = RR;
function MJ(e) {
  return RR(e.split("-").map(function(t) {
    return OR(t);
  }).join(""));
}
xt.camelize = MJ;
function t_(e) {
  return e instanceof Date ? e.getTime() : e;
}
xt.toComparable = t_;
function LJ(e, t) {
  return t_(e) === t_(t) ? !0 : Array.isArray(e) && Array.isArray(t) ? e.length === 0 && t.length === 0 : !1;
}
xt.isEqual = LJ;
function VJ(e, t) {
  Array.prototype.slice.call(e.childNodes).forEach(t);
}
xt.forEachChildNode = VJ;
function NJ(e, t) {
  var i = Object.keys(e);
  if (i.length !== Object.keys(t).length)
    return !1;
  for (var n = 0, r = i; n < r.length; n++) {
    var a = r[n];
    if (!t.hasOwnProperty(a))
      return !1;
  }
  return !0;
}
xt.allKeysAreEqual = NJ;
function $J(e, t) {
  var i = e;
  return t.split(".").forEach(function(n) {
    var r = BR(n);
    i && (i = r.isCollection ? i[r.name] && i[r.name][r.index] : i[r.name]);
  }), i;
}
xt.getOptionValue = $J;
function BR(e) {
  var t = e.split("[");
  return t.length === 1 ? {
    isCollection: !1,
    name: e,
    fullName: e
  } : {
    isCollection: !0,
    name: t[0],
    fullName: e,
    index: Number(t[1].slice(0, -1))
  };
}
xt.getOptionInfo = BR;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var oc = Se && Se.__assign || function() {
  return oc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, oc.apply(this, arguments);
};
Object.defineProperty(Pr, "__esModule", { value: !0 });
Pr.setEmitOptionChangedFunc = Pr.bindOptionWatchers = void 0;
var i_ = xt, HJ = (
  /** @class */
  function() {
    function e(t, i, n, r, a, o, s) {
      this._updateFunc = t, this._name = i, this._initialValues = n || {}, this._nestedConfigurations = [], this._isCollectionItem = !!a, this._collectionItemIndex = o, this._expectedChildren = r || {}, this._ownerConfig = s, this._componentChanges = [], this.updateValue = this.updateValue.bind(this);
    }
    return Object.defineProperty(e.prototype, "name", {
      get: function() {
        return this._name;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "fullName", {
      get: function() {
        return this._name && this._isCollectionItem ? this._name + "[" + this._collectionItemIndex + "]" : this._name;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "componentsCountChanged", {
      get: function() {
        return this._componentChanges;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.cleanComponentsCountChanged = function() {
      this._componentChanges = [];
    }, Object.defineProperty(e.prototype, "fullPath", {
      get: function() {
        return this._ownerConfig && this._ownerConfig.fullPath ? this._ownerConfig.fullPath + "." + this.fullName : this.fullName;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "ownerConfig", {
      get: function() {
        return this._ownerConfig;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "options", {
      get: function() {
        return this._options;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "initialValues", {
      get: function() {
        return this._initialValues;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "expectedChildren", {
      get: function() {
        return this._expectedChildren;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "nested", {
      get: function() {
        return this._nestedConfigurations;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "prevNestedOptions", {
      get: function() {
        return this._prevNestedConfigOptions;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "collectionItemIndex", {
      get: function() {
        return this._collectionItemIndex;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isCollectionItem", {
      get: function() {
        return this._isCollectionItem;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "updateFunc", {
      get: function() {
        return this._updateFunc;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function(t) {
      this._options = t || [];
    }, Object.defineProperty(e.prototype, "emitOptionChanged", {
      set: function(t) {
        this._emitOptionChanged = t;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setPrevNestedOptions = function(t) {
      this._prevNestedConfigOptions = t;
    }, e.prototype.onOptionChanged = function(t) {
      i_.isEqual(t.value, t.previousValue) || this._onOptionChanged(t.fullName.split("."), t);
    }, e.prototype.cleanNested = function() {
      this._nestedConfigurations = [];
    }, e.prototype.createNested = function(t, i, n, r) {
      var a = this._expectedChildren[t], o = t, s = n;
      a && (s = a.isCollectionItem, a.optionName && (o = a.optionName));
      var l = -1;
      s && o && (l = this._nestedConfigurations.filter(function(d) {
        return d._name && d._name === o;
      }).length);
      var u = new e(this._updateFunc, o, i, r, s, l, this);
      return this._nestedConfigurations.push(u), u;
    }, e.prototype.updateValue = function(t, i) {
      var n = [this.fullPath, t].filter(function(r) {
        return r;
      }).join(".");
      this._updateFunc(n, i);
    }, e.prototype.getNestedOptionValues = function() {
      var t = {};
      return this._nestedConfigurations.forEach(function(i) {
        if (i._name) {
          var n = oc(oc({}, i.initialValues), i.getNestedOptionValues());
          if (n)
            if (!i._isCollectionItem)
              t[i._name] = n;
            else {
              var r = t[i._name];
              (!r || !Array.isArray(r)) && (r = [], t[i._name] = r), r.push(n);
            }
        }
      }), t;
    }, e.prototype.getOptionsToWatch = function() {
      var t = {};
      return this._nestedConfigurations.forEach(function(i) {
        return i._name && (t[i._name] = !0);
      }), this._options.filter(function(i) {
        return !t[i];
      });
    }, e.prototype._onOptionChanged = function(t, i) {
      if (t.length !== 0) {
        var n = i_.getOptionInfo(t[0]);
        if (n.isCollection || t.length > 1) {
          var r = this._getNestedConfig(n.fullName);
          if (r) {
            r._onOptionChanged(t.slice(1), i);
            return;
          }
          this._tryEmitOptionChanged(n.name, i.component.option(this.fullPath ? this.fullPath + "." + n.name : n.name));
        } else
          this._tryEmitOptionChanged(n.name, i.value);
      }
    }, e.prototype._getNestedConfig = function(t) {
      for (var i = 0, n = this._nestedConfigurations; i < n.length; i++) {
        var r = n[i];
        if (r.fullName === t)
          return r;
      }
    }, e.prototype._tryEmitOptionChanged = function(t, i) {
      this._emitOptionChanged && this._emitOptionChanged(t, i);
    }, e;
  }()
);
function zJ(e, t, i) {
  var n = e && e.getOptionsToWatch();
  n && n.forEach(function(r) {
    t.$watch(r, function(a) {
      (!i.hasOwnProperty(r) || i[r] !== a) && e.updateValue(r, a), delete i[r];
    });
  });
}
Pr.bindOptionWatchers = zJ;
function WJ(e, t, i) {
  e.emitOptionChanged = function(n, r) {
    i_.isEqual(r, t.$props[n]) || (i[n] = r, t.$emit("update:" + n, r));
  };
}
Pr.setEmitOptionChangedFunc = WJ;
Pr.default = HJ;
var Zi = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var GJ = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), KJ = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), UJ = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && GJ(t, e, i);
  return KJ(t, e), t;
};
Object.defineProperty(Zi, "__esModule", { value: !0 });
Zi.getInnerChanges = Zi.getConfig = Zi.initOptionChangedFunc = Zi.DxConfiguration = void 0;
var RE = UJ(Hi), jJ = RE.default || RE, kR = Pr;
function Sd(e) {
  if (e.$vnode) {
    var t = e.$vnode.componentOptions;
    return t && t.$_config;
  }
}
Zi.getConfig = Sd;
function FR(e) {
  if (e.$vnode) {
    var t = e.$vnode.componentOptions;
    return t && t.$_innerChanges;
  }
}
Zi.getInnerChanges = FR;
function PR(e, t, i) {
  e && (e.init(Object.keys(t.$props)), kR.setEmitOptionChangedFunc(e, t, i));
}
Zi.initOptionChangedFunc = PR;
function BE(e, t) {
  var i = e.name, n = e.isCollectionItem, r = e.ownerConfig, a = r && r.fullPath, o = i && a ? a + "." + i : i || "";
  return {
    optionPath: o,
    isCollection: n,
    removed: t
  };
}
var qJ = function() {
  return jJ.extend({
    beforeMount: function() {
      var e = Sd(this), t = FR(this);
      PR(e, this, t), kR.bindOptionWatchers(e, this, t);
    },
    mounted: function() {
      this.$parent.$_instance && this.$parent.$_config.componentsCountChanged.push(BE(Sd(this)));
    },
    beforeDestroy: function() {
      this.$parent.$_config.componentsCountChanged.push(BE(Sd(this), !0));
    },
    render: function(e) {
      return e();
    }
  });
};
Zi.DxConfiguration = qJ;
var Oa = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(Oa, "__esModule", { value: !0 });
Oa.DX_REMOVE_EVENT = Oa.DX_TEMPLATE_WRAPPER_CLASS = void 0;
var XJ = "dx-template-wrapper";
Oa.DX_TEMPLATE_WRAPPER_CLASS = XJ;
var YJ = "dxremove";
Oa.DX_REMOVE_EVENT = YJ;
var Qc = {}, Xl = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var sc = Se && Se.__assign || function() {
  return sc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, sc.apply(this, arguments);
};
Object.defineProperty(Xl, "__esModule", { value: !0 });
Xl.getOption = void 0;
var n_ = {
  useLegacyTemplateEngine: !1
};
function ZJ(e) {
  n_ = sc(sc({}, n_), e);
}
function QJ(e) {
  return n_[e];
}
Xl.getOption = QJ;
Xl.default = ZJ;
var Vo = {}, Jc = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(Jc, "__esModule", { value: !0 });
Jc.TEMPLATE_MULTIPLE_ROOTS_ERROR = void 0;
Jc.TEMPLATE_MULTIPLE_ROOTS_ERROR = "Template must have a single root node.";
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var JJ = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), eee = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), tee = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && JJ(t, e, i);
  return eee(t, e), t;
};
Object.defineProperty(Vo, "__esModule", { value: !0 });
Vo.discover = Vo.mountTemplate = void 0;
var kE = tee(Hi), iee = Jc, MR = "template", nee = kE.default || kE;
function ree(e) {
  if (e.$vnode) {
    var t = e.$vnode.componentOptions;
    if (!(!t.$_config || !t.$_config.name))
      return t;
  }
}
function aee(e) {
  return MR in e.$props && e.$vnode.data && e.$vnode.data.scopedSlots;
}
function oee(e) {
  var t = {};
  for (var i in e.$scopedSlots)
    if (!(i === "default" && e.$slots.default)) {
      var n = e.$scopedSlots[i];
      n && (t[i] = n);
    }
  for (var r = 0, a = e.$children; r < a.length; r++) {
    var o = a[r], s = ree(o);
    if (s) {
      var l = o.$scopedSlots.default;
      if (!(!l || !aee(o))) {
        var u = s.$_config.fullPath + "." + MR;
        t[u] = l;
      }
    }
  }
  return t;
}
Vo.discover = oee;
function see(e, t, i, n, r) {
  return new nee({
    el: r,
    name: n,
    inject: ["eventBus"],
    parent: t,
    created: function() {
      var a = this;
      this.eventBus.$on("updated", function() {
        a.$forceUpdate();
      });
    },
    render: function(a) {
      var o = e()(i);
      if (!o)
        return a("div");
      if (o.length > 1)
        throw new Error(iee.TEMPLATE_MULTIPLE_ROOTS_ERROR);
      return o[0];
    },
    destroyed: function() {
      this.eventBus.$off("updated");
    }
  });
}
Vo.mountTemplate = see;
const LR = /* @__PURE__ */ pc(Nk);
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var lc = Se && Se.__assign || function() {
  return lc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, lc.apply(this, arguments);
}, lee = Se && Se.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(Qc, "__esModule", { value: !0 });
Qc.TemplatesManager = void 0;
var uee = Xl, FE = Vo, dee = lee(LR), PE = Yc, kf = Oa, cee = xt, hee = (
  /** @class */
  function() {
    function e(t) {
      this._slots = {}, this._templates = {}, this._isDirty = !1, this._component = t, this.discover();
    }
    return e.prototype.discover = function() {
      var t = FE.discover(this._component);
      this._slots = lc(lc({}, this._slots), t), cee.allKeysAreEqual(this._templates, t) || this._prepareTemplates();
    }, Object.defineProperty(e.prototype, "templates", {
      get: function() {
        return this._templates;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isDirty", {
      get: function() {
        return this._isDirty;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.resetDirtyFlag = function() {
      this._isDirty = !1;
    }, e.prototype._prepareTemplates = function() {
      this._templates = {};
      for (var t = 0, i = Object.keys(this._slots); t < i.length; t++) {
        var n = i[t];
        this._templates[n] = this.createDxTemplate(n);
      }
      this._isDirty = !0;
    }, e.prototype.createDxTemplate = function(t) {
      var i = this;
      return {
        render: function(n) {
          var r = uee.getOption("useLegacyTemplateEngine") ? n.model : { data: n.model, index: n.index }, a = n.container.get ? n.container.get(0) : n.container, o = document.createElement("div");
          a.appendChild(o);
          var s = FE.mountTemplate(function() {
            return i._slots[t];
          }, i._component, r, t, o), l = s.$el;
          if (dee.default.setClass(l, kf.DX_TEMPLATE_WRAPPER_CLASS, !0), l.nodeType === Node.TEXT_NODE) {
            var u = document.createElement(a.nodeName === "TABLE" ? "tbody" : "span");
            u.style.display = "none", a.appendChild(u), PE.one(u, kf.DX_REMOVE_EVENT, s.$destroy.bind(s));
          } else
            PE.one(l, kf.DX_REMOVE_EVENT, s.$destroy.bind(s));
          return l;
        }
      };
    }, e;
  }()
);
Qc.TemplatesManager = hee;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var gr = Se && Se.__assign || function() {
  return gr = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, gr.apply(this, arguments);
}, pee = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), fee = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), VR = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && pee(t, e, i);
  return fee(t, e), t;
};
Object.defineProperty(Aa, "__esModule", { value: !0 });
Aa.BaseComponent = Aa.DxComponent = void 0;
var ME = VR(Hi), gee = Yc, _ee = Zc, Ff = VR(Pr), Pf = Zi, vee = Oa, ea = xt, mee = Qc, LE = ME.default || ME, NR = function() {
  return LE.extend({
    inheritAttrs: !1,
    data: function() {
      return {
        eventBus: new LE()
      };
    },
    provide: function() {
      return {
        eventBus: this.eventBus
      };
    },
    render: function(e) {
      var t = [];
      return this.$_config.cleanNested && this.$_config.cleanNested(), _ee.pullAllChildren(this.$slots.default, t, this.$_config), this.$_processChildren(t), e("div", {
        attrs: { id: this.$attrs.id }
      }, t);
    },
    beforeUpdate: function() {
      this.$_config.setPrevNestedOptions(this.$_config.getNestedOptionValues());
    },
    updated: function() {
      var e, t;
      if (this.$children.forEach(function(u) {
        return Pf.initOptionChangedFunc(Pf.getConfig(u), u, Pf.getInnerChanges(u));
      }), this.$_templatesManager.discover(), this.$_instance.beginUpdate(), this.$_templatesManager.isDirty) {
        this.$_instance.option("integrationOptions.templates", this.$_templatesManager.templates);
        for (var i = (t = (e = this.$vnode) === null || e === void 0 ? void 0 : e.componentOptions) === null || t === void 0 ? void 0 : t.propsData, n = 0, r = Object.keys(this.$_templatesManager.templates); n < r.length; n++) {
          var a = r[n];
          this.$_instance.option(ea.getTemplatePropName(i, a), a);
        }
        this.$_templatesManager.resetDirtyFlag();
      }
      for (var o = 0, s = Object.keys(this.$_pendingOptions); o < s.length; o++) {
        var l = s[o];
        this.$_instance.option(l, this.$_pendingOptions[l]);
      }
      this.$_pendingOptions = {}, this.$_applyConfigurationChanges(), this.$_instance.endUpdate(), this.eventBus.$emit("updated");
    },
    beforeDestroy: function() {
      var e = this.$_instance;
      e && (gee.triggerHandler(this.$el, vee.DX_REMOVE_EVENT), e.dispose());
    },
    created: function() {
      var e = this;
      this.$_config = new Ff.default(function(t, i) {
        return e.$_pendingOptions[t] = i;
      }, null, this.$options.propsData && gr({}, this.$options.propsData), this.$_expectedChildren), this.$_innerChanges = {}, this.$_config.init(this.$props && Object.keys(this.$props));
    },
    methods: {
      $_applyConfigurationChanges: function() {
        var e = this;
        this.$_config.componentsCountChanged.forEach(function(t) {
          var i = t.optionPath, n = t.isCollection, r = t.removed, a = e.$_config.getNestedOptionValues();
          !n && r ? e.$_instance.resetOption(i) : e.$_instance.option(i, ea.getOptionValue(a, i));
        }), this.$_config.cleanComponentsCountChanged();
      },
      $_createWidget: function(e) {
        var t = this;
        t.$_pendingOptions = {}, t.$_templatesManager = new mee.TemplatesManager(this);
        var i = this.$_config, n = gr(gr(gr(gr({}, this.$options.propsData), i.initialValues), i.getNestedOptionValues()), this.$_getIntegrationOptions()), r = new this.$_WidgetClass(e, n);
        t.$_instance = r, r.on("optionChanged", function(a) {
          return i.onOptionChanged(a);
        }), Ff.setEmitOptionChangedFunc(i, this, this.$_innerChanges), Ff.bindOptionWatchers(i, this, this.$_innerChanges), this.$_createEmitters(r);
      },
      $_getIntegrationOptions: function() {
        var e, t, i = gr({ integrationOptions: {
          watchMethod: this.$_getWatchMethod()
        } }, this.$_getExtraIntegrationOptions());
        if (this.$_templatesManager.isDirty) {
          var n = this.$_templatesManager.templates;
          i.integrationOptions.templates = n;
          for (var r = (t = (e = this.$vnode) === null || e === void 0 ? void 0 : e.componentOptions) === null || t === void 0 ? void 0 : t.propsData, a = 0, o = Object.keys(n); a < o.length; a++) {
            var s = o[a];
            i[ea.getTemplatePropName(r, s)] = s;
          }
          this.$_templatesManager.resetDirtyFlag();
        }
        return i;
      },
      $_getWatchMethod: function() {
        var e = this;
        return function(t, i, n) {
          return n = n || {}, n.skipImmediate || i(t()), e.$watch(function() {
            return t();
          }, function(r, a) {
            (ea.toComparable(a) !== ea.toComparable(r) || n.deep) && i(r);
          }, {
            deep: n.deep
          });
        };
      },
      $_getExtraIntegrationOptions: function() {
        return {};
      },
      $_processChildren: function(e) {
      },
      $_createEmitters: function(e) {
        var t = this;
        Object.keys(this.$listeners).forEach(function(i) {
          var n = ea.camelize(i);
          e.on(n, function(r) {
            t.$emit(i, r);
          });
        });
      }
    }
  });
};
Aa.BaseComponent = NR;
function Cee(e) {
  var t = [];
  return ea.forEachChildNode(e, function(i) {
    var n = i.parentNode, r = i.hasAttribute && i.hasAttribute("isExtension");
    (i.nodeName === "#comment" || r) && n && (t.push(i), n.removeChild(i));
  }), t;
}
function xee(e, t) {
  t.forEach(function(i) {
    e.appendChild(i);
  });
}
var yee = function() {
  return NR().extend({
    methods: {
      $_getExtraIntegrationOptions: function() {
        return {
          onInitializing: function() {
            this.beginUpdate();
          }
        };
      },
      $_processChildren: function(e) {
        e.forEach(function(t) {
          t.componentOptions && (t.componentOptions.$_hasOwner = !0);
        });
      }
    },
    mounted: function() {
      var e = this, t = Cee(this.$el);
      this.$_createWidget(this.$el), this.$_instance.endUpdate(), xee(this.$el, t), this.$slots && this.$slots.default && this.$slots.default.forEach(function(i) {
        var n = i.componentInstance;
        n && n.$_isExtension && n.attachTo(e.$el);
      });
    }
  });
};
Aa.DxComponent = yee;
var eh = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(eh, "__esModule", { value: !0 });
eh.DxExtensionComponent = void 0;
var bee = Aa, See = function() {
  return bee.BaseComponent().extend({
    created: function() {
      this.$_isExtension = !0;
    },
    mounted: function() {
      this.$el.setAttribute("isExtension", "true"), !(this.$vnode && this.$vnode.componentOptions.$_hasOwner) && this.attachTo(this.$el);
    },
    methods: {
      attachTo: function(e) {
        this.$_createWidget(e);
      }
    }
  });
};
eh.DxExtensionComponent = See;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var Eee = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), wee = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), Iee = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && Eee(t, e, i);
  return wee(t, e), t;
};
Object.defineProperty(Ir, "__esModule", { value: !0 });
Ir.createExtensionComponent = Ir.createConfigurationComponent = Ir.createComponent = void 0;
var VE = Iee(Hi), lm = VE.default || VE, Tee = Aa, Dee = Zi, Aee = eh;
function Oee(e) {
  return e.extends = Tee.DxComponent(), lm.extend(e);
}
Ir.createComponent = Oee;
function Ree(e) {
  return e.extends = Dee.DxConfiguration(), lm.extend(e);
}
Ir.createConfigurationComponent = Ree;
function Bee(e) {
  return e.extends = Aee.DxExtensionComponent(), lm.extend(e);
}
Ir.createExtensionComponent = Bee;
var Tr = {}, Ra = {};
const kee = /* @__PURE__ */ pc(_k);
var Mf = {}, mt = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(mt, "__esModule", { value: !0 });
mt.getOptionInfo = mt.getOptionValue = mt.allKeysAreEqual = mt.forEachChildNode = mt.isEqual = mt.toComparable = mt.camelize = mt.lowercaseFirst = mt.uppercaseFirst = mt.getTemplatePropName = void 0;
function Fee(e, t) {
  for (var i in e)
    if (e[i] === t)
      return i;
  return t;
}
mt.getTemplatePropName = Fee;
function $R(e) {
  return e[0].toUpperCase() + e.substr(1);
}
mt.uppercaseFirst = $R;
function HR(e) {
  return e[0].toLowerCase() + e.substr(1);
}
mt.lowercaseFirst = HR;
function Pee(e) {
  return HR(e.split("-").map(function(t) {
    return $R(t);
  }).join(""));
}
mt.camelize = Pee;
function r_(e) {
  return e instanceof Date ? e.getTime() : e;
}
mt.toComparable = r_;
function Mee(e, t) {
  return r_(e) === r_(t) ? !0 : Array.isArray(e) && Array.isArray(t) ? e.length === 0 && t.length === 0 : !1;
}
mt.isEqual = Mee;
function Lee(e, t) {
  Array.prototype.slice.call(e.childNodes).forEach(t);
}
mt.forEachChildNode = Lee;
function Vee(e, t) {
  var i = Object.keys(e);
  if (i.length !== Object.keys(t).length)
    return !1;
  for (var n = 0, r = i; n < r.length; n++) {
    var a = r[n];
    if (!t.hasOwnProperty(a))
      return !1;
  }
  return !0;
}
mt.allKeysAreEqual = Vee;
function Nee(e, t) {
  var i = e;
  return t.split(".").forEach(function(n) {
    var r = zR(n);
    i && (i = r.isCollection ? i[r.name] && i[r.name][r.index] : i[r.name]);
  }), i;
}
mt.getOptionValue = Nee;
function zR(e) {
  var t = e.split("[");
  return t.length === 1 ? {
    isCollection: !1,
    name: e,
    fullName: e
  } : {
    isCollection: !0,
    name: t[0],
    fullName: e,
    index: Number(t[1].slice(0, -1))
  };
}
mt.getOptionInfo = zR;
var kn = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var NE;
function WR() {
  if (NE)
    return kn;
  NE = 1;
  var e = Se && Se.__assign || function() {
    return e = Object.assign || function(a) {
      for (var o, s = 1, l = arguments.length; s < l; s++) {
        o = arguments[s];
        for (var u in o)
          Object.prototype.hasOwnProperty.call(o, u) && (a[u] = o[u]);
      }
      return a;
    }, e.apply(this, arguments);
  };
  Object.defineProperty(kn, "__esModule", { value: !0 }), kn.pullAllChildren = kn.pullConfigComponents = kn.isFragment = void 0;
  var t = qa();
  function i(a, o, s) {
    !a || a.length === 0 || r(a, o, s);
  }
  kn.pullAllChildren = i;
  function n(a) {
    var o = a.patchFlag;
    return o === 128 || o === 256 || o === 64 || o === -2;
  }
  kn.isFragment = n;
  function r(a, o, s) {
    a.forEach(function(l) {
      if (n(l) && Array.isArray(l.children) && r(l.children, o, s), n(l) || o.push(l), !!l) {
        var u = t.getComponentInfo(l);
        if (!(!u || !u.$_optionName)) {
          var d = t.configurationChildren(l), c = e(e({}, u.$_predefinedProps), t.getNormalizedProps(l.props || {})), h = s.createNested(u.$_optionName, c, u.$_isCollectionItem, u.$_expectedChildren);
          l.$_config = h, l.$_innerChanges = {}, d && r(d, o, h);
        }
      }
    });
  }
  return kn.pullConfigComponents = r, kn;
}
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var $E;
function qa() {
  return $E || ($E = 1, function(e) {
    var t = Se && Se.__assign || function() {
      return t = Object.assign || function(V) {
        for (var E, J = 1, Oe = arguments.length; J < Oe; J++) {
          E = arguments[J];
          for (var pe in E)
            Object.prototype.hasOwnProperty.call(E, pe) && (V[pe] = E[pe]);
        }
        return V;
      }, t.apply(this, arguments);
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.getConfigurationOptions = e.setVModel = e.setCompatOptions = e.getVModelValue = e.getNodeTypeOfComponent = e.getNodeOptions = e.usedConfigurationProps = e.getComponentProps = e.mount = e.defaultSlots = e.declaredTemplates = e.configurationTemplate = e.configurationDefaultTemplate = e.configurationChildren = e.getNormalizedProps = e.getComponentInfo = e.getChildren = e.VMODEL_NAME = void 0;
    var i = Hi, n = mt, r = WR();
    e.VMODEL_NAME = "modelValue";
    function a(V) {
      if (!P(V) || !V.$_config)
        return [];
      var E = V.$.subTree && V.$.subTree.children;
      return Array.isArray(E) ? E.filter(function(J) {
        if (!r.isFragment(J))
          return J;
      }) : [];
    }
    e.getChildren = a;
    function o(V) {
      return he(V);
    }
    e.getComponentInfo = o;
    function s(V) {
      var E = {};
      for (var J in V)
        V.hasOwnProperty(J) && (E[n.camelize(J)] = V[J]);
      return E;
    }
    e.getNormalizedProps = s;
    function l(V) {
      return !V.children || !V.children.default ? [] : K(V.children.default());
    }
    e.configurationChildren = l;
    function u(V) {
      if (!(!V.children || V.children === "object" || !V.children.default))
        return j(V.children.default()) ? V.children.default : void 0;
    }
    e.configurationDefaultTemplate = u;
    function d(V) {
      return u(V);
    }
    e.configurationTemplate = d;
    function c(V) {
      return V.$slots;
    }
    e.declaredTemplates = c;
    function h(V) {
      var E = c(V);
      return E.default ? E.default() : [];
    }
    e.defaultSlots = h;
    function p(V, E, J) {
      var Oe = i.createApp(V);
      return Oe.provide("eventBus", E.eventBus), H(Oe, E), Oe.mount(J);
    }
    e.mount = p;
    function f(V) {
      var E = V.$.vnode.props || {};
      return s(E);
    }
    e.getComponentProps = f;
    function v(V) {
      return V.props;
    }
    e.usedConfigurationProps = v;
    function m(V) {
      return V.$ ? V.$.vnode : V;
    }
    e.getNodeOptions = m;
    function C(V) {
      return V.$.vnode.type;
    }
    e.getNodeTypeOfComponent = C;
    function b(V) {
      return V[e.VMODEL_NAME];
    }
    e.getVModelValue = b;
    function A(V) {
      V.compatConfig = {
        MODE: 3
      };
    }
    e.setCompatOptions = A;
    function R(V) {
      var E, J = "update:" + e.VMODEL_NAME;
      V.model.prop = e.VMODEL_NAME, V.model.event = J, V.props.modelValue = {}, V.emits = t(t({}, V.emits), (E = {}, E["" + J] = null, E));
    }
    e.setVModel = R;
    function k(V, E) {
      for (var J in E)
        !V.hasOwnProperty(J) && E.hasOwnProperty(J) && (V[J] = E[J]);
    }
    function H(V, E) {
      V._context.components = Object.assign(E.$.appContext.components, V._context.components), Object.setPrototypeOf(V._context.provides, Object.getPrototypeOf(E.$.provides)), Object.assign(V._context.provides, E.$.appContext.provides), V._context.config = E.$.appContext.config, V._context.directives = E.$.appContext.directives, V._context.mixins = E.$.appContext.mixins, k(V._context.app, E.$.appContext.app);
    }
    function K(V) {
      return V.filter(function(E) {
        if (r.isFragment(E))
          return K(E.children || []);
        var J = E.type;
        if (J && typeof J == "object" && J.$_optionName)
          return delete E.$_config, delete E.$_innerChanges, E;
      });
    }
    function j(V) {
      var E = !1;
      return V.forEach(function(J) {
        !re(J) && !r.isFragment(J) && !z(J) && (E = !0);
      }), E;
    }
    function z(V) {
      var E = V.type, J = typeof E == "symbol" ? E.toString() : E;
      return J === "Symbol(Comment)" || J === "Symbol()" && !V.children;
    }
    function re(V) {
      return V.type && typeof V.type == "object" && V.type.$_optionName;
    }
    function he(V) {
      return V.type;
    }
    e.getConfigurationOptions = he;
    function P(V) {
      return V.$.vnode && V.$.vnode.children && V.$.vnode.children.default;
    }
  }(Mf)), Mf;
}
var Mr = {}, Yl = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var uc = Se && Se.__assign || function() {
  return uc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, uc.apply(this, arguments);
};
Object.defineProperty(Yl, "__esModule", { value: !0 });
Yl.getOption = void 0;
var a_ = {
  deepWatch: !1
};
function $ee(e) {
  a_ = uc(uc({}, a_), e);
}
function Hee(e) {
  return a_[e];
}
Yl.getOption = Hee;
Yl.default = $ee;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var dc = Se && Se.__assign || function() {
  return dc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, dc.apply(this, arguments);
};
Object.defineProperty(Mr, "__esModule", { value: !0 });
Mr.setEmitOptionChangedFunc = Mr.bindOptionWatchers = void 0;
var GR = Hi, zee = Yl, o_ = mt, s_ = qa(), Wee = (
  /** @class */
  function() {
    function e(t, i, n, r, a, o, s) {
      this._updateFunc = t, this._name = i, this._initialValues = n || {}, this._nestedConfigurations = [], this._isCollectionItem = !!a, this._collectionItemIndex = o, this._expectedChildren = r || {}, this._ownerConfig = s, this._componentChanges = [], this.updateValue = this.updateValue.bind(this);
    }
    return Object.defineProperty(e.prototype, "name", {
      get: function() {
        return this._name;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "fullName", {
      get: function() {
        return this._name && this._isCollectionItem ? this._name + "[" + this._collectionItemIndex + "]" : this._name;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "componentsCountChanged", {
      get: function() {
        return this._componentChanges;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.cleanComponentsCountChanged = function() {
      this._componentChanges = [];
    }, Object.defineProperty(e.prototype, "fullPath", {
      get: function() {
        return this._ownerConfig && this._ownerConfig.fullPath ? this._ownerConfig.fullPath + "." + this.fullName : this.fullName;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "ownerConfig", {
      get: function() {
        return this._ownerConfig;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "options", {
      get: function() {
        return this._options;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "initialValues", {
      get: function() {
        return this._initialValues;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "expectedChildren", {
      get: function() {
        return this._expectedChildren;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "nested", {
      get: function() {
        return this._nestedConfigurations;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "prevNestedOptions", {
      get: function() {
        return this._prevNestedConfigOptions;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "collectionItemIndex", {
      get: function() {
        return this._collectionItemIndex;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isCollectionItem", {
      get: function() {
        return this._isCollectionItem;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "updateFunc", {
      get: function() {
        return this._updateFunc;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.init = function(t) {
      this._options = t || [];
    }, Object.defineProperty(e.prototype, "emitOptionChanged", {
      set: function(t) {
        this._emitOptionChanged = t;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setPrevNestedOptions = function(t) {
      this._prevNestedConfigOptions = t;
    }, e.prototype.onOptionChanged = function(t) {
      o_.isEqual(t.value, t.previousValue) || this._onOptionChanged(t.fullName.split("."), t);
    }, e.prototype.cleanNested = function() {
      this._nestedConfigurations = [];
    }, e.prototype.createNested = function(t, i, n, r) {
      var a = this._expectedChildren[t], o = t, s = n;
      a && (s = a.isCollectionItem, a.optionName && (o = a.optionName));
      var l = -1;
      s && o && (l = this._nestedConfigurations.filter(function(d) {
        return d._name && d._name === o;
      }).length);
      var u = new e(this._updateFunc, o, i, r, s, l, this);
      return this._nestedConfigurations.push(u), u;
    }, e.prototype.updateValue = function(t, i) {
      var n = [this.fullPath, t].filter(function(r) {
        return r;
      }).join(".");
      this._updateFunc(n, i);
    }, e.prototype.getNestedOptionValues = function() {
      var t = {};
      return this._nestedConfigurations.forEach(function(i) {
        if (i._name) {
          var n = dc(dc({}, i.initialValues), i.getNestedOptionValues());
          if (n)
            if (!i._isCollectionItem)
              t[i._name] = n;
            else {
              var r = t[i._name];
              (!r || !Array.isArray(r)) && (r = [], t[i._name] = r), r.push(n);
            }
        }
      }), t;
    }, e.prototype.getOptionsToWatch = function() {
      var t = {};
      return this._nestedConfigurations.forEach(function(i) {
        return i._name && (t[i._name] = !0);
      }), this._options.filter(function(i) {
        return !t[i];
      });
    }, e.prototype._onOptionChanged = function(t, i) {
      if (t.length !== 0) {
        var n = o_.getOptionInfo(t[0]);
        if (n.isCollection || t.length > 1) {
          var r = this._getNestedConfig(n.fullName);
          if (r) {
            r._onOptionChanged(t.slice(1), i);
            return;
          }
          this._tryEmitOptionChanged(n.name, i.component.option(this.fullPath ? this.fullPath + "." + n.name : n.name));
        } else
          this._tryEmitOptionChanged(n.name, i.value);
      }
    }, e.prototype._getNestedConfig = function(t) {
      for (var i = 0, n = this._nestedConfigurations; i < n.length; i++) {
        var r = n[i];
        if (r.fullName === t)
          return r;
      }
    }, e.prototype._tryEmitOptionChanged = function(t, i) {
      this._emitOptionChanged && this._emitOptionChanged(t, i);
    }, e;
  }()
);
function Gee(e, t, i) {
  var n = e && e.getOptionsToWatch();
  n && n.forEach(function(r) {
    t.$watch(r, function(a) {
      var o = GR.toRaw(a);
      (!i.hasOwnProperty(r) || i[r] !== o) && e.updateValue(r, a), delete i[r];
    }, { deep: zee.getOption("deepWatch") });
  });
}
Mr.bindOptionWatchers = Gee;
function Kee(e, t) {
  var i = e.$options.props;
  return i && i.hasOwnProperty(t);
}
function Uee(e, t, i) {
  var n;
  return e.model && t.hasOwnProperty(s_.VMODEL_NAME) && ((n = i == null ? void 0 : i.props) === null || n === void 0 ? void 0 : n.hasOwnProperty(s_.VMODEL_NAME));
}
function jee(e, t, i) {
  e.emitOptionChanged = function(n, r) {
    var a, o = t.$props, s = (a = t == null ? void 0 : t.$) === null || a === void 0 ? void 0 : a.vnode;
    if (Kee(t, n) && !o_.isEqual(r, o[n]) && t.$emit) {
      i[n] = GR.toRaw(r);
      var l = n === "value" && Uee(t.$options, o, s) ? "update:" + s_.VMODEL_NAME : "update:" + n;
      t.$emit(l, r);
    }
  };
}
Mr.setEmitOptionChangedFunc = jee;
Mr.default = Wee;
var Qi = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(Qi, "__esModule", { value: !0 });
Qi.getInnerChanges = Qi.getConfig = Qi.initOptionChangedFunc = Qi.initDxConfiguration = void 0;
var qee = Hi, um = qa(), KR = Mr;
function Ed(e) {
  var t = um.getNodeOptions(e);
  if (t)
    return t.$_config || e.$_config;
}
Qi.getConfig = Ed;
function UR(e) {
  var t = um.getNodeOptions(e);
  if (t)
    return t.$_innerChanges || e.$_innerChanges;
}
Qi.getInnerChanges = UR;
function jR(e, t, i, n) {
  e && (e.init(Object.keys(t)), i && KR.setEmitOptionChangedFunc(e, i, n));
}
Qi.initOptionChangedFunc = jR;
function HE(e, t) {
  var i = e.name, n = e.isCollectionItem, r = e.ownerConfig, a = r && r.fullPath, o = i && a ? a + "." + i : i || "";
  return {
    optionPath: o,
    isCollection: n,
    removed: t
  };
}
function Xee() {
  return qee.defineComponent({
    beforeMount: function() {
      var e = this, t = Ed(e), i = UR(e);
      jR(t, um.getNodeTypeOfComponent(e).props, e, i), KR.bindOptionWatchers(t, this, i);
    },
    mounted: function() {
      this.$parent.$_instance && this.$parent.$_config.componentsCountChanged.push(HE(Ed(this)));
    },
    beforeUnmount: function() {
      var e = Ed(this);
      e && this.$parent.$_config.componentsCountChanged.push(HE(e, !0));
    },
    render: function() {
      return null;
    }
  });
}
Qi.initDxConfiguration = Xee;
var Ba = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(Ba, "__esModule", { value: !0 });
Ba.DX_REMOVE_EVENT = Ba.DX_TEMPLATE_WRAPPER_CLASS = void 0;
var Yee = "dx-template-wrapper";
Ba.DX_TEMPLATE_WRAPPER_CLASS = Yee;
var Zee = "dxremove";
Ba.DX_REMOVE_EVENT = Zee;
var th = {}, No = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(No, "__esModule", { value: !0 });
No.discover = No.mountTemplate = void 0;
var Do = qa(), Qee = Hi, qR = "template";
function Jee(e) {
  var t = e;
  if (t && !(!t.$_config || !t.$_config.name))
    return t;
}
function ete(e) {
  return qR in e.type.props && Do.configurationTemplate(e);
}
function tte(e) {
  var t = {}, i = Do.declaredTemplates(e);
  for (var n in i)
    if (!(n === "default" && e.$slots.default)) {
      var r = i[n];
      r && (t[n] = r);
    }
  for (var a = Do.getChildren(e), o = 0, s = a; o < s.length; o++) {
    var l = s[o], u = Jee(l);
    if (u) {
      var d = Do.configurationDefaultTemplate(l);
      if (!(!d || !ete(l))) {
        var c = u.$_config.fullPath + "." + qR;
        t[c] = d;
      }
    }
  }
  return t;
}
No.discover = tte;
function ite(e) {
  var t = [];
  return e.forEach(function(i) {
    var n = Do.getConfigurationOptions(i);
    (!n || !n.$_optionName) && t.push(i);
  }), t;
}
function nte(e, t, i, n, r) {
  return Do.mount({
    name: n,
    inject: ["eventBus"],
    created: function() {
      this.eventBus.add(this.$_updatedHandler);
    },
    mounted: function() {
      i.onRendered();
    },
    unmounted: function() {
      this.eventBus.remove(this.$_updatedHandler);
    },
    methods: {
      $_updatedHandler: function() {
        this.$forceUpdate();
      }
    },
    render: function() {
      var a = ite(e()(i));
      return a ? a.length > 1 ? a : a[0] : Qee.h("div");
    }
  }, t, r);
}
No.mountTemplate = nte;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var cc = Se && Se.__assign || function() {
  return cc = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, cc.apply(this, arguments);
}, rte = Se && Se.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(th, "__esModule", { value: !0 });
th.TemplatesManager = void 0;
var zE = No, ate = rte(LR), WE = Yc, Lf = Ba, ote = mt, ste = (
  /** @class */
  function() {
    function e(t) {
      this._slots = {}, this._templates = {}, this._isDirty = !1, this._component = t, this.discover();
    }
    return e.prototype.discover = function() {
      var t = zE.discover(this._component);
      this._slots = cc(cc({}, this._slots), t), ote.allKeysAreEqual(this._templates, t) || this._prepareTemplates();
    }, Object.defineProperty(e.prototype, "templates", {
      get: function() {
        return this._templates;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "isDirty", {
      get: function() {
        return this._isDirty;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.resetDirtyFlag = function() {
      this._isDirty = !1;
    }, e.prototype._prepareTemplates = function() {
      this._templates = {};
      for (var t = 0, i = Object.keys(this._slots); t < i.length; t++) {
        var n = i[t];
        this._templates[n] = this.createDxTemplate(n);
      }
      this._isDirty = !0;
    }, e.prototype.createDxTemplate = function(t) {
      var i = this;
      return {
        render: function(n) {
          var r = function(c, h) {
            return h === void 0 && (h = 0), function() {
              h === 1 && c && c(), h++;
            };
          }(n.onRendered), a = { data: n.model, index: n.index, onRendered: r }, o = document.createElement("div"), s = n.container.get ? n.container.get(0) : n.container;
          s.appendChild(o);
          var l = zE.mountTemplate(function() {
            return i._slots[t];
          }, i._component, a, t, o), u = l.$el;
          for (s.removeChild(o); o.firstChild; )
            s.appendChild(o.firstChild);
          if (ate.default.setClass(u, Lf.DX_TEMPLATE_WRAPPER_CLASS, !0), u.nodeType === Node.TEXT_NODE) {
            var d = document.createElement(s.nodeName === "TABLE" ? "tbody" : "span");
            d.style.display = "none", s.appendChild(d), WE.one(d, Lf.DX_REMOVE_EVENT, l.$.appContext.app.unmount.bind(l));
          } else
            WE.one(u, Lf.DX_REMOVE_EVENT, l.$.appContext.app.unmount.bind(l));
          return r(), u;
        }
      };
    }, e;
  }()
);
th.TemplatesManager = ste;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var Mn = Se && Se.__assign || function() {
  return Mn = Object.assign || function(e) {
    for (var t, i = 1, n = arguments.length; i < n; i++) {
      t = arguments[i];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    }
    return e;
  }, Mn.apply(this, arguments);
}, lte = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), ute = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), dte = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && lte(t, e, i);
  return ute(t, e), t;
}, cte = Se && Se.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(Ra, "__esModule", { value: !0 });
Ra.initBaseComponent = Ra.initDxComponent = void 0;
var l_ = Hi, hte = cte(kee), pte = Yc, pr = qa(), fte = WR(), Vf = dte(Mr), gte = Qi, _te = Ba, ta = mt, vte = th, mte = ["id", "class", "style"];
function Cte(e) {
  var t = {};
  return mte.forEach(function(i) {
    var n = e[i];
    n && (t[i] = n);
  }), t;
}
function XR() {
  return l_.defineComponent({
    inheritAttrs: !1,
    data: function() {
      return {
        eventBus: hte.default()
      };
    },
    provide: function() {
      return {
        eventBus: this.eventBus
      };
    },
    render: function() {
      var e = this, t = [];
      return e.$_config.cleanNested && e.$_config.cleanNested(), fte.pullAllChildren(pr.defaultSlots(this), t, e.$_config), this.$_processChildren(t), l_.h("div", Mn({}, Cte(this.$attrs)), t);
    },
    beforeUpdate: function() {
      var e = this;
      e.$_config.setPrevNestedOptions(e.$_config.getNestedOptionValues());
    },
    updated: function() {
      var e = this, t = YR(this.$el);
      if (pr.getChildren(e).forEach(function(u) {
        var d;
        gte.initOptionChangedFunc(u.$_config, u.type.props || {}, (d = u == null ? void 0 : u.component) === null || d === void 0 ? void 0 : d.proxy, u.$_innerChanges);
      }), e.$_templatesManager.discover(), e.$_instance.beginUpdate(), e.$_templatesManager.isDirty) {
        e.$_instance.option("integrationOptions.templates", e.$_templatesManager.templates);
        for (var i = e.$.vnode.props, n = 0, r = Object.keys(e.$_templatesManager.templates); n < r.length; n++) {
          var a = r[n];
          e.$_instance.option(ta.getTemplatePropName(i, a), a);
        }
        e.$_templatesManager.resetDirtyFlag();
      }
      for (var o = 0, s = Object.keys(e.$_pendingOptions); o < s.length; o++) {
        var l = s[o];
        e.$_instance.option(l, e.$_pendingOptions[l]);
      }
      e.$_pendingOptions = {}, this.$_applyConfigurationChanges(), e.$_instance.endUpdate(), ZR(this.$el, t), this.eventBus.fire();
    },
    beforeUnmount: function() {
      var e = this, t = e.$_instance;
      t && (pte.triggerHandler(this.$el, _te.DX_REMOVE_EVENT), t.dispose());
    },
    created: function() {
      var e = this, t = pr.getComponentProps(this);
      e.$_config = new Vf.default(function(i, n) {
        Array.isArray(n) ? e.$_instance.option(i, n) : e.$_pendingOptions[i === pr.VMODEL_NAME ? "value" : i] = n;
      }, null, t && Mn({}, t), e.$_expectedChildren), e.$_innerChanges = {}, e.$_config.init(this.$props && Object.keys(this.$props));
    },
    methods: {
      $_applyConfigurationChanges: function() {
        var e = this;
        e.$_config.componentsCountChanged.forEach(function(t) {
          var i = t.optionPath, n = t.isCollection, r = t.removed, a = e.$_config.getNestedOptionValues();
          !n && r ? e.$_instance.resetOption(i) : e.$_instance.option(i, ta.getOptionValue(a, i));
        }), e.$_config.cleanComponentsCountChanged();
      },
      $_createWidget: function(e) {
        var t = this;
        t.$_pendingOptions = {}, t.$_templatesManager = new vte.TemplatesManager(this);
        var i = t.$_config;
        i.initialValues.hasOwnProperty(pr.VMODEL_NAME) && (i.initialValues.value = pr.getVModelValue(i.initialValues));
        var n = Mn(Mn(Mn(Mn({ templatesRenderAsynchronously: t.$_hasAsyncTemplate }, pr.getComponentProps(t)), i.initialValues), i.getNestedOptionValues()), this.$_getIntegrationOptions()), r = new t.$_WidgetClass(e, n);
        t.$_instance = r, r.on("optionChanged", function(a) {
          return i.onOptionChanged(a);
        }), Vf.setEmitOptionChangedFunc(i, t, t.$_innerChanges), Vf.bindOptionWatchers(i, t, t.$_innerChanges), this.$_createEmitters(r);
      },
      $_getIntegrationOptions: function() {
        var e = this, t = Mn({ integrationOptions: {
          watchMethod: this.$_getWatchMethod()
        } }, this.$_getExtraIntegrationOptions());
        if (e.$_templatesManager.isDirty) {
          var i = e.$_templatesManager.templates;
          t.integrationOptions.templates = i;
          for (var n = e.$.vnode.props, r = 0, a = Object.keys(i); r < a.length; r++) {
            var o = a[r];
            t[ta.getTemplatePropName(n, o)] = o;
          }
          e.$_templatesManager.resetDirtyFlag();
        }
        return t;
      },
      $_getWatchMethod: function() {
        var e = this;
        return function(t, i, n) {
          return n = n || {}, n.skipImmediate || i(t()), e.$watch(function() {
            return t();
          }, function(r, a) {
            (ta.toComparable(a) !== ta.toComparable(r) || n.deep) && i(r);
          }, {
            deep: n.deep
          });
        };
      },
      $_getExtraIntegrationOptions: function() {
        return {};
      },
      $_processChildren: function(e) {
      },
      $_createEmitters: function(e) {
        var t = this;
        this.$attrs && Object.keys(this.$attrs).forEach(function(i) {
          var n = ta.camelize(i);
          e.on(n, function(r) {
            t.$emit(i, r);
          });
        });
      }
    }
  });
}
Ra.initBaseComponent = XR;
function YR(e) {
  var t = [];
  return ta.forEachChildNode(e, function(i) {
    var n = i.parentNode, r = i.hasAttribute && i.hasAttribute("isExtension");
    (i.nodeName === "#comment" || r) && n && (t.push(i), n.removeChild(i));
  }), t;
}
function ZR(e, t) {
  t.forEach(function(i) {
    e.appendChild(i);
  });
}
function xte() {
  return l_.defineComponent({
    extends: XR(),
    methods: {
      $_getExtraIntegrationOptions: function() {
        return {
          onInitializing: function() {
            this.beginUpdate();
          }
        };
      },
      $_processChildren: function(e) {
        e.forEach(function(t) {
          !t || typeof t != "object" || (t.$_hasOwner = !0);
        });
      }
    },
    mounted: function() {
      var e = this, t = YR(this.$el), i = this;
      this.$_createWidget(this.$el), i.$_instance.endUpdate(), ZR(this.$el, t), this.$slots && this.$slots.default && pr.getChildren(i).forEach(function(n) {
        var r = n;
        r && r.$_isExtension && r.$_attachTo(e.$el);
      });
    }
  });
}
Ra.initDxComponent = xte;
var ih = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(ih, "__esModule", { value: !0 });
ih.initDxExtensionComponent = void 0;
var yte = Hi, bte = Ra, Ste = qa();
function Ete() {
  return yte.defineComponent({
    extends: bte.initBaseComponent(),
    mounted: function() {
      this.$el.setAttribute("isExtension", "true");
      var e = Ste.getNodeOptions(this);
      e.$_isExtension = !0, e.$_attachTo = this.attachTo.bind(this), !(e && e.$_hasOwner) && this.attachTo(this.$el);
    },
    methods: {
      attachTo: function(e) {
        this.$_createWidget(e);
      }
    }
  });
}
ih.initDxExtensionComponent = Ete;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
Object.defineProperty(Tr, "__esModule", { value: !0 });
Tr.createExtensionComponent = Tr.createConfigurationComponent = Tr.createComponent = void 0;
var dm = Hi, wte = Ra, Ite = Qi, Tte = ih, hc = qa();
function Dte(e) {
  return e.extends = wte.initDxComponent(), hc.setCompatOptions(e), e.model && hc.setVModel(e), dm.defineComponent(e);
}
Tr.createComponent = Dte;
function Ate(e) {
  return e.extends = Ite.initDxConfiguration(), hc.setCompatOptions(e), dm.defineComponent(e);
}
Tr.createConfigurationComponent = Ate;
function Ote(e) {
  return e.extends = Tte.initDxExtensionComponent(), hc.setCompatOptions(e), dm.defineComponent(e);
}
Tr.createExtensionComponent = Ote;
var $o = {};
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var Rte = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), Bte = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), kte = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && Rte(t, e, i);
  return Bte(t, e), t;
};
Object.defineProperty($o, "__esModule", { value: !0 });
$o.isVue3 = $o.getVueVersion = void 0;
var GE = kte(Hi), Fte = GE.default || GE;
function QR() {
  var e = Fte.version;
  return Number(e.split(".")[0]);
}
$o.getVueVersion = QR;
function Pte() {
  return QR() === 3;
}
$o.isVue3 = Pte;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var Mte = Se && Se.__createBinding || (Object.create ? function(e, t, i, n) {
  n === void 0 && (n = i), Object.defineProperty(e, n, { enumerable: !0, get: function() {
    return t[i];
  } });
} : function(e, t, i, n) {
  n === void 0 && (n = i), e[n] = t[i];
}), Lte = Se && Se.__setModuleDefault || (Object.create ? function(e, t) {
  Object.defineProperty(e, "default", { enumerable: !0, value: t });
} : function(e, t) {
  e.default = t;
}), JR = Se && Se.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var t = {};
  if (e != null)
    for (var i in e)
      i !== "default" && Object.prototype.hasOwnProperty.call(e, i) && Mte(t, e, i);
  return Lte(t, e), t;
};
Object.defineProperty(Yn, "__esModule", { value: !0 });
Yn.createExtensionComponent = Yn.createConfigurationComponent = Yn.createComponent = void 0;
var Vte = JR(Ir), Nte = JR(Tr), $te = $o, cm = $te.isVue3() ? Nte : Vte;
Yn.createComponent = cm.createComponent;
Yn.createConfigurationComponent = cm.createConfigurationComponent;
Yn.createExtensionComponent = cm.createExtensionComponent;
/*!
 * devextreme-vue
 * Version: 22.2.6
 * Build date: Tue Apr 18 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */
var Hte = Se && Se.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(Z, "__esModule", { value: !0 });
Z.DxLookup = Z.DxLoadPanel = Z.DxLabel = Z.DxKeyboardNavigation = Z.DxItem = Z.DxHide = Z.DxHeaderFilter = Z.DxGroupPanel = Z.DxGroupOperationDescriptions = Z.DxGroupItem = Z.DxGroupingTexts = Z.DxGrouping = Z.DxFrom = Z.DxFormItem = Z.DxFormat = Z.DxForm = Z.DxFilterRow = Z.DxFilterPanelTexts = Z.DxFilterPanel = Z.DxFilterOperationDescriptions = Z.DxFilterBuilderPopup = Z.DxFilterBuilder = Z.DxFieldLookup = Z.DxField = Z.DxExportTexts = Z.DxExport = Z.DxEmailRule = Z.DxEditingTexts = Z.DxEditing = Z.DxDataGridHeaderFilterTexts = Z.DxDataGridHeaderFilter = Z.DxCustomRule = Z.DxCustomOperation = Z.DxCursorOffset = Z.DxCompareRule = Z.DxColumnLookup = Z.DxColumnHeaderFilter = Z.DxColumnFixingTexts = Z.DxColumnFixing = Z.DxColumnChooser = Z.DxColumn = Z.DxCollision = Z.DxColCountByScreen = Z.DxChange = Z.DxButton = Z.DxBoundaryOffset = Z.DxAt = Z.DxAsyncRule = Z.DxAnimation = tB = Z.DxDataGrid = void 0;
Z.DxValueFormat = Z.DxValidationRule = Z.DxTotalItem = Z.DxToolbarItem = Z.DxToolbar = Z.DxTo = Z.DxTexts = Z.DxSummaryTexts = Z.DxSummary = Z.DxStringLengthRule = Z.DxStateStoring = Z.DxSorting = Z.DxSortByGroupSummaryInfo = Z.DxShow = Z.DxSelection = Z.DxSearchPanel = Z.DxScrolling = Z.DxRowDragging = Z.DxRequiredRule = Z.DxRemoteOperations = Z.DxRangeRule = Z.DxPosition = Z.DxPopup = Z.DxPatternRule = Z.DxPaging = Z.DxPager = Z.DxOperationDescriptions = Z.DxOffset = Z.DxNumericRule = Z.DxMy = Z.DxMasterDetail = void 0;
var zte = Hte(IJ), Wte = Yn, ye = Yn, eB = Wte.createComponent({
  props: {
    accessKey: String,
    activeStateEnabled: Boolean,
    allowColumnReordering: Boolean,
    allowColumnResizing: Boolean,
    autoNavigateToFocusedRow: Boolean,
    cacheEnabled: Boolean,
    cellHintEnabled: Boolean,
    columnAutoWidth: Boolean,
    columnChooser: Object,
    columnFixing: Object,
    columnHidingEnabled: Boolean,
    columnMinWidth: Number,
    columnResizingMode: String,
    columns: Array,
    columnWidth: [Number, String],
    customizeColumns: Function,
    dataRowTemplate: {},
    dataSource: {},
    dateSerializationFormat: String,
    disabled: Boolean,
    editing: Object,
    elementAttr: Object,
    errorRowEnabled: Boolean,
    export: Object,
    filterBuilder: Object,
    filterBuilderPopup: Object,
    filterPanel: Object,
    filterRow: Object,
    filterSyncEnabled: [Boolean, String],
    filterValue: [Array, Function, String],
    focusedColumnIndex: Number,
    focusedRowEnabled: Boolean,
    focusedRowIndex: Number,
    focusedRowKey: {},
    grouping: Object,
    groupPanel: Object,
    headerFilter: Object,
    height: [Function, Number, String],
    highlightChanges: Boolean,
    hint: String,
    hoverStateEnabled: Boolean,
    keyboardNavigation: Object,
    keyExpr: [Array, String],
    loadPanel: Object,
    masterDetail: Object,
    noDataText: String,
    onAdaptiveDetailRowPreparing: Function,
    onCellClick: Function,
    onCellDblClick: Function,
    onCellHoverChanged: Function,
    onCellPrepared: Function,
    onContentReady: Function,
    onContextMenuPreparing: Function,
    onDataErrorOccurred: Function,
    onDisposing: Function,
    onEditCanceled: Function,
    onEditCanceling: Function,
    onEditingStart: Function,
    onEditorPrepared: Function,
    onEditorPreparing: Function,
    onExporting: Function,
    onFocusedCellChanged: Function,
    onFocusedCellChanging: Function,
    onFocusedRowChanged: Function,
    onFocusedRowChanging: Function,
    onInitialized: Function,
    onInitNewRow: Function,
    onKeyDown: Function,
    onOptionChanged: Function,
    onRowClick: Function,
    onRowCollapsed: Function,
    onRowCollapsing: Function,
    onRowDblClick: Function,
    onRowExpanded: Function,
    onRowExpanding: Function,
    onRowInserted: Function,
    onRowInserting: Function,
    onRowPrepared: Function,
    onRowRemoved: Function,
    onRowRemoving: Function,
    onRowUpdated: Function,
    onRowUpdating: Function,
    onRowValidating: Function,
    onSaved: Function,
    onSaving: Function,
    onSelectionChanged: Function,
    onToolbarPreparing: Function,
    pager: Object,
    paging: Object,
    remoteOperations: [Boolean, Object, String],
    renderAsync: Boolean,
    repaintChangesOnly: Boolean,
    rowAlternationEnabled: Boolean,
    rowDragging: Object,
    rowTemplate: {},
    rtlEnabled: Boolean,
    scrolling: Object,
    searchPanel: Object,
    selectedRowKeys: Array,
    selection: Object,
    selectionFilter: [Array, Function, String],
    showBorders: Boolean,
    showColumnHeaders: Boolean,
    showColumnLines: Boolean,
    showRowLines: Boolean,
    sortByGroupSummaryInfo: Array,
    sorting: Object,
    stateStoring: Object,
    summary: Object,
    syncLookupFilterValues: Boolean,
    tabIndex: Number,
    toolbar: Object,
    twoWayBindingEnabled: Boolean,
    visible: Boolean,
    width: [Function, Number, String],
    wordWrapEnabled: Boolean
  },
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:accessKey": null,
    "update:activeStateEnabled": null,
    "update:allowColumnReordering": null,
    "update:allowColumnResizing": null,
    "update:autoNavigateToFocusedRow": null,
    "update:cacheEnabled": null,
    "update:cellHintEnabled": null,
    "update:columnAutoWidth": null,
    "update:columnChooser": null,
    "update:columnFixing": null,
    "update:columnHidingEnabled": null,
    "update:columnMinWidth": null,
    "update:columnResizingMode": null,
    "update:columns": null,
    "update:columnWidth": null,
    "update:customizeColumns": null,
    "update:dataRowTemplate": null,
    "update:dataSource": null,
    "update:dateSerializationFormat": null,
    "update:disabled": null,
    "update:editing": null,
    "update:elementAttr": null,
    "update:errorRowEnabled": null,
    "update:export": null,
    "update:filterBuilder": null,
    "update:filterBuilderPopup": null,
    "update:filterPanel": null,
    "update:filterRow": null,
    "update:filterSyncEnabled": null,
    "update:filterValue": null,
    "update:focusedColumnIndex": null,
    "update:focusedRowEnabled": null,
    "update:focusedRowIndex": null,
    "update:focusedRowKey": null,
    "update:grouping": null,
    "update:groupPanel": null,
    "update:headerFilter": null,
    "update:height": null,
    "update:highlightChanges": null,
    "update:hint": null,
    "update:hoverStateEnabled": null,
    "update:keyboardNavigation": null,
    "update:keyExpr": null,
    "update:loadPanel": null,
    "update:masterDetail": null,
    "update:noDataText": null,
    "update:onAdaptiveDetailRowPreparing": null,
    "update:onCellClick": null,
    "update:onCellDblClick": null,
    "update:onCellHoverChanged": null,
    "update:onCellPrepared": null,
    "update:onContentReady": null,
    "update:onContextMenuPreparing": null,
    "update:onDataErrorOccurred": null,
    "update:onDisposing": null,
    "update:onEditCanceled": null,
    "update:onEditCanceling": null,
    "update:onEditingStart": null,
    "update:onEditorPrepared": null,
    "update:onEditorPreparing": null,
    "update:onExporting": null,
    "update:onFocusedCellChanged": null,
    "update:onFocusedCellChanging": null,
    "update:onFocusedRowChanged": null,
    "update:onFocusedRowChanging": null,
    "update:onInitialized": null,
    "update:onInitNewRow": null,
    "update:onKeyDown": null,
    "update:onOptionChanged": null,
    "update:onRowClick": null,
    "update:onRowCollapsed": null,
    "update:onRowCollapsing": null,
    "update:onRowDblClick": null,
    "update:onRowExpanded": null,
    "update:onRowExpanding": null,
    "update:onRowInserted": null,
    "update:onRowInserting": null,
    "update:onRowPrepared": null,
    "update:onRowRemoved": null,
    "update:onRowRemoving": null,
    "update:onRowUpdated": null,
    "update:onRowUpdating": null,
    "update:onRowValidating": null,
    "update:onSaved": null,
    "update:onSaving": null,
    "update:onSelectionChanged": null,
    "update:onToolbarPreparing": null,
    "update:pager": null,
    "update:paging": null,
    "update:remoteOperations": null,
    "update:renderAsync": null,
    "update:repaintChangesOnly": null,
    "update:rowAlternationEnabled": null,
    "update:rowDragging": null,
    "update:rowTemplate": null,
    "update:rtlEnabled": null,
    "update:scrolling": null,
    "update:searchPanel": null,
    "update:selectedRowKeys": null,
    "update:selection": null,
    "update:selectionFilter": null,
    "update:showBorders": null,
    "update:showColumnHeaders": null,
    "update:showColumnLines": null,
    "update:showRowLines": null,
    "update:sortByGroupSummaryInfo": null,
    "update:sorting": null,
    "update:stateStoring": null,
    "update:summary": null,
    "update:syncLookupFilterValues": null,
    "update:tabIndex": null,
    "update:toolbar": null,
    "update:twoWayBindingEnabled": null,
    "update:visible": null,
    "update:width": null,
    "update:wordWrapEnabled": null
  },
  computed: {
    instance: function() {
      return this.$_instance;
    }
  },
  beforeCreate: function() {
    this.$_WidgetClass = zte.default, this.$_hasAsyncTemplate = !1, this.$_expectedChildren = {
      column: { isCollectionItem: !0, optionName: "columns" },
      columnChooser: { isCollectionItem: !1, optionName: "columnChooser" },
      columnFixing: { isCollectionItem: !1, optionName: "columnFixing" },
      dataGridHeaderFilter: { isCollectionItem: !1, optionName: "headerFilter" },
      editing: { isCollectionItem: !1, optionName: "editing" },
      export: { isCollectionItem: !1, optionName: "export" },
      filterBuilder: { isCollectionItem: !1, optionName: "filterBuilder" },
      filterBuilderPopup: { isCollectionItem: !1, optionName: "filterBuilderPopup" },
      filterPanel: { isCollectionItem: !1, optionName: "filterPanel" },
      filterRow: { isCollectionItem: !1, optionName: "filterRow" },
      grouping: { isCollectionItem: !1, optionName: "grouping" },
      groupPanel: { isCollectionItem: !1, optionName: "groupPanel" },
      headerFilter: { isCollectionItem: !1, optionName: "headerFilter" },
      keyboardNavigation: { isCollectionItem: !1, optionName: "keyboardNavigation" },
      loadPanel: { isCollectionItem: !1, optionName: "loadPanel" },
      masterDetail: { isCollectionItem: !1, optionName: "masterDetail" },
      pager: { isCollectionItem: !1, optionName: "pager" },
      paging: { isCollectionItem: !1, optionName: "paging" },
      remoteOperations: { isCollectionItem: !1, optionName: "remoteOperations" },
      rowDragging: { isCollectionItem: !1, optionName: "rowDragging" },
      scrolling: { isCollectionItem: !1, optionName: "scrolling" },
      searchPanel: { isCollectionItem: !1, optionName: "searchPanel" },
      selection: { isCollectionItem: !1, optionName: "selection" },
      sortByGroupSummaryInfo: { isCollectionItem: !0, optionName: "sortByGroupSummaryInfo" },
      sorting: { isCollectionItem: !1, optionName: "sorting" },
      stateStoring: { isCollectionItem: !1, optionName: "stateStoring" },
      summary: { isCollectionItem: !1, optionName: "summary" },
      toolbar: { isCollectionItem: !1, optionName: "toolbar" }
    };
  }
}), tB = Z.DxDataGrid = eB, hm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:hide": null,
    "update:show": null
  },
  props: {
    hide: [Object, Number, String],
    show: [Object, Number, String]
  }
});
Z.DxAnimation = hm;
hm.$_optionName = "animation";
hm.$_expectedChildren = {
  hide: { isCollectionItem: !1, optionName: "hide" },
  show: { isCollectionItem: !1, optionName: "show" }
};
var nh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:reevaluate": null,
    "update:type": null,
    "update:validationCallback": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    message: String,
    reevaluate: Boolean,
    type: String,
    validationCallback: Function
  }
});
Z.DxAsyncRule = nh;
nh.$_optionName = "validationRules";
nh.$_isCollectionItem = !0;
nh.$_predefinedProps = {
  type: "async"
};
var iB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: String,
    y: String
  }
});
Z.DxAt = iB;
iB.$_optionName = "at";
var nB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: Number,
    y: Number
  }
});
Z.DxBoundaryOffset = nB;
nB.$_optionName = "boundaryOffset";
var pm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:cssClass": null,
    "update:disabled": null,
    "update:hint": null,
    "update:icon": null,
    "update:name": null,
    "update:onClick": null,
    "update:template": null,
    "update:text": null,
    "update:visible": null
  },
  props: {
    cssClass: String,
    disabled: [Boolean, Function],
    hint: String,
    icon: String,
    name: String,
    onClick: Function,
    template: {},
    text: String,
    visible: [Boolean, Function]
  }
});
Z.DxButton = pm;
pm.$_optionName = "buttons";
pm.$_isCollectionItem = !0;
var fm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:data": null,
    "update:insertAfterKey": null,
    "update:insertBeforeKey": null,
    "update:type": null
  },
  props: {
    data: {},
    insertAfterKey: {},
    insertBeforeKey: {},
    type: String
  }
});
Z.DxChange = fm;
fm.$_optionName = "changes";
fm.$_isCollectionItem = !0;
var rB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:lg": null,
    "update:md": null,
    "update:sm": null,
    "update:xs": null
  },
  props: {
    lg: Number,
    md: Number,
    sm: Number,
    xs: Number
  }
});
Z.DxColCountByScreen = rB;
rB.$_optionName = "colCountByScreen";
var aB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: String,
    y: String
  }
});
Z.DxCollision = aB;
aB.$_optionName = "collision";
var rh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:alignment": null,
    "update:allowEditing": null,
    "update:allowExporting": null,
    "update:allowFiltering": null,
    "update:allowFixing": null,
    "update:allowGrouping": null,
    "update:allowHeaderFiltering": null,
    "update:allowHiding": null,
    "update:allowReordering": null,
    "update:allowResizing": null,
    "update:allowSearch": null,
    "update:allowSorting": null,
    "update:autoExpandGroup": null,
    "update:buttons": null,
    "update:calculateCellValue": null,
    "update:calculateDisplayValue": null,
    "update:calculateFilterExpression": null,
    "update:calculateGroupValue": null,
    "update:calculateSortValue": null,
    "update:caption": null,
    "update:cellTemplate": null,
    "update:columns": null,
    "update:cssClass": null,
    "update:customizeText": null,
    "update:dataField": null,
    "update:dataType": null,
    "update:editCellTemplate": null,
    "update:editorOptions": null,
    "update:encodeHtml": null,
    "update:falseText": null,
    "update:filterOperations": null,
    "update:filterType": null,
    "update:filterValue": null,
    "update:filterValues": null,
    "update:fixed": null,
    "update:fixedPosition": null,
    "update:format": null,
    "update:formItem": null,
    "update:groupCellTemplate": null,
    "update:grouped": null,
    "update:groupIndex": null,
    "update:headerCellTemplate": null,
    "update:headerFilter": null,
    "update:hidingPriority": null,
    "update:isBand": null,
    "update:lookup": null,
    "update:minWidth": null,
    "update:name": null,
    "update:ownerBand": null,
    "update:renderAsync": null,
    "update:resized": null,
    "update:selectedFilterOperation": null,
    "update:setCellValue": null,
    "update:showEditorAlways": null,
    "update:showInColumnChooser": null,
    "update:showWhenGrouped": null,
    "update:sortIndex": null,
    "update:sortingMethod": null,
    "update:sortOrder": null,
    "update:trueText": null,
    "update:type": null,
    "update:validationRules": null,
    "update:visible": null,
    "update:visibleIndex": null,
    "update:width": null
  },
  props: {
    alignment: String,
    allowEditing: Boolean,
    allowExporting: Boolean,
    allowFiltering: Boolean,
    allowFixing: Boolean,
    allowGrouping: Boolean,
    allowHeaderFiltering: Boolean,
    allowHiding: Boolean,
    allowReordering: Boolean,
    allowResizing: Boolean,
    allowSearch: Boolean,
    allowSorting: Boolean,
    autoExpandGroup: Boolean,
    buttons: Array,
    calculateCellValue: Function,
    calculateDisplayValue: [Function, String],
    calculateFilterExpression: Function,
    calculateGroupValue: [Function, String],
    calculateSortValue: [Function, String],
    caption: String,
    cellTemplate: {},
    columns: Array,
    cssClass: String,
    customizeText: Function,
    dataField: String,
    dataType: String,
    editCellTemplate: {},
    editorOptions: {},
    encodeHtml: Boolean,
    falseText: String,
    filterOperations: Array,
    filterType: String,
    filterValue: {},
    filterValues: Array,
    fixed: Boolean,
    fixedPosition: String,
    format: [Object, Function, String],
    formItem: Object,
    groupCellTemplate: {},
    grouped: Boolean,
    groupIndex: Number,
    headerCellTemplate: {},
    headerFilter: Object,
    hidingPriority: Number,
    isBand: Boolean,
    lookup: Object,
    minWidth: Number,
    name: String,
    ownerBand: Number,
    renderAsync: Boolean,
    resized: Function,
    selectedFilterOperation: String,
    setCellValue: Function,
    showEditorAlways: Boolean,
    showInColumnChooser: Boolean,
    showWhenGrouped: Boolean,
    sortIndex: Number,
    sortingMethod: Function,
    sortOrder: String,
    trueText: String,
    type: String,
    validationRules: Array,
    visible: Boolean,
    visibleIndex: Number,
    width: [Number, String]
  }
});
Z.DxColumn = rh;
rh.$_optionName = "columns";
rh.$_isCollectionItem = !0;
rh.$_expectedChildren = {
  AsyncRule: { isCollectionItem: !0, optionName: "validationRules" },
  button: { isCollectionItem: !0, optionName: "buttons" },
  columnHeaderFilter: { isCollectionItem: !1, optionName: "headerFilter" },
  columnLookup: { isCollectionItem: !1, optionName: "lookup" },
  CompareRule: { isCollectionItem: !0, optionName: "validationRules" },
  CustomRule: { isCollectionItem: !0, optionName: "validationRules" },
  EmailRule: { isCollectionItem: !0, optionName: "validationRules" },
  format: { isCollectionItem: !1, optionName: "format" },
  formItem: { isCollectionItem: !1, optionName: "formItem" },
  headerFilter: { isCollectionItem: !1, optionName: "headerFilter" },
  lookup: { isCollectionItem: !1, optionName: "lookup" },
  NumericRule: { isCollectionItem: !0, optionName: "validationRules" },
  PatternRule: { isCollectionItem: !0, optionName: "validationRules" },
  RangeRule: { isCollectionItem: !0, optionName: "validationRules" },
  RequiredRule: { isCollectionItem: !0, optionName: "validationRules" },
  StringLengthRule: { isCollectionItem: !0, optionName: "validationRules" },
  validationRule: { isCollectionItem: !0, optionName: "validationRules" }
};
var oB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowSearch": null,
    "update:emptyPanelText": null,
    "update:enabled": null,
    "update:height": null,
    "update:mode": null,
    "update:searchTimeout": null,
    "update:sortOrder": null,
    "update:title": null,
    "update:width": null
  },
  props: {
    allowSearch: Boolean,
    emptyPanelText: String,
    enabled: Boolean,
    height: Number,
    mode: String,
    searchTimeout: Number,
    sortOrder: String,
    title: String,
    width: Number
  }
});
Z.DxColumnChooser = oB;
oB.$_optionName = "columnChooser";
var gm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:enabled": null,
    "update:texts": null
  },
  props: {
    enabled: Boolean,
    texts: Object
  }
});
Z.DxColumnFixing = gm;
gm.$_optionName = "columnFixing";
gm.$_expectedChildren = {
  columnFixingTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var sB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:fix": null,
    "update:leftPosition": null,
    "update:rightPosition": null,
    "update:unfix": null
  },
  props: {
    fix: String,
    leftPosition: String,
    rightPosition: String,
    unfix: String
  }
});
Z.DxColumnFixingTexts = sB;
sB.$_optionName = "texts";
var lB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowSearch": null,
    "update:dataSource": null,
    "update:groupInterval": null,
    "update:height": null,
    "update:searchMode": null,
    "update:width": null
  },
  props: {
    allowSearch: Boolean,
    dataSource: {},
    groupInterval: [Number, String],
    height: Number,
    searchMode: String,
    width: Number
  }
});
Z.DxColumnHeaderFilter = lB;
lB.$_optionName = "headerFilter";
var uB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowClearing": null,
    "update:calculateCellValue": null,
    "update:dataSource": null,
    "update:displayExpr": null,
    "update:valueExpr": null
  },
  props: {
    allowClearing: Boolean,
    calculateCellValue: Function,
    dataSource: {},
    displayExpr: [Function, String],
    valueExpr: String
  }
});
Z.DxColumnLookup = uB;
uB.$_optionName = "lookup";
var ah = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:comparisonTarget": null,
    "update:comparisonType": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:type": null
  },
  props: {
    comparisonTarget: Function,
    comparisonType: String,
    ignoreEmptyValue: Boolean,
    message: String,
    type: String
  }
});
Z.DxCompareRule = ah;
ah.$_optionName = "validationRules";
ah.$_isCollectionItem = !0;
ah.$_predefinedProps = {
  type: "compare"
};
var dB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: Number,
    y: Number
  }
});
Z.DxCursorOffset = dB;
dB.$_optionName = "cursorOffset";
var _m = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:calculateFilterExpression": null,
    "update:caption": null,
    "update:customizeText": null,
    "update:dataTypes": null,
    "update:editorTemplate": null,
    "update:hasValue": null,
    "update:icon": null,
    "update:name": null
  },
  props: {
    calculateFilterExpression: Function,
    caption: String,
    customizeText: Function,
    dataTypes: Array,
    editorTemplate: {},
    hasValue: Boolean,
    icon: String,
    name: String
  }
});
Z.DxCustomOperation = _m;
_m.$_optionName = "customOperations";
_m.$_isCollectionItem = !0;
var oh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:reevaluate": null,
    "update:type": null,
    "update:validationCallback": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    message: String,
    reevaluate: Boolean,
    type: String,
    validationCallback: Function
  }
});
Z.DxCustomRule = oh;
oh.$_optionName = "validationRules";
oh.$_isCollectionItem = !0;
oh.$_predefinedProps = {
  type: "custom"
};
var vm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowSearch": null,
    "update:height": null,
    "update:searchTimeout": null,
    "update:texts": null,
    "update:visible": null,
    "update:width": null
  },
  props: {
    allowSearch: Boolean,
    height: Number,
    searchTimeout: Number,
    texts: Object,
    visible: Boolean,
    width: Number
  }
});
Z.DxDataGridHeaderFilter = vm;
vm.$_optionName = "headerFilter";
vm.$_expectedChildren = {
  dataGridHeaderFilterTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var cB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:cancel": null,
    "update:emptyValue": null,
    "update:ok": null
  },
  props: {
    cancel: String,
    emptyValue: String,
    ok: String
  }
});
Z.DxDataGridHeaderFilterTexts = cB;
cB.$_optionName = "texts";
var mm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowAdding": null,
    "update:allowDeleting": null,
    "update:allowUpdating": null,
    "update:changes": null,
    "update:confirmDelete": null,
    "update:editColumnName": null,
    "update:editRowKey": null,
    "update:form": null,
    "update:mode": null,
    "update:newRowPosition": null,
    "update:popup": null,
    "update:refreshMode": null,
    "update:selectTextOnEditStart": null,
    "update:startEditAction": null,
    "update:texts": null,
    "update:useIcons": null
  },
  props: {
    allowAdding: Boolean,
    allowDeleting: [Boolean, Function],
    allowUpdating: [Boolean, Function],
    changes: Array,
    confirmDelete: Boolean,
    editColumnName: String,
    editRowKey: {},
    form: Object,
    mode: String,
    newRowPosition: String,
    popup: Object,
    refreshMode: String,
    selectTextOnEditStart: Boolean,
    startEditAction: String,
    texts: {},
    useIcons: Boolean
  }
});
Z.DxEditing = mm;
mm.$_optionName = "editing";
mm.$_expectedChildren = {
  change: { isCollectionItem: !0, optionName: "changes" },
  editingTexts: { isCollectionItem: !1, optionName: "texts" },
  form: { isCollectionItem: !1, optionName: "form" },
  popup: { isCollectionItem: !1, optionName: "popup" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var hB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:addRow": null,
    "update:cancelAllChanges": null,
    "update:cancelRowChanges": null,
    "update:confirmDeleteMessage": null,
    "update:confirmDeleteTitle": null,
    "update:deleteRow": null,
    "update:editRow": null,
    "update:saveAllChanges": null,
    "update:saveRowChanges": null,
    "update:undeleteRow": null,
    "update:validationCancelChanges": null
  },
  props: {
    addRow: String,
    cancelAllChanges: String,
    cancelRowChanges: String,
    confirmDeleteMessage: String,
    confirmDeleteTitle: String,
    deleteRow: String,
    editRow: String,
    saveAllChanges: String,
    saveRowChanges: String,
    undeleteRow: String,
    validationCancelChanges: String
  }
});
Z.DxEditingTexts = hB;
hB.$_optionName = "texts";
var sh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:type": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    message: String,
    type: String
  }
});
Z.DxEmailRule = sh;
sh.$_optionName = "validationRules";
sh.$_isCollectionItem = !0;
sh.$_predefinedProps = {
  type: "email"
};
var Cm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowExportSelectedData": null,
    "update:enabled": null,
    "update:formats": null,
    "update:texts": null
  },
  props: {
    allowExportSelectedData: Boolean,
    enabled: Boolean,
    formats: Array,
    texts: Object
  }
});
Z.DxExport = Cm;
Cm.$_optionName = "export";
Cm.$_expectedChildren = {
  exportTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var pB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:exportAll": null,
    "update:exportSelectedRows": null,
    "update:exportTo": null
  },
  props: {
    exportAll: String,
    exportSelectedRows: String,
    exportTo: String
  }
});
Z.DxExportTexts = pB;
pB.$_optionName = "texts";
var lh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:calculateFilterExpression": null,
    "update:caption": null,
    "update:customizeText": null,
    "update:dataField": null,
    "update:dataType": null,
    "update:defaultFilterOperation": null,
    "update:editorOptions": null,
    "update:editorTemplate": null,
    "update:falseText": null,
    "update:filterOperations": null,
    "update:format": null,
    "update:lookup": null,
    "update:name": null,
    "update:trueText": null
  },
  props: {
    calculateFilterExpression: Function,
    caption: String,
    customizeText: Function,
    dataField: String,
    dataType: String,
    defaultFilterOperation: String,
    editorOptions: {},
    editorTemplate: {},
    falseText: String,
    filterOperations: Array,
    format: [Object, Function, String],
    lookup: Object,
    name: String,
    trueText: String
  }
});
Z.DxField = lh;
lh.$_optionName = "fields";
lh.$_isCollectionItem = !0;
lh.$_expectedChildren = {
  fieldLookup: { isCollectionItem: !1, optionName: "lookup" },
  format: { isCollectionItem: !1, optionName: "format" },
  lookup: { isCollectionItem: !1, optionName: "lookup" }
};
var fB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowClearing": null,
    "update:dataSource": null,
    "update:displayExpr": null,
    "update:valueExpr": null
  },
  props: {
    allowClearing: Boolean,
    dataSource: [Array, Object],
    displayExpr: [Function, String],
    valueExpr: [Function, String]
  }
});
Z.DxFieldLookup = fB;
fB.$_optionName = "lookup";
var xm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:accessKey": null,
    "update:activeStateEnabled": null,
    "update:allowHierarchicalFields": null,
    "update:bindingOptions": null,
    "update:customOperations": null,
    "update:disabled": null,
    "update:elementAttr": null,
    "update:fields": null,
    "update:filterOperationDescriptions": null,
    "update:focusStateEnabled": null,
    "update:groupOperationDescriptions": null,
    "update:groupOperations": null,
    "update:height": null,
    "update:hint": null,
    "update:hoverStateEnabled": null,
    "update:maxGroupLevel": null,
    "update:onContentReady": null,
    "update:onDisposing": null,
    "update:onEditorPrepared": null,
    "update:onEditorPreparing": null,
    "update:onFocusIn": null,
    "update:onFocusOut": null,
    "update:onInitialized": null,
    "update:onOptionChanged": null,
    "update:onValueChanged": null,
    "update:rtlEnabled": null,
    "update:tabIndex": null,
    "update:value": null,
    "update:visible": null,
    "update:width": null
  },
  props: {
    accessKey: String,
    activeStateEnabled: Boolean,
    allowHierarchicalFields: Boolean,
    bindingOptions: Object,
    customOperations: Array,
    disabled: Boolean,
    elementAttr: Object,
    fields: Array,
    filterOperationDescriptions: Object,
    focusStateEnabled: Boolean,
    groupOperationDescriptions: Object,
    groupOperations: Array,
    height: [Function, Number, String],
    hint: String,
    hoverStateEnabled: Boolean,
    maxGroupLevel: Number,
    onContentReady: Function,
    onDisposing: Function,
    onEditorPrepared: Function,
    onEditorPreparing: Function,
    onFocusIn: Function,
    onFocusOut: Function,
    onInitialized: Function,
    onOptionChanged: Function,
    onValueChanged: Function,
    rtlEnabled: Boolean,
    tabIndex: Number,
    value: [Array, Function, String],
    visible: Boolean,
    width: [Function, Number, String]
  }
});
Z.DxFilterBuilder = xm;
xm.$_optionName = "filterBuilder";
xm.$_expectedChildren = {
  customOperation: { isCollectionItem: !0, optionName: "customOperations" },
  field: { isCollectionItem: !0, optionName: "fields" },
  filterOperationDescriptions: { isCollectionItem: !1, optionName: "filterOperationDescriptions" },
  groupOperationDescriptions: { isCollectionItem: !1, optionName: "groupOperationDescriptions" }
};
var gB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:accessKey": null,
    "update:activeStateEnabled": null,
    "update:animation": null,
    "update:bindingOptions": null,
    "update:closeOnOutsideClick": null,
    "update:container": null,
    "update:contentTemplate": null,
    "update:copyRootClassesToWrapper": null,
    "update:deferRendering": null,
    "update:disabled": null,
    "update:dragAndResizeArea": null,
    "update:dragEnabled": null,
    "update:dragOutsideBoundary": null,
    "update:elementAttr": null,
    "update:focusStateEnabled": null,
    "update:fullScreen": null,
    "update:height": null,
    "update:hideOnOutsideClick": null,
    "update:hideOnParentScroll": null,
    "update:hint": null,
    "update:hoverStateEnabled": null,
    "update:maxHeight": null,
    "update:maxWidth": null,
    "update:minHeight": null,
    "update:minWidth": null,
    "update:onContentReady": null,
    "update:onDisposing": null,
    "update:onFocusIn": null,
    "update:onFocusOut": null,
    "update:onHidden": null,
    "update:onHiding": null,
    "update:onInitialized": null,
    "update:onOptionChanged": null,
    "update:onResize": null,
    "update:onResizeEnd": null,
    "update:onResizeStart": null,
    "update:onShowing": null,
    "update:onShown": null,
    "update:onTitleRendered": null,
    "update:position": null,
    "update:resizeEnabled": null,
    "update:restorePosition": null,
    "update:rtlEnabled": null,
    "update:shading": null,
    "update:shadingColor": null,
    "update:showCloseButton": null,
    "update:showTitle": null,
    "update:tabIndex": null,
    "update:title": null,
    "update:titleTemplate": null,
    "update:toolbarItems": null,
    "update:visible": null,
    "update:width": null,
    "update:wrapperAttr": null
  },
  props: {
    accessKey: String,
    activeStateEnabled: Boolean,
    animation: Object,
    bindingOptions: Object,
    closeOnOutsideClick: [Boolean, Function],
    container: {},
    contentTemplate: {},
    copyRootClassesToWrapper: Boolean,
    deferRendering: Boolean,
    disabled: Boolean,
    dragAndResizeArea: {},
    dragEnabled: Boolean,
    dragOutsideBoundary: Boolean,
    elementAttr: {},
    focusStateEnabled: Boolean,
    fullScreen: Boolean,
    height: [Function, Number, String],
    hideOnOutsideClick: [Boolean, Function],
    hideOnParentScroll: Boolean,
    hint: String,
    hoverStateEnabled: Boolean,
    maxHeight: [Function, Number, String],
    maxWidth: [Function, Number, String],
    minHeight: [Function, Number, String],
    minWidth: [Function, Number, String],
    onContentReady: Function,
    onDisposing: Function,
    onFocusIn: Function,
    onFocusOut: Function,
    onHidden: Function,
    onHiding: Function,
    onInitialized: Function,
    onOptionChanged: Function,
    onResize: Function,
    onResizeEnd: Function,
    onResizeStart: Function,
    onShowing: Function,
    onShown: Function,
    onTitleRendered: Function,
    position: [Function, Object, String],
    resizeEnabled: Boolean,
    restorePosition: Boolean,
    rtlEnabled: Boolean,
    shading: Boolean,
    shadingColor: String,
    showCloseButton: Boolean,
    showTitle: Boolean,
    tabIndex: Number,
    title: String,
    titleTemplate: {},
    toolbarItems: Array,
    visible: Boolean,
    width: [Function, Number, String],
    wrapperAttr: {}
  }
});
Z.DxFilterBuilderPopup = gB;
gB.$_optionName = "filterBuilderPopup";
var _B = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:between": null,
    "update:contains": null,
    "update:endsWith": null,
    "update:equal": null,
    "update:greaterThan": null,
    "update:greaterThanOrEqual": null,
    "update:isBlank": null,
    "update:isNotBlank": null,
    "update:lessThan": null,
    "update:lessThanOrEqual": null,
    "update:notContains": null,
    "update:notEqual": null,
    "update:startsWith": null
  },
  props: {
    between: String,
    contains: String,
    endsWith: String,
    equal: String,
    greaterThan: String,
    greaterThanOrEqual: String,
    isBlank: String,
    isNotBlank: String,
    lessThan: String,
    lessThanOrEqual: String,
    notContains: String,
    notEqual: String,
    startsWith: String
  }
});
Z.DxFilterOperationDescriptions = _B;
_B.$_optionName = "filterOperationDescriptions";
var ym = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:customizeText": null,
    "update:filterEnabled": null,
    "update:texts": null,
    "update:visible": null
  },
  props: {
    customizeText: Function,
    filterEnabled: Boolean,
    texts: Object,
    visible: Boolean
  }
});
Z.DxFilterPanel = ym;
ym.$_optionName = "filterPanel";
ym.$_expectedChildren = {
  filterPanelTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var vB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:clearFilter": null,
    "update:createFilter": null,
    "update:filterEnabledHint": null
  },
  props: {
    clearFilter: String,
    createFilter: String,
    filterEnabledHint: String
  }
});
Z.DxFilterPanelTexts = vB;
vB.$_optionName = "texts";
var bm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:applyFilter": null,
    "update:applyFilterText": null,
    "update:betweenEndText": null,
    "update:betweenStartText": null,
    "update:operationDescriptions": null,
    "update:resetOperationText": null,
    "update:showAllText": null,
    "update:showOperationChooser": null,
    "update:visible": null
  },
  props: {
    applyFilter: String,
    applyFilterText: String,
    betweenEndText: String,
    betweenStartText: String,
    operationDescriptions: Object,
    resetOperationText: String,
    showAllText: String,
    showOperationChooser: Boolean,
    visible: Boolean
  }
});
Z.DxFilterRow = bm;
bm.$_optionName = "filterRow";
bm.$_expectedChildren = {
  operationDescriptions: { isCollectionItem: !1, optionName: "operationDescriptions" }
};
var Sm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:accessKey": null,
    "update:activeStateEnabled": null,
    "update:alignItemLabels": null,
    "update:alignItemLabelsInAllGroups": null,
    "update:bindingOptions": null,
    "update:colCount": null,
    "update:colCountByScreen": null,
    "update:customizeItem": null,
    "update:disabled": null,
    "update:elementAttr": null,
    "update:focusStateEnabled": null,
    "update:formData": null,
    "update:height": null,
    "update:hint": null,
    "update:hoverStateEnabled": null,
    "update:items": null,
    "update:labelLocation": null,
    "update:labelMode": null,
    "update:minColWidth": null,
    "update:onContentReady": null,
    "update:onDisposing": null,
    "update:onEditorEnterKey": null,
    "update:onFieldDataChanged": null,
    "update:onFocusIn": null,
    "update:onFocusOut": null,
    "update:onInitialized": null,
    "update:onOptionChanged": null,
    "update:optionalMark": null,
    "update:readOnly": null,
    "update:requiredMark": null,
    "update:requiredMessage": null,
    "update:rtlEnabled": null,
    "update:screenByWidth": null,
    "update:scrollingEnabled": null,
    "update:showColonAfterLabel": null,
    "update:showOptionalMark": null,
    "update:showRequiredMark": null,
    "update:showValidationSummary": null,
    "update:tabIndex": null,
    "update:validationGroup": null,
    "update:visible": null,
    "update:width": null
  },
  props: {
    accessKey: String,
    activeStateEnabled: Boolean,
    alignItemLabels: Boolean,
    alignItemLabelsInAllGroups: Boolean,
    bindingOptions: Object,
    colCount: [Number, String],
    colCountByScreen: Object,
    customizeItem: Function,
    disabled: Boolean,
    elementAttr: Object,
    focusStateEnabled: Boolean,
    formData: {},
    height: [Function, Number, String],
    hint: String,
    hoverStateEnabled: Boolean,
    items: Array,
    labelLocation: String,
    labelMode: String,
    minColWidth: Number,
    onContentReady: Function,
    onDisposing: Function,
    onEditorEnterKey: Function,
    onFieldDataChanged: Function,
    onFocusIn: Function,
    onFocusOut: Function,
    onInitialized: Function,
    onOptionChanged: Function,
    optionalMark: String,
    readOnly: Boolean,
    requiredMark: String,
    requiredMessage: String,
    rtlEnabled: Boolean,
    screenByWidth: Function,
    scrollingEnabled: Boolean,
    showColonAfterLabel: Boolean,
    showOptionalMark: Boolean,
    showRequiredMark: Boolean,
    showValidationSummary: Boolean,
    tabIndex: Number,
    validationGroup: String,
    visible: Boolean,
    width: [Function, Number, String]
  }
});
Z.DxForm = Sm;
Sm.$_optionName = "form";
Sm.$_expectedChildren = {
  colCountByScreen: { isCollectionItem: !1, optionName: "colCountByScreen" }
};
var mB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:currency": null,
    "update:formatter": null,
    "update:parser": null,
    "update:precision": null,
    "update:type": null,
    "update:useCurrencyAccountingStyle": null
  },
  props: {
    currency: String,
    formatter: Function,
    parser: Function,
    precision: Number,
    type: String,
    useCurrencyAccountingStyle: Boolean
  }
});
Z.DxFormat = mB;
mB.$_optionName = "format";
var Em = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:colSpan": null,
    "update:cssClass": null,
    "update:dataField": null,
    "update:editorOptions": null,
    "update:editorType": null,
    "update:helpText": null,
    "update:isRequired": null,
    "update:itemType": null,
    "update:label": null,
    "update:name": null,
    "update:template": null,
    "update:validationRules": null,
    "update:visible": null,
    "update:visibleIndex": null
  },
  props: {
    colSpan: Number,
    cssClass: String,
    dataField: String,
    editorOptions: {},
    editorType: String,
    helpText: String,
    isRequired: Boolean,
    itemType: String,
    label: Object,
    name: String,
    template: {},
    validationRules: Array,
    visible: Boolean,
    visibleIndex: Number
  }
});
Z.DxFormItem = Em;
Em.$_optionName = "formItem";
Em.$_expectedChildren = {
  AsyncRule: { isCollectionItem: !0, optionName: "validationRules" },
  CompareRule: { isCollectionItem: !0, optionName: "validationRules" },
  CustomRule: { isCollectionItem: !0, optionName: "validationRules" },
  EmailRule: { isCollectionItem: !0, optionName: "validationRules" },
  label: { isCollectionItem: !1, optionName: "label" },
  NumericRule: { isCollectionItem: !0, optionName: "validationRules" },
  PatternRule: { isCollectionItem: !0, optionName: "validationRules" },
  RangeRule: { isCollectionItem: !0, optionName: "validationRules" },
  RequiredRule: { isCollectionItem: !0, optionName: "validationRules" },
  StringLengthRule: { isCollectionItem: !0, optionName: "validationRules" },
  validationRule: { isCollectionItem: !0, optionName: "validationRules" }
};
var wm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:left": null,
    "update:opacity": null,
    "update:position": null,
    "update:scale": null,
    "update:top": null
  },
  props: {
    left: Number,
    opacity: Number,
    position: Object,
    scale: Number,
    top: Number
  }
});
Z.DxFrom = wm;
wm.$_optionName = "from";
wm.$_expectedChildren = {
  position: { isCollectionItem: !1, optionName: "position" }
};
var Im = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowCollapsing": null,
    "update:autoExpandAll": null,
    "update:contextMenuEnabled": null,
    "update:expandMode": null,
    "update:texts": null
  },
  props: {
    allowCollapsing: Boolean,
    autoExpandAll: Boolean,
    contextMenuEnabled: Boolean,
    expandMode: String,
    texts: Object
  }
});
Z.DxGrouping = Im;
Im.$_optionName = "grouping";
Im.$_expectedChildren = {
  groupingTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" }
};
var CB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:groupByThisColumn": null,
    "update:groupContinuedMessage": null,
    "update:groupContinuesMessage": null,
    "update:ungroup": null,
    "update:ungroupAll": null
  },
  props: {
    groupByThisColumn: String,
    groupContinuedMessage: String,
    groupContinuesMessage: String,
    ungroup: String,
    ungroupAll: String
  }
});
Z.DxGroupingTexts = CB;
CB.$_optionName = "texts";
var uh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:alignByColumn": null,
    "update:column": null,
    "update:customizeText": null,
    "update:displayFormat": null,
    "update:name": null,
    "update:showInColumn": null,
    "update:showInGroupFooter": null,
    "update:skipEmptyValues": null,
    "update:summaryType": null,
    "update:valueFormat": null
  },
  props: {
    alignByColumn: Boolean,
    column: String,
    customizeText: Function,
    displayFormat: String,
    name: String,
    showInColumn: String,
    showInGroupFooter: Boolean,
    skipEmptyValues: Boolean,
    summaryType: String,
    valueFormat: [Object, Function, String]
  }
});
Z.DxGroupItem = uh;
uh.$_optionName = "groupItems";
uh.$_isCollectionItem = !0;
uh.$_expectedChildren = {
  valueFormat: { isCollectionItem: !1, optionName: "valueFormat" }
};
var xB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:and": null,
    "update:notAnd": null,
    "update:notOr": null,
    "update:or": null
  },
  props: {
    and: String,
    notAnd: String,
    notOr: String,
    or: String
  }
});
Z.DxGroupOperationDescriptions = xB;
xB.$_optionName = "groupOperationDescriptions";
var yB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowColumnDragging": null,
    "update:emptyPanelText": null,
    "update:visible": null
  },
  props: {
    allowColumnDragging: Boolean,
    emptyPanelText: String,
    visible: [Boolean, String]
  }
});
Z.DxGroupPanel = yB;
yB.$_optionName = "groupPanel";
var bB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowSearch": null,
    "update:dataSource": null,
    "update:groupInterval": null,
    "update:height": null,
    "update:searchMode": null,
    "update:searchTimeout": null,
    "update:texts": null,
    "update:visible": null,
    "update:width": null
  },
  props: {
    allowSearch: Boolean,
    dataSource: {},
    groupInterval: [Number, String],
    height: Number,
    searchMode: String,
    searchTimeout: Number,
    texts: Object,
    visible: Boolean,
    width: Number
  }
});
Z.DxHeaderFilter = bB;
bB.$_optionName = "headerFilter";
var Tm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:complete": null,
    "update:delay": null,
    "update:direction": null,
    "update:duration": null,
    "update:easing": null,
    "update:from": null,
    "update:staggerDelay": null,
    "update:start": null,
    "update:to": null,
    "update:type": null
  },
  props: {
    complete: Function,
    delay: Number,
    direction: String,
    duration: Number,
    easing: String,
    from: Object,
    staggerDelay: Number,
    start: Function,
    to: Object,
    type: String
  }
});
Z.DxHide = Tm;
Tm.$_optionName = "hide";
Tm.$_expectedChildren = {
  from: { isCollectionItem: !1, optionName: "from" },
  to: { isCollectionItem: !1, optionName: "to" }
};
var Dm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:cssClass": null,
    "update:disabled": null,
    "update:html": null,
    "update:locateInMenu": null,
    "update:location": null,
    "update:menuItemTemplate": null,
    "update:name": null,
    "update:options": null,
    "update:showText": null,
    "update:template": null,
    "update:text": null,
    "update:visible": null,
    "update:widget": null
  },
  props: {
    cssClass: String,
    disabled: Boolean,
    html: String,
    locateInMenu: String,
    location: String,
    menuItemTemplate: {},
    name: String,
    options: {},
    showText: String,
    template: {},
    text: String,
    visible: Boolean,
    widget: String
  }
});
Z.DxItem = Dm;
Dm.$_optionName = "items";
Dm.$_isCollectionItem = !0;
var SB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:editOnKeyPress": null,
    "update:enabled": null,
    "update:enterKeyAction": null,
    "update:enterKeyDirection": null
  },
  props: {
    editOnKeyPress: Boolean,
    enabled: Boolean,
    enterKeyAction: String,
    enterKeyDirection: String
  }
});
Z.DxKeyboardNavigation = SB;
SB.$_optionName = "keyboardNavigation";
var EB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:alignment": null,
    "update:location": null,
    "update:showColon": null,
    "update:template": null,
    "update:text": null,
    "update:visible": null
  },
  props: {
    alignment: String,
    location: String,
    showColon: Boolean,
    template: {},
    text: String,
    visible: Boolean
  }
});
Z.DxLabel = EB;
EB.$_optionName = "label";
var wB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:enabled": null,
    "update:height": null,
    "update:indicatorSrc": null,
    "update:shading": null,
    "update:shadingColor": null,
    "update:showIndicator": null,
    "update:showPane": null,
    "update:text": null,
    "update:width": null
  },
  props: {
    enabled: [Boolean, String],
    height: Number,
    indicatorSrc: String,
    shading: Boolean,
    shadingColor: String,
    showIndicator: Boolean,
    showPane: Boolean,
    text: String,
    width: Number
  }
});
Z.DxLoadPanel = wB;
wB.$_optionName = "loadPanel";
var IB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowClearing": null,
    "update:calculateCellValue": null,
    "update:dataSource": null,
    "update:displayExpr": null,
    "update:valueExpr": null
  },
  props: {
    allowClearing: Boolean,
    calculateCellValue: Function,
    dataSource: {},
    displayExpr: [Function, String],
    valueExpr: String
  }
});
Z.DxLookup = IB;
IB.$_optionName = "lookup";
var TB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:autoExpandAll": null,
    "update:enabled": null,
    "update:template": null
  },
  props: {
    autoExpandAll: Boolean,
    enabled: Boolean,
    template: {}
  }
});
Z.DxMasterDetail = TB;
TB.$_optionName = "masterDetail";
var DB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: String,
    y: String
  }
});
Z.DxMy = DB;
DB.$_optionName = "my";
var dh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:type": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    message: String,
    type: String
  }
});
Z.DxNumericRule = dh;
dh.$_optionName = "validationRules";
dh.$_isCollectionItem = !0;
dh.$_predefinedProps = {
  type: "numeric"
};
var AB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:x": null,
    "update:y": null
  },
  props: {
    x: Number,
    y: Number
  }
});
Z.DxOffset = AB;
AB.$_optionName = "offset";
var OB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:between": null,
    "update:contains": null,
    "update:endsWith": null,
    "update:equal": null,
    "update:greaterThan": null,
    "update:greaterThanOrEqual": null,
    "update:lessThan": null,
    "update:lessThanOrEqual": null,
    "update:notContains": null,
    "update:notEqual": null,
    "update:startsWith": null
  },
  props: {
    between: String,
    contains: String,
    endsWith: String,
    equal: String,
    greaterThan: String,
    greaterThanOrEqual: String,
    lessThan: String,
    lessThanOrEqual: String,
    notContains: String,
    notEqual: String,
    startsWith: String
  }
});
Z.DxOperationDescriptions = OB;
OB.$_optionName = "operationDescriptions";
var RB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowedPageSizes": null,
    "update:displayMode": null,
    "update:infoText": null,
    "update:label": null,
    "update:showInfo": null,
    "update:showNavigationButtons": null,
    "update:showPageSizeSelector": null,
    "update:visible": null
  },
  props: {
    allowedPageSizes: [Array, String],
    displayMode: String,
    infoText: String,
    label: String,
    showInfo: Boolean,
    showNavigationButtons: Boolean,
    showPageSizeSelector: Boolean,
    visible: [Boolean, String]
  }
});
Z.DxPager = RB;
RB.$_optionName = "pager";
var BB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:enabled": null,
    "update:pageIndex": null,
    "update:pageSize": null
  },
  props: {
    enabled: Boolean,
    pageIndex: Number,
    pageSize: Number
  }
});
Z.DxPaging = BB;
BB.$_optionName = "paging";
var ch = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:message": null,
    "update:pattern": null,
    "update:type": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    message: String,
    pattern: {},
    type: String
  }
});
Z.DxPatternRule = ch;
ch.$_optionName = "validationRules";
ch.$_isCollectionItem = !0;
ch.$_predefinedProps = {
  type: "pattern"
};
var Am = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:accessKey": null,
    "update:activeStateEnabled": null,
    "update:animation": null,
    "update:bindingOptions": null,
    "update:closeOnOutsideClick": null,
    "update:container": null,
    "update:contentTemplate": null,
    "update:copyRootClassesToWrapper": null,
    "update:deferRendering": null,
    "update:disabled": null,
    "update:dragAndResizeArea": null,
    "update:dragEnabled": null,
    "update:dragOutsideBoundary": null,
    "update:elementAttr": null,
    "update:focusStateEnabled": null,
    "update:fullScreen": null,
    "update:height": null,
    "update:hideOnOutsideClick": null,
    "update:hideOnParentScroll": null,
    "update:hint": null,
    "update:hoverStateEnabled": null,
    "update:maxHeight": null,
    "update:maxWidth": null,
    "update:minHeight": null,
    "update:minWidth": null,
    "update:onContentReady": null,
    "update:onDisposing": null,
    "update:onFocusIn": null,
    "update:onFocusOut": null,
    "update:onHidden": null,
    "update:onHiding": null,
    "update:onInitialized": null,
    "update:onOptionChanged": null,
    "update:onResize": null,
    "update:onResizeEnd": null,
    "update:onResizeStart": null,
    "update:onShowing": null,
    "update:onShown": null,
    "update:onTitleRendered": null,
    "update:position": null,
    "update:resizeEnabled": null,
    "update:restorePosition": null,
    "update:rtlEnabled": null,
    "update:shading": null,
    "update:shadingColor": null,
    "update:showCloseButton": null,
    "update:showTitle": null,
    "update:tabIndex": null,
    "update:title": null,
    "update:titleTemplate": null,
    "update:toolbarItems": null,
    "update:visible": null,
    "update:width": null,
    "update:wrapperAttr": null
  },
  props: {
    accessKey: String,
    activeStateEnabled: Boolean,
    animation: Object,
    bindingOptions: Object,
    closeOnOutsideClick: [Boolean, Function],
    container: {},
    contentTemplate: {},
    copyRootClassesToWrapper: Boolean,
    deferRendering: Boolean,
    disabled: Boolean,
    dragAndResizeArea: {},
    dragEnabled: Boolean,
    dragOutsideBoundary: Boolean,
    elementAttr: {},
    focusStateEnabled: Boolean,
    fullScreen: Boolean,
    height: [Function, Number, String],
    hideOnOutsideClick: [Boolean, Function],
    hideOnParentScroll: Boolean,
    hint: String,
    hoverStateEnabled: Boolean,
    maxHeight: [Function, Number, String],
    maxWidth: [Function, Number, String],
    minHeight: [Function, Number, String],
    minWidth: [Function, Number, String],
    onContentReady: Function,
    onDisposing: Function,
    onFocusIn: Function,
    onFocusOut: Function,
    onHidden: Function,
    onHiding: Function,
    onInitialized: Function,
    onOptionChanged: Function,
    onResize: Function,
    onResizeEnd: Function,
    onResizeStart: Function,
    onShowing: Function,
    onShown: Function,
    onTitleRendered: Function,
    position: [Function, Object, String],
    resizeEnabled: Boolean,
    restorePosition: Boolean,
    rtlEnabled: Boolean,
    shading: Boolean,
    shadingColor: String,
    showCloseButton: Boolean,
    showTitle: Boolean,
    tabIndex: Number,
    title: String,
    titleTemplate: {},
    toolbarItems: Array,
    visible: Boolean,
    width: [Function, Number, String],
    wrapperAttr: {}
  }
});
Z.DxPopup = Am;
Am.$_optionName = "popup";
Am.$_expectedChildren = {
  animation: { isCollectionItem: !1, optionName: "animation" },
  position: { isCollectionItem: !1, optionName: "position" },
  toolbarItem: { isCollectionItem: !0, optionName: "toolbarItems" }
};
var kB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:at": null,
    "update:boundary": null,
    "update:boundaryOffset": null,
    "update:collision": null,
    "update:my": null,
    "update:of": null,
    "update:offset": null
  },
  props: {
    at: [Object, String],
    boundary: {},
    boundaryOffset: [Object, String],
    collision: [Object, String],
    my: [Object, String],
    of: {},
    offset: [Object, String]
  }
});
Z.DxPosition = kB;
kB.$_optionName = "position";
var hh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:max": null,
    "update:message": null,
    "update:min": null,
    "update:reevaluate": null,
    "update:type": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    max: {},
    message: String,
    min: {},
    reevaluate: Boolean,
    type: String
  }
});
Z.DxRangeRule = hh;
hh.$_optionName = "validationRules";
hh.$_isCollectionItem = !0;
hh.$_predefinedProps = {
  type: "range"
};
var FB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:filtering": null,
    "update:grouping": null,
    "update:groupPaging": null,
    "update:paging": null,
    "update:sorting": null,
    "update:summary": null
  },
  props: {
    filtering: Boolean,
    grouping: Boolean,
    groupPaging: Boolean,
    paging: Boolean,
    sorting: Boolean,
    summary: Boolean
  }
});
Z.DxRemoteOperations = FB;
FB.$_optionName = "remoteOperations";
var ph = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:message": null,
    "update:trim": null,
    "update:type": null
  },
  props: {
    message: String,
    trim: Boolean,
    type: String
  }
});
Z.DxRequiredRule = ph;
ph.$_optionName = "validationRules";
ph.$_isCollectionItem = !0;
ph.$_predefinedProps = {
  type: "required"
};
var Om = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowDropInsideItem": null,
    "update:allowReordering": null,
    "update:autoScroll": null,
    "update:boundary": null,
    "update:container": null,
    "update:cursorOffset": null,
    "update:data": null,
    "update:dragDirection": null,
    "update:dragTemplate": null,
    "update:dropFeedbackMode": null,
    "update:filter": null,
    "update:group": null,
    "update:handle": null,
    "update:onAdd": null,
    "update:onDragChange": null,
    "update:onDragEnd": null,
    "update:onDragMove": null,
    "update:onDragStart": null,
    "update:onRemove": null,
    "update:onReorder": null,
    "update:scrollSensitivity": null,
    "update:scrollSpeed": null,
    "update:showDragIcons": null
  },
  props: {
    allowDropInsideItem: Boolean,
    allowReordering: Boolean,
    autoScroll: Boolean,
    boundary: {},
    container: {},
    cursorOffset: [Object, String],
    data: {},
    dragDirection: String,
    dragTemplate: {},
    dropFeedbackMode: String,
    filter: String,
    group: String,
    handle: String,
    onAdd: Function,
    onDragChange: Function,
    onDragEnd: Function,
    onDragMove: Function,
    onDragStart: Function,
    onRemove: Function,
    onReorder: Function,
    scrollSensitivity: Number,
    scrollSpeed: Number,
    showDragIcons: Boolean
  }
});
Z.DxRowDragging = Om;
Om.$_optionName = "rowDragging";
Om.$_expectedChildren = {
  cursorOffset: { isCollectionItem: !1, optionName: "cursorOffset" }
};
var PB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:columnRenderingMode": null,
    "update:mode": null,
    "update:preloadEnabled": null,
    "update:renderAsync": null,
    "update:rowRenderingMode": null,
    "update:scrollByContent": null,
    "update:scrollByThumb": null,
    "update:showScrollbar": null,
    "update:useNative": null
  },
  props: {
    columnRenderingMode: String,
    mode: String,
    preloadEnabled: Boolean,
    renderAsync: Boolean,
    rowRenderingMode: String,
    scrollByContent: Boolean,
    scrollByThumb: Boolean,
    showScrollbar: String,
    useNative: [Boolean, String]
  }
});
Z.DxScrolling = PB;
PB.$_optionName = "scrolling";
var MB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:highlightCaseSensitive": null,
    "update:highlightSearchText": null,
    "update:placeholder": null,
    "update:searchVisibleColumnsOnly": null,
    "update:text": null,
    "update:visible": null,
    "update:width": null
  },
  props: {
    highlightCaseSensitive: Boolean,
    highlightSearchText: Boolean,
    placeholder: String,
    searchVisibleColumnsOnly: Boolean,
    text: String,
    visible: Boolean,
    width: Number
  }
});
Z.DxSearchPanel = MB;
MB.$_optionName = "searchPanel";
var LB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:allowSelectAll": null,
    "update:deferred": null,
    "update:maxFilterLengthInRequest": null,
    "update:mode": null,
    "update:selectAllMode": null,
    "update:showCheckBoxesMode": null
  },
  props: {
    allowSelectAll: Boolean,
    deferred: Boolean,
    maxFilterLengthInRequest: Number,
    mode: String,
    selectAllMode: String,
    showCheckBoxesMode: String
  }
});
Z.DxSelection = LB;
LB.$_optionName = "selection";
var VB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:complete": null,
    "update:delay": null,
    "update:direction": null,
    "update:duration": null,
    "update:easing": null,
    "update:from": null,
    "update:staggerDelay": null,
    "update:start": null,
    "update:to": null,
    "update:type": null
  },
  props: {
    complete: Function,
    delay: Number,
    direction: String,
    duration: Number,
    easing: String,
    from: Object,
    staggerDelay: Number,
    start: Function,
    to: Object,
    type: String
  }
});
Z.DxShow = VB;
VB.$_optionName = "show";
var Rm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:groupColumn": null,
    "update:sortOrder": null,
    "update:summaryItem": null
  },
  props: {
    groupColumn: String,
    sortOrder: String,
    summaryItem: [Number, String]
  }
});
Z.DxSortByGroupSummaryInfo = Rm;
Rm.$_optionName = "sortByGroupSummaryInfo";
Rm.$_isCollectionItem = !0;
var NB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ascendingText": null,
    "update:clearText": null,
    "update:descendingText": null,
    "update:mode": null,
    "update:showSortIndexes": null
  },
  props: {
    ascendingText: String,
    clearText: String,
    descendingText: String,
    mode: String,
    showSortIndexes: Boolean
  }
});
Z.DxSorting = NB;
NB.$_optionName = "sorting";
var $B = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:customLoad": null,
    "update:customSave": null,
    "update:enabled": null,
    "update:savingTimeout": null,
    "update:storageKey": null,
    "update:type": null
  },
  props: {
    customLoad: Function,
    customSave: Function,
    enabled: Boolean,
    savingTimeout: Number,
    storageKey: String,
    type: String
  }
});
Z.DxStateStoring = $B;
$B.$_optionName = "stateStoring";
var fh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:ignoreEmptyValue": null,
    "update:max": null,
    "update:message": null,
    "update:min": null,
    "update:trim": null,
    "update:type": null
  },
  props: {
    ignoreEmptyValue: Boolean,
    max: Number,
    message: String,
    min: Number,
    trim: Boolean,
    type: String
  }
});
Z.DxStringLengthRule = fh;
fh.$_optionName = "validationRules";
fh.$_isCollectionItem = !0;
fh.$_predefinedProps = {
  type: "stringLength"
};
var Bm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:calculateCustomSummary": null,
    "update:groupItems": null,
    "update:recalculateWhileEditing": null,
    "update:skipEmptyValues": null,
    "update:texts": null,
    "update:totalItems": null
  },
  props: {
    calculateCustomSummary: Function,
    groupItems: Array,
    recalculateWhileEditing: Boolean,
    skipEmptyValues: Boolean,
    texts: Object,
    totalItems: Array
  }
});
Z.DxSummary = Bm;
Bm.$_optionName = "summary";
Bm.$_expectedChildren = {
  groupItem: { isCollectionItem: !0, optionName: "groupItems" },
  summaryTexts: { isCollectionItem: !1, optionName: "texts" },
  texts: { isCollectionItem: !1, optionName: "texts" },
  totalItem: { isCollectionItem: !0, optionName: "totalItems" }
};
var HB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:avg": null,
    "update:avgOtherColumn": null,
    "update:count": null,
    "update:max": null,
    "update:maxOtherColumn": null,
    "update:min": null,
    "update:minOtherColumn": null,
    "update:sum": null,
    "update:sumOtherColumn": null
  },
  props: {
    avg: String,
    avgOtherColumn: String,
    count: String,
    max: String,
    maxOtherColumn: String,
    min: String,
    minOtherColumn: String,
    sum: String,
    sumOtherColumn: String
  }
});
Z.DxSummaryTexts = HB;
HB.$_optionName = "texts";
var zB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:addRow": null,
    "update:avg": null,
    "update:avgOtherColumn": null,
    "update:cancel": null,
    "update:cancelAllChanges": null,
    "update:cancelRowChanges": null,
    "update:clearFilter": null,
    "update:confirmDeleteMessage": null,
    "update:confirmDeleteTitle": null,
    "update:count": null,
    "update:createFilter": null,
    "update:deleteRow": null,
    "update:editRow": null,
    "update:emptyValue": null,
    "update:exportAll": null,
    "update:exportSelectedRows": null,
    "update:exportTo": null,
    "update:filterEnabledHint": null,
    "update:fix": null,
    "update:groupByThisColumn": null,
    "update:groupContinuedMessage": null,
    "update:groupContinuesMessage": null,
    "update:leftPosition": null,
    "update:max": null,
    "update:maxOtherColumn": null,
    "update:min": null,
    "update:minOtherColumn": null,
    "update:ok": null,
    "update:rightPosition": null,
    "update:saveAllChanges": null,
    "update:saveRowChanges": null,
    "update:sum": null,
    "update:sumOtherColumn": null,
    "update:undeleteRow": null,
    "update:unfix": null,
    "update:ungroup": null,
    "update:ungroupAll": null,
    "update:validationCancelChanges": null
  },
  props: {
    addRow: String,
    avg: String,
    avgOtherColumn: String,
    cancel: String,
    cancelAllChanges: String,
    cancelRowChanges: String,
    clearFilter: String,
    confirmDeleteMessage: String,
    confirmDeleteTitle: String,
    count: String,
    createFilter: String,
    deleteRow: String,
    editRow: String,
    emptyValue: String,
    exportAll: String,
    exportSelectedRows: String,
    exportTo: String,
    filterEnabledHint: String,
    fix: String,
    groupByThisColumn: String,
    groupContinuedMessage: String,
    groupContinuesMessage: String,
    leftPosition: String,
    max: String,
    maxOtherColumn: String,
    min: String,
    minOtherColumn: String,
    ok: String,
    rightPosition: String,
    saveAllChanges: String,
    saveRowChanges: String,
    sum: String,
    sumOtherColumn: String,
    undeleteRow: String,
    unfix: String,
    ungroup: String,
    ungroupAll: String,
    validationCancelChanges: String
  }
});
Z.DxTexts = zB;
zB.$_optionName = "texts";
var WB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:left": null,
    "update:opacity": null,
    "update:position": null,
    "update:scale": null,
    "update:top": null
  },
  props: {
    left: Number,
    opacity: Number,
    position: Object,
    scale: Number,
    top: Number
  }
});
Z.DxTo = WB;
WB.$_optionName = "to";
var km = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:disabled": null,
    "update:items": null,
    "update:visible": null
  },
  props: {
    disabled: Boolean,
    items: Array,
    visible: Boolean
  }
});
Z.DxToolbar = km;
km.$_optionName = "toolbar";
km.$_expectedChildren = {
  item: { isCollectionItem: !0, optionName: "items" }
};
var Fm = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:cssClass": null,
    "update:disabled": null,
    "update:html": null,
    "update:locateInMenu": null,
    "update:location": null,
    "update:menuItemTemplate": null,
    "update:options": null,
    "update:showText": null,
    "update:template": null,
    "update:text": null,
    "update:toolbar": null,
    "update:visible": null,
    "update:widget": null
  },
  props: {
    cssClass: String,
    disabled: Boolean,
    html: String,
    locateInMenu: String,
    location: String,
    menuItemTemplate: {},
    options: {},
    showText: String,
    template: {},
    text: String,
    toolbar: String,
    visible: Boolean,
    widget: String
  }
});
Z.DxToolbarItem = Fm;
Fm.$_optionName = "toolbarItems";
Fm.$_isCollectionItem = !0;
var gh = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:alignment": null,
    "update:column": null,
    "update:cssClass": null,
    "update:customizeText": null,
    "update:displayFormat": null,
    "update:name": null,
    "update:showInColumn": null,
    "update:skipEmptyValues": null,
    "update:summaryType": null,
    "update:valueFormat": null
  },
  props: {
    alignment: String,
    column: String,
    cssClass: String,
    customizeText: Function,
    displayFormat: String,
    name: String,
    showInColumn: String,
    skipEmptyValues: Boolean,
    summaryType: String,
    valueFormat: [Object, Function, String]
  }
});
Z.DxTotalItem = gh;
gh.$_optionName = "totalItems";
gh.$_isCollectionItem = !0;
gh.$_expectedChildren = {
  valueFormat: { isCollectionItem: !1, optionName: "valueFormat" }
};
var _h = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:comparisonTarget": null,
    "update:comparisonType": null,
    "update:ignoreEmptyValue": null,
    "update:max": null,
    "update:message": null,
    "update:min": null,
    "update:pattern": null,
    "update:reevaluate": null,
    "update:trim": null,
    "update:type": null,
    "update:validationCallback": null
  },
  props: {
    comparisonTarget: Function,
    comparisonType: String,
    ignoreEmptyValue: Boolean,
    max: {},
    message: String,
    min: {},
    pattern: {},
    reevaluate: Boolean,
    trim: Boolean,
    type: String,
    validationCallback: Function
  }
});
Z.DxValidationRule = _h;
_h.$_optionName = "validationRules";
_h.$_isCollectionItem = !0;
_h.$_predefinedProps = {
  type: "required"
};
var GB = ye.createConfigurationComponent({
  emits: {
    "update:isActive": null,
    "update:hoveredElement": null,
    "update:currency": null,
    "update:formatter": null,
    "update:parser": null,
    "update:precision": null,
    "update:type": null,
    "update:useCurrencyAccountingStyle": null
  },
  props: {
    currency: String,
    formatter: Function,
    parser: Function,
    precision: Number,
    type: String,
    useCurrencyAccountingStyle: Boolean
  }
});
Z.DxValueFormat = GB;
GB.$_optionName = "valueFormat";
Z.default = eB;
const Gte = {
  name: "DemoCustomReportWidget",
  components: {
    DxDataGrid: tB
  }
}, Kte = /* @__PURE__ */ YB("h2", null, "Test successful", -1);
function Ute(e, t, i, n, r, a) {
  const o = qB("DxDataGrid");
  return KE(), UE("div", null, [
    Kte,
    XB(o, { "show-borders": !0 })
  ]);
}
const jte = /* @__PURE__ */ jE(Gte, [["render", Ute]]), qte = { DemoCustomReportView: JB, DemoCustomReportWidget: jte }, Xte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qte
}, Symbol.toStringTag, { value: "Module" })), Yte = {
  install(e) {
    for (const t of Object.entries({ ...Xte }))
      e.component(...t);
  }
};
window.custom_plugin = Yte;
export {
  Yte as plugin
};
